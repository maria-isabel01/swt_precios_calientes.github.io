/*! For license information please see web.e6abc1bb1aa530e5c231.js.LICENSE.txt */
var web;
( () => {
    var e, t, a, n, i, s, r, o, l = {
        36349: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AccountInfo = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AccountInfo = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "accountAgeIndicator",
                baseName: "accountAgeIndicator",
                type: "AccountInfo.AccountAgeIndicatorEnum"
            }, {
                name: "accountChangeDate",
                baseName: "accountChangeDate",
                type: "Date"
            }, {
                name: "accountChangeIndicator",
                baseName: "accountChangeIndicator",
                type: "AccountInfo.AccountChangeIndicatorEnum"
            }, {
                name: "accountCreationDate",
                baseName: "accountCreationDate",
                type: "Date"
            }, {
                name: "accountType",
                baseName: "accountType",
                type: "AccountInfo.AccountTypeEnum"
            }, {
                name: "addCardAttemptsDay",
                baseName: "addCardAttemptsDay",
                type: "number"
            }, {
                name: "deliveryAddressUsageDate",
                baseName: "deliveryAddressUsageDate",
                type: "Date"
            }, {
                name: "deliveryAddressUsageIndicator",
                baseName: "deliveryAddressUsageIndicator",
                type: "AccountInfo.DeliveryAddressUsageIndicatorEnum"
            }, {
                name: "homePhone",
                baseName: "homePhone",
                type: "string"
            }, {
                name: "mobilePhone",
                baseName: "mobilePhone",
                type: "string"
            }, {
                name: "passwordChangeDate",
                baseName: "passwordChangeDate",
                type: "Date"
            }, {
                name: "passwordChangeIndicator",
                baseName: "passwordChangeIndicator",
                type: "AccountInfo.PasswordChangeIndicatorEnum"
            }, {
                name: "pastTransactionsDay",
                baseName: "pastTransactionsDay",
                type: "number"
            }, {
                name: "pastTransactionsYear",
                baseName: "pastTransactionsYear",
                type: "number"
            }, {
                name: "paymentAccountAge",
                baseName: "paymentAccountAge",
                type: "Date"
            }, {
                name: "paymentAccountIndicator",
                baseName: "paymentAccountIndicator",
                type: "AccountInfo.PaymentAccountIndicatorEnum"
            }, {
                name: "purchasesLast6Months",
                baseName: "purchasesLast6Months",
                type: "number"
            }, {
                name: "suspiciousActivity",
                baseName: "suspiciousActivity",
                type: "boolean"
            }, {
                name: "workPhone",
                baseName: "workPhone",
                type: "string"
            }],
            function(e) {
                let t, a, n, i, s, r;
                !function(e) {
                    e.NotApplicable = "notApplicable",
                    e.ThisTransaction = "thisTransaction",
                    e.LessThan30Days = "lessThan30Days",
                    e.From30To60Days = "from30To60Days",
                    e.MoreThan60Days = "moreThan60Days"
                }(t = e.AccountAgeIndicatorEnum || (e.AccountAgeIndicatorEnum = {})),
                function(e) {
                    e.ThisTransaction = "thisTransaction",
                    e.LessThan30Days = "lessThan30Days",
                    e.From30To60Days = "from30To60Days",
                    e.MoreThan60Days = "moreThan60Days"
                }(a = e.AccountChangeIndicatorEnum || (e.AccountChangeIndicatorEnum = {})),
                function(e) {
                    e.NotApplicable = "notApplicable",
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(n = e.AccountTypeEnum || (e.AccountTypeEnum = {})),
                function(e) {
                    e.ThisTransaction = "thisTransaction",
                    e.LessThan30Days = "lessThan30Days",
                    e.From30To60Days = "from30To60Days",
                    e.MoreThan60Days = "moreThan60Days"
                }(i = e.DeliveryAddressUsageIndicatorEnum || (e.DeliveryAddressUsageIndicatorEnum = {})),
                function(e) {
                    e.NotApplicable = "notApplicable",
                    e.ThisTransaction = "thisTransaction",
                    e.LessThan30Days = "lessThan30Days",
                    e.From30To60Days = "from30To60Days",
                    e.MoreThan60Days = "moreThan60Days"
                }(s = e.PasswordChangeIndicatorEnum || (e.PasswordChangeIndicatorEnum = {})),
                function(e) {
                    e.NotApplicable = "notApplicable",
                    e.ThisTransaction = "thisTransaction",
                    e.LessThan30Days = "lessThan30Days",
                    e.From30To60Days = "from30To60Days",
                    e.MoreThan60Days = "moreThan60Days"
                }(r = e.PaymentAccountIndicatorEnum || (e.PaymentAccountIndicatorEnum = {}))
            }(a = t.AccountInfo || (t.AccountInfo = {}))
        }
        ,
        41919: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AcctInfo = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AcctInfo = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "chAccAgeInd",
                baseName: "chAccAgeInd",
                type: "AcctInfo.ChAccAgeIndEnum"
            }, {
                name: "chAccChange",
                baseName: "chAccChange",
                type: "string"
            }, {
                name: "chAccChangeInd",
                baseName: "chAccChangeInd",
                type: "AcctInfo.ChAccChangeIndEnum"
            }, {
                name: "chAccPwChange",
                baseName: "chAccPwChange",
                type: "string"
            }, {
                name: "chAccPwChangeInd",
                baseName: "chAccPwChangeInd",
                type: "AcctInfo.ChAccPwChangeIndEnum"
            }, {
                name: "chAccString",
                baseName: "chAccString",
                type: "string"
            }, {
                name: "nbPurchaseAccount",
                baseName: "nbPurchaseAccount",
                type: "string"
            }, {
                name: "paymentAccAge",
                baseName: "paymentAccAge",
                type: "string"
            }, {
                name: "paymentAccInd",
                baseName: "paymentAccInd",
                type: "AcctInfo.PaymentAccIndEnum"
            }, {
                name: "provisionAttemptsDay",
                baseName: "provisionAttemptsDay",
                type: "string"
            }, {
                name: "shipAddressUsage",
                baseName: "shipAddressUsage",
                type: "string"
            }, {
                name: "shipAddressUsageInd",
                baseName: "shipAddressUsageInd",
                type: "AcctInfo.ShipAddressUsageIndEnum"
            }, {
                name: "shipNameIndicator",
                baseName: "shipNameIndicator",
                type: "AcctInfo.ShipNameIndicatorEnum"
            }, {
                name: "suspiciousAccActivity",
                baseName: "suspiciousAccActivity",
                type: "AcctInfo.SuspiciousAccActivityEnum"
            }, {
                name: "txnActivityDay",
                baseName: "txnActivityDay",
                type: "string"
            }, {
                name: "txnActivityYear",
                baseName: "txnActivityYear",
                type: "string"
            }],
            function(e) {
                let t, a, n, i, s, r, o;
                !function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04",
                    e._05 = "05"
                }(t = e.ChAccAgeIndEnum || (e.ChAccAgeIndEnum = {})),
                function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04"
                }(a = e.ChAccChangeIndEnum || (e.ChAccChangeIndEnum = {})),
                function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04",
                    e._05 = "05"
                }(n = e.ChAccPwChangeIndEnum || (e.ChAccPwChangeIndEnum = {})),
                function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04",
                    e._05 = "05"
                }(i = e.PaymentAccIndEnum || (e.PaymentAccIndEnum = {})),
                function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04"
                }(s = e.ShipAddressUsageIndEnum || (e.ShipAddressUsageIndEnum = {})),
                function(e) {
                    e._01 = "01",
                    e._02 = "02"
                }(r = e.ShipNameIndicatorEnum || (e.ShipNameIndicatorEnum = {})),
                function(e) {
                    e._01 = "01",
                    e._02 = "02"
                }(o = e.SuspiciousAccActivityEnum || (e.SuspiciousAccActivityEnum = {}))
            }(a = t.AcctInfo || (t.AcctInfo = {}))
        }
        ,
        32050: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AchDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AchDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "bankAccountNumber",
                baseName: "bankAccountNumber",
                type: "string"
            }, {
                name: "bankAccountType",
                baseName: "bankAccountType",
                type: "AchDetails.BankAccountTypeEnum"
            }, {
                name: "bankLocationId",
                baseName: "bankLocationId",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "encryptedBankAccountNumber",
                baseName: "encryptedBankAccountNumber",
                type: "string"
            }, {
                name: "encryptedBankLocationId",
                baseName: "encryptedBankLocationId",
                type: "string"
            }, {
                name: "ownerName",
                baseName: "ownerName",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "AchDetails.TypeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Balance = "balance",
                    e.Checking = "checking",
                    e.Deposit = "deposit",
                    e.General = "general",
                    e.Other = "other",
                    e.Payment = "payment",
                    e.Savings = "savings"
                }(t = e.BankAccountTypeEnum || (e.BankAccountTypeEnum = {})),
                function(e) {
                    e.Ach = "ach",
                    e.AchPlaid = "ach_plaid"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.AchDetails || (t.AchDetails = {}))
        }
        ,
        33707: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalData3DSecure = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalData3DSecure = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "allow3DS2",
                baseName: "allow3DS2",
                type: "string"
            }, {
                name: "challengeWindowSize",
                baseName: "challengeWindowSize",
                type: "AdditionalData3DSecure.ChallengeWindowSizeEnum"
            }, {
                name: "executeThreeD",
                baseName: "executeThreeD",
                type: "string"
            }, {
                name: "mpiImplementationType",
                baseName: "mpiImplementationType",
                type: "string"
            }, {
                name: "scaExemption",
                baseName: "scaExemption",
                type: "string"
            }, {
                name: "threeDSVersion",
                baseName: "threeDSVersion",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04",
                    e._05 = "05"
                }(t = e.ChallengeWindowSizeEnum || (e.ChallengeWindowSizeEnum = {}))
            }(a = t.AdditionalData3DSecure || (t.AdditionalData3DSecure = {}))
        }
        ,
        61471: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataAirline = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataAirline = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "airline_agency_invoice_number",
                baseName: "airline.agency_invoice_number",
                type: "string"
            }, {
                name: "airline_agency_plan_name",
                baseName: "airline.agency_plan_name",
                type: "string"
            }, {
                name: "airline_airline_code",
                baseName: "airline.airline_code",
                type: "string"
            }, {
                name: "airline_airline_designator_code",
                baseName: "airline.airline_designator_code",
                type: "string"
            }, {
                name: "airline_boarding_fee",
                baseName: "airline.boarding_fee",
                type: "string"
            }, {
                name: "airline_computerized_reservation_system",
                baseName: "airline.computerized_reservation_system",
                type: "string"
            }, {
                name: "airline_customer_reference_number",
                baseName: "airline.customer_reference_number",
                type: "string"
            }, {
                name: "airline_document_type",
                baseName: "airline.document_type",
                type: "string"
            }, {
                name: "airline_flight_date",
                baseName: "airline.flight_date",
                type: "string"
            }, {
                name: "airline_leg_carrier_code",
                baseName: "airline.leg.carrier_code",
                type: "string"
            }, {
                name: "airline_leg_class_of_travel",
                baseName: "airline.leg.class_of_travel",
                type: "string"
            }, {
                name: "airline_leg_date_of_travel",
                baseName: "airline.leg.date_of_travel",
                type: "string"
            }, {
                name: "airline_leg_depart_airport",
                baseName: "airline.leg.depart_airport",
                type: "string"
            }, {
                name: "airline_leg_depart_tax",
                baseName: "airline.leg.depart_tax",
                type: "string"
            }, {
                name: "airline_leg_destination_code",
                baseName: "airline.leg.destination_code",
                type: "string"
            }, {
                name: "airline_leg_fare_base_code",
                baseName: "airline.leg.fare_base_code",
                type: "string"
            }, {
                name: "airline_leg_flight_number",
                baseName: "airline.leg.flight_number",
                type: "string"
            }, {
                name: "airline_leg_stop_over_code",
                baseName: "airline.leg.stop_over_code",
                type: "string"
            }, {
                name: "airline_passenger_date_of_birth",
                baseName: "airline.passenger.date_of_birth",
                type: "string"
            }, {
                name: "airline_passenger_first_name",
                baseName: "airline.passenger.first_name",
                type: "string"
            }, {
                name: "airline_passenger_last_name",
                baseName: "airline.passenger.last_name",
                type: "string"
            }, {
                name: "airline_passenger_telephone_number",
                baseName: "airline.passenger.telephone_number",
                type: "string"
            }, {
                name: "airline_passenger_traveller_type",
                baseName: "airline.passenger.traveller_type",
                type: "string"
            }, {
                name: "airline_passenger_name",
                baseName: "airline.passenger_name",
                type: "string"
            }, {
                name: "airline_ticket_issue_address",
                baseName: "airline.ticket_issue_address",
                type: "string"
            }, {
                name: "airline_ticket_number",
                baseName: "airline.ticket_number",
                type: "string"
            }, {
                name: "airline_travel_agency_code",
                baseName: "airline.travel_agency_code",
                type: "string"
            }, {
                name: "airline_travel_agency_name",
                baseName: "airline.travel_agency_name",
                type: "string"
            }]
        }
        ,
        87929: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataCarRental = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataCarRental = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "carRental_checkOutDate",
                baseName: "carRental.checkOutDate",
                type: "string"
            }, {
                name: "carRental_customerServiceTollFreeNumber",
                baseName: "carRental.customerServiceTollFreeNumber",
                type: "string"
            }, {
                name: "carRental_daysRented",
                baseName: "carRental.daysRented",
                type: "string"
            }, {
                name: "carRental_fuelCharges",
                baseName: "carRental.fuelCharges",
                type: "string"
            }, {
                name: "carRental_insuranceCharges",
                baseName: "carRental.insuranceCharges",
                type: "string"
            }, {
                name: "carRental_locationCity",
                baseName: "carRental.locationCity",
                type: "string"
            }, {
                name: "carRental_locationCountry",
                baseName: "carRental.locationCountry",
                type: "string"
            }, {
                name: "carRental_locationStateProvince",
                baseName: "carRental.locationStateProvince",
                type: "string"
            }, {
                name: "carRental_noShowIndicator",
                baseName: "carRental.noShowIndicator",
                type: "string"
            }, {
                name: "carRental_oneWayDropOffCharges",
                baseName: "carRental.oneWayDropOffCharges",
                type: "string"
            }, {
                name: "carRental_rate",
                baseName: "carRental.rate",
                type: "string"
            }, {
                name: "carRental_rateIndicator",
                baseName: "carRental.rateIndicator",
                type: "string"
            }, {
                name: "carRental_rentalAgreementNumber",
                baseName: "carRental.rentalAgreementNumber",
                type: "string"
            }, {
                name: "carRental_rentalClassId",
                baseName: "carRental.rentalClassId",
                type: "string"
            }, {
                name: "carRental_renterName",
                baseName: "carRental.renterName",
                type: "string"
            }, {
                name: "carRental_returnCity",
                baseName: "carRental.returnCity",
                type: "string"
            }, {
                name: "carRental_returnCountry",
                baseName: "carRental.returnCountry",
                type: "string"
            }, {
                name: "carRental_returnDate",
                baseName: "carRental.returnDate",
                type: "string"
            }, {
                name: "carRental_returnLocationId",
                baseName: "carRental.returnLocationId",
                type: "string"
            }, {
                name: "carRental_returnStateProvince",
                baseName: "carRental.returnStateProvince",
                type: "string"
            }, {
                name: "carRental_taxExemptIndicator",
                baseName: "carRental.taxExemptIndicator",
                type: "string"
            }, {
                name: "travelEntertainmentAuthData_duration",
                baseName: "travelEntertainmentAuthData.duration",
                type: "string"
            }, {
                name: "travelEntertainmentAuthData_market",
                baseName: "travelEntertainmentAuthData.market",
                type: "string"
            }]
        }
        ,
        71068: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataCommon = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataCommon = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "RequestedTestErrorResponseCode",
                baseName: "RequestedTestErrorResponseCode",
                type: "string"
            }, {
                name: "allowPartialAuth",
                baseName: "allowPartialAuth",
                type: "string"
            }, {
                name: "authorisationType",
                baseName: "authorisationType",
                type: "string"
            }, {
                name: "customRoutingFlag",
                baseName: "customRoutingFlag",
                type: "string"
            }, {
                name: "industryUsage",
                baseName: "industryUsage",
                type: "AdditionalDataCommon.IndustryUsageEnum"
            }, {
                name: "manualCapture",
                baseName: "manualCapture",
                type: "string"
            }, {
                name: "networkTxReference",
                baseName: "networkTxReference",
                type: "string"
            }, {
                name: "overwriteBrand",
                baseName: "overwriteBrand",
                type: "string"
            }, {
                name: "subMerchantCity",
                baseName: "subMerchantCity",
                type: "string"
            }, {
                name: "subMerchantCountry",
                baseName: "subMerchantCountry",
                type: "string"
            }, {
                name: "subMerchantID",
                baseName: "subMerchantID",
                type: "string"
            }, {
                name: "subMerchantName",
                baseName: "subMerchantName",
                type: "string"
            }, {
                name: "subMerchantPostalCode",
                baseName: "subMerchantPostalCode",
                type: "string"
            }, {
                name: "subMerchantState",
                baseName: "subMerchantState",
                type: "string"
            }, {
                name: "subMerchantStreet",
                baseName: "subMerchantStreet",
                type: "string"
            }, {
                name: "subMerchantTaxId",
                baseName: "subMerchantTaxId",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.NoShow = "NoShow",
                    e.DelayedCharge = "DelayedCharge"
                }(t = e.IndustryUsageEnum || (e.IndustryUsageEnum = {}))
            }(a = t.AdditionalDataCommon || (t.AdditionalDataCommon = {}))
        }
        ,
        12664: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataLevel23 = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataLevel23 = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "enhancedSchemeData_customerReference",
                baseName: "enhancedSchemeData.customerReference",
                type: "string"
            }, {
                name: "enhancedSchemeData_destinationCountryCode",
                baseName: "enhancedSchemeData.destinationCountryCode",
                type: "string"
            }, {
                name: "enhancedSchemeData_destinationPostalCode",
                baseName: "enhancedSchemeData.destinationPostalCode",
                type: "string"
            }, {
                name: "enhancedSchemeData_destinationStateProvinceCode",
                baseName: "enhancedSchemeData.destinationStateProvinceCode",
                type: "string"
            }, {
                name: "enhancedSchemeData_dutyAmount",
                baseName: "enhancedSchemeData.dutyAmount",
                type: "string"
            }, {
                name: "enhancedSchemeData_freightAmount",
                baseName: "enhancedSchemeData.freightAmount",
                type: "string"
            }, {
                name: "enhancedSchemeData_itemDetailLine_itemNr_commodityCode",
                baseName: "enhancedSchemeData.itemDetailLine[itemNr].commodityCode",
                type: "string"
            }, {
                name: "enhancedSchemeData_itemDetailLine_itemNr_description",
                baseName: "enhancedSchemeData.itemDetailLine[itemNr].description",
                type: "string"
            }, {
                name: "enhancedSchemeData_itemDetailLine_itemNr_discountAmount",
                baseName: "enhancedSchemeData.itemDetailLine[itemNr].discountAmount",
                type: "string"
            }, {
                name: "enhancedSchemeData_itemDetailLine_itemNr_productCode",
                baseName: "enhancedSchemeData.itemDetailLine[itemNr].productCode",
                type: "string"
            }, {
                name: "enhancedSchemeData_itemDetailLine_itemNr_quantity",
                baseName: "enhancedSchemeData.itemDetailLine[itemNr].quantity",
                type: "string"
            }, {
                name: "enhancedSchemeData_itemDetailLine_itemNr_totalAmount",
                baseName: "enhancedSchemeData.itemDetailLine[itemNr].totalAmount",
                type: "string"
            }, {
                name: "enhancedSchemeData_itemDetailLine_itemNr_unitOfMeasure",
                baseName: "enhancedSchemeData.itemDetailLine[itemNr].unitOfMeasure",
                type: "string"
            }, {
                name: "enhancedSchemeData_itemDetailLine_itemNr_unitPrice",
                baseName: "enhancedSchemeData.itemDetailLine[itemNr].unitPrice",
                type: "string"
            }, {
                name: "enhancedSchemeData_orderDate",
                baseName: "enhancedSchemeData.orderDate",
                type: "string"
            }, {
                name: "enhancedSchemeData_shipFromPostalCode",
                baseName: "enhancedSchemeData.shipFromPostalCode",
                type: "string"
            }, {
                name: "enhancedSchemeData_totalTaxAmount",
                baseName: "enhancedSchemeData.totalTaxAmount",
                type: "string"
            }]
        }
        ,
        78085: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataLodging = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataLodging = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "lodging_checkInDate",
                baseName: "lodging.checkInDate",
                type: "string"
            }, {
                name: "lodging_checkOutDate",
                baseName: "lodging.checkOutDate",
                type: "string"
            }, {
                name: "lodging_customerServiceTollFreeNumber",
                baseName: "lodging.customerServiceTollFreeNumber",
                type: "string"
            }, {
                name: "lodging_fireSafetyActIndicator",
                baseName: "lodging.fireSafetyActIndicator",
                type: "string"
            }, {
                name: "lodging_folioCashAdvances",
                baseName: "lodging.folioCashAdvances",
                type: "string"
            }, {
                name: "lodging_folioNumber",
                baseName: "lodging.folioNumber",
                type: "string"
            }, {
                name: "lodging_foodBeverageCharges",
                baseName: "lodging.foodBeverageCharges",
                type: "string"
            }, {
                name: "lodging_noShowIndicator",
                baseName: "lodging.noShowIndicator",
                type: "string"
            }, {
                name: "lodging_prepaidExpenses",
                baseName: "lodging.prepaidExpenses",
                type: "string"
            }, {
                name: "lodging_propertyPhoneNumber",
                baseName: "lodging.propertyPhoneNumber",
                type: "string"
            }, {
                name: "lodging_room1_numberOfNights",
                baseName: "lodging.room1.numberOfNights",
                type: "string"
            }, {
                name: "lodging_room1_rate",
                baseName: "lodging.room1.rate",
                type: "string"
            }, {
                name: "lodging_totalRoomTax",
                baseName: "lodging.totalRoomTax",
                type: "string"
            }, {
                name: "lodging_totalTax",
                baseName: "lodging.totalTax",
                type: "string"
            }, {
                name: "travelEntertainmentAuthData_duration",
                baseName: "travelEntertainmentAuthData.duration",
                type: "string"
            }, {
                name: "travelEntertainmentAuthData_market",
                baseName: "travelEntertainmentAuthData.market",
                type: "string"
            }]
        }
        ,
        86894: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataOpenInvoice = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataOpenInvoice = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "openinvoicedata_merchantData",
                baseName: "openinvoicedata.merchantData",
                type: "string"
            }, {
                name: "openinvoicedata_numberOfLines",
                baseName: "openinvoicedata.numberOfLines",
                type: "string"
            }, {
                name: "openinvoicedata_recipientFirstName",
                baseName: "openinvoicedata.recipientFirstName",
                type: "string"
            }, {
                name: "openinvoicedata_recipientLastName",
                baseName: "openinvoicedata.recipientLastName",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_currencyCode",
                baseName: "openinvoicedataLine[itemNr].currencyCode",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_description",
                baseName: "openinvoicedataLine[itemNr].description",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_itemAmount",
                baseName: "openinvoicedataLine[itemNr].itemAmount",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_itemId",
                baseName: "openinvoicedataLine[itemNr].itemId",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_itemVatAmount",
                baseName: "openinvoicedataLine[itemNr].itemVatAmount",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_itemVatPercentage",
                baseName: "openinvoicedataLine[itemNr].itemVatPercentage",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_numberOfItems",
                baseName: "openinvoicedataLine[itemNr].numberOfItems",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_returnShippingCompany",
                baseName: "openinvoicedataLine[itemNr].returnShippingCompany",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_returnTrackingNumber",
                baseName: "openinvoicedataLine[itemNr].returnTrackingNumber",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_returnTrackingUri",
                baseName: "openinvoicedataLine[itemNr].returnTrackingUri",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_shippingCompany",
                baseName: "openinvoicedataLine[itemNr].shippingCompany",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_shippingMethod",
                baseName: "openinvoicedataLine[itemNr].shippingMethod",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_trackingNumber",
                baseName: "openinvoicedataLine[itemNr].trackingNumber",
                type: "string"
            }, {
                name: "openinvoicedataLine_itemNr_trackingUri",
                baseName: "openinvoicedataLine[itemNr].trackingUri",
                type: "string"
            }]
        }
        ,
        68823: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataOpi = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataOpi = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "opi_includeTransToken",
                baseName: "opi.includeTransToken",
                type: "string"
            }]
        }
        ,
        32213: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataRatepay = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataRatepay = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "ratepay_installmentAmount",
                baseName: "ratepay.installmentAmount",
                type: "string"
            }, {
                name: "ratepay_interestRate",
                baseName: "ratepay.interestRate",
                type: "string"
            }, {
                name: "ratepay_lastInstallmentAmount",
                baseName: "ratepay.lastInstallmentAmount",
                type: "string"
            }, {
                name: "ratepay_paymentFirstday",
                baseName: "ratepay.paymentFirstday",
                type: "string"
            }, {
                name: "ratepaydata_deliveryDate",
                baseName: "ratepaydata.deliveryDate",
                type: "string"
            }, {
                name: "ratepaydata_dueDate",
                baseName: "ratepaydata.dueDate",
                type: "string"
            }, {
                name: "ratepaydata_invoiceDate",
                baseName: "ratepaydata.invoiceDate",
                type: "string"
            }, {
                name: "ratepaydata_invoiceId",
                baseName: "ratepaydata.invoiceId",
                type: "string"
            }]
        }
        ,
        10955: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataRetry = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataRetry = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "retry_chainAttemptNumber",
                baseName: "retry.chainAttemptNumber",
                type: "string"
            }, {
                name: "retry_orderAttemptNumber",
                baseName: "retry.orderAttemptNumber",
                type: "string"
            }, {
                name: "retry_skipRetry",
                baseName: "retry.skipRetry",
                type: "string"
            }]
        }
        ,
        4494: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataRisk = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataRisk = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "riskdata__customFieldName",
                baseName: "riskdata.[customFieldName]",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_amountPerItem",
                baseName: "riskdata.basket.item[itemNr].amountPerItem",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_brand",
                baseName: "riskdata.basket.item[itemNr].brand",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_category",
                baseName: "riskdata.basket.item[itemNr].category",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_color",
                baseName: "riskdata.basket.item[itemNr].color",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_currency",
                baseName: "riskdata.basket.item[itemNr].currency",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_itemID",
                baseName: "riskdata.basket.item[itemNr].itemID",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_manufacturer",
                baseName: "riskdata.basket.item[itemNr].manufacturer",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_productTitle",
                baseName: "riskdata.basket.item[itemNr].productTitle",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_quantity",
                baseName: "riskdata.basket.item[itemNr].quantity",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_receiverEmail",
                baseName: "riskdata.basket.item[itemNr].receiverEmail",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_size",
                baseName: "riskdata.basket.item[itemNr].size",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_sku",
                baseName: "riskdata.basket.item[itemNr].sku",
                type: "string"
            }, {
                name: "riskdata_basket_item_itemNr_upc",
                baseName: "riskdata.basket.item[itemNr].upc",
                type: "string"
            }, {
                name: "riskdata_promotions_promotion_itemNr_promotionCode",
                baseName: "riskdata.promotions.promotion[itemNr].promotionCode",
                type: "string"
            }, {
                name: "riskdata_promotions_promotion_itemNr_promotionDiscountAmount",
                baseName: "riskdata.promotions.promotion[itemNr].promotionDiscountAmount",
                type: "string"
            }, {
                name: "riskdata_promotions_promotion_itemNr_promotionDiscountCurrency",
                baseName: "riskdata.promotions.promotion[itemNr].promotionDiscountCurrency",
                type: "string"
            }, {
                name: "riskdata_promotions_promotion_itemNr_promotionDiscountPercentage",
                baseName: "riskdata.promotions.promotion[itemNr].promotionDiscountPercentage",
                type: "string"
            }, {
                name: "riskdata_promotions_promotion_itemNr_promotionName",
                baseName: "riskdata.promotions.promotion[itemNr].promotionName",
                type: "string"
            }, {
                name: "riskdata_riskProfileReference",
                baseName: "riskdata.riskProfileReference",
                type: "string"
            }, {
                name: "riskdata_skipRisk",
                baseName: "riskdata.skipRisk",
                type: "string"
            }]
        }
        ,
        56289: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataRiskStandalone = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataRiskStandalone = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "PayPal_CountryCode",
                baseName: "PayPal.CountryCode",
                type: "string"
            }, {
                name: "PayPal_EmailId",
                baseName: "PayPal.EmailId",
                type: "string"
            }, {
                name: "PayPal_FirstName",
                baseName: "PayPal.FirstName",
                type: "string"
            }, {
                name: "PayPal_LastName",
                baseName: "PayPal.LastName",
                type: "string"
            }, {
                name: "PayPal_PayerId",
                baseName: "PayPal.PayerId",
                type: "string"
            }, {
                name: "PayPal_Phone",
                baseName: "PayPal.Phone",
                type: "string"
            }, {
                name: "PayPal_ProtectionEligibility",
                baseName: "PayPal.ProtectionEligibility",
                type: "string"
            }, {
                name: "PayPal_TransactionId",
                baseName: "PayPal.TransactionId",
                type: "string"
            }, {
                name: "avsResultRaw",
                baseName: "avsResultRaw",
                type: "string"
            }, {
                name: "bin",
                baseName: "bin",
                type: "string"
            }, {
                name: "cvcResultRaw",
                baseName: "cvcResultRaw",
                type: "string"
            }, {
                name: "riskToken",
                baseName: "riskToken",
                type: "string"
            }, {
                name: "threeDAuthenticated",
                baseName: "threeDAuthenticated",
                type: "string"
            }, {
                name: "threeDOffered",
                baseName: "threeDOffered",
                type: "string"
            }, {
                name: "tokenDataType",
                baseName: "tokenDataType",
                type: "string"
            }]
        }
        ,
        31747: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataSubMerchant = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataSubMerchant = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "subMerchant_numberOfSubSellers",
                baseName: "subMerchant.numberOfSubSellers",
                type: "string"
            }, {
                name: "subMerchant_subSeller_subSellerNr_city",
                baseName: "subMerchant.subSeller[subSellerNr].city",
                type: "string"
            }, {
                name: "subMerchant_subSeller_subSellerNr_country",
                baseName: "subMerchant.subSeller[subSellerNr].country",
                type: "string"
            }, {
                name: "subMerchant_subSeller_subSellerNr_id",
                baseName: "subMerchant.subSeller[subSellerNr].id",
                type: "string"
            }, {
                name: "subMerchant_subSeller_subSellerNr_mcc",
                baseName: "subMerchant.subSeller[subSellerNr].mcc",
                type: "string"
            }, {
                name: "subMerchant_subSeller_subSellerNr_name",
                baseName: "subMerchant.subSeller[subSellerNr].name",
                type: "string"
            }, {
                name: "subMerchant_subSeller_subSellerNr_postalCode",
                baseName: "subMerchant.subSeller[subSellerNr].postalCode",
                type: "string"
            }, {
                name: "subMerchant_subSeller_subSellerNr_state",
                baseName: "subMerchant.subSeller[subSellerNr].state",
                type: "string"
            }, {
                name: "subMerchant_subSeller_subSellerNr_street",
                baseName: "subMerchant.subSeller[subSellerNr].street",
                type: "string"
            }, {
                name: "subMerchant_subSeller_subSellerNr_taxId",
                baseName: "subMerchant.subSeller[subSellerNr].taxId",
                type: "string"
            }]
        }
        ,
        14118: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataTemporaryServices = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataTemporaryServices = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "enhancedSchemeData_customerReference",
                baseName: "enhancedSchemeData.customerReference",
                type: "string"
            }, {
                name: "enhancedSchemeData_employeeName",
                baseName: "enhancedSchemeData.employeeName",
                type: "string"
            }, {
                name: "enhancedSchemeData_jobDescription",
                baseName: "enhancedSchemeData.jobDescription",
                type: "string"
            }, {
                name: "enhancedSchemeData_regularHoursRate",
                baseName: "enhancedSchemeData.regularHoursRate",
                type: "string"
            }, {
                name: "enhancedSchemeData_regularHoursWorked",
                baseName: "enhancedSchemeData.regularHoursWorked",
                type: "string"
            }, {
                name: "enhancedSchemeData_requestName",
                baseName: "enhancedSchemeData.requestName",
                type: "string"
            }, {
                name: "enhancedSchemeData_tempStartDate",
                baseName: "enhancedSchemeData.tempStartDate",
                type: "string"
            }, {
                name: "enhancedSchemeData_tempWeekEnding",
                baseName: "enhancedSchemeData.tempWeekEnding",
                type: "string"
            }, {
                name: "enhancedSchemeData_totalTaxAmount",
                baseName: "enhancedSchemeData.totalTaxAmount",
                type: "string"
            }]
        }
        ,
        74035: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AdditionalDataWallets = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AdditionalDataWallets = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "androidpay_token",
                baseName: "androidpay.token",
                type: "string"
            }, {
                name: "masterpass_transactionId",
                baseName: "masterpass.transactionId",
                type: "string"
            }, {
                name: "payment_token",
                baseName: "payment.token",
                type: "string"
            }, {
                name: "paywithgoogle_token",
                baseName: "paywithgoogle.token",
                type: "string"
            }, {
                name: "samsungpay_token",
                baseName: "samsungpay.token",
                type: "string"
            }, {
                name: "visacheckout_callId",
                baseName: "visacheckout.callId",
                type: "string"
            }]
        }
        ,
        63270: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Address = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Address = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "city",
                baseName: "city",
                type: "string"
            }, {
                name: "country",
                baseName: "country",
                type: "string"
            }, {
                name: "houseNumberOrName",
                baseName: "houseNumberOrName",
                type: "string"
            }, {
                name: "postalCode",
                baseName: "postalCode",
                type: "string"
            }, {
                name: "stateOrProvince",
                baseName: "stateOrProvince",
                type: "string"
            }, {
                name: "street",
                baseName: "street",
                type: "string"
            }]
        }
        ,
        78604: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AfterpayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AfterpayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "billingAddress",
                baseName: "billingAddress",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "string"
            }, {
                name: "personalDetails",
                baseName: "personalDetails",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "AfterpayDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.AfterpayDefault = "afterpay_default",
                    e.Afterpaytouch = "afterpaytouch",
                    e.AfterpayB2b = "afterpay_b2b",
                    e.Clearpay = "clearpay"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.AfterpayDetails || (t.AfterpayDetails = {}))
        }
        ,
        77472: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AmazonPayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AmazonPayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amazonPayToken",
                baseName: "amazonPayToken",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "checkoutSessionId",
                baseName: "checkoutSessionId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "AmazonPayDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Amazonpay = "amazonpay"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.AmazonPayDetails || (t.AmazonPayDetails = {}))
        }
        ,
        12800: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Amount = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Amount = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "currency",
                baseName: "currency",
                type: "string"
            }, {
                name: "value",
                baseName: "value",
                type: "number"
            }]
        }
        ,
        18962: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AncvDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AncvDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "beneficiaryId",
                baseName: "beneficiaryId",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "AncvDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Ancv = "ancv"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.AncvDetails || (t.AncvDetails = {}))
        }
        ,
        86857: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AndroidPayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AndroidPayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "AndroidPayDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Androidpay = "androidpay"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.AndroidPayDetails || (t.AndroidPayDetails = {}))
        }
        ,
        36970: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ApplePayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ApplePayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "applePayToken",
                baseName: "applePayToken",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "ApplePayDetails.FundingSourceEnum"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "ApplePayDetails.TypeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {})),
                function(e) {
                    e.Applepay = "applepay"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.ApplePayDetails || (t.ApplePayDetails = {}))
        }
        ,
        36319: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ApplePayDonations = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ApplePayDonations = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "applePayToken",
                baseName: "applePayToken",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "ApplePayDonations.FundingSourceEnum"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "ApplePayDonations.TypeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {})),
                function(e) {
                    e.Applepay = "applepay"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.ApplePayDonations || (t.ApplePayDonations = {}))
        }
        ,
        71355: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ApplePaySessionRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ApplePaySessionRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "displayName",
                baseName: "displayName",
                type: "string"
            }, {
                name: "domainName",
                baseName: "domainName",
                type: "string"
            }, {
                name: "merchantIdentifier",
                baseName: "merchantIdentifier",
                type: "string"
            }]
        }
        ,
        67839: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ApplePaySessionResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ApplePaySessionResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "data",
                baseName: "data",
                type: "string"
            }]
        }
        ,
        4528: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ApplicationInfo = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ApplicationInfo = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "adyenLibrary",
                baseName: "adyenLibrary",
                type: "CommonField"
            }, {
                name: "adyenPaymentSource",
                baseName: "adyenPaymentSource",
                type: "CommonField"
            }, {
                name: "externalPlatform",
                baseName: "externalPlatform",
                type: "ExternalPlatform"
            }, {
                name: "merchantApplication",
                baseName: "merchantApplication",
                type: "CommonField"
            }, {
                name: "merchantDevice",
                baseName: "merchantDevice",
                type: "MerchantDevice"
            }, {
                name: "shopperInteractionDevice",
                baseName: "shopperInteractionDevice",
                type: "ShopperInteractionDevice"
            }]
        }
        ,
        78424: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.AuthenticationData = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.AuthenticationData = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "attemptAuthentication",
                baseName: "attemptAuthentication",
                type: "AuthenticationData.AttemptAuthenticationEnum"
            }, {
                name: "authenticationOnly",
                baseName: "authenticationOnly",
                type: "boolean"
            }, {
                name: "threeDSRequestData",
                baseName: "threeDSRequestData",
                type: "ThreeDSRequestData"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Always = "always",
                    e.Never = "never"
                }(t = e.AttemptAuthenticationEnum || (e.AttemptAuthenticationEnum = {}))
            }(a = t.AuthenticationData || (t.AuthenticationData = {}))
        }
        ,
        96782: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Avs = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Avs = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "addressEditable",
                baseName: "addressEditable",
                type: "boolean"
            }, {
                name: "enabled",
                baseName: "enabled",
                type: "Avs.EnabledEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Yes = "yes",
                    e.No = "no",
                    e.Automatic = "automatic"
                }(t = e.EnabledEnum || (e.EnabledEnum = {}))
            }(a = t.Avs || (t.Avs = {}))
        }
        ,
        59858: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.BacsDirectDebitDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.BacsDirectDebitDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "bankAccountNumber",
                baseName: "bankAccountNumber",
                type: "string"
            }, {
                name: "bankLocationId",
                baseName: "bankLocationId",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "holderName",
                baseName: "holderName",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "BacsDirectDebitDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.DirectdebitGb = "directdebit_GB"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.BacsDirectDebitDetails || (t.BacsDirectDebitDetails = {}))
        }
        ,
        94079: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.BalanceCheckRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.BalanceCheckRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "accountInfo",
                baseName: "accountInfo",
                type: "AccountInfo"
            }, {
                name: "additionalAmount",
                baseName: "additionalAmount",
                type: "Amount"
            }, {
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "billingAddress",
                baseName: "billingAddress",
                type: "Address"
            }, {
                name: "browserInfo",
                baseName: "browserInfo",
                type: "BrowserInfo"
            }, {
                name: "captureDelayHours",
                baseName: "captureDelayHours",
                type: "number"
            }, {
                name: "dateOfBirth",
                baseName: "dateOfBirth",
                type: "string"
            }, {
                name: "dccQuote",
                baseName: "dccQuote",
                type: "ForexQuote"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "Address"
            }, {
                name: "deliveryDate",
                baseName: "deliveryDate",
                type: "Date"
            }, {
                name: "deviceFingerprint",
                baseName: "deviceFingerprint",
                type: "string"
            }, {
                name: "fraudOffset",
                baseName: "fraudOffset",
                type: "number"
            }, {
                name: "installments",
                baseName: "installments",
                type: "Installments"
            }, {
                name: "localizedShopperStatement",
                baseName: "localizedShopperStatement",
                type: "{ [key: string]: string; }"
            }, {
                name: "mcc",
                baseName: "mcc",
                type: "string"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "merchantOrderReference",
                baseName: "merchantOrderReference",
                type: "string"
            }, {
                name: "merchantRiskIndicator",
                baseName: "merchantRiskIndicator",
                type: "MerchantRiskIndicator"
            }, {
                name: "metadata",
                baseName: "metadata",
                type: "{ [key: string]: string; }"
            }, {
                name: "orderReference",
                baseName: "orderReference",
                type: "string"
            }, {
                name: "paymentMethod",
                baseName: "paymentMethod",
                type: "{ [key: string]: string; }"
            }, {
                name: "recurring",
                baseName: "recurring",
                type: "Recurring"
            }, {
                name: "recurringProcessingModel",
                baseName: "recurringProcessingModel",
                type: "BalanceCheckRequest.RecurringProcessingModelEnum"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "selectedBrand",
                baseName: "selectedBrand",
                type: "string"
            }, {
                name: "selectedRecurringDetailReference",
                baseName: "selectedRecurringDetailReference",
                type: "string"
            }, {
                name: "sessionId",
                baseName: "sessionId",
                type: "string"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperIP",
                baseName: "shopperIP",
                type: "string"
            }, {
                name: "shopperInteraction",
                baseName: "shopperInteraction",
                type: "BalanceCheckRequest.ShopperInteractionEnum"
            }, {
                name: "shopperLocale",
                baseName: "shopperLocale",
                type: "string"
            }, {
                name: "shopperName",
                baseName: "shopperName",
                type: "Name"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "shopperStatement",
                baseName: "shopperStatement",
                type: "string"
            }, {
                name: "socialSecurityNumber",
                baseName: "socialSecurityNumber",
                type: "string"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }, {
                name: "store",
                baseName: "store",
                type: "string"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "threeDS2RequestData",
                baseName: "threeDS2RequestData",
                type: "ThreeDS2RequestData"
            }, {
                name: "threeDSAuthenticationOnly",
                baseName: "threeDSAuthenticationOnly",
                type: "boolean"
            }, {
                name: "totalsGroup",
                baseName: "totalsGroup",
                type: "string"
            }, {
                name: "trustedShopper",
                baseName: "trustedShopper",
                type: "boolean"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.CardOnFile = "CardOnFile",
                    e.Subscription = "Subscription",
                    e.UnscheduledCardOnFile = "UnscheduledCardOnFile"
                }(t = e.RecurringProcessingModelEnum || (e.RecurringProcessingModelEnum = {})),
                function(e) {
                    e.Ecommerce = "Ecommerce",
                    e.ContAuth = "ContAuth",
                    e.Moto = "Moto",
                    e.Pos = "POS"
                }(a = e.ShopperInteractionEnum || (e.ShopperInteractionEnum = {}))
            }(a = t.BalanceCheckRequest || (t.BalanceCheckRequest = {}))
        }
        ,
        54843: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.BalanceCheckResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.BalanceCheckResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "balance",
                baseName: "balance",
                type: "Amount"
            }, {
                name: "fraudResult",
                baseName: "fraudResult",
                type: "FraudResult"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "refusalReason",
                baseName: "refusalReason",
                type: "string"
            }, {
                name: "resultCode",
                baseName: "resultCode",
                type: "BalanceCheckResponse.ResultCodeEnum"
            }, {
                name: "transactionLimit",
                baseName: "transactionLimit",
                type: "Amount"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Success = "Success",
                    e.NotEnoughBalance = "NotEnoughBalance",
                    e.Failed = "Failed"
                }(t = e.ResultCodeEnum || (e.ResultCodeEnum = {}))
            }(a = t.BalanceCheckResponse || (t.BalanceCheckResponse = {}))
        }
        ,
        28883: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.BankAccount = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.BankAccount = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "bankAccountNumber",
                baseName: "bankAccountNumber",
                type: "string"
            }, {
                name: "bankCity",
                baseName: "bankCity",
                type: "string"
            }, {
                name: "bankLocationId",
                baseName: "bankLocationId",
                type: "string"
            }, {
                name: "bankName",
                baseName: "bankName",
                type: "string"
            }, {
                name: "bic",
                baseName: "bic",
                type: "string"
            }, {
                name: "countryCode",
                baseName: "countryCode",
                type: "string"
            }, {
                name: "iban",
                baseName: "iban",
                type: "string"
            }, {
                name: "ownerName",
                baseName: "ownerName",
                type: "string"
            }, {
                name: "taxId",
                baseName: "taxId",
                type: "string"
            }]
        }
        ,
        83864: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.BillDeskDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.BillDeskDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "issuer",
                baseName: "issuer",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "BillDeskDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Online = "billdesk_online",
                    e.Wallet = "billdesk_wallet"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.BillDeskDetails || (t.BillDeskDetails = {}))
        }
        ,
        64409: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.BillingAddress = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.BillingAddress = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "city",
                baseName: "city",
                type: "string"
            }, {
                name: "country",
                baseName: "country",
                type: "string"
            }, {
                name: "houseNumberOrName",
                baseName: "houseNumberOrName",
                type: "string"
            }, {
                name: "postalCode",
                baseName: "postalCode",
                type: "string"
            }, {
                name: "stateOrProvince",
                baseName: "stateOrProvince",
                type: "string"
            }, {
                name: "street",
                baseName: "street",
                type: "string"
            }]
        }
        ,
        63810: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.BlikDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.BlikDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "blikCode",
                baseName: "blikCode",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "BlikDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Blik = "blik"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.BlikDetails || (t.BlikDetails = {}))
        }
        ,
        7430: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.BrowserInfo = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.BrowserInfo = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "acceptHeader",
                baseName: "acceptHeader",
                type: "string"
            }, {
                name: "colorDepth",
                baseName: "colorDepth",
                type: "number"
            }, {
                name: "javaEnabled",
                baseName: "javaEnabled",
                type: "boolean"
            }, {
                name: "javaScriptEnabled",
                baseName: "javaScriptEnabled",
                type: "boolean"
            }, {
                name: "language",
                baseName: "language",
                type: "string"
            }, {
                name: "screenHeight",
                baseName: "screenHeight",
                type: "number"
            }, {
                name: "screenWidth",
                baseName: "screenWidth",
                type: "number"
            }, {
                name: "timeZoneOffset",
                baseName: "timeZoneOffset",
                type: "number"
            }, {
                name: "userAgent",
                baseName: "userAgent",
                type: "string"
            }]
        }
        ,
        23123: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CancelOrderRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CancelOrderRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "order",
                baseName: "order",
                type: "EncryptedOrderData"
            }]
        }
        ,
        69831: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CancelOrderResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CancelOrderResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "resultCode",
                baseName: "resultCode",
                type: "CancelOrderResponse.ResultCodeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Received = "Received"
                }(t = e.ResultCodeEnum || (e.ResultCodeEnum = {}))
            }(a = t.CancelOrderResponse || (t.CancelOrderResponse = {}))
        }
        ,
        66866: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Card = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Card = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "cvc",
                baseName: "cvc",
                type: "string"
            }, {
                name: "expiryMonth",
                baseName: "expiryMonth",
                type: "string"
            }, {
                name: "expiryYear",
                baseName: "expiryYear",
                type: "string"
            }, {
                name: "holderName",
                baseName: "holderName",
                type: "string"
            }, {
                name: "issueNumber",
                baseName: "issueNumber",
                type: "string"
            }, {
                name: "number",
                baseName: "number",
                type: "string"
            }, {
                name: "startMonth",
                baseName: "startMonth",
                type: "string"
            }, {
                name: "startYear",
                baseName: "startYear",
                type: "string"
            }]
        }
        ,
        61247: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CardBrandDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CardBrandDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "supported",
                baseName: "supported",
                type: "boolean"
            }, {
                name: "type",
                baseName: "type",
                type: "string"
            }]
        }
        ,
        92082: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CardDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CardDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "brand",
                baseName: "brand",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "cupsecureplus_smscode",
                baseName: "cupsecureplus.smscode",
                type: "string"
            }, {
                name: "cvc",
                baseName: "cvc",
                type: "string"
            }, {
                name: "encryptedCardNumber",
                baseName: "encryptedCardNumber",
                type: "string"
            }, {
                name: "encryptedExpiryMonth",
                baseName: "encryptedExpiryMonth",
                type: "string"
            }, {
                name: "encryptedExpiryYear",
                baseName: "encryptedExpiryYear",
                type: "string"
            }, {
                name: "encryptedSecurityCode",
                baseName: "encryptedSecurityCode",
                type: "string"
            }, {
                name: "expiryMonth",
                baseName: "expiryMonth",
                type: "string"
            }, {
                name: "expiryYear",
                baseName: "expiryYear",
                type: "string"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "CardDetails.FundingSourceEnum"
            }, {
                name: "holderName",
                baseName: "holderName",
                type: "string"
            }, {
                name: "networkPaymentReference",
                baseName: "networkPaymentReference",
                type: "string"
            }, {
                name: "number",
                baseName: "number",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "shopperNotificationReference",
                baseName: "shopperNotificationReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "threeDS2SdkVersion",
                baseName: "threeDS2SdkVersion",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "CardDetails.TypeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {})),
                function(e) {
                    e.Bcmc = "bcmc",
                    e.Scheme = "scheme",
                    e.NetworkToken = "networkToken",
                    e.Giftcard = "giftcard",
                    e.Card = "card"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.CardDetails || (t.CardDetails = {}))
        }
        ,
        45569: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CardDetailsRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CardDetailsRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "cardNumber",
                baseName: "cardNumber",
                type: "string"
            }, {
                name: "countryCode",
                baseName: "countryCode",
                type: "string"
            }, {
                name: "encryptedCardNumber",
                baseName: "encryptedCardNumber",
                type: "string"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "supportedBrands",
                baseName: "supportedBrands",
                type: "Array<string>"
            }]
        }
        ,
        55637: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CardDetailsResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CardDetailsResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "brands",
                baseName: "brands",
                type: "Array<CardBrandDetails>"
            }, {
                name: "issuingCountryCode",
                baseName: "issuingCountryCode",
                type: "string"
            }]
        }
        ,
        83255: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CardDonations = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CardDonations = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "brand",
                baseName: "brand",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "cupsecureplus_smscode",
                baseName: "cupsecureplus.smscode",
                type: "string"
            }, {
                name: "cvc",
                baseName: "cvc",
                type: "string"
            }, {
                name: "encryptedCardNumber",
                baseName: "encryptedCardNumber",
                type: "string"
            }, {
                name: "encryptedExpiryMonth",
                baseName: "encryptedExpiryMonth",
                type: "string"
            }, {
                name: "encryptedExpiryYear",
                baseName: "encryptedExpiryYear",
                type: "string"
            }, {
                name: "encryptedSecurityCode",
                baseName: "encryptedSecurityCode",
                type: "string"
            }, {
                name: "expiryMonth",
                baseName: "expiryMonth",
                type: "string"
            }, {
                name: "expiryYear",
                baseName: "expiryYear",
                type: "string"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "CardDonations.FundingSourceEnum"
            }, {
                name: "holderName",
                baseName: "holderName",
                type: "string"
            }, {
                name: "networkPaymentReference",
                baseName: "networkPaymentReference",
                type: "string"
            }, {
                name: "number",
                baseName: "number",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "shopperNotificationReference",
                baseName: "shopperNotificationReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "threeDS2SdkVersion",
                baseName: "threeDS2SdkVersion",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "CardDonations.TypeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {})),
                function(e) {
                    e.Bcmc = "bcmc",
                    e.Scheme = "scheme",
                    e.NetworkToken = "networkToken",
                    e.Giftcard = "giftcard",
                    e.Card = "card"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.CardDonations || (t.CardDonations = {}))
        }
        ,
        58772: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CashAppDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CashAppDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "cashtag",
                baseName: "cashtag",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "customerId",
                baseName: "customerId",
                type: "string"
            }, {
                name: "grantId",
                baseName: "grantId",
                type: "string"
            }, {
                name: "onFileGrantId",
                baseName: "onFileGrantId",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "requestId",
                baseName: "requestId",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "CashAppDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Cashapp = "cashapp"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.CashAppDetails || (t.CashAppDetails = {}))
        }
        ,
        76992: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CellulantDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CellulantDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "issuer",
                baseName: "issuer",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "CellulantDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Cellulant = "cellulant"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.CellulantDetails || (t.CellulantDetails = {}))
        }
        ,
        89922: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CheckoutAwaitAction = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CheckoutAwaitAction = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "paymentData",
                baseName: "paymentData",
                type: "string"
            }, {
                name: "paymentMethodType",
                baseName: "paymentMethodType",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "CheckoutAwaitAction.TypeEnum"
            }, {
                name: "url",
                baseName: "url",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Await = "await"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.CheckoutAwaitAction || (t.CheckoutAwaitAction = {}))
        }
        ,
        35713: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CheckoutDelegatedAuthenticationAction = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CheckoutDelegatedAuthenticationAction = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "authorisationToken",
                baseName: "authorisationToken",
                type: "string"
            }, {
                name: "paymentData",
                baseName: "paymentData",
                type: "string"
            }, {
                name: "paymentMethodType",
                baseName: "paymentMethodType",
                type: "string"
            }, {
                name: "token",
                baseName: "token",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "CheckoutDelegatedAuthenticationAction.TypeEnum"
            }, {
                name: "url",
                baseName: "url",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.DelegatedAuthentication = "delegatedAuthentication"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.CheckoutDelegatedAuthenticationAction || (t.CheckoutDelegatedAuthenticationAction = {}))
        }
        ,
        509: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CheckoutNativeRedirectAction = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CheckoutNativeRedirectAction = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "data",
                baseName: "data",
                type: "{ [key: string]: string; }"
            }, {
                name: "method",
                baseName: "method",
                type: "string"
            }, {
                name: "nativeRedirectData",
                baseName: "nativeRedirectData",
                type: "string"
            }, {
                name: "paymentMethodType",
                baseName: "paymentMethodType",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "CheckoutNativeRedirectAction.TypeEnum"
            }, {
                name: "url",
                baseName: "url",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.NativeRedirect = "nativeRedirect"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.CheckoutNativeRedirectAction || (t.CheckoutNativeRedirectAction = {}))
        }
        ,
        40537: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CheckoutOrderResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CheckoutOrderResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "expiresAt",
                baseName: "expiresAt",
                type: "string"
            }, {
                name: "orderData",
                baseName: "orderData",
                type: "string"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "remainingAmount",
                baseName: "remainingAmount",
                type: "Amount"
            }]
        }
        ,
        39312: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CheckoutQrCodeAction = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CheckoutQrCodeAction = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "expiresAt",
                baseName: "expiresAt",
                type: "string"
            }, {
                name: "paymentData",
                baseName: "paymentData",
                type: "string"
            }, {
                name: "paymentMethodType",
                baseName: "paymentMethodType",
                type: "string"
            }, {
                name: "qrCodeData",
                baseName: "qrCodeData",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "CheckoutQrCodeAction.TypeEnum"
            }, {
                name: "url",
                baseName: "url",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.QrCode = "qrCode"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.CheckoutQrCodeAction || (t.CheckoutQrCodeAction = {}))
        }
        ,
        8850: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CheckoutRedirectAction = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CheckoutRedirectAction = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "data",
                baseName: "data",
                type: "{ [key: string]: string; }"
            }, {
                name: "method",
                baseName: "method",
                type: "string"
            }, {
                name: "paymentMethodType",
                baseName: "paymentMethodType",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "CheckoutRedirectAction.TypeEnum"
            }, {
                name: "url",
                baseName: "url",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Redirect = "redirect"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.CheckoutRedirectAction || (t.CheckoutRedirectAction = {}))
        }
        ,
        62388: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CheckoutSDKAction = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CheckoutSDKAction = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "paymentData",
                baseName: "paymentData",
                type: "string"
            }, {
                name: "paymentMethodType",
                baseName: "paymentMethodType",
                type: "string"
            }, {
                name: "sdkData",
                baseName: "sdkData",
                type: "{ [key: string]: string; }"
            }, {
                name: "type",
                baseName: "type",
                type: "CheckoutSDKAction.TypeEnum"
            }, {
                name: "url",
                baseName: "url",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Sdk = "sdk",
                    e.WechatpaySdk = "wechatpaySDK"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.CheckoutSDKAction || (t.CheckoutSDKAction = {}))
        }
        ,
        60254: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CheckoutSessionInstallmentOption = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CheckoutSessionInstallmentOption = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "plans",
                baseName: "plans",
                type: "Array<CheckoutSessionInstallmentOption.PlansEnum>"
            }, {
                name: "preselectedValue",
                baseName: "preselectedValue",
                type: "number"
            }, {
                name: "values",
                baseName: "values",
                type: "Array<number>"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.BuynowPaylater = "buynow_paylater",
                    e.InteresRefundPrctg = "interes_refund_prctg",
                    e.InterestBonus = "interest_bonus",
                    e.NointeresRefundPrctg = "nointeres_refund_prctg",
                    e.NointerestBonus = "nointerest_bonus",
                    e.RefundPrctg = "refund_prctg",
                    e.Regular = "regular",
                    e.Revolving = "revolving",
                    e.WithInterest = "with_interest"
                }(t = e.PlansEnum || (e.PlansEnum = {}))
            }(a = t.CheckoutSessionInstallmentOption || (t.CheckoutSessionInstallmentOption = {}))
        }
        ,
        56983: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CheckoutThreeDS2Action = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CheckoutThreeDS2Action = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "authorisationToken",
                baseName: "authorisationToken",
                type: "string"
            }, {
                name: "paymentData",
                baseName: "paymentData",
                type: "string"
            }, {
                name: "paymentMethodType",
                baseName: "paymentMethodType",
                type: "string"
            }, {
                name: "subtype",
                baseName: "subtype",
                type: "string"
            }, {
                name: "token",
                baseName: "token",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "CheckoutThreeDS2Action.TypeEnum"
            }, {
                name: "url",
                baseName: "url",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.ThreeDs2 = "threeDS2"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.CheckoutThreeDS2Action || (t.CheckoutThreeDS2Action = {}))
        }
        ,
        89834: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CheckoutVoucherAction = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CheckoutVoucherAction = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "alternativeReference",
                baseName: "alternativeReference",
                type: "string"
            }, {
                name: "collectionInstitutionNumber",
                baseName: "collectionInstitutionNumber",
                type: "string"
            }, {
                name: "downloadUrl",
                baseName: "downloadUrl",
                type: "string"
            }, {
                name: "entity",
                baseName: "entity",
                type: "string"
            }, {
                name: "expiresAt",
                baseName: "expiresAt",
                type: "string"
            }, {
                name: "initialAmount",
                baseName: "initialAmount",
                type: "Amount"
            }, {
                name: "instructionsUrl",
                baseName: "instructionsUrl",
                type: "string"
            }, {
                name: "issuer",
                baseName: "issuer",
                type: "string"
            }, {
                name: "maskedTelephoneNumber",
                baseName: "maskedTelephoneNumber",
                type: "string"
            }, {
                name: "merchantName",
                baseName: "merchantName",
                type: "string"
            }, {
                name: "merchantReference",
                baseName: "merchantReference",
                type: "string"
            }, {
                name: "passCreationToken",
                baseName: "passCreationToken",
                type: "string"
            }, {
                name: "paymentData",
                baseName: "paymentData",
                type: "string"
            }, {
                name: "paymentMethodType",
                baseName: "paymentMethodType",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperName",
                baseName: "shopperName",
                type: "string"
            }, {
                name: "surcharge",
                baseName: "surcharge",
                type: "Amount"
            }, {
                name: "totalAmount",
                baseName: "totalAmount",
                type: "Amount"
            }, {
                name: "type",
                baseName: "type",
                type: "CheckoutVoucherAction.TypeEnum"
            }, {
                name: "url",
                baseName: "url",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Voucher = "voucher"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.CheckoutVoucherAction || (t.CheckoutVoucherAction = {}))
        }
        ,
        19405: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CommonField = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CommonField = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "name",
                baseName: "name",
                type: "string"
            }, {
                name: "version",
                baseName: "version",
                type: "string"
            }]
        }
        ,
        94233: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Company = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Company = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "homepage",
                baseName: "homepage",
                type: "string"
            }, {
                name: "name",
                baseName: "name",
                type: "string"
            }, {
                name: "registrationNumber",
                baseName: "registrationNumber",
                type: "string"
            }, {
                name: "registryLocation",
                baseName: "registryLocation",
                type: "string"
            }, {
                name: "taxId",
                baseName: "taxId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "string"
            }]
        }
        ,
        54476: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Configuration = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Configuration = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "avs",
                baseName: "avs",
                type: "Avs"
            }, {
                name: "cardHolderName",
                baseName: "cardHolderName",
                type: "Configuration.CardHolderNameEnum"
            }, {
                name: "installments",
                baseName: "installments",
                type: "InstallmentsNumber"
            }, {
                name: "shopperInput",
                baseName: "shopperInput",
                type: "ShopperInput"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.None = "NONE",
                    e.Optional = "OPTIONAL",
                    e.Required = "REQUIRED"
                }(t = e.CardHolderNameEnum || (e.CardHolderNameEnum = {}))
            }(a = t.Configuration || (t.Configuration = {}))
        }
        ,
        78245: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CreateCheckoutSessionRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CreateCheckoutSessionRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "accountInfo",
                baseName: "accountInfo",
                type: "AccountInfo"
            }, {
                name: "additionalAmount",
                baseName: "additionalAmount",
                type: "Amount"
            }, {
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "allowedPaymentMethods",
                baseName: "allowedPaymentMethods",
                type: "Array<string>"
            }, {
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "authenticationData",
                baseName: "authenticationData",
                type: "AuthenticationData"
            }, {
                name: "billingAddress",
                baseName: "billingAddress",
                type: "BillingAddress"
            }, {
                name: "blockedPaymentMethods",
                baseName: "blockedPaymentMethods",
                type: "Array<string>"
            }, {
                name: "captureDelayHours",
                baseName: "captureDelayHours",
                type: "number"
            }, {
                name: "channel",
                baseName: "channel",
                type: "CreateCheckoutSessionRequest.ChannelEnum"
            }, {
                name: "company",
                baseName: "company",
                type: "Company"
            }, {
                name: "countryCode",
                baseName: "countryCode",
                type: "string"
            }, {
                name: "dateOfBirth",
                baseName: "dateOfBirth",
                type: "string"
            }, {
                name: "deliverAt",
                baseName: "deliverAt",
                type: "Date"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "DeliveryAddress"
            }, {
                name: "enableOneClick",
                baseName: "enableOneClick",
                type: "boolean"
            }, {
                name: "enablePayOut",
                baseName: "enablePayOut",
                type: "boolean"
            }, {
                name: "enableRecurring",
                baseName: "enableRecurring",
                type: "boolean"
            }, {
                name: "expiresAt",
                baseName: "expiresAt",
                type: "Date"
            }, {
                name: "fundOrigin",
                baseName: "fundOrigin",
                type: "FundOrigin"
            }, {
                name: "fundRecipient",
                baseName: "fundRecipient",
                type: "FundRecipient"
            }, {
                name: "installmentOptions",
                baseName: "installmentOptions",
                type: "{ [key: string]: CheckoutSessionInstallmentOption; }"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "mandate",
                baseName: "mandate",
                type: "Mandate"
            }, {
                name: "mcc",
                baseName: "mcc",
                type: "string"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "merchantOrderReference",
                baseName: "merchantOrderReference",
                type: "string"
            }, {
                name: "metadata",
                baseName: "metadata",
                type: "{ [key: string]: string; }"
            }, {
                name: "mode",
                baseName: "mode",
                type: "CreateCheckoutSessionRequest.ModeEnum"
            }, {
                name: "mpiData",
                baseName: "mpiData",
                type: "ThreeDSecureData"
            }, {
                name: "platformChargebackLogic",
                baseName: "platformChargebackLogic",
                type: "PlatformChargebackLogic"
            }, {
                name: "recurringExpiry",
                baseName: "recurringExpiry",
                type: "string"
            }, {
                name: "recurringFrequency",
                baseName: "recurringFrequency",
                type: "string"
            }, {
                name: "recurringProcessingModel",
                baseName: "recurringProcessingModel",
                type: "CreateCheckoutSessionRequest.RecurringProcessingModelEnum"
            }, {
                name: "redirectFromIssuerMethod",
                baseName: "redirectFromIssuerMethod",
                type: "string"
            }, {
                name: "redirectToIssuerMethod",
                baseName: "redirectToIssuerMethod",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "returnUrl",
                baseName: "returnUrl",
                type: "string"
            }, {
                name: "riskData",
                baseName: "riskData",
                type: "RiskData"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperIP",
                baseName: "shopperIP",
                type: "string"
            }, {
                name: "shopperInteraction",
                baseName: "shopperInteraction",
                type: "CreateCheckoutSessionRequest.ShopperInteractionEnum"
            }, {
                name: "shopperLocale",
                baseName: "shopperLocale",
                type: "string"
            }, {
                name: "shopperName",
                baseName: "shopperName",
                type: "Name"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "shopperStatement",
                baseName: "shopperStatement",
                type: "string"
            }, {
                name: "showInstallmentAmount",
                baseName: "showInstallmentAmount",
                type: "boolean"
            }, {
                name: "showRemovePaymentMethodButton",
                baseName: "showRemovePaymentMethodButton",
                type: "boolean"
            }, {
                name: "socialSecurityNumber",
                baseName: "socialSecurityNumber",
                type: "string"
            }, {
                name: "splitCardFundingSources",
                baseName: "splitCardFundingSources",
                type: "boolean"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }, {
                name: "store",
                baseName: "store",
                type: "string"
            }, {
                name: "storePaymentMethod",
                baseName: "storePaymentMethod",
                type: "boolean"
            }, {
                name: "storePaymentMethodMode",
                baseName: "storePaymentMethodMode",
                type: "CreateCheckoutSessionRequest.StorePaymentMethodModeEnum"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "themeId",
                baseName: "themeId",
                type: "string"
            }, {
                name: "threeDSAuthenticationOnly",
                baseName: "threeDSAuthenticationOnly",
                type: "boolean"
            }, {
                name: "trustedShopper",
                baseName: "trustedShopper",
                type: "boolean"
            }],
            function(e) {
                let t, a, n, i, s;
                !function(e) {
                    e.IOs = "iOS",
                    e.Android = "Android",
                    e.Web = "Web"
                }(t = e.ChannelEnum || (e.ChannelEnum = {})),
                function(e) {
                    e.Embedded = "embedded",
                    e.Hosted = "hosted"
                }(a = e.ModeEnum || (e.ModeEnum = {})),
                function(e) {
                    e.CardOnFile = "CardOnFile",
                    e.Subscription = "Subscription",
                    e.UnscheduledCardOnFile = "UnscheduledCardOnFile"
                }(n = e.RecurringProcessingModelEnum || (e.RecurringProcessingModelEnum = {})),
                function(e) {
                    e.Ecommerce = "Ecommerce",
                    e.ContAuth = "ContAuth",
                    e.Moto = "Moto",
                    e.Pos = "POS"
                }(i = e.ShopperInteractionEnum || (e.ShopperInteractionEnum = {})),
                function(e) {
                    e.AskForConsent = "askForConsent",
                    e.Disabled = "disabled",
                    e.Enabled = "enabled"
                }(s = e.StorePaymentMethodModeEnum || (e.StorePaymentMethodModeEnum = {}))
            }(a = t.CreateCheckoutSessionRequest || (t.CreateCheckoutSessionRequest = {}))
        }
        ,
        98721: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CreateCheckoutSessionResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CreateCheckoutSessionResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "accountInfo",
                baseName: "accountInfo",
                type: "AccountInfo"
            }, {
                name: "additionalAmount",
                baseName: "additionalAmount",
                type: "Amount"
            }, {
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "allowedPaymentMethods",
                baseName: "allowedPaymentMethods",
                type: "Array<string>"
            }, {
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "authenticationData",
                baseName: "authenticationData",
                type: "AuthenticationData"
            }, {
                name: "billingAddress",
                baseName: "billingAddress",
                type: "BillingAddress"
            }, {
                name: "blockedPaymentMethods",
                baseName: "blockedPaymentMethods",
                type: "Array<string>"
            }, {
                name: "captureDelayHours",
                baseName: "captureDelayHours",
                type: "number"
            }, {
                name: "channel",
                baseName: "channel",
                type: "CreateCheckoutSessionResponse.ChannelEnum"
            }, {
                name: "company",
                baseName: "company",
                type: "Company"
            }, {
                name: "countryCode",
                baseName: "countryCode",
                type: "string"
            }, {
                name: "dateOfBirth",
                baseName: "dateOfBirth",
                type: "Date"
            }, {
                name: "deliverAt",
                baseName: "deliverAt",
                type: "Date"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "DeliveryAddress"
            }, {
                name: "enableOneClick",
                baseName: "enableOneClick",
                type: "boolean"
            }, {
                name: "enablePayOut",
                baseName: "enablePayOut",
                type: "boolean"
            }, {
                name: "enableRecurring",
                baseName: "enableRecurring",
                type: "boolean"
            }, {
                name: "expiresAt",
                baseName: "expiresAt",
                type: "Date"
            }, {
                name: "fundOrigin",
                baseName: "fundOrigin",
                type: "FundOrigin"
            }, {
                name: "fundRecipient",
                baseName: "fundRecipient",
                type: "FundRecipient"
            }, {
                name: "id",
                baseName: "id",
                type: "string"
            }, {
                name: "installmentOptions",
                baseName: "installmentOptions",
                type: "{ [key: string]: CheckoutSessionInstallmentOption; }"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "mandate",
                baseName: "mandate",
                type: "Mandate"
            }, {
                name: "mcc",
                baseName: "mcc",
                type: "string"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "merchantOrderReference",
                baseName: "merchantOrderReference",
                type: "string"
            }, {
                name: "metadata",
                baseName: "metadata",
                type: "{ [key: string]: string; }"
            }, {
                name: "mode",
                baseName: "mode",
                type: "CreateCheckoutSessionResponse.ModeEnum"
            }, {
                name: "mpiData",
                baseName: "mpiData",
                type: "ThreeDSecureData"
            }, {
                name: "platformChargebackLogic",
                baseName: "platformChargebackLogic",
                type: "PlatformChargebackLogic"
            }, {
                name: "recurringExpiry",
                baseName: "recurringExpiry",
                type: "string"
            }, {
                name: "recurringFrequency",
                baseName: "recurringFrequency",
                type: "string"
            }, {
                name: "recurringProcessingModel",
                baseName: "recurringProcessingModel",
                type: "CreateCheckoutSessionResponse.RecurringProcessingModelEnum"
            }, {
                name: "redirectFromIssuerMethod",
                baseName: "redirectFromIssuerMethod",
                type: "string"
            }, {
                name: "redirectToIssuerMethod",
                baseName: "redirectToIssuerMethod",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "returnUrl",
                baseName: "returnUrl",
                type: "string"
            }, {
                name: "riskData",
                baseName: "riskData",
                type: "RiskData"
            }, {
                name: "sessionData",
                baseName: "sessionData",
                type: "string"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperIP",
                baseName: "shopperIP",
                type: "string"
            }, {
                name: "shopperInteraction",
                baseName: "shopperInteraction",
                type: "CreateCheckoutSessionResponse.ShopperInteractionEnum"
            }, {
                name: "shopperLocale",
                baseName: "shopperLocale",
                type: "string"
            }, {
                name: "shopperName",
                baseName: "shopperName",
                type: "Name"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "shopperStatement",
                baseName: "shopperStatement",
                type: "string"
            }, {
                name: "showInstallmentAmount",
                baseName: "showInstallmentAmount",
                type: "boolean"
            }, {
                name: "showRemovePaymentMethodButton",
                baseName: "showRemovePaymentMethodButton",
                type: "boolean"
            }, {
                name: "socialSecurityNumber",
                baseName: "socialSecurityNumber",
                type: "string"
            }, {
                name: "splitCardFundingSources",
                baseName: "splitCardFundingSources",
                type: "boolean"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }, {
                name: "store",
                baseName: "store",
                type: "string"
            }, {
                name: "storePaymentMethod",
                baseName: "storePaymentMethod",
                type: "boolean"
            }, {
                name: "storePaymentMethodMode",
                baseName: "storePaymentMethodMode",
                type: "CreateCheckoutSessionResponse.StorePaymentMethodModeEnum"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "themeId",
                baseName: "themeId",
                type: "string"
            }, {
                name: "threeDSAuthenticationOnly",
                baseName: "threeDSAuthenticationOnly",
                type: "boolean"
            }, {
                name: "trustedShopper",
                baseName: "trustedShopper",
                type: "boolean"
            }, {
                name: "url",
                baseName: "url",
                type: "string"
            }],
            function(e) {
                let t, a, n, i, s;
                !function(e) {
                    e.IOs = "iOS",
                    e.Android = "Android",
                    e.Web = "Web"
                }(t = e.ChannelEnum || (e.ChannelEnum = {})),
                function(e) {
                    e.Embedded = "embedded",
                    e.Hosted = "hosted"
                }(a = e.ModeEnum || (e.ModeEnum = {})),
                function(e) {
                    e.CardOnFile = "CardOnFile",
                    e.Subscription = "Subscription",
                    e.UnscheduledCardOnFile = "UnscheduledCardOnFile"
                }(n = e.RecurringProcessingModelEnum || (e.RecurringProcessingModelEnum = {})),
                function(e) {
                    e.Ecommerce = "Ecommerce",
                    e.ContAuth = "ContAuth",
                    e.Moto = "Moto",
                    e.Pos = "POS"
                }(i = e.ShopperInteractionEnum || (e.ShopperInteractionEnum = {})),
                function(e) {
                    e.AskForConsent = "askForConsent",
                    e.Disabled = "disabled",
                    e.Enabled = "enabled"
                }(s = e.StorePaymentMethodModeEnum || (e.StorePaymentMethodModeEnum = {}))
            }(a = t.CreateCheckoutSessionResponse || (t.CreateCheckoutSessionResponse = {}))
        }
        ,
        22049: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CreateOrderRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CreateOrderRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "expiresAt",
                baseName: "expiresAt",
                type: "string"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }]
        }
        ,
        40277: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.CreateOrderResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.CreateOrderResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "expiresAt",
                baseName: "expiresAt",
                type: "string"
            }, {
                name: "fraudResult",
                baseName: "fraudResult",
                type: "FraudResult"
            }, {
                name: "orderData",
                baseName: "orderData",
                type: "string"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "refusalReason",
                baseName: "refusalReason",
                type: "string"
            }, {
                name: "remainingAmount",
                baseName: "remainingAmount",
                type: "Amount"
            }, {
                name: "resultCode",
                baseName: "resultCode",
                type: "CreateOrderResponse.ResultCodeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Success = "Success"
                }(t = e.ResultCodeEnum || (e.ResultCodeEnum = {}))
            }(a = t.CreateOrderResponse || (t.CreateOrderResponse = {}))
        }
        ,
        58686: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.DeliveryAddress = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.DeliveryAddress = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "city",
                baseName: "city",
                type: "string"
            }, {
                name: "country",
                baseName: "country",
                type: "string"
            }, {
                name: "firstName",
                baseName: "firstName",
                type: "string"
            }, {
                name: "houseNumberOrName",
                baseName: "houseNumberOrName",
                type: "string"
            }, {
                name: "lastName",
                baseName: "lastName",
                type: "string"
            }, {
                name: "postalCode",
                baseName: "postalCode",
                type: "string"
            }, {
                name: "stateOrProvince",
                baseName: "stateOrProvince",
                type: "string"
            }, {
                name: "street",
                baseName: "street",
                type: "string"
            }]
        }
        ,
        81993: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.DeliveryMethod = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.DeliveryMethod = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "description",
                baseName: "description",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "selected",
                baseName: "selected",
                type: "boolean"
            }, {
                name: "type",
                baseName: "type",
                type: "DeliveryMethod.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Shipping = "Shipping"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.DeliveryMethod || (t.DeliveryMethod = {}))
        }
        ,
        83427: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.DetailsRequestAuthenticationData = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.DetailsRequestAuthenticationData = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "authenticationOnly",
                baseName: "authenticationOnly",
                type: "boolean"
            }]
        }
        ,
        30814: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.DeviceRenderOptions = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.DeviceRenderOptions = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "sdkInterface",
                baseName: "sdkInterface",
                type: "DeviceRenderOptions.SdkInterfaceEnum"
            }, {
                name: "sdkUiType",
                baseName: "sdkUiType",
                type: "Array<DeviceRenderOptions.SdkUiTypeEnum>"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Native = "native",
                    e.Html = "html",
                    e.Both = "both"
                }(t = e.SdkInterfaceEnum || (e.SdkInterfaceEnum = {})),
                function(e) {
                    e.MultiSelect = "multiSelect",
                    e.OtherHtml = "otherHtml",
                    e.OutOfBand = "outOfBand",
                    e.SingleSelect = "singleSelect",
                    e.Text = "text"
                }(a = e.SdkUiTypeEnum || (e.SdkUiTypeEnum = {}))
            }(a = t.DeviceRenderOptions || (t.DeviceRenderOptions = {}))
        }
        ,
        63479: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.DokuDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.DokuDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "firstName",
                baseName: "firstName",
                type: "string"
            }, {
                name: "lastName",
                baseName: "lastName",
                type: "string"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "DokuDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.MandiriVa = "doku_mandiri_va",
                    e.CimbVa = "doku_cimb_va",
                    e.DanamonVa = "doku_danamon_va",
                    e.BniVa = "doku_bni_va",
                    e.PermataLiteAtm = "doku_permata_lite_atm",
                    e.BriVa = "doku_bri_va",
                    e.BcaVa = "doku_bca_va",
                    e.Alfamart = "doku_alfamart",
                    e.Indomaret = "doku_indomaret",
                    e.Wallet = "doku_wallet",
                    e.Ovo = "doku_ovo"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.DokuDetails || (t.DokuDetails = {}))
        }
        ,
        60149: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.DonationPaymentRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.DonationPaymentRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "accountInfo",
                baseName: "accountInfo",
                type: "AccountInfo"
            }, {
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "authenticationData",
                baseName: "authenticationData",
                type: "AuthenticationData"
            }, {
                name: "billingAddress",
                baseName: "billingAddress",
                type: "BillingAddress"
            }, {
                name: "browserInfo",
                baseName: "browserInfo",
                type: "BrowserInfo"
            }, {
                name: "channel",
                baseName: "channel",
                type: "DonationPaymentRequest.ChannelEnum"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "conversionId",
                baseName: "conversionId",
                type: "string"
            }, {
                name: "countryCode",
                baseName: "countryCode",
                type: "string"
            }, {
                name: "dateOfBirth",
                baseName: "dateOfBirth",
                type: "Date"
            }, {
                name: "deliverAt",
                baseName: "deliverAt",
                type: "Date"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "DeliveryAddress"
            }, {
                name: "deviceFingerprint",
                baseName: "deviceFingerprint",
                type: "string"
            }, {
                name: "donationAccount",
                baseName: "donationAccount",
                type: "string"
            }, {
                name: "donationOriginalPspReference",
                baseName: "donationOriginalPspReference",
                type: "string"
            }, {
                name: "donationToken",
                baseName: "donationToken",
                type: "string"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "merchantRiskIndicator",
                baseName: "merchantRiskIndicator",
                type: "MerchantRiskIndicator"
            }, {
                name: "metadata",
                baseName: "metadata",
                type: "{ [key: string]: string; }"
            }, {
                name: "mpiData",
                baseName: "mpiData",
                type: "ThreeDSecureData"
            }, {
                name: "origin",
                baseName: "origin",
                type: "string"
            }, {
                name: "paymentMethod",
                baseName: "paymentMethod",
                type: "ApplePayDonations | CardDonations | GooglePayDonations | IdealDonations | PayWithGoogleDonations | null"
            }, {
                name: "recurringProcessingModel",
                baseName: "recurringProcessingModel",
                type: "DonationPaymentRequest.RecurringProcessingModelEnum"
            }, {
                name: "redirectFromIssuerMethod",
                baseName: "redirectFromIssuerMethod",
                type: "string"
            }, {
                name: "redirectToIssuerMethod",
                baseName: "redirectToIssuerMethod",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "returnUrl",
                baseName: "returnUrl",
                type: "string"
            }, {
                name: "sessionValidity",
                baseName: "sessionValidity",
                type: "string"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperIP",
                baseName: "shopperIP",
                type: "string"
            }, {
                name: "shopperInteraction",
                baseName: "shopperInteraction",
                type: "DonationPaymentRequest.ShopperInteractionEnum"
            }, {
                name: "shopperLocale",
                baseName: "shopperLocale",
                type: "string"
            }, {
                name: "shopperName",
                baseName: "shopperName",
                type: "Name"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "socialSecurityNumber",
                baseName: "socialSecurityNumber",
                type: "string"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "threeDS2RequestData",
                baseName: "threeDS2RequestData",
                type: "ThreeDS2RequestFields"
            }, {
                name: "threeDSAuthenticationOnly",
                baseName: "threeDSAuthenticationOnly",
                type: "boolean"
            }],
            function(e) {
                let t, a, n;
                !function(e) {
                    e.IOs = "iOS",
                    e.Android = "Android",
                    e.Web = "Web"
                }(t = e.ChannelEnum || (e.ChannelEnum = {})),
                function(e) {
                    e.CardOnFile = "CardOnFile",
                    e.Subscription = "Subscription",
                    e.UnscheduledCardOnFile = "UnscheduledCardOnFile"
                }(a = e.RecurringProcessingModelEnum || (e.RecurringProcessingModelEnum = {})),
                function(e) {
                    e.Ecommerce = "Ecommerce",
                    e.ContAuth = "ContAuth",
                    e.Moto = "Moto",
                    e.Pos = "POS"
                }(n = e.ShopperInteractionEnum || (e.ShopperInteractionEnum = {}))
            }(a = t.DonationPaymentRequest || (t.DonationPaymentRequest = {}))
        }
        ,
        42865: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.DonationPaymentResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.DonationPaymentResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "donationAccount",
                baseName: "donationAccount",
                type: "string"
            }, {
                name: "id",
                baseName: "id",
                type: "string"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "payment",
                baseName: "payment",
                type: "PaymentResponse"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "status",
                baseName: "status",
                type: "DonationPaymentResponse.StatusEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Completed = "completed",
                    e.Pending = "pending",
                    e.Refused = "refused"
                }(t = e.StatusEnum || (e.StatusEnum = {}))
            }(a = t.DonationPaymentResponse || (t.DonationPaymentResponse = {}))
        }
        ,
        62085: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.DotpayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.DotpayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "issuer",
                baseName: "issuer",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "DotpayDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Dotpay = "dotpay"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.DotpayDetails || (t.DotpayDetails = {}))
        }
        ,
        90027: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.DragonpayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.DragonpayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "issuer",
                baseName: "issuer",
                type: "string"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "DragonpayDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Ebanking = "dragonpay_ebanking",
                    e.OtcBanking = "dragonpay_otc_banking",
                    e.OtcNonBanking = "dragonpay_otc_non_banking",
                    e.OtcPhilippines = "dragonpay_otc_philippines"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.DragonpayDetails || (t.DragonpayDetails = {}))
        }
        ,
        51118: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.EcontextVoucherDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.EcontextVoucherDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "firstName",
                baseName: "firstName",
                type: "string"
            }, {
                name: "lastName",
                baseName: "lastName",
                type: "string"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "EcontextVoucherDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Seveneleven = "econtext_seveneleven",
                    e.Stores = "econtext_stores"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.EcontextVoucherDetails || (t.EcontextVoucherDetails = {}))
        }
        ,
        61268: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.EncryptedOrderData = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.EncryptedOrderData = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "orderData",
                baseName: "orderData",
                type: "string"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }]
        }
        ,
        58876: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ExternalPlatform = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ExternalPlatform = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "integrator",
                baseName: "integrator",
                type: "string"
            }, {
                name: "name",
                baseName: "name",
                type: "string"
            }, {
                name: "version",
                baseName: "version",
                type: "string"
            }]
        }
        ,
        4370: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ForexQuote = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ForexQuote = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "account",
                baseName: "account",
                type: "string"
            }, {
                name: "accountType",
                baseName: "accountType",
                type: "string"
            }, {
                name: "baseAmount",
                baseName: "baseAmount",
                type: "Amount"
            }, {
                name: "basePoints",
                baseName: "basePoints",
                type: "number"
            }, {
                name: "buy",
                baseName: "buy",
                type: "Amount"
            }, {
                name: "interbank",
                baseName: "interbank",
                type: "Amount"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "sell",
                baseName: "sell",
                type: "Amount"
            }, {
                name: "signature",
                baseName: "signature",
                type: "string"
            }, {
                name: "source",
                baseName: "source",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "string"
            }, {
                name: "validTill",
                baseName: "validTill",
                type: "Date"
            }]
        }
        ,
        73831: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.FraudCheckResult = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.FraudCheckResult = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "accountScore",
                baseName: "accountScore",
                type: "number"
            }, {
                name: "checkId",
                baseName: "checkId",
                type: "number"
            }, {
                name: "name",
                baseName: "name",
                type: "string"
            }]
        }
        ,
        41705: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.FraudResult = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.FraudResult = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "accountScore",
                baseName: "accountScore",
                type: "number"
            }, {
                name: "results",
                baseName: "results",
                type: "Array<FraudCheckResult>"
            }]
        }
        ,
        72141: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.FundOrigin = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.FundOrigin = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "billingAddress",
                baseName: "billingAddress",
                type: "Address"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperName",
                baseName: "shopperName",
                type: "Name"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "walletIdentifier",
                baseName: "walletIdentifier",
                type: "string"
            }]
        }
        ,
        99732: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.FundRecipient = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.FundRecipient = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "billingAddress",
                baseName: "billingAddress",
                type: "Address"
            }, {
                name: "paymentMethod",
                baseName: "paymentMethod",
                type: "CardDetails"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperName",
                baseName: "shopperName",
                type: "Name"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "subMerchant",
                baseName: "subMerchant",
                type: "SubMerchant"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "walletIdentifier",
                baseName: "walletIdentifier",
                type: "string"
            }, {
                name: "walletOwnerTaxId",
                baseName: "walletOwnerTaxId",
                type: "string"
            }]
        }
        ,
        26059: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.GenericIssuerPaymentMethodDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.GenericIssuerPaymentMethodDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "issuer",
                baseName: "issuer",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "GenericIssuerPaymentMethodDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.OnlineBankingPl = "onlineBanking_PL",
                    e.Eps = "eps",
                    e.OnlineBankingSk = "onlineBanking_SK",
                    e.OnlineBankingCz = "onlineBanking_CZ"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.GenericIssuerPaymentMethodDetails || (t.GenericIssuerPaymentMethodDetails = {}))
        }
        ,
        27311: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.GiropayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.GiropayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "GiropayDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Giropay = "giropay"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.GiropayDetails || (t.GiropayDetails = {}))
        }
        ,
        11923: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.GooglePayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.GooglePayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "GooglePayDetails.FundingSourceEnum"
            }, {
                name: "googlePayCardNetwork",
                baseName: "googlePayCardNetwork",
                type: "string"
            }, {
                name: "googlePayToken",
                baseName: "googlePayToken",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "GooglePayDetails.TypeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {})),
                function(e) {
                    e.Googlepay = "googlepay"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.GooglePayDetails || (t.GooglePayDetails = {}))
        }
        ,
        25110: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.GooglePayDonations = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.GooglePayDonations = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "GooglePayDonations.FundingSourceEnum"
            }, {
                name: "googlePayCardNetwork",
                baseName: "googlePayCardNetwork",
                type: "string"
            }, {
                name: "googlePayToken",
                baseName: "googlePayToken",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "GooglePayDonations.TypeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {})),
                function(e) {
                    e.Googlepay = "googlepay"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.GooglePayDonations || (t.GooglePayDonations = {}))
        }
        ,
        26241: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.IdealDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.IdealDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "issuer",
                baseName: "issuer",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "IdealDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Ideal = "ideal"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.IdealDetails || (t.IdealDetails = {}))
        }
        ,
        91188: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.IdealDonations = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.IdealDonations = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "issuer",
                baseName: "issuer",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "IdealDonations.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Ideal = "ideal"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.IdealDonations || (t.IdealDonations = {}))
        }
        ,
        86779: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.InputDetail = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.InputDetail = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "configuration",
                baseName: "configuration",
                type: "{ [key: string]: string; }"
            }, {
                name: "details",
                baseName: "details",
                type: "Array<SubInputDetail>"
            }, {
                name: "inputDetails",
                baseName: "inputDetails",
                type: "Array<SubInputDetail>"
            }, {
                name: "itemSearchUrl",
                baseName: "itemSearchUrl",
                type: "string"
            }, {
                name: "items",
                baseName: "items",
                type: "Array<Item>"
            }, {
                name: "key",
                baseName: "key",
                type: "string"
            }, {
                name: "optional",
                baseName: "optional",
                type: "boolean"
            }, {
                name: "type",
                baseName: "type",
                type: "string"
            }, {
                name: "value",
                baseName: "value",
                type: "string"
            }]
        }
        ,
        78576: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.InstallmentOption = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.InstallmentOption = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "maxValue",
                baseName: "maxValue",
                type: "number"
            }, {
                name: "plans",
                baseName: "plans",
                type: "Array<InstallmentOption.PlansEnum>"
            }, {
                name: "preselectedValue",
                baseName: "preselectedValue",
                type: "number"
            }, {
                name: "values",
                baseName: "values",
                type: "Array<number>"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.BuynowPaylater = "buynow_paylater",
                    e.InteresRefundPrctg = "interes_refund_prctg",
                    e.InterestBonus = "interest_bonus",
                    e.NointeresRefundPrctg = "nointeres_refund_prctg",
                    e.NointerestBonus = "nointerest_bonus",
                    e.RefundPrctg = "refund_prctg",
                    e.Regular = "regular",
                    e.Revolving = "revolving",
                    e.WithInterest = "with_interest"
                }(t = e.PlansEnum || (e.PlansEnum = {}))
            }(a = t.InstallmentOption || (t.InstallmentOption = {}))
        }
        ,
        27636: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Installments = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Installments = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "extra",
                baseName: "extra",
                type: "number"
            }, {
                name: "plan",
                baseName: "plan",
                type: "Installments.PlanEnum"
            }, {
                name: "value",
                baseName: "value",
                type: "number"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.BuynowPaylater = "buynow_paylater",
                    e.InteresRefundPrctg = "interes_refund_prctg",
                    e.InterestBonus = "interest_bonus",
                    e.NointeresRefundPrctg = "nointeres_refund_prctg",
                    e.NointerestBonus = "nointerest_bonus",
                    e.RefundPrctg = "refund_prctg",
                    e.Regular = "regular",
                    e.Revolving = "revolving",
                    e.WithInterest = "with_interest"
                }(t = e.PlanEnum || (e.PlanEnum = {}))
            }(a = t.Installments || (t.Installments = {}))
        }
        ,
        10081: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.InstallmentsNumber = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.InstallmentsNumber = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "maxNumberOfInstallments",
                baseName: "maxNumberOfInstallments",
                type: "number"
            }]
        }
        ,
        59399: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Item = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Item = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "id",
                baseName: "id",
                type: "string"
            }, {
                name: "name",
                baseName: "name",
                type: "string"
            }]
        }
        ,
        8879: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.KlarnaDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.KlarnaDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "billingAddress",
                baseName: "billingAddress",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "string"
            }, {
                name: "personalDetails",
                baseName: "personalDetails",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "subtype",
                baseName: "subtype",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "KlarnaDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Klarna = "klarna",
                    e.Klarnapayments = "klarnapayments",
                    e.KlarnapaymentsAccount = "klarnapayments_account",
                    e.KlarnapaymentsB2b = "klarnapayments_b2b",
                    e.KlarnaPaynow = "klarna_paynow",
                    e.KlarnaAccount = "klarna_account",
                    e.KlarnaB2b = "klarna_b2b"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.KlarnaDetails || (t.KlarnaDetails = {}))
        }
        ,
        24609: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.LineItem = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.LineItem = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amountExcludingTax",
                baseName: "amountExcludingTax",
                type: "number"
            }, {
                name: "amountIncludingTax",
                baseName: "amountIncludingTax",
                type: "number"
            }, {
                name: "brand",
                baseName: "brand",
                type: "string"
            }, {
                name: "color",
                baseName: "color",
                type: "string"
            }, {
                name: "description",
                baseName: "description",
                type: "string"
            }, {
                name: "id",
                baseName: "id",
                type: "string"
            }, {
                name: "imageUrl",
                baseName: "imageUrl",
                type: "string"
            }, {
                name: "itemCategory",
                baseName: "itemCategory",
                type: "string"
            }, {
                name: "manufacturer",
                baseName: "manufacturer",
                type: "string"
            }, {
                name: "productUrl",
                baseName: "productUrl",
                type: "string"
            }, {
                name: "quantity",
                baseName: "quantity",
                type: "number"
            }, {
                name: "receiverEmail",
                baseName: "receiverEmail",
                type: "string"
            }, {
                name: "size",
                baseName: "size",
                type: "string"
            }, {
                name: "sku",
                baseName: "sku",
                type: "string"
            }, {
                name: "taxAmount",
                baseName: "taxAmount",
                type: "number"
            }, {
                name: "taxPercentage",
                baseName: "taxPercentage",
                type: "number"
            }, {
                name: "upc",
                baseName: "upc",
                type: "string"
            }]
        }
        ,
        55080: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ListStoredPaymentMethodsResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ListStoredPaymentMethodsResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "storedPaymentMethods",
                baseName: "storedPaymentMethods",
                type: "Array<StoredPaymentMethodResource>"
            }]
        }
        ,
        89814: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Mandate = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Mandate = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amount",
                baseName: "amount",
                type: "string"
            }, {
                name: "amountRule",
                baseName: "amountRule",
                type: "Mandate.AmountRuleEnum"
            }, {
                name: "billingAttemptsRule",
                baseName: "billingAttemptsRule",
                type: "Mandate.BillingAttemptsRuleEnum"
            }, {
                name: "billingDay",
                baseName: "billingDay",
                type: "string"
            }, {
                name: "endsAt",
                baseName: "endsAt",
                type: "string"
            }, {
                name: "frequency",
                baseName: "frequency",
                type: "Mandate.FrequencyEnum"
            }, {
                name: "remarks",
                baseName: "remarks",
                type: "string"
            }, {
                name: "startsAt",
                baseName: "startsAt",
                type: "string"
            }],
            function(e) {
                let t, a, n;
                !function(e) {
                    e.Max = "max",
                    e.Exact = "exact"
                }(t = e.AmountRuleEnum || (e.AmountRuleEnum = {})),
                function(e) {
                    e.On = "on",
                    e.Before = "before",
                    e.After = "after"
                }(a = e.BillingAttemptsRuleEnum || (e.BillingAttemptsRuleEnum = {})),
                function(e) {
                    e.Adhoc = "adhoc",
                    e.Daily = "daily",
                    e.Weekly = "weekly",
                    e.BiWeekly = "biWeekly",
                    e.Monthly = "monthly",
                    e.Quarterly = "quarterly",
                    e.HalfYearly = "halfYearly",
                    e.Yearly = "yearly"
                }(n = e.FrequencyEnum || (e.FrequencyEnum = {}))
            }(a = t.Mandate || (t.Mandate = {}))
        }
        ,
        289: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.MasterpassDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.MasterpassDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "MasterpassDetails.FundingSourceEnum"
            }, {
                name: "masterpassTransactionId",
                baseName: "masterpassTransactionId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "MasterpassDetails.TypeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {})),
                function(e) {
                    e.Masterpass = "masterpass"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.MasterpassDetails || (t.MasterpassDetails = {}))
        }
        ,
        97336: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.MbwayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.MbwayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "MbwayDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Mbway = "mbway"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.MbwayDetails || (t.MbwayDetails = {}))
        }
        ,
        58850: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.MerchantDevice = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.MerchantDevice = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "os",
                baseName: "os",
                type: "string"
            }, {
                name: "osVersion",
                baseName: "osVersion",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }]
        }
        ,
        80422: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.MerchantRiskIndicator = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.MerchantRiskIndicator = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "addressMatch",
                baseName: "addressMatch",
                type: "boolean"
            }, {
                name: "deliveryAddressIndicator",
                baseName: "deliveryAddressIndicator",
                type: "MerchantRiskIndicator.DeliveryAddressIndicatorEnum"
            }, {
                name: "deliveryEmail",
                baseName: "deliveryEmail",
                type: "string"
            }, {
                name: "deliveryEmailAddress",
                baseName: "deliveryEmailAddress",
                type: "string"
            }, {
                name: "deliveryTimeframe",
                baseName: "deliveryTimeframe",
                type: "MerchantRiskIndicator.DeliveryTimeframeEnum"
            }, {
                name: "giftCardAmount",
                baseName: "giftCardAmount",
                type: "Amount"
            }, {
                name: "giftCardCount",
                baseName: "giftCardCount",
                type: "number"
            }, {
                name: "giftCardCurr",
                baseName: "giftCardCurr",
                type: "string"
            }, {
                name: "preOrderDate",
                baseName: "preOrderDate",
                type: "Date"
            }, {
                name: "preOrderPurchase",
                baseName: "preOrderPurchase",
                type: "boolean"
            }, {
                name: "preOrderPurchaseInd",
                baseName: "preOrderPurchaseInd",
                type: "string"
            }, {
                name: "reorderItems",
                baseName: "reorderItems",
                type: "boolean"
            }, {
                name: "reorderItemsInd",
                baseName: "reorderItemsInd",
                type: "string"
            }, {
                name: "shipIndicator",
                baseName: "shipIndicator",
                type: "string"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.ShipToBillingAddress = "shipToBillingAddress",
                    e.ShipToVerifiedAddress = "shipToVerifiedAddress",
                    e.ShipToNewAddress = "shipToNewAddress",
                    e.ShipToStore = "shipToStore",
                    e.DigitalGoods = "digitalGoods",
                    e.GoodsNotShipped = "goodsNotShipped",
                    e.Other = "other"
                }(t = e.DeliveryAddressIndicatorEnum || (e.DeliveryAddressIndicatorEnum = {})),
                function(e) {
                    e.ElectronicDelivery = "electronicDelivery",
                    e.SameDayShipping = "sameDayShipping",
                    e.OvernightShipping = "overnightShipping",
                    e.TwoOrMoreDaysShipping = "twoOrMoreDaysShipping"
                }(a = e.DeliveryTimeframeEnum || (e.DeliveryTimeframeEnum = {}))
            }(a = t.MerchantRiskIndicator || (t.MerchantRiskIndicator = {}))
        }
        ,
        60662: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.MobilePayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.MobilePayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "MobilePayDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Mobilepay = "mobilepay"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.MobilePayDetails || (t.MobilePayDetails = {}))
        }
        ,
        44190: function(e, t, a) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, a, n) {
                void 0 === n && (n = a);
                var i = Object.getOwnPropertyDescriptor(t, a);
                i && !("get"in i ? !t.__esModule : i.writable || i.configurable) || (i = {
                    enumerable: !0,
                    get: function() {
                        return t[a]
                    }
                }),
                Object.defineProperty(e, n, i)
            }
            : function(e, t, a, n) {
                void 0 === n && (n = a),
                e[n] = t[a]
            }
            )
              , i = this && this.__exportStar || function(e, t) {
                for (var a in e)
                    "default" === a || Object.prototype.hasOwnProperty.call(t, a) || n(t, e, a)
            }
            ;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ObjectSerializer = void 0,
            i(a(36349), t),
            i(a(41919), t),
            i(a(32050), t),
            i(a(33707), t),
            i(a(61471), t),
            i(a(87929), t),
            i(a(71068), t),
            i(a(12664), t),
            i(a(78085), t),
            i(a(86894), t),
            i(a(68823), t),
            i(a(32213), t),
            i(a(10955), t),
            i(a(4494), t),
            i(a(56289), t),
            i(a(31747), t),
            i(a(14118), t),
            i(a(74035), t),
            i(a(63270), t),
            i(a(78604), t),
            i(a(77472), t),
            i(a(12800), t),
            i(a(18962), t),
            i(a(86857), t),
            i(a(36970), t),
            i(a(36319), t),
            i(a(71355), t),
            i(a(67839), t),
            i(a(4528), t),
            i(a(78424), t),
            i(a(96782), t),
            i(a(59858), t),
            i(a(94079), t),
            i(a(54843), t),
            i(a(28883), t),
            i(a(83864), t),
            i(a(64409), t),
            i(a(63810), t),
            i(a(7430), t),
            i(a(23123), t),
            i(a(69831), t),
            i(a(66866), t),
            i(a(61247), t),
            i(a(92082), t),
            i(a(45569), t),
            i(a(55637), t),
            i(a(83255), t),
            i(a(58772), t),
            i(a(76992), t),
            i(a(89922), t),
            i(a(35713), t),
            i(a(509), t),
            i(a(40537), t),
            i(a(39312), t),
            i(a(8850), t),
            i(a(62388), t),
            i(a(60254), t),
            i(a(56983), t),
            i(a(89834), t),
            i(a(19405), t),
            i(a(94233), t),
            i(a(54476), t),
            i(a(78245), t),
            i(a(98721), t),
            i(a(22049), t),
            i(a(40277), t),
            i(a(58686), t),
            i(a(81993), t),
            i(a(83427), t),
            i(a(30814), t),
            i(a(63479), t),
            i(a(60149), t),
            i(a(42865), t),
            i(a(62085), t),
            i(a(90027), t),
            i(a(51118), t),
            i(a(61268), t),
            i(a(58876), t),
            i(a(4370), t),
            i(a(73831), t),
            i(a(41705), t),
            i(a(72141), t),
            i(a(99732), t),
            i(a(26059), t),
            i(a(27311), t),
            i(a(11923), t),
            i(a(25110), t),
            i(a(26241), t),
            i(a(91188), t),
            i(a(86779), t),
            i(a(78576), t),
            i(a(27636), t),
            i(a(10081), t),
            i(a(59399), t),
            i(a(8879), t),
            i(a(24609), t),
            i(a(55080), t),
            i(a(89814), t),
            i(a(289), t),
            i(a(97336), t),
            i(a(58850), t),
            i(a(80422), t),
            i(a(60662), t),
            i(a(44786), t),
            i(a(64531), t),
            i(a(62103), t),
            i(a(58953), t),
            i(a(51611), t),
            i(a(92681), t),
            i(a(24524), t),
            i(a(68344), t),
            i(a(38658), t),
            i(a(27821), t),
            i(a(49785), t),
            i(a(80811), t),
            i(a(87151), t),
            i(a(29654), t),
            i(a(51864), t),
            i(a(89355), t),
            i(a(46095), t),
            i(a(17092), t),
            i(a(53507), t),
            i(a(81989), t),
            i(a(22822), t),
            i(a(4738), t),
            i(a(1439), t),
            i(a(63315), t),
            i(a(43079), t),
            i(a(79049), t),
            i(a(97197), t),
            i(a(78707), t),
            i(a(92135), t),
            i(a(2837), t),
            i(a(68209), t),
            i(a(59566), t),
            i(a(37888), t),
            i(a(54742), t),
            i(a(21912), t),
            i(a(89899), t),
            i(a(54671), t),
            i(a(31046), t),
            i(a(45568), t),
            i(a(68242), t),
            i(a(39689), t),
            i(a(85900), t),
            i(a(25808), t),
            i(a(11319), t),
            i(a(96144), t),
            i(a(22463), t),
            i(a(58726), t),
            i(a(34490), t),
            i(a(86924), t),
            i(a(34102), t),
            i(a(79809), t),
            i(a(47716), t),
            i(a(55967), t),
            i(a(40791), t),
            i(a(4586), t),
            i(a(49442), t),
            i(a(65211), t),
            i(a(54477), t),
            i(a(29196), t),
            i(a(40961), t),
            i(a(47395), t),
            i(a(20718), t),
            i(a(63026), t),
            i(a(92278), t),
            i(a(82424), t),
            i(a(49410), t),
            i(a(87628), t),
            i(a(86476), t),
            i(a(2567), t),
            i(a(55408), t),
            i(a(19383), t),
            i(a(98916), t),
            i(a(20576), t),
            i(a(22192), t),
            i(a(78861), t),
            i(a(65426), t),
            i(a(62348), t),
            i(a(40730), t),
            i(a(96495), t),
            i(a(24491), t),
            i(a(66877), t),
            i(a(90590), t),
            i(a(58710), t),
            i(a(74852), t),
            i(a(82661), t),
            i(a(81857), t),
            i(a(57892), t),
            i(a(95219), t),
            i(a(51110), t),
            i(a(13671), t),
            i(a(77851), t);
            const s = a(36349)
              , r = a(41919)
              , o = a(32050)
              , l = a(33707)
              , d = a(61471)
              , c = a(87929)
              , m = a(71068)
              , u = a(12664)
              , h = a(78085)
              , p = a(86894)
              , y = a(68823)
              , g = a(32213)
              , f = a(10955)
              , _ = a(4494)
              , b = a(56289)
              , v = a(31747)
              , M = a(14118)
              , w = a(74035)
              , T = a(63270)
              , k = a(78604)
              , D = a(77472)
              , x = a(12800)
              , A = a(18962)
              , L = a(86857)
              , S = a(36970)
              , N = a(36319)
              , P = a(71355)
              , Y = a(67839)
              , E = a(4528)
              , C = a(78424)
              , R = a(96782)
              , I = a(59858)
              , O = a(94079)
              , H = a(54843)
              , F = a(28883)
              , j = a(83864)
              , q = a(64409)
              , U = a(63810)
              , W = a(7430)
              , B = a(23123)
              , z = a(69831)
              , $ = a(66866)
              , G = a(61247)
              , V = a(92082)
              , K = a(45569)
              , J = a(55637)
              , X = a(83255)
              , Q = a(58772)
              , Z = a(76992)
              , ee = a(89922)
              , te = a(35713)
              , ae = a(509)
              , ne = a(40537)
              , ie = a(39312)
              , se = a(8850)
              , re = a(62388)
              , oe = a(60254)
              , le = a(56983)
              , de = a(89834)
              , ce = a(19405)
              , me = a(94233)
              , ue = a(54476)
              , he = a(78245)
              , pe = a(98721)
              , ye = a(22049)
              , ge = a(40277)
              , fe = a(58686)
              , _e = a(81993)
              , be = a(83427)
              , ve = a(30814)
              , Me = a(63479)
              , we = a(60149)
              , Te = a(42865)
              , ke = a(62085)
              , De = a(90027)
              , xe = a(51118)
              , Ae = a(61268)
              , Le = a(58876)
              , Se = a(4370)
              , Ne = a(73831)
              , Pe = a(41705)
              , Ye = a(72141)
              , Ee = a(99732)
              , Ce = a(26059)
              , Re = a(27311)
              , Ie = a(11923)
              , Oe = a(25110)
              , He = a(26241)
              , Fe = a(91188)
              , je = a(86779)
              , qe = a(78576)
              , Ue = a(27636)
              , We = a(10081)
              , Be = a(59399)
              , ze = a(8879)
              , $e = a(24609)
              , Ge = a(55080)
              , Ve = a(89814)
              , Ke = a(289)
              , Je = a(97336)
              , Xe = a(58850)
              , Qe = a(80422)
              , Ze = a(60662)
              , et = a(44786)
              , tt = a(64531)
              , at = a(62103)
              , nt = a(58953)
              , it = a(51611)
              , st = a(92681)
              , rt = a(24524)
              , ot = a(68344)
              , lt = a(38658)
              , dt = a(27821)
              , ct = a(49785)
              , mt = a(80811)
              , ut = a(87151)
              , ht = a(29654)
              , pt = a(51864)
              , yt = a(89355)
              , gt = a(46095)
              , ft = a(17092)
              , _t = a(53507)
              , bt = a(81989)
              , vt = a(22822)
              , Mt = a(4738)
              , wt = a(1439)
              , Tt = a(63315)
              , kt = a(43079)
              , Dt = a(79049)
              , xt = a(97197)
              , At = a(78707)
              , Lt = a(92135)
              , St = a(2837)
              , Nt = a(68209)
              , Pt = a(59566)
              , Yt = a(37888)
              , Et = a(54742)
              , Ct = a(21912)
              , Rt = a(89899)
              , It = a(54671)
              , Ot = a(31046)
              , Ht = a(45568)
              , Ft = a(68242)
              , jt = a(39689)
              , qt = a(85900)
              , Ut = a(25808)
              , Wt = a(11319)
              , Bt = a(96144)
              , zt = a(22463)
              , $t = a(58726)
              , Gt = a(34490)
              , Vt = a(86924)
              , Kt = a(34102)
              , Jt = a(79809)
              , Xt = a(47716)
              , Qt = a(55967)
              , Zt = a(40791)
              , ea = a(4586)
              , ta = a(49442)
              , aa = a(65211)
              , na = a(54477)
              , ia = a(29196)
              , sa = a(40961)
              , ra = a(47395)
              , oa = a(20718)
              , la = a(63026)
              , da = a(92278)
              , ca = a(82424)
              , ma = a(49410)
              , ua = a(87628)
              , ha = a(86476)
              , pa = a(2567)
              , ya = a(55408)
              , ga = a(19383)
              , fa = a(98916)
              , _a = a(20576)
              , ba = a(22192)
              , va = a(78861)
              , Ma = a(65426)
              , wa = a(62348)
              , Ta = a(40730)
              , ka = a(96495)
              , Da = a(24491)
              , xa = a(66877)
              , Aa = a(90590)
              , La = a(58710)
              , Sa = a(74852)
              , Na = a(82661)
              , Pa = a(81857)
              , Ya = a(57892)
              , Ea = a(95219)
              , Ca = a(51110)
              , Ra = a(13671)
              , Ia = a(77851);
            let Oa = ["string", "boolean", "double", "integer", "long", "float", "number", "any"]
              , Ha = {
                "AccountInfo.AccountAgeIndicatorEnum": s.AccountInfo.AccountAgeIndicatorEnum,
                "AccountInfo.AccountChangeIndicatorEnum": s.AccountInfo.AccountChangeIndicatorEnum,
                "AccountInfo.AccountTypeEnum": s.AccountInfo.AccountTypeEnum,
                "AccountInfo.DeliveryAddressUsageIndicatorEnum": s.AccountInfo.DeliveryAddressUsageIndicatorEnum,
                "AccountInfo.PasswordChangeIndicatorEnum": s.AccountInfo.PasswordChangeIndicatorEnum,
                "AccountInfo.PaymentAccountIndicatorEnum": s.AccountInfo.PaymentAccountIndicatorEnum,
                "AcctInfo.ChAccAgeIndEnum": r.AcctInfo.ChAccAgeIndEnum,
                "AcctInfo.ChAccChangeIndEnum": r.AcctInfo.ChAccChangeIndEnum,
                "AcctInfo.ChAccPwChangeIndEnum": r.AcctInfo.ChAccPwChangeIndEnum,
                "AcctInfo.PaymentAccIndEnum": r.AcctInfo.PaymentAccIndEnum,
                "AcctInfo.ShipAddressUsageIndEnum": r.AcctInfo.ShipAddressUsageIndEnum,
                "AcctInfo.ShipNameIndicatorEnum": r.AcctInfo.ShipNameIndicatorEnum,
                "AcctInfo.SuspiciousAccActivityEnum": r.AcctInfo.SuspiciousAccActivityEnum,
                "AchDetails.BankAccountTypeEnum": o.AchDetails.BankAccountTypeEnum,
                "AchDetails.TypeEnum": o.AchDetails.TypeEnum,
                "AdditionalData3DSecure.ChallengeWindowSizeEnum": l.AdditionalData3DSecure.ChallengeWindowSizeEnum,
                "AdditionalDataCommon.IndustryUsageEnum": m.AdditionalDataCommon.IndustryUsageEnum,
                "AfterpayDetails.TypeEnum": k.AfterpayDetails.TypeEnum,
                "AmazonPayDetails.TypeEnum": D.AmazonPayDetails.TypeEnum,
                "AncvDetails.TypeEnum": A.AncvDetails.TypeEnum,
                "AndroidPayDetails.TypeEnum": L.AndroidPayDetails.TypeEnum,
                "ApplePayDetails.FundingSourceEnum": S.ApplePayDetails.FundingSourceEnum,
                "ApplePayDetails.TypeEnum": S.ApplePayDetails.TypeEnum,
                "ApplePayDonations.FundingSourceEnum": N.ApplePayDonations.FundingSourceEnum,
                "ApplePayDonations.TypeEnum": N.ApplePayDonations.TypeEnum,
                "AuthenticationData.AttemptAuthenticationEnum": C.AuthenticationData.AttemptAuthenticationEnum,
                "Avs.EnabledEnum": R.Avs.EnabledEnum,
                "BacsDirectDebitDetails.TypeEnum": I.BacsDirectDebitDetails.TypeEnum,
                "BalanceCheckRequest.RecurringProcessingModelEnum": O.BalanceCheckRequest.RecurringProcessingModelEnum,
                "BalanceCheckRequest.ShopperInteractionEnum": O.BalanceCheckRequest.ShopperInteractionEnum,
                "BalanceCheckResponse.ResultCodeEnum": H.BalanceCheckResponse.ResultCodeEnum,
                "BillDeskDetails.TypeEnum": j.BillDeskDetails.TypeEnum,
                "BlikDetails.TypeEnum": U.BlikDetails.TypeEnum,
                "CancelOrderResponse.ResultCodeEnum": z.CancelOrderResponse.ResultCodeEnum,
                "CardDetails.FundingSourceEnum": V.CardDetails.FundingSourceEnum,
                "CardDetails.TypeEnum": V.CardDetails.TypeEnum,
                "CardDonations.FundingSourceEnum": X.CardDonations.FundingSourceEnum,
                "CardDonations.TypeEnum": X.CardDonations.TypeEnum,
                "CashAppDetails.TypeEnum": Q.CashAppDetails.TypeEnum,
                "CellulantDetails.TypeEnum": Z.CellulantDetails.TypeEnum,
                "CheckoutAwaitAction.TypeEnum": ee.CheckoutAwaitAction.TypeEnum,
                "CheckoutDelegatedAuthenticationAction.TypeEnum": te.CheckoutDelegatedAuthenticationAction.TypeEnum,
                "CheckoutNativeRedirectAction.TypeEnum": ae.CheckoutNativeRedirectAction.TypeEnum,
                "CheckoutQrCodeAction.TypeEnum": ie.CheckoutQrCodeAction.TypeEnum,
                "CheckoutRedirectAction.TypeEnum": se.CheckoutRedirectAction.TypeEnum,
                "CheckoutSDKAction.TypeEnum": re.CheckoutSDKAction.TypeEnum,
                "CheckoutSessionInstallmentOption.PlansEnum": oe.CheckoutSessionInstallmentOption.PlansEnum,
                "CheckoutThreeDS2Action.TypeEnum": le.CheckoutThreeDS2Action.TypeEnum,
                "CheckoutVoucherAction.TypeEnum": de.CheckoutVoucherAction.TypeEnum,
                "Configuration.CardHolderNameEnum": ue.Configuration.CardHolderNameEnum,
                "CreateCheckoutSessionRequest.ChannelEnum": he.CreateCheckoutSessionRequest.ChannelEnum,
                "CreateCheckoutSessionRequest.ModeEnum": he.CreateCheckoutSessionRequest.ModeEnum,
                "CreateCheckoutSessionRequest.RecurringProcessingModelEnum": he.CreateCheckoutSessionRequest.RecurringProcessingModelEnum,
                "CreateCheckoutSessionRequest.ShopperInteractionEnum": he.CreateCheckoutSessionRequest.ShopperInteractionEnum,
                "CreateCheckoutSessionRequest.StorePaymentMethodModeEnum": he.CreateCheckoutSessionRequest.StorePaymentMethodModeEnum,
                "CreateCheckoutSessionResponse.ChannelEnum": pe.CreateCheckoutSessionResponse.ChannelEnum,
                "CreateCheckoutSessionResponse.ModeEnum": pe.CreateCheckoutSessionResponse.ModeEnum,
                "CreateCheckoutSessionResponse.RecurringProcessingModelEnum": pe.CreateCheckoutSessionResponse.RecurringProcessingModelEnum,
                "CreateCheckoutSessionResponse.ShopperInteractionEnum": pe.CreateCheckoutSessionResponse.ShopperInteractionEnum,
                "CreateCheckoutSessionResponse.StorePaymentMethodModeEnum": pe.CreateCheckoutSessionResponse.StorePaymentMethodModeEnum,
                "CreateOrderResponse.ResultCodeEnum": ge.CreateOrderResponse.ResultCodeEnum,
                "DeliveryMethod.TypeEnum": _e.DeliveryMethod.TypeEnum,
                "DeviceRenderOptions.SdkInterfaceEnum": ve.DeviceRenderOptions.SdkInterfaceEnum,
                "DeviceRenderOptions.SdkUiTypeEnum": ve.DeviceRenderOptions.SdkUiTypeEnum,
                "DokuDetails.TypeEnum": Me.DokuDetails.TypeEnum,
                "DonationPaymentRequest.ChannelEnum": we.DonationPaymentRequest.ChannelEnum,
                "DonationPaymentRequest.RecurringProcessingModelEnum": we.DonationPaymentRequest.RecurringProcessingModelEnum,
                "DonationPaymentRequest.ShopperInteractionEnum": we.DonationPaymentRequest.ShopperInteractionEnum,
                "DonationPaymentResponse.StatusEnum": Te.DonationPaymentResponse.StatusEnum,
                "DotpayDetails.TypeEnum": ke.DotpayDetails.TypeEnum,
                "DragonpayDetails.TypeEnum": De.DragonpayDetails.TypeEnum,
                "EcontextVoucherDetails.TypeEnum": xe.EcontextVoucherDetails.TypeEnum,
                "GenericIssuerPaymentMethodDetails.TypeEnum": Ce.GenericIssuerPaymentMethodDetails.TypeEnum,
                "GiropayDetails.TypeEnum": Re.GiropayDetails.TypeEnum,
                "GooglePayDetails.FundingSourceEnum": Ie.GooglePayDetails.FundingSourceEnum,
                "GooglePayDetails.TypeEnum": Ie.GooglePayDetails.TypeEnum,
                "GooglePayDonations.FundingSourceEnum": Oe.GooglePayDonations.FundingSourceEnum,
                "GooglePayDonations.TypeEnum": Oe.GooglePayDonations.TypeEnum,
                "IdealDetails.TypeEnum": He.IdealDetails.TypeEnum,
                "IdealDonations.TypeEnum": Fe.IdealDonations.TypeEnum,
                "InstallmentOption.PlansEnum": qe.InstallmentOption.PlansEnum,
                "Installments.PlanEnum": Ue.Installments.PlanEnum,
                "KlarnaDetails.TypeEnum": ze.KlarnaDetails.TypeEnum,
                "Mandate.AmountRuleEnum": Ve.Mandate.AmountRuleEnum,
                "Mandate.BillingAttemptsRuleEnum": Ve.Mandate.BillingAttemptsRuleEnum,
                "Mandate.FrequencyEnum": Ve.Mandate.FrequencyEnum,
                "MasterpassDetails.FundingSourceEnum": Ke.MasterpassDetails.FundingSourceEnum,
                "MasterpassDetails.TypeEnum": Ke.MasterpassDetails.TypeEnum,
                "MbwayDetails.TypeEnum": Je.MbwayDetails.TypeEnum,
                "MerchantRiskIndicator.DeliveryAddressIndicatorEnum": Qe.MerchantRiskIndicator.DeliveryAddressIndicatorEnum,
                "MerchantRiskIndicator.DeliveryTimeframeEnum": Qe.MerchantRiskIndicator.DeliveryTimeframeEnum,
                "MobilePayDetails.TypeEnum": Ze.MobilePayDetails.TypeEnum,
                "MolPayDetails.TypeEnum": et.MolPayDetails.TypeEnum,
                "OpenInvoiceDetails.TypeEnum": at.OpenInvoiceDetails.TypeEnum,
                "PayPalDetails.SubtypeEnum": nt.PayPalDetails.SubtypeEnum,
                "PayPalDetails.TypeEnum": nt.PayPalDetails.TypeEnum,
                "PayUUpiDetails.TypeEnum": it.PayUUpiDetails.TypeEnum,
                "PayWithGoogleDetails.FundingSourceEnum": st.PayWithGoogleDetails.FundingSourceEnum,
                "PayWithGoogleDetails.TypeEnum": st.PayWithGoogleDetails.TypeEnum,
                "PayWithGoogleDonations.FundingSourceEnum": rt.PayWithGoogleDonations.FundingSourceEnum,
                "PayWithGoogleDonations.TypeEnum": rt.PayWithGoogleDonations.TypeEnum,
                "PaymentAmountUpdateRequest.IndustryUsageEnum": ot.PaymentAmountUpdateRequest.IndustryUsageEnum,
                "PaymentAmountUpdateResponse.IndustryUsageEnum": lt.PaymentAmountUpdateResponse.IndustryUsageEnum,
                "PaymentAmountUpdateResponse.StatusEnum": lt.PaymentAmountUpdateResponse.StatusEnum,
                "PaymentCancelResponse.StatusEnum": ct.PaymentCancelResponse.StatusEnum,
                "PaymentCaptureResponse.StatusEnum": ut.PaymentCaptureResponse.StatusEnum,
                "PaymentDetails.TypeEnum": pt.PaymentDetails.TypeEnum,
                "PaymentDetailsResponse.ResultCodeEnum": gt.PaymentDetailsResponse.ResultCodeEnum,
                "PaymentLinkRequest.RecurringProcessingModelEnum": ft.PaymentLinkRequest.RecurringProcessingModelEnum,
                "PaymentLinkRequest.RequiredShopperFieldsEnum": ft.PaymentLinkRequest.RequiredShopperFieldsEnum,
                "PaymentLinkRequest.StorePaymentMethodModeEnum": ft.PaymentLinkRequest.StorePaymentMethodModeEnum,
                "PaymentLinkResponse.RecurringProcessingModelEnum": _t.PaymentLinkResponse.RecurringProcessingModelEnum,
                "PaymentLinkResponse.RequiredShopperFieldsEnum": _t.PaymentLinkResponse.RequiredShopperFieldsEnum,
                "PaymentLinkResponse.StatusEnum": _t.PaymentLinkResponse.StatusEnum,
                "PaymentLinkResponse.StorePaymentMethodModeEnum": _t.PaymentLinkResponse.StorePaymentMethodModeEnum,
                "PaymentMethod.FundingSourceEnum": bt.PaymentMethod.FundingSourceEnum,
                "PaymentMethodsRequest.ChannelEnum": Tt.PaymentMethodsRequest.ChannelEnum,
                "PaymentMethodsRequest.StoreFiltrationModeEnum": Tt.PaymentMethodsRequest.StoreFiltrationModeEnum,
                "PaymentRefundRequest.MerchantRefundReasonEnum": Dt.PaymentRefundRequest.MerchantRefundReasonEnum,
                "PaymentRefundResponse.MerchantRefundReasonEnum": xt.PaymentRefundResponse.MerchantRefundReasonEnum,
                "PaymentRefundResponse.StatusEnum": xt.PaymentRefundResponse.StatusEnum,
                "PaymentRequest.ChannelEnum": At.PaymentRequest.ChannelEnum,
                "PaymentRequest.EntityTypeEnum": At.PaymentRequest.EntityTypeEnum,
                "PaymentRequest.IndustryUsageEnum": At.PaymentRequest.IndustryUsageEnum,
                "PaymentRequest.RecurringProcessingModelEnum": At.PaymentRequest.RecurringProcessingModelEnum,
                "PaymentRequest.ShopperInteractionEnum": At.PaymentRequest.ShopperInteractionEnum,
                "PaymentResponse.ResultCodeEnum": Lt.PaymentResponse.ResultCodeEnum,
                "PaymentReversalResponse.StatusEnum": Nt.PaymentReversalResponse.StatusEnum,
                "PaymentSetupRequest.ChannelEnum": Pt.PaymentSetupRequest.ChannelEnum,
                "PaymentSetupRequest.EntityTypeEnum": Pt.PaymentSetupRequest.EntityTypeEnum,
                "PaymentSetupRequest.ShopperInteractionEnum": Pt.PaymentSetupRequest.ShopperInteractionEnum,
                "PaymentVerificationResponse.ResultCodeEnum": Ct.PaymentVerificationResponse.ResultCodeEnum,
                "PaypalUpdateOrderResponse.StatusEnum": It.PaypalUpdateOrderResponse.StatusEnum,
                "PlatformChargebackLogic.BehaviorEnum": Ht.PlatformChargebackLogic.BehaviorEnum,
                "RatepayDetails.TypeEnum": Ft.RatepayDetails.TypeEnum,
                "Recurring.ContractEnum": jt.Recurring.ContractEnum,
                "Recurring.TokenServiceEnum": jt.Recurring.TokenServiceEnum,
                "RecurringDetail.FundingSourceEnum": qt.RecurringDetail.FundingSourceEnum,
                "ResponseAdditionalDataCommon.FraudResultTypeEnum": zt.ResponseAdditionalDataCommon.FraudResultTypeEnum,
                "ResponseAdditionalDataCommon.RecurringProcessingModelEnum": zt.ResponseAdditionalDataCommon.RecurringProcessingModelEnum,
                "SamsungPayDetails.FundingSourceEnum": ea.SamsungPayDetails.FundingSourceEnum,
                "SamsungPayDetails.TypeEnum": ea.SamsungPayDetails.TypeEnum,
                "SepaDirectDebitDetails.TypeEnum": ta.SepaDirectDebitDetails.TypeEnum,
                "SessionResultResponse.StatusEnum": ia.SessionResultResponse.StatusEnum,
                "ShopperInput.BillingAddressEnum": sa.ShopperInput.BillingAddressEnum,
                "ShopperInput.DeliveryAddressEnum": sa.ShopperInput.DeliveryAddressEnum,
                "ShopperInput.PersonalDetailsEnum": sa.ShopperInput.PersonalDetailsEnum,
                "Split.TypeEnum": oa.Split.TypeEnum,
                "StandalonePaymentCancelResponse.StatusEnum": ca.StandalonePaymentCancelResponse.StatusEnum,
                "StoredPaymentMethodDetails.TypeEnum": ha.StoredPaymentMethodDetails.TypeEnum,
                "StoredPaymentMethodRequest.RecurringProcessingModelEnum": pa.StoredPaymentMethodRequest.RecurringProcessingModelEnum,
                "ThreeDS2RequestData.AcctTypeEnum": ba.ThreeDS2RequestData.AcctTypeEnum,
                "ThreeDS2RequestData.AddrMatchEnum": ba.ThreeDS2RequestData.AddrMatchEnum,
                "ThreeDS2RequestData.ChallengeIndicatorEnum": ba.ThreeDS2RequestData.ChallengeIndicatorEnum,
                "ThreeDS2RequestData.ThreeDSRequestorChallengeIndEnum": ba.ThreeDS2RequestData.ThreeDSRequestorChallengeIndEnum,
                "ThreeDS2RequestData.TransTypeEnum": ba.ThreeDS2RequestData.TransTypeEnum,
                "ThreeDS2RequestData.TransactionTypeEnum": ba.ThreeDS2RequestData.TransactionTypeEnum,
                "ThreeDS2RequestFields.AcctTypeEnum": va.ThreeDS2RequestFields.AcctTypeEnum,
                "ThreeDS2RequestFields.AddrMatchEnum": va.ThreeDS2RequestFields.AddrMatchEnum,
                "ThreeDS2RequestFields.ChallengeIndicatorEnum": va.ThreeDS2RequestFields.ChallengeIndicatorEnum,
                "ThreeDS2RequestFields.ThreeDSRequestorChallengeIndEnum": va.ThreeDS2RequestFields.ThreeDSRequestorChallengeIndEnum,
                "ThreeDS2RequestFields.TransTypeEnum": va.ThreeDS2RequestFields.TransTypeEnum,
                "ThreeDS2RequestFields.TransactionTypeEnum": va.ThreeDS2RequestFields.TransactionTypeEnum,
                "ThreeDS2Result.ChallengeCancelEnum": wa.ThreeDS2Result.ChallengeCancelEnum,
                "ThreeDS2Result.ExemptionIndicatorEnum": wa.ThreeDS2Result.ExemptionIndicatorEnum,
                "ThreeDS2Result.ThreeDSRequestorChallengeIndEnum": wa.ThreeDS2Result.ThreeDSRequestorChallengeIndEnum,
                "ThreeDSRequestData.ChallengeWindowSizeEnum": Ta.ThreeDSRequestData.ChallengeWindowSizeEnum,
                "ThreeDSRequestData.DataOnlyEnum": Ta.ThreeDSRequestData.DataOnlyEnum,
                "ThreeDSRequestData.NativeThreeDSEnum": Ta.ThreeDSRequestData.NativeThreeDSEnum,
                "ThreeDSRequestData.ThreeDSVersionEnum": Ta.ThreeDSRequestData.ThreeDSVersionEnum,
                "ThreeDSRequestorAuthenticationInfo.ThreeDSReqAuthMethodEnum": ka.ThreeDSRequestorAuthenticationInfo.ThreeDSReqAuthMethodEnum,
                "ThreeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthMethodEnum": Da.ThreeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthMethodEnum,
                "ThreeDSecureData.AuthenticationResponseEnum": xa.ThreeDSecureData.AuthenticationResponseEnum,
                "ThreeDSecureData.ChallengeCancelEnum": xa.ThreeDSecureData.ChallengeCancelEnum,
                "ThreeDSecureData.DirectoryResponseEnum": xa.ThreeDSecureData.DirectoryResponseEnum,
                "UpdatePaymentLinkRequest.StatusEnum": Aa.UpdatePaymentLinkRequest.StatusEnum,
                "UpiCollectDetails.TypeEnum": La.UpiCollectDetails.TypeEnum,
                "UpiIntentDetails.TypeEnum": Sa.UpiIntentDetails.TypeEnum,
                "VippsDetails.TypeEnum": Ya.VippsDetails.TypeEnum,
                "VisaCheckoutDetails.FundingSourceEnum": Ea.VisaCheckoutDetails.FundingSourceEnum,
                "VisaCheckoutDetails.TypeEnum": Ea.VisaCheckoutDetails.TypeEnum,
                "WeChatPayDetails.TypeEnum": Ca.WeChatPayDetails.TypeEnum,
                "WeChatPayMiniProgramDetails.TypeEnum": Ra.WeChatPayMiniProgramDetails.TypeEnum,
                "ZipDetails.TypeEnum": Ia.ZipDetails.TypeEnum
            }
              , Fa = {
                AccountInfo: s.AccountInfo,
                AcctInfo: r.AcctInfo,
                AchDetails: o.AchDetails,
                AdditionalData3DSecure: l.AdditionalData3DSecure,
                AdditionalDataAirline: d.AdditionalDataAirline,
                AdditionalDataCarRental: c.AdditionalDataCarRental,
                AdditionalDataCommon: m.AdditionalDataCommon,
                AdditionalDataLevel23: u.AdditionalDataLevel23,
                AdditionalDataLodging: h.AdditionalDataLodging,
                AdditionalDataOpenInvoice: p.AdditionalDataOpenInvoice,
                AdditionalDataOpi: y.AdditionalDataOpi,
                AdditionalDataRatepay: g.AdditionalDataRatepay,
                AdditionalDataRetry: f.AdditionalDataRetry,
                AdditionalDataRisk: _.AdditionalDataRisk,
                AdditionalDataRiskStandalone: b.AdditionalDataRiskStandalone,
                AdditionalDataSubMerchant: v.AdditionalDataSubMerchant,
                AdditionalDataTemporaryServices: M.AdditionalDataTemporaryServices,
                AdditionalDataWallets: w.AdditionalDataWallets,
                Address: T.Address,
                AfterpayDetails: k.AfterpayDetails,
                AmazonPayDetails: D.AmazonPayDetails,
                Amount: x.Amount,
                AncvDetails: A.AncvDetails,
                AndroidPayDetails: L.AndroidPayDetails,
                ApplePayDetails: S.ApplePayDetails,
                ApplePayDonations: N.ApplePayDonations,
                ApplePaySessionRequest: P.ApplePaySessionRequest,
                ApplePaySessionResponse: Y.ApplePaySessionResponse,
                ApplicationInfo: E.ApplicationInfo,
                AuthenticationData: C.AuthenticationData,
                Avs: R.Avs,
                BacsDirectDebitDetails: I.BacsDirectDebitDetails,
                BalanceCheckRequest: O.BalanceCheckRequest,
                BalanceCheckResponse: H.BalanceCheckResponse,
                BankAccount: F.BankAccount,
                BillDeskDetails: j.BillDeskDetails,
                BillingAddress: q.BillingAddress,
                BlikDetails: U.BlikDetails,
                BrowserInfo: W.BrowserInfo,
                CancelOrderRequest: B.CancelOrderRequest,
                CancelOrderResponse: z.CancelOrderResponse,
                Card: $.Card,
                CardBrandDetails: G.CardBrandDetails,
                CardDetails: V.CardDetails,
                CardDetailsRequest: K.CardDetailsRequest,
                CardDetailsResponse: J.CardDetailsResponse,
                CardDonations: X.CardDonations,
                CashAppDetails: Q.CashAppDetails,
                CellulantDetails: Z.CellulantDetails,
                CheckoutAwaitAction: ee.CheckoutAwaitAction,
                CheckoutDelegatedAuthenticationAction: te.CheckoutDelegatedAuthenticationAction,
                CheckoutNativeRedirectAction: ae.CheckoutNativeRedirectAction,
                CheckoutOrderResponse: ne.CheckoutOrderResponse,
                CheckoutQrCodeAction: ie.CheckoutQrCodeAction,
                CheckoutRedirectAction: se.CheckoutRedirectAction,
                CheckoutSDKAction: re.CheckoutSDKAction,
                CheckoutSessionInstallmentOption: oe.CheckoutSessionInstallmentOption,
                CheckoutThreeDS2Action: le.CheckoutThreeDS2Action,
                CheckoutVoucherAction: de.CheckoutVoucherAction,
                CommonField: ce.CommonField,
                Company: me.Company,
                Configuration: ue.Configuration,
                CreateCheckoutSessionRequest: he.CreateCheckoutSessionRequest,
                CreateCheckoutSessionResponse: pe.CreateCheckoutSessionResponse,
                CreateOrderRequest: ye.CreateOrderRequest,
                CreateOrderResponse: ge.CreateOrderResponse,
                DeliveryAddress: fe.DeliveryAddress,
                DeliveryMethod: _e.DeliveryMethod,
                DetailsRequestAuthenticationData: be.DetailsRequestAuthenticationData,
                DeviceRenderOptions: ve.DeviceRenderOptions,
                DokuDetails: Me.DokuDetails,
                DonationPaymentRequest: we.DonationPaymentRequest,
                DonationPaymentResponse: Te.DonationPaymentResponse,
                DotpayDetails: ke.DotpayDetails,
                DragonpayDetails: De.DragonpayDetails,
                EcontextVoucherDetails: xe.EcontextVoucherDetails,
                EncryptedOrderData: Ae.EncryptedOrderData,
                ExternalPlatform: Le.ExternalPlatform,
                ForexQuote: Se.ForexQuote,
                FraudCheckResult: Ne.FraudCheckResult,
                FraudResult: Pe.FraudResult,
                FundOrigin: Ye.FundOrigin,
                FundRecipient: Ee.FundRecipient,
                GenericIssuerPaymentMethodDetails: Ce.GenericIssuerPaymentMethodDetails,
                GiropayDetails: Re.GiropayDetails,
                GooglePayDetails: Ie.GooglePayDetails,
                GooglePayDonations: Oe.GooglePayDonations,
                IdealDetails: He.IdealDetails,
                IdealDonations: Fe.IdealDonations,
                InputDetail: je.InputDetail,
                InstallmentOption: qe.InstallmentOption,
                Installments: Ue.Installments,
                InstallmentsNumber: We.InstallmentsNumber,
                Item: Be.Item,
                KlarnaDetails: ze.KlarnaDetails,
                LineItem: $e.LineItem,
                ListStoredPaymentMethodsResponse: Ge.ListStoredPaymentMethodsResponse,
                Mandate: Ve.Mandate,
                MasterpassDetails: Ke.MasterpassDetails,
                MbwayDetails: Je.MbwayDetails,
                MerchantDevice: Xe.MerchantDevice,
                MerchantRiskIndicator: Qe.MerchantRiskIndicator,
                MobilePayDetails: Ze.MobilePayDetails,
                MolPayDetails: et.MolPayDetails,
                Name: tt.Name,
                OpenInvoiceDetails: at.OpenInvoiceDetails,
                PayPalDetails: nt.PayPalDetails,
                PayUUpiDetails: it.PayUUpiDetails,
                PayWithGoogleDetails: st.PayWithGoogleDetails,
                PayWithGoogleDonations: rt.PayWithGoogleDonations,
                PaymentAmountUpdateRequest: ot.PaymentAmountUpdateRequest,
                PaymentAmountUpdateResponse: lt.PaymentAmountUpdateResponse,
                PaymentCancelRequest: dt.PaymentCancelRequest,
                PaymentCancelResponse: ct.PaymentCancelResponse,
                PaymentCaptureRequest: mt.PaymentCaptureRequest,
                PaymentCaptureResponse: ut.PaymentCaptureResponse,
                PaymentCompletionDetails: ht.PaymentCompletionDetails,
                PaymentDetails: pt.PaymentDetails,
                PaymentDetailsRequest: yt.PaymentDetailsRequest,
                PaymentDetailsResponse: gt.PaymentDetailsResponse,
                PaymentLinkRequest: ft.PaymentLinkRequest,
                PaymentLinkResponse: _t.PaymentLinkResponse,
                PaymentMethod: bt.PaymentMethod,
                PaymentMethodGroup: vt.PaymentMethodGroup,
                PaymentMethodIssuer: Mt.PaymentMethodIssuer,
                PaymentMethodToStore: wt.PaymentMethodToStore,
                PaymentMethodsRequest: Tt.PaymentMethodsRequest,
                PaymentMethodsResponse: kt.PaymentMethodsResponse,
                PaymentRefundRequest: Dt.PaymentRefundRequest,
                PaymentRefundResponse: xt.PaymentRefundResponse,
                PaymentRequest: At.PaymentRequest,
                PaymentResponse: Lt.PaymentResponse,
                PaymentReversalRequest: St.PaymentReversalRequest,
                PaymentReversalResponse: Nt.PaymentReversalResponse,
                PaymentSetupRequest: Pt.PaymentSetupRequest,
                PaymentSetupResponse: Yt.PaymentSetupResponse,
                PaymentVerificationRequest: Et.PaymentVerificationRequest,
                PaymentVerificationResponse: Ct.PaymentVerificationResponse,
                PaypalUpdateOrderRequest: Rt.PaypalUpdateOrderRequest,
                PaypalUpdateOrderResponse: It.PaypalUpdateOrderResponse,
                Phone: Ot.Phone,
                PlatformChargebackLogic: Ht.PlatformChargebackLogic,
                RatepayDetails: Ft.RatepayDetails,
                Recurring: jt.Recurring,
                RecurringDetail: qt.RecurringDetail,
                ResponseAdditionalData3DSecure: Ut.ResponseAdditionalData3DSecure,
                ResponseAdditionalDataBillingAddress: Wt.ResponseAdditionalDataBillingAddress,
                ResponseAdditionalDataCard: Bt.ResponseAdditionalDataCard,
                ResponseAdditionalDataCommon: zt.ResponseAdditionalDataCommon,
                ResponseAdditionalDataDomesticError: $t.ResponseAdditionalDataDomesticError,
                ResponseAdditionalDataInstallments: Gt.ResponseAdditionalDataInstallments,
                ResponseAdditionalDataNetworkTokens: Vt.ResponseAdditionalDataNetworkTokens,
                ResponseAdditionalDataOpi: Kt.ResponseAdditionalDataOpi,
                ResponseAdditionalDataSepa: Jt.ResponseAdditionalDataSepa,
                ResponsePaymentMethod: Xt.ResponsePaymentMethod,
                RiskData: Qt.RiskData,
                SDKEphemPubKey: Zt.SDKEphemPubKey,
                SamsungPayDetails: ea.SamsungPayDetails,
                SepaDirectDebitDetails: ta.SepaDirectDebitDetails,
                ServiceError: aa.ServiceError,
                ServiceErrorDetails: na.ServiceErrorDetails,
                SessionResultResponse: ia.SessionResultResponse,
                ShopperInput: sa.ShopperInput,
                ShopperInteractionDevice: ra.ShopperInteractionDevice,
                Split: oa.Split,
                SplitAmount: la.SplitAmount,
                StandalonePaymentCancelRequest: da.StandalonePaymentCancelRequest,
                StandalonePaymentCancelResponse: ca.StandalonePaymentCancelResponse,
                StoredDetails: ma.StoredDetails,
                StoredPaymentMethod: ua.StoredPaymentMethod,
                StoredPaymentMethodDetails: ha.StoredPaymentMethodDetails,
                StoredPaymentMethodRequest: pa.StoredPaymentMethodRequest,
                StoredPaymentMethodResource: ya.StoredPaymentMethodResource,
                SubInputDetail: ga.SubInputDetail,
                SubMerchant: fa.SubMerchant,
                SubMerchantInfo: _a.SubMerchantInfo,
                ThreeDS2RequestData: ba.ThreeDS2RequestData,
                ThreeDS2RequestFields: va.ThreeDS2RequestFields,
                ThreeDS2ResponseData: Ma.ThreeDS2ResponseData,
                ThreeDS2Result: wa.ThreeDS2Result,
                ThreeDSRequestData: Ta.ThreeDSRequestData,
                ThreeDSRequestorAuthenticationInfo: ka.ThreeDSRequestorAuthenticationInfo,
                ThreeDSRequestorPriorAuthenticationInfo: Da.ThreeDSRequestorPriorAuthenticationInfo,
                ThreeDSecureData: xa.ThreeDSecureData,
                UpdatePaymentLinkRequest: Aa.UpdatePaymentLinkRequest,
                UpiCollectDetails: La.UpiCollectDetails,
                UpiIntentDetails: Sa.UpiIntentDetails,
                UtilityRequest: Na.UtilityRequest,
                UtilityResponse: Pa.UtilityResponse,
                VippsDetails: Ya.VippsDetails,
                VisaCheckoutDetails: Ea.VisaCheckoutDetails,
                WeChatPayDetails: Ca.WeChatPayDetails,
                WeChatPayMiniProgramDetails: Ra.WeChatPayMiniProgramDetails,
                ZipDetails: Ia.ZipDetails
            };
            class ja {
                static findCorrectType(e, t) {
                    if (null == e)
                        return t;
                    if (-1 !== Oa.indexOf(t.toLowerCase()))
                        return t;
                    if ("Date" === t)
                        return t;
                    {
                        if (Ha[t])
                            return t;
                        if (!Fa[t])
                            return t;
                        let n = Fa[t].discriminator;
                        if (null == n)
                            return t;
                        if (e[n]) {
                            var a = e[n];
                            return Fa[a] ? a : t
                        }
                        return t
                    }
                }
                static serialize(e, t) {
                    if (null == e)
                        return e;
                    if (-1 !== Oa.indexOf(t.toLowerCase()))
                        return e;
                    if (0 === t.lastIndexOf("Array<", 0)) {
                        let a = t.replace("Array<", "");
                        a = a.substring(0, a.length - 1);
                        let n = [];
                        for (let t = 0; t < e.length; t++) {
                            let i = e[t];
                            n.push(ja.serialize(i, a))
                        }
                        return n
                    }
                    if ("Date" === t)
                        return e.toISOString();
                    if ("SaleToAcquirerData" === t) {
                        const t = JSON.stringify(e);
                        return Buffer.from(t).toString("base64")
                    }
                    {
                        if (Ha[t])
                            return e;
                        if (!Fa[t])
                            return e;
                        t = this.findCorrectType(e, t);
                        let a = Fa[t].getAttributeTypeMap()
                          , n = {};
                        for (let t = 0; t < a.length; t++) {
                            let i = a[t];
                            n[i.baseName] = ja.serialize(e[i.name], i.type)
                        }
                        return n
                    }
                }
                static deserialize(e, t) {
                    if (t = ja.findCorrectType(e, t),
                    null == e)
                        return e;
                    if (-1 !== Oa.indexOf(t.toLowerCase()))
                        return e;
                    if (0 === t.lastIndexOf("Array<", 0)) {
                        let a = t.replace("Array<", "");
                        a = a.substring(0, a.length - 1);
                        let n = [];
                        for (let t = 0; t < e.length; t++) {
                            let i = e[t];
                            n.push(ja.deserialize(i, a))
                        }
                        return n
                    }
                    if ("Date" === t)
                        return new Date(e);
                    {
                        if (Ha[t])
                            return e;
                        if (!Fa[t])
                            return e;
                        let a = new Fa[t]
                          , n = Fa[t].getAttributeTypeMap();
                        for (let t = 0; t < n.length; t++) {
                            let i = n[t];
                            a[i.name] = ja.deserialize(e[i.baseName], i.type)
                        }
                        return a
                    }
                }
            }
            t.ObjectSerializer = ja
        },
        44786: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.MolPayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.MolPayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "issuer",
                baseName: "issuer",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "MolPayDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.FpxMy = "molpay_ebanking_fpx_MY",
                    e.Th = "molpay_ebanking_TH"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.MolPayDetails || (t.MolPayDetails = {}))
        }
        ,
        64531: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Name = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Name = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "firstName",
                baseName: "firstName",
                type: "string"
            }, {
                name: "lastName",
                baseName: "lastName",
                type: "string"
            }]
        }
        ,
        62103: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.OpenInvoiceDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.OpenInvoiceDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "billingAddress",
                baseName: "billingAddress",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "string"
            }, {
                name: "personalDetails",
                baseName: "personalDetails",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "OpenInvoiceDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Openinvoice = "openinvoice",
                    e.AfterpayDirectdebit = "afterpay_directdebit",
                    e.AtomePos = "atome_pos"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.OpenInvoiceDetails || (t.OpenInvoiceDetails = {}))
        }
        ,
        58953: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PayPalDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PayPalDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "orderID",
                baseName: "orderID",
                type: "string"
            }, {
                name: "payeePreferred",
                baseName: "payeePreferred",
                type: "string"
            }, {
                name: "payerID",
                baseName: "payerID",
                type: "string"
            }, {
                name: "payerSelected",
                baseName: "payerSelected",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "subtype",
                baseName: "subtype",
                type: "PayPalDetails.SubtypeEnum"
            }, {
                name: "type",
                baseName: "type",
                type: "PayPalDetails.TypeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Redirect = "redirect",
                    e.Sdk = "sdk"
                }(t = e.SubtypeEnum || (e.SubtypeEnum = {})),
                function(e) {
                    e.Paypal = "paypal"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.PayPalDetails || (t.PayPalDetails = {}))
        }
        ,
        51611: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PayUUpiDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PayUUpiDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "shopperNotificationReference",
                baseName: "shopperNotificationReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "PayUUpiDetails.TypeEnum"
            }, {
                name: "virtualPaymentAddress",
                baseName: "virtualPaymentAddress",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.PayuInUpi = "payu_IN_upi"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.PayUUpiDetails || (t.PayUUpiDetails = {}))
        }
        ,
        92681: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PayWithGoogleDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PayWithGoogleDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "PayWithGoogleDetails.FundingSourceEnum"
            }, {
                name: "googlePayToken",
                baseName: "googlePayToken",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "PayWithGoogleDetails.TypeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {})),
                function(e) {
                    e.Paywithgoogle = "paywithgoogle"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.PayWithGoogleDetails || (t.PayWithGoogleDetails = {}))
        }
        ,
        24524: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PayWithGoogleDonations = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PayWithGoogleDonations = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "PayWithGoogleDonations.FundingSourceEnum"
            }, {
                name: "googlePayToken",
                baseName: "googlePayToken",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "PayWithGoogleDonations.TypeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {})),
                function(e) {
                    e.Paywithgoogle = "paywithgoogle"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.PayWithGoogleDonations || (t.PayWithGoogleDonations = {}))
        }
        ,
        68344: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentAmountUpdateRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentAmountUpdateRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "industryUsage",
                baseName: "industryUsage",
                type: "PaymentAmountUpdateRequest.IndustryUsageEnum"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.DelayedCharge = "delayedCharge",
                    e.Installment = "installment",
                    e.NoShow = "noShow"
                }(t = e.IndustryUsageEnum || (e.IndustryUsageEnum = {}))
            }(a = t.PaymentAmountUpdateRequest || (t.PaymentAmountUpdateRequest = {}))
        }
        ,
        38658: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentAmountUpdateResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentAmountUpdateResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "industryUsage",
                baseName: "industryUsage",
                type: "PaymentAmountUpdateResponse.IndustryUsageEnum"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "paymentPspReference",
                baseName: "paymentPspReference",
                type: "string"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }, {
                name: "status",
                baseName: "status",
                type: "PaymentAmountUpdateResponse.StatusEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.DelayedCharge = "delayedCharge",
                    e.Installment = "installment",
                    e.NoShow = "noShow"
                }(t = e.IndustryUsageEnum || (e.IndustryUsageEnum = {})),
                function(e) {
                    e.Received = "received"
                }(a = e.StatusEnum || (e.StatusEnum = {}))
            }(a = t.PaymentAmountUpdateResponse || (t.PaymentAmountUpdateResponse = {}))
        }
        ,
        27821: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentCancelRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentCancelRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }]
        }
        ,
        49785: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentCancelResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentCancelResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "paymentPspReference",
                baseName: "paymentPspReference",
                type: "string"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "status",
                baseName: "status",
                type: "PaymentCancelResponse.StatusEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Received = "received"
                }(t = e.StatusEnum || (e.StatusEnum = {}))
            }(a = t.PaymentCancelResponse || (t.PaymentCancelResponse = {}))
        }
        ,
        80811: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentCaptureRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentCaptureRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "platformChargebackLogic",
                baseName: "platformChargebackLogic",
                type: "PlatformChargebackLogic"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }, {
                name: "subMerchants",
                baseName: "subMerchants",
                type: "Array<SubMerchantInfo>"
            }]
        }
        ,
        87151: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentCaptureResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentCaptureResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "paymentPspReference",
                baseName: "paymentPspReference",
                type: "string"
            }, {
                name: "platformChargebackLogic",
                baseName: "platformChargebackLogic",
                type: "PlatformChargebackLogic"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }, {
                name: "status",
                baseName: "status",
                type: "PaymentCaptureResponse.StatusEnum"
            }, {
                name: "subMerchants",
                baseName: "subMerchants",
                type: "Array<SubMerchantInfo>"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Received = "received"
                }(t = e.StatusEnum || (e.StatusEnum = {}))
            }(a = t.PaymentCaptureResponse || (t.PaymentCaptureResponse = {}))
        }
        ,
        29654: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentCompletionDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentCompletionDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "MD",
                baseName: "MD",
                type: "string"
            }, {
                name: "PaReq",
                baseName: "PaReq",
                type: "string"
            }, {
                name: "PaRes",
                baseName: "PaRes",
                type: "string"
            }, {
                name: "authorization_token",
                baseName: "authorization_token",
                type: "string"
            }, {
                name: "billingToken",
                baseName: "billingToken",
                type: "string"
            }, {
                name: "cupsecureplus_smscode",
                baseName: "cupsecureplus.smscode",
                type: "string"
            }, {
                name: "facilitatorAccessToken",
                baseName: "facilitatorAccessToken",
                type: "string"
            }, {
                name: "oneTimePasscode",
                baseName: "oneTimePasscode",
                type: "string"
            }, {
                name: "orderID",
                baseName: "orderID",
                type: "string"
            }, {
                name: "payerID",
                baseName: "payerID",
                type: "string"
            }, {
                name: "payload",
                baseName: "payload",
                type: "string"
            }, {
                name: "paymentID",
                baseName: "paymentID",
                type: "string"
            }, {
                name: "paymentStatus",
                baseName: "paymentStatus",
                type: "string"
            }, {
                name: "redirectResult",
                baseName: "redirectResult",
                type: "string"
            }, {
                name: "resultCode",
                baseName: "resultCode",
                type: "string"
            }, {
                name: "threeDSResult",
                baseName: "threeDSResult",
                type: "string"
            }, {
                name: "threeds2_challengeResult",
                baseName: "threeds2.challengeResult",
                type: "string"
            }, {
                name: "threeds2_fingerprint",
                baseName: "threeds2.fingerprint",
                type: "string"
            }, {
                name: "vaultToken",
                baseName: "vaultToken",
                type: "string"
            }]
        }
        ,
        51864: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "PaymentDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Alipay = "alipay",
                    e.Multibanco = "multibanco",
                    e.BankTransferIban = "bankTransfer_IBAN",
                    e.Paybright = "paybright",
                    e.Paynow = "paynow",
                    e.Affirm = "affirm",
                    e.AffirmPos = "affirm_pos",
                    e.Trustly = "trustly",
                    e.Trustlyvector = "trustlyvector",
                    e.Oney = "oney",
                    e.Facilypay = "facilypay",
                    e.Facilypay3x = "facilypay_3x",
                    e.Facilypay4x = "facilypay_4x",
                    e.Facilypay6x = "facilypay_6x",
                    e.Facilypay10x = "facilypay_10x",
                    e.Facilypay12x = "facilypay_12x",
                    e.Unionpay = "unionpay",
                    e.KcpBanktransfer = "kcp_banktransfer",
                    e.KcpPayco = "kcp_payco",
                    e.KcpCreditcard = "kcp_creditcard",
                    e.WechatpaySdk = "wechatpaySDK",
                    e.WechatpayQr = "wechatpayQR",
                    e.WechatpayWeb = "wechatpayWeb",
                    e.MolpayBoost = "molpay_boost",
                    e.WalletIn = "wallet_IN",
                    e.PayuInCashcard = "payu_IN_cashcard",
                    e.PayuInNb = "payu_IN_nb",
                    e.UpiQr = "upi_qr",
                    e.Paytm = "paytm",
                    e.MolpayEbankingVn = "molpay_ebanking_VN",
                    e.Paybybank = "paybybank",
                    e.EbankingFi = "ebanking_FI",
                    e.MolpayEbankingMy = "molpay_ebanking_MY",
                    e.MolpayEbankingDirectMy = "molpay_ebanking_direct_MY",
                    e.Swish = "swish",
                    e.Pix = "pix",
                    e.Walley = "walley",
                    e.WalleyB2b = "walley_b2b",
                    e.Alma = "alma",
                    e.Paypo = "paypo",
                    e.MolpayFpx = "molpay_fpx",
                    e.Konbini = "konbini",
                    e.DirectEbanking = "directEbanking",
                    e.Boletobancario = "boletobancario",
                    e.Neteller = "neteller",
                    e.Paysafecard = "paysafecard",
                    e.Cashticket = "cashticket",
                    e.Ikano = "ikano",
                    e.Karenmillen = "karenmillen",
                    e.Oasis = "oasis",
                    e.Warehouse = "warehouse",
                    e.PrimeiropayBoleto = "primeiropay_boleto",
                    e.Mada = "mada",
                    e.Benefit = "benefit",
                    e.Knet = "knet",
                    e.Omannet = "omannet",
                    e.GopayWallet = "gopay_wallet",
                    e.KcpNaverpay = "kcp_naverpay",
                    e.OnlinebankingIn = "onlinebanking_IN",
                    e.Fawry = "fawry",
                    e.Atome = "atome",
                    e.Moneybookers = "moneybookers",
                    e.Naps = "naps",
                    e.Nordea = "nordea",
                    e.BoletobancarioBradesco = "boletobancario_bradesco",
                    e.BoletobancarioItau = "boletobancario_itau",
                    e.BoletobancarioSantander = "boletobancario_santander",
                    e.BoletobancarioBancodobrasil = "boletobancario_bancodobrasil",
                    e.BoletobancarioHsbc = "boletobancario_hsbc",
                    e.MolpayMaybank2u = "molpay_maybank2u",
                    e.MolpayCimb = "molpay_cimb",
                    e.MolpayRhb = "molpay_rhb",
                    e.MolpayAmb = "molpay_amb",
                    e.MolpayHlb = "molpay_hlb",
                    e.MolpayAffinEpg = "molpay_affin_epg",
                    e.MolpayBankislam = "molpay_bankislam",
                    e.MolpayPublicbank = "molpay_publicbank",
                    e.FpxAgrobank = "fpx_agrobank",
                    e.Touchngo = "touchngo",
                    e.Maybank2uMae = "maybank2u_mae",
                    e.Duitnow = "duitnow",
                    e.Promptpay = "promptpay",
                    e.TwintPos = "twint_pos",
                    e.AlipayHk = "alipay_hk",
                    e.AlipayHkWeb = "alipay_hk_web",
                    e.AlipayHkWap = "alipay_hk_wap",
                    e.AlipayWap = "alipay_wap",
                    e.Balanceplatform = "balanceplatform"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.PaymentDetails || (t.PaymentDetails = {}))
        }
        ,
        89355: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentDetailsRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentDetailsRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "authenticationData",
                baseName: "authenticationData",
                type: "DetailsRequestAuthenticationData"
            }, {
                name: "details",
                baseName: "details",
                type: "PaymentCompletionDetails"
            }, {
                name: "paymentData",
                baseName: "paymentData",
                type: "string"
            }, {
                name: "threeDSAuthenticationOnly",
                baseName: "threeDSAuthenticationOnly",
                type: "boolean"
            }]
        }
        ,
        46095: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentDetailsResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentDetailsResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "donationToken",
                baseName: "donationToken",
                type: "string"
            }, {
                name: "fraudResult",
                baseName: "fraudResult",
                type: "FraudResult"
            }, {
                name: "merchantReference",
                baseName: "merchantReference",
                type: "string"
            }, {
                name: "order",
                baseName: "order",
                type: "CheckoutOrderResponse"
            }, {
                name: "paymentMethod",
                baseName: "paymentMethod",
                type: "ResponsePaymentMethod"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "refusalReason",
                baseName: "refusalReason",
                type: "string"
            }, {
                name: "refusalReasonCode",
                baseName: "refusalReasonCode",
                type: "string"
            }, {
                name: "resultCode",
                baseName: "resultCode",
                type: "PaymentDetailsResponse.ResultCodeEnum"
            }, {
                name: "shopperLocale",
                baseName: "shopperLocale",
                type: "string"
            }, {
                name: "threeDS2ResponseData",
                baseName: "threeDS2ResponseData",
                type: "ThreeDS2ResponseData"
            }, {
                name: "threeDS2Result",
                baseName: "threeDS2Result",
                type: "ThreeDS2Result"
            }, {
                name: "threeDSPaymentData",
                baseName: "threeDSPaymentData",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.AuthenticationFinished = "AuthenticationFinished",
                    e.AuthenticationNotRequired = "AuthenticationNotRequired",
                    e.Authorised = "Authorised",
                    e.Cancelled = "Cancelled",
                    e.ChallengeShopper = "ChallengeShopper",
                    e.Error = "Error",
                    e.IdentifyShopper = "IdentifyShopper",
                    e.PartiallyAuthorised = "PartiallyAuthorised",
                    e.Pending = "Pending",
                    e.PresentToShopper = "PresentToShopper",
                    e.Received = "Received",
                    e.RedirectShopper = "RedirectShopper",
                    e.Refused = "Refused",
                    e.Success = "Success"
                }(t = e.ResultCodeEnum || (e.ResultCodeEnum = {}))
            }(a = t.PaymentDetailsResponse || (t.PaymentDetailsResponse = {}))
        }
        ,
        17092: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentLinkRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentLinkRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "allowedPaymentMethods",
                baseName: "allowedPaymentMethods",
                type: "Array<string>"
            }, {
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "billingAddress",
                baseName: "billingAddress",
                type: "Address"
            }, {
                name: "blockedPaymentMethods",
                baseName: "blockedPaymentMethods",
                type: "Array<string>"
            }, {
                name: "captureDelayHours",
                baseName: "captureDelayHours",
                type: "number"
            }, {
                name: "countryCode",
                baseName: "countryCode",
                type: "string"
            }, {
                name: "dateOfBirth",
                baseName: "dateOfBirth",
                type: "string"
            }, {
                name: "deliverAt",
                baseName: "deliverAt",
                type: "Date"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "Address"
            }, {
                name: "description",
                baseName: "description",
                type: "string"
            }, {
                name: "expiresAt",
                baseName: "expiresAt",
                type: "Date"
            }, {
                name: "installmentOptions",
                baseName: "installmentOptions",
                type: "{ [key: string]: InstallmentOption; }"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "manualCapture",
                baseName: "manualCapture",
                type: "boolean"
            }, {
                name: "mcc",
                baseName: "mcc",
                type: "string"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "merchantOrderReference",
                baseName: "merchantOrderReference",
                type: "string"
            }, {
                name: "metadata",
                baseName: "metadata",
                type: "{ [key: string]: string; }"
            }, {
                name: "recurringProcessingModel",
                baseName: "recurringProcessingModel",
                type: "PaymentLinkRequest.RecurringProcessingModelEnum"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "requiredShopperFields",
                baseName: "requiredShopperFields",
                type: "Array<PaymentLinkRequest.RequiredShopperFieldsEnum>"
            }, {
                name: "returnUrl",
                baseName: "returnUrl",
                type: "string"
            }, {
                name: "reusable",
                baseName: "reusable",
                type: "boolean"
            }, {
                name: "riskData",
                baseName: "riskData",
                type: "RiskData"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperLocale",
                baseName: "shopperLocale",
                type: "string"
            }, {
                name: "shopperName",
                baseName: "shopperName",
                type: "Name"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "shopperStatement",
                baseName: "shopperStatement",
                type: "string"
            }, {
                name: "showRemovePaymentMethodButton",
                baseName: "showRemovePaymentMethodButton",
                type: "boolean"
            }, {
                name: "socialSecurityNumber",
                baseName: "socialSecurityNumber",
                type: "string"
            }, {
                name: "splitCardFundingSources",
                baseName: "splitCardFundingSources",
                type: "boolean"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }, {
                name: "store",
                baseName: "store",
                type: "string"
            }, {
                name: "storePaymentMethodMode",
                baseName: "storePaymentMethodMode",
                type: "PaymentLinkRequest.StorePaymentMethodModeEnum"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "themeId",
                baseName: "themeId",
                type: "string"
            }],
            function(e) {
                let t, a, n;
                !function(e) {
                    e.CardOnFile = "CardOnFile",
                    e.Subscription = "Subscription",
                    e.UnscheduledCardOnFile = "UnscheduledCardOnFile"
                }(t = e.RecurringProcessingModelEnum || (e.RecurringProcessingModelEnum = {})),
                function(e) {
                    e.BillingAddress = "billingAddress",
                    e.DeliveryAddress = "deliveryAddress",
                    e.ShopperEmail = "shopperEmail",
                    e.ShopperName = "shopperName",
                    e.TelephoneNumber = "telephoneNumber"
                }(a = e.RequiredShopperFieldsEnum || (e.RequiredShopperFieldsEnum = {})),
                function(e) {
                    e.AskForConsent = "askForConsent",
                    e.Disabled = "disabled",
                    e.Enabled = "enabled"
                }(n = e.StorePaymentMethodModeEnum || (e.StorePaymentMethodModeEnum = {}))
            }(a = t.PaymentLinkRequest || (t.PaymentLinkRequest = {}))
        }
        ,
        53507: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentLinkResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentLinkResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "allowedPaymentMethods",
                baseName: "allowedPaymentMethods",
                type: "Array<string>"
            }, {
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "billingAddress",
                baseName: "billingAddress",
                type: "Address"
            }, {
                name: "blockedPaymentMethods",
                baseName: "blockedPaymentMethods",
                type: "Array<string>"
            }, {
                name: "captureDelayHours",
                baseName: "captureDelayHours",
                type: "number"
            }, {
                name: "countryCode",
                baseName: "countryCode",
                type: "string"
            }, {
                name: "dateOfBirth",
                baseName: "dateOfBirth",
                type: "string"
            }, {
                name: "deliverAt",
                baseName: "deliverAt",
                type: "Date"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "Address"
            }, {
                name: "description",
                baseName: "description",
                type: "string"
            }, {
                name: "expiresAt",
                baseName: "expiresAt",
                type: "Date"
            }, {
                name: "id",
                baseName: "id",
                type: "string"
            }, {
                name: "installmentOptions",
                baseName: "installmentOptions",
                type: "{ [key: string]: InstallmentOption; }"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "manualCapture",
                baseName: "manualCapture",
                type: "boolean"
            }, {
                name: "mcc",
                baseName: "mcc",
                type: "string"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "merchantOrderReference",
                baseName: "merchantOrderReference",
                type: "string"
            }, {
                name: "metadata",
                baseName: "metadata",
                type: "{ [key: string]: string; }"
            }, {
                name: "recurringProcessingModel",
                baseName: "recurringProcessingModel",
                type: "PaymentLinkResponse.RecurringProcessingModelEnum"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "requiredShopperFields",
                baseName: "requiredShopperFields",
                type: "Array<PaymentLinkResponse.RequiredShopperFieldsEnum>"
            }, {
                name: "returnUrl",
                baseName: "returnUrl",
                type: "string"
            }, {
                name: "reusable",
                baseName: "reusable",
                type: "boolean"
            }, {
                name: "riskData",
                baseName: "riskData",
                type: "RiskData"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperLocale",
                baseName: "shopperLocale",
                type: "string"
            }, {
                name: "shopperName",
                baseName: "shopperName",
                type: "Name"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "shopperStatement",
                baseName: "shopperStatement",
                type: "string"
            }, {
                name: "showRemovePaymentMethodButton",
                baseName: "showRemovePaymentMethodButton",
                type: "boolean"
            }, {
                name: "socialSecurityNumber",
                baseName: "socialSecurityNumber",
                type: "string"
            }, {
                name: "splitCardFundingSources",
                baseName: "splitCardFundingSources",
                type: "boolean"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }, {
                name: "status",
                baseName: "status",
                type: "PaymentLinkResponse.StatusEnum"
            }, {
                name: "store",
                baseName: "store",
                type: "string"
            }, {
                name: "storePaymentMethodMode",
                baseName: "storePaymentMethodMode",
                type: "PaymentLinkResponse.StorePaymentMethodModeEnum"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "themeId",
                baseName: "themeId",
                type: "string"
            }, {
                name: "updatedAt",
                baseName: "updatedAt",
                type: "Date"
            }, {
                name: "url",
                baseName: "url",
                type: "string"
            }],
            function(e) {
                let t, a, n, i;
                !function(e) {
                    e.CardOnFile = "CardOnFile",
                    e.Subscription = "Subscription",
                    e.UnscheduledCardOnFile = "UnscheduledCardOnFile"
                }(t = e.RecurringProcessingModelEnum || (e.RecurringProcessingModelEnum = {})),
                function(e) {
                    e.BillingAddress = "billingAddress",
                    e.DeliveryAddress = "deliveryAddress",
                    e.ShopperEmail = "shopperEmail",
                    e.ShopperName = "shopperName",
                    e.TelephoneNumber = "telephoneNumber"
                }(a = e.RequiredShopperFieldsEnum || (e.RequiredShopperFieldsEnum = {})),
                function(e) {
                    e.Active = "active",
                    e.Completed = "completed",
                    e.Expired = "expired",
                    e.Paid = "paid",
                    e.PaymentPending = "paymentPending"
                }(n = e.StatusEnum || (e.StatusEnum = {})),
                function(e) {
                    e.AskForConsent = "askForConsent",
                    e.Disabled = "disabled",
                    e.Enabled = "enabled"
                }(i = e.StorePaymentMethodModeEnum || (e.StorePaymentMethodModeEnum = {}))
            }(a = t.PaymentLinkResponse || (t.PaymentLinkResponse = {}))
        }
        ,
        81989: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentMethod = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentMethod = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "brand",
                baseName: "brand",
                type: "string"
            }, {
                name: "brands",
                baseName: "brands",
                type: "Array<string>"
            }, {
                name: "configuration",
                baseName: "configuration",
                type: "{ [key: string]: string; }"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "PaymentMethod.FundingSourceEnum"
            }, {
                name: "group",
                baseName: "group",
                type: "PaymentMethodGroup"
            }, {
                name: "inputDetails",
                baseName: "inputDetails",
                type: "Array<InputDetail>"
            }, {
                name: "issuers",
                baseName: "issuers",
                type: "Array<PaymentMethodIssuer>"
            }, {
                name: "name",
                baseName: "name",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {}))
            }(a = t.PaymentMethod || (t.PaymentMethod = {}))
        }
        ,
        22822: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentMethodGroup = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentMethodGroup = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "name",
                baseName: "name",
                type: "string"
            }, {
                name: "paymentMethodData",
                baseName: "paymentMethodData",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "string"
            }]
        }
        ,
        4738: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentMethodIssuer = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentMethodIssuer = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "disabled",
                baseName: "disabled",
                type: "boolean"
            }, {
                name: "id",
                baseName: "id",
                type: "string"
            }, {
                name: "name",
                baseName: "name",
                type: "string"
            }]
        }
        ,
        1439: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentMethodToStore = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentMethodToStore = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "brand",
                baseName: "brand",
                type: "string"
            }, {
                name: "cvc",
                baseName: "cvc",
                type: "string"
            }, {
                name: "encryptedCardNumber",
                baseName: "encryptedCardNumber",
                type: "string"
            }, {
                name: "encryptedExpiryMonth",
                baseName: "encryptedExpiryMonth",
                type: "string"
            }, {
                name: "encryptedExpiryYear",
                baseName: "encryptedExpiryYear",
                type: "string"
            }, {
                name: "encryptedSecurityCode",
                baseName: "encryptedSecurityCode",
                type: "string"
            }, {
                name: "expiryMonth",
                baseName: "expiryMonth",
                type: "string"
            }, {
                name: "expiryYear",
                baseName: "expiryYear",
                type: "string"
            }, {
                name: "holderName",
                baseName: "holderName",
                type: "string"
            }, {
                name: "number",
                baseName: "number",
                type: "string"
            }]
        }
        ,
        63315: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentMethodsRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentMethodsRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "allowedPaymentMethods",
                baseName: "allowedPaymentMethods",
                type: "Array<string>"
            }, {
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "blockedPaymentMethods",
                baseName: "blockedPaymentMethods",
                type: "Array<string>"
            }, {
                name: "channel",
                baseName: "channel",
                type: "PaymentMethodsRequest.ChannelEnum"
            }, {
                name: "countryCode",
                baseName: "countryCode",
                type: "string"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "order",
                baseName: "order",
                type: "EncryptedOrderData"
            }, {
                name: "shopperLocale",
                baseName: "shopperLocale",
                type: "string"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "splitCardFundingSources",
                baseName: "splitCardFundingSources",
                type: "boolean"
            }, {
                name: "store",
                baseName: "store",
                type: "string"
            }, {
                name: "storeFiltrationMode",
                baseName: "storeFiltrationMode",
                type: "PaymentMethodsRequest.StoreFiltrationModeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.IOs = "iOS",
                    e.Android = "Android",
                    e.Web = "Web"
                }(t = e.ChannelEnum || (e.ChannelEnum = {})),
                function(e) {
                    e.Exclusive = "exclusive",
                    e.Inclusive = "inclusive",
                    e.SkipFilter = "skipFilter"
                }(a = e.StoreFiltrationModeEnum || (e.StoreFiltrationModeEnum = {}))
            }(a = t.PaymentMethodsRequest || (t.PaymentMethodsRequest = {}))
        }
        ,
        43079: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentMethodsResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentMethodsResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "paymentMethods",
                baseName: "paymentMethods",
                type: "Array<PaymentMethod>"
            }, {
                name: "storedPaymentMethods",
                baseName: "storedPaymentMethods",
                type: "Array<StoredPaymentMethod>"
            }]
        }
        ,
        79049: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentRefundRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentRefundRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "merchantRefundReason",
                baseName: "merchantRefundReason",
                type: "PaymentRefundRequest.MerchantRefundReasonEnum | null"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }, {
                name: "store",
                baseName: "store",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Fraud = "FRAUD",
                    e.CustomerRequest = "CUSTOMER REQUEST",
                    e.Return = "RETURN",
                    e.Duplicate = "DUPLICATE",
                    e.Other = "OTHER"
                }(t = e.MerchantRefundReasonEnum || (e.MerchantRefundReasonEnum = {}))
            }(a = t.PaymentRefundRequest || (t.PaymentRefundRequest = {}))
        }
        ,
        97197: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentRefundResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentRefundResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "merchantRefundReason",
                baseName: "merchantRefundReason",
                type: "PaymentRefundResponse.MerchantRefundReasonEnum | null"
            }, {
                name: "paymentPspReference",
                baseName: "paymentPspReference",
                type: "string"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }, {
                name: "status",
                baseName: "status",
                type: "PaymentRefundResponse.StatusEnum"
            }, {
                name: "store",
                baseName: "store",
                type: "string"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Fraud = "FRAUD",
                    e.CustomerRequest = "CUSTOMER REQUEST",
                    e.Return = "RETURN",
                    e.Duplicate = "DUPLICATE",
                    e.Other = "OTHER"
                }(t = e.MerchantRefundReasonEnum || (e.MerchantRefundReasonEnum = {})),
                function(e) {
                    e.Received = "received"
                }(a = e.StatusEnum || (e.StatusEnum = {}))
            }(a = t.PaymentRefundResponse || (t.PaymentRefundResponse = {}))
        }
        ,
        78707: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "accountInfo",
                baseName: "accountInfo",
                type: "AccountInfo"
            }, {
                name: "additionalAmount",
                baseName: "additionalAmount",
                type: "Amount"
            }, {
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "authenticationData",
                baseName: "authenticationData",
                type: "AuthenticationData"
            }, {
                name: "billingAddress",
                baseName: "billingAddress",
                type: "BillingAddress"
            }, {
                name: "browserInfo",
                baseName: "browserInfo",
                type: "BrowserInfo"
            }, {
                name: "captureDelayHours",
                baseName: "captureDelayHours",
                type: "number"
            }, {
                name: "channel",
                baseName: "channel",
                type: "PaymentRequest.ChannelEnum"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "company",
                baseName: "company",
                type: "Company"
            }, {
                name: "conversionId",
                baseName: "conversionId",
                type: "string"
            }, {
                name: "countryCode",
                baseName: "countryCode",
                type: "string"
            }, {
                name: "dateOfBirth",
                baseName: "dateOfBirth",
                type: "Date"
            }, {
                name: "dccQuote",
                baseName: "dccQuote",
                type: "ForexQuote"
            }, {
                name: "deliverAt",
                baseName: "deliverAt",
                type: "Date"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "DeliveryAddress"
            }, {
                name: "deliveryDate",
                baseName: "deliveryDate",
                type: "Date"
            }, {
                name: "deviceFingerprint",
                baseName: "deviceFingerprint",
                type: "string"
            }, {
                name: "enableOneClick",
                baseName: "enableOneClick",
                type: "boolean"
            }, {
                name: "enablePayOut",
                baseName: "enablePayOut",
                type: "boolean"
            }, {
                name: "enableRecurring",
                baseName: "enableRecurring",
                type: "boolean"
            }, {
                name: "entityType",
                baseName: "entityType",
                type: "PaymentRequest.EntityTypeEnum"
            }, {
                name: "fraudOffset",
                baseName: "fraudOffset",
                type: "number"
            }, {
                name: "fundOrigin",
                baseName: "fundOrigin",
                type: "FundOrigin"
            }, {
                name: "fundRecipient",
                baseName: "fundRecipient",
                type: "FundRecipient"
            }, {
                name: "industryUsage",
                baseName: "industryUsage",
                type: "PaymentRequest.IndustryUsageEnum"
            }, {
                name: "installments",
                baseName: "installments",
                type: "Installments"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "localizedShopperStatement",
                baseName: "localizedShopperStatement",
                type: "{ [key: string]: string; }"
            }, {
                name: "mandate",
                baseName: "mandate",
                type: "Mandate"
            }, {
                name: "mcc",
                baseName: "mcc",
                type: "string"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "merchantOrderReference",
                baseName: "merchantOrderReference",
                type: "string"
            }, {
                name: "merchantRiskIndicator",
                baseName: "merchantRiskIndicator",
                type: "MerchantRiskIndicator"
            }, {
                name: "metadata",
                baseName: "metadata",
                type: "{ [key: string]: string; }"
            }, {
                name: "mpiData",
                baseName: "mpiData",
                type: "ThreeDSecureData"
            }, {
                name: "order",
                baseName: "order",
                type: "EncryptedOrderData"
            }, {
                name: "orderReference",
                baseName: "orderReference",
                type: "string"
            }, {
                name: "origin",
                baseName: "origin",
                type: "string"
            }, {
                name: "paymentMethod",
                baseName: "paymentMethod",
                type: "AchDetails | AfterpayDetails | AmazonPayDetails | AncvDetails | AndroidPayDetails | ApplePayDetails | BacsDirectDebitDetails | BillDeskDetails | BlikDetails | CardDetails | CashAppDetails | CellulantDetails | DokuDetails | DotpayDetails | DragonpayDetails | EcontextVoucherDetails | GenericIssuerPaymentMethodDetails | GiropayDetails | GooglePayDetails | IdealDetails | KlarnaDetails | MasterpassDetails | MbwayDetails | MobilePayDetails | MolPayDetails | OpenInvoiceDetails | PayPalDetails | PayUUpiDetails | PayWithGoogleDetails | PaymentDetails | RatepayDetails | SamsungPayDetails | SepaDirectDebitDetails | StoredPaymentMethodDetails | UpiCollectDetails | UpiIntentDetails | VippsDetails | VisaCheckoutDetails | WeChatPayDetails | WeChatPayMiniProgramDetails | ZipDetails | null"
            }, {
                name: "platformChargebackLogic",
                baseName: "platformChargebackLogic",
                type: "PlatformChargebackLogic"
            }, {
                name: "recurringExpiry",
                baseName: "recurringExpiry",
                type: "string"
            }, {
                name: "recurringFrequency",
                baseName: "recurringFrequency",
                type: "string"
            }, {
                name: "recurringProcessingModel",
                baseName: "recurringProcessingModel",
                type: "PaymentRequest.RecurringProcessingModelEnum"
            }, {
                name: "redirectFromIssuerMethod",
                baseName: "redirectFromIssuerMethod",
                type: "string"
            }, {
                name: "redirectToIssuerMethod",
                baseName: "redirectToIssuerMethod",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "returnUrl",
                baseName: "returnUrl",
                type: "string"
            }, {
                name: "riskData",
                baseName: "riskData",
                type: "RiskData"
            }, {
                name: "sessionValidity",
                baseName: "sessionValidity",
                type: "string"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperIP",
                baseName: "shopperIP",
                type: "string"
            }, {
                name: "shopperInteraction",
                baseName: "shopperInteraction",
                type: "PaymentRequest.ShopperInteractionEnum"
            }, {
                name: "shopperLocale",
                baseName: "shopperLocale",
                type: "string"
            }, {
                name: "shopperName",
                baseName: "shopperName",
                type: "Name"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "shopperStatement",
                baseName: "shopperStatement",
                type: "string"
            }, {
                name: "socialSecurityNumber",
                baseName: "socialSecurityNumber",
                type: "string"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }, {
                name: "store",
                baseName: "store",
                type: "string"
            }, {
                name: "storePaymentMethod",
                baseName: "storePaymentMethod",
                type: "boolean"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "threeDS2RequestData",
                baseName: "threeDS2RequestData",
                type: "ThreeDS2RequestFields"
            }, {
                name: "threeDSAuthenticationOnly",
                baseName: "threeDSAuthenticationOnly",
                type: "boolean"
            }, {
                name: "trustedShopper",
                baseName: "trustedShopper",
                type: "boolean"
            }],
            function(e) {
                let t, a, n, i, s;
                !function(e) {
                    e.IOs = "iOS",
                    e.Android = "Android",
                    e.Web = "Web"
                }(t = e.ChannelEnum || (e.ChannelEnum = {})),
                function(e) {
                    e.NaturalPerson = "NaturalPerson",
                    e.CompanyName = "CompanyName"
                }(a = e.EntityTypeEnum || (e.EntityTypeEnum = {})),
                function(e) {
                    e.DelayedCharge = "delayedCharge",
                    e.Installment = "installment",
                    e.NoShow = "noShow"
                }(n = e.IndustryUsageEnum || (e.IndustryUsageEnum = {})),
                function(e) {
                    e.CardOnFile = "CardOnFile",
                    e.Subscription = "Subscription",
                    e.UnscheduledCardOnFile = "UnscheduledCardOnFile"
                }(i = e.RecurringProcessingModelEnum || (e.RecurringProcessingModelEnum = {})),
                function(e) {
                    e.Ecommerce = "Ecommerce",
                    e.ContAuth = "ContAuth",
                    e.Moto = "Moto",
                    e.Pos = "POS"
                }(s = e.ShopperInteractionEnum || (e.ShopperInteractionEnum = {}))
            }(a = t.PaymentRequest || (t.PaymentRequest = {}))
        }
        ,
        92135: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "action",
                baseName: "action",
                type: "CheckoutAwaitAction | CheckoutDelegatedAuthenticationAction | CheckoutNativeRedirectAction | CheckoutQrCodeAction | CheckoutRedirectAction | CheckoutSDKAction | CheckoutThreeDS2Action | CheckoutVoucherAction | null"
            }, {
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "donationToken",
                baseName: "donationToken",
                type: "string"
            }, {
                name: "fraudResult",
                baseName: "fraudResult",
                type: "FraudResult"
            }, {
                name: "merchantReference",
                baseName: "merchantReference",
                type: "string"
            }, {
                name: "order",
                baseName: "order",
                type: "CheckoutOrderResponse"
            }, {
                name: "paymentMethod",
                baseName: "paymentMethod",
                type: "ResponsePaymentMethod"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "refusalReason",
                baseName: "refusalReason",
                type: "string"
            }, {
                name: "refusalReasonCode",
                baseName: "refusalReasonCode",
                type: "string"
            }, {
                name: "resultCode",
                baseName: "resultCode",
                type: "PaymentResponse.ResultCodeEnum"
            }, {
                name: "threeDS2ResponseData",
                baseName: "threeDS2ResponseData",
                type: "ThreeDS2ResponseData"
            }, {
                name: "threeDS2Result",
                baseName: "threeDS2Result",
                type: "ThreeDS2Result"
            }, {
                name: "threeDSPaymentData",
                baseName: "threeDSPaymentData",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.AuthenticationFinished = "AuthenticationFinished",
                    e.AuthenticationNotRequired = "AuthenticationNotRequired",
                    e.Authorised = "Authorised",
                    e.Cancelled = "Cancelled",
                    e.ChallengeShopper = "ChallengeShopper",
                    e.Error = "Error",
                    e.IdentifyShopper = "IdentifyShopper",
                    e.PartiallyAuthorised = "PartiallyAuthorised",
                    e.Pending = "Pending",
                    e.PresentToShopper = "PresentToShopper",
                    e.Received = "Received",
                    e.RedirectShopper = "RedirectShopper",
                    e.Refused = "Refused",
                    e.Success = "Success"
                }(t = e.ResultCodeEnum || (e.ResultCodeEnum = {}))
            }(a = t.PaymentResponse || (t.PaymentResponse = {}))
        }
        ,
        2837: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentReversalRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentReversalRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }]
        }
        ,
        68209: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentReversalResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentReversalResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "paymentPspReference",
                baseName: "paymentPspReference",
                type: "string"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "status",
                baseName: "status",
                type: "PaymentReversalResponse.StatusEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Received = "received"
                }(t = e.StatusEnum || (e.StatusEnum = {}))
            }(a = t.PaymentReversalResponse || (t.PaymentReversalResponse = {}))
        }
        ,
        59566: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentSetupRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentSetupRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "additionalAmount",
                baseName: "additionalAmount",
                type: "Amount"
            }, {
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "allowedPaymentMethods",
                baseName: "allowedPaymentMethods",
                type: "Array<string>"
            }, {
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "billingAddress",
                baseName: "billingAddress",
                type: "Address"
            }, {
                name: "blockedPaymentMethods",
                baseName: "blockedPaymentMethods",
                type: "Array<string>"
            }, {
                name: "captureDelayHours",
                baseName: "captureDelayHours",
                type: "number"
            }, {
                name: "channel",
                baseName: "channel",
                type: "PaymentSetupRequest.ChannelEnum"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "company",
                baseName: "company",
                type: "Company"
            }, {
                name: "configuration",
                baseName: "configuration",
                type: "Configuration"
            }, {
                name: "conversionId",
                baseName: "conversionId",
                type: "string"
            }, {
                name: "countryCode",
                baseName: "countryCode",
                type: "string"
            }, {
                name: "dateOfBirth",
                baseName: "dateOfBirth",
                type: "string"
            }, {
                name: "dccQuote",
                baseName: "dccQuote",
                type: "ForexQuote"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "Address"
            }, {
                name: "deliveryDate",
                baseName: "deliveryDate",
                type: "Date"
            }, {
                name: "enableOneClick",
                baseName: "enableOneClick",
                type: "boolean"
            }, {
                name: "enablePayOut",
                baseName: "enablePayOut",
                type: "boolean"
            }, {
                name: "enableRecurring",
                baseName: "enableRecurring",
                type: "boolean"
            }, {
                name: "entityType",
                baseName: "entityType",
                type: "PaymentSetupRequest.EntityTypeEnum"
            }, {
                name: "fraudOffset",
                baseName: "fraudOffset",
                type: "number"
            }, {
                name: "installments",
                baseName: "installments",
                type: "Installments"
            }, {
                name: "lineItems",
                baseName: "lineItems",
                type: "Array<LineItem>"
            }, {
                name: "localizedShopperStatement",
                baseName: "localizedShopperStatement",
                type: "{ [key: string]: string; }"
            }, {
                name: "mandate",
                baseName: "mandate",
                type: "Mandate"
            }, {
                name: "mcc",
                baseName: "mcc",
                type: "string"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "merchantOrderReference",
                baseName: "merchantOrderReference",
                type: "string"
            }, {
                name: "metadata",
                baseName: "metadata",
                type: "{ [key: string]: string; }"
            }, {
                name: "orderReference",
                baseName: "orderReference",
                type: "string"
            }, {
                name: "origin",
                baseName: "origin",
                type: "string"
            }, {
                name: "platformChargebackLogic",
                baseName: "platformChargebackLogic",
                type: "PlatformChargebackLogic"
            }, {
                name: "recurringExpiry",
                baseName: "recurringExpiry",
                type: "string"
            }, {
                name: "recurringFrequency",
                baseName: "recurringFrequency",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "returnUrl",
                baseName: "returnUrl",
                type: "string"
            }, {
                name: "riskData",
                baseName: "riskData",
                type: "RiskData"
            }, {
                name: "sdkVersion",
                baseName: "sdkVersion",
                type: "string"
            }, {
                name: "sessionValidity",
                baseName: "sessionValidity",
                type: "string"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperIP",
                baseName: "shopperIP",
                type: "string"
            }, {
                name: "shopperInteraction",
                baseName: "shopperInteraction",
                type: "PaymentSetupRequest.ShopperInteractionEnum"
            }, {
                name: "shopperLocale",
                baseName: "shopperLocale",
                type: "string"
            }, {
                name: "shopperName",
                baseName: "shopperName",
                type: "Name"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "shopperStatement",
                baseName: "shopperStatement",
                type: "string"
            }, {
                name: "socialSecurityNumber",
                baseName: "socialSecurityNumber",
                type: "string"
            }, {
                name: "splits",
                baseName: "splits",
                type: "Array<Split>"
            }, {
                name: "store",
                baseName: "store",
                type: "string"
            }, {
                name: "storePaymentMethod",
                baseName: "storePaymentMethod",
                type: "boolean"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "threeDSAuthenticationOnly",
                baseName: "threeDSAuthenticationOnly",
                type: "boolean"
            }, {
                name: "token",
                baseName: "token",
                type: "string"
            }, {
                name: "trustedShopper",
                baseName: "trustedShopper",
                type: "boolean"
            }],
            function(e) {
                let t, a, n;
                !function(e) {
                    e.IOs = "iOS",
                    e.Android = "Android",
                    e.Web = "Web"
                }(t = e.ChannelEnum || (e.ChannelEnum = {})),
                function(e) {
                    e.NaturalPerson = "NaturalPerson",
                    e.CompanyName = "CompanyName"
                }(a = e.EntityTypeEnum || (e.EntityTypeEnum = {})),
                function(e) {
                    e.Ecommerce = "Ecommerce",
                    e.ContAuth = "ContAuth",
                    e.Moto = "Moto",
                    e.Pos = "POS"
                }(n = e.ShopperInteractionEnum || (e.ShopperInteractionEnum = {}))
            }(a = t.PaymentSetupRequest || (t.PaymentSetupRequest = {}))
        }
        ,
        37888: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentSetupResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentSetupResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "paymentSession",
                baseName: "paymentSession",
                type: "string"
            }, {
                name: "recurringDetails",
                baseName: "recurringDetails",
                type: "Array<RecurringDetail>"
            }]
        }
        ,
        54742: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentVerificationRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentVerificationRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "payload",
                baseName: "payload",
                type: "string"
            }]
        }
        ,
        21912: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaymentVerificationResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaymentVerificationResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "fraudResult",
                baseName: "fraudResult",
                type: "FraudResult"
            }, {
                name: "merchantReference",
                baseName: "merchantReference",
                type: "string"
            }, {
                name: "order",
                baseName: "order",
                type: "CheckoutOrderResponse"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "refusalReason",
                baseName: "refusalReason",
                type: "string"
            }, {
                name: "refusalReasonCode",
                baseName: "refusalReasonCode",
                type: "string"
            }, {
                name: "resultCode",
                baseName: "resultCode",
                type: "PaymentVerificationResponse.ResultCodeEnum"
            }, {
                name: "serviceError",
                baseName: "serviceError",
                type: "ServiceErrorDetails"
            }, {
                name: "shopperLocale",
                baseName: "shopperLocale",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.AuthenticationFinished = "AuthenticationFinished",
                    e.AuthenticationNotRequired = "AuthenticationNotRequired",
                    e.Authorised = "Authorised",
                    e.Cancelled = "Cancelled",
                    e.ChallengeShopper = "ChallengeShopper",
                    e.Error = "Error",
                    e.IdentifyShopper = "IdentifyShopper",
                    e.PartiallyAuthorised = "PartiallyAuthorised",
                    e.Pending = "Pending",
                    e.PresentToShopper = "PresentToShopper",
                    e.Received = "Received",
                    e.RedirectShopper = "RedirectShopper",
                    e.Refused = "Refused",
                    e.Success = "Success"
                }(t = e.ResultCodeEnum || (e.ResultCodeEnum = {}))
            }(a = t.PaymentVerificationResponse || (t.PaymentVerificationResponse = {}))
        }
        ,
        89899: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaypalUpdateOrderRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaypalUpdateOrderRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "amount",
                baseName: "amount",
                type: "Amount"
            }, {
                name: "deliveryMethods",
                baseName: "deliveryMethods",
                type: "Array<DeliveryMethod>"
            }, {
                name: "paymentData",
                baseName: "paymentData",
                type: "string"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "sessionId",
                baseName: "sessionId",
                type: "string"
            }]
        }
        ,
        54671: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PaypalUpdateOrderResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PaypalUpdateOrderResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "paymentData",
                baseName: "paymentData",
                type: "string"
            }, {
                name: "status",
                baseName: "status",
                type: "PaypalUpdateOrderResponse.StatusEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Error = "error",
                    e.Success = "success"
                }(t = e.StatusEnum || (e.StatusEnum = {}))
            }(a = t.PaypalUpdateOrderResponse || (t.PaypalUpdateOrderResponse = {}))
        }
        ,
        31046: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Phone = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Phone = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "cc",
                baseName: "cc",
                type: "string"
            }, {
                name: "subscriber",
                baseName: "subscriber",
                type: "string"
            }]
        }
        ,
        45568: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.PlatformChargebackLogic = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.PlatformChargebackLogic = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "behavior",
                baseName: "behavior",
                type: "PlatformChargebackLogic.BehaviorEnum"
            }, {
                name: "costAllocationAccount",
                baseName: "costAllocationAccount",
                type: "string"
            }, {
                name: "targetAccount",
                baseName: "targetAccount",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.DeductAccordingToSplitRatio = "deductAccordingToSplitRatio",
                    e.DeductFromLiableAccount = "deductFromLiableAccount",
                    e.DeductFromOneBalanceAccount = "deductFromOneBalanceAccount"
                }(t = e.BehaviorEnum || (e.BehaviorEnum = {}))
            }(a = t.PlatformChargebackLogic || (t.PlatformChargebackLogic = {}))
        }
        ,
        68242: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.RatepayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.RatepayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "billingAddress",
                baseName: "billingAddress",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "string"
            }, {
                name: "personalDetails",
                baseName: "personalDetails",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "RatepayDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Ratepay = "ratepay",
                    e.RatepayDirectdebit = "ratepay_directdebit"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.RatepayDetails || (t.RatepayDetails = {}))
        }
        ,
        39689: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Recurring = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Recurring = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "contract",
                baseName: "contract",
                type: "Recurring.ContractEnum"
            }, {
                name: "recurringDetailName",
                baseName: "recurringDetailName",
                type: "string"
            }, {
                name: "recurringExpiry",
                baseName: "recurringExpiry",
                type: "Date"
            }, {
                name: "recurringFrequency",
                baseName: "recurringFrequency",
                type: "string"
            }, {
                name: "tokenService",
                baseName: "tokenService",
                type: "Recurring.TokenServiceEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Oneclick = "ONECLICK",
                    e.Recurring = "RECURRING",
                    e.Payout = "PAYOUT"
                }(t = e.ContractEnum || (e.ContractEnum = {})),
                function(e) {
                    e.Visatokenservice = "VISATOKENSERVICE",
                    e.Mctokenservice = "MCTOKENSERVICE",
                    e.Amextokenservice = "AMEXTOKENSERVICE",
                    e.TokenSharing = "TOKEN_SHARING"
                }(a = e.TokenServiceEnum || (e.TokenServiceEnum = {}))
            }(a = t.Recurring || (t.Recurring = {}))
        }
        ,
        85900: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.RecurringDetail = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.RecurringDetail = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "brand",
                baseName: "brand",
                type: "string"
            }, {
                name: "brands",
                baseName: "brands",
                type: "Array<string>"
            }, {
                name: "configuration",
                baseName: "configuration",
                type: "{ [key: string]: string; }"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "RecurringDetail.FundingSourceEnum"
            }, {
                name: "group",
                baseName: "group",
                type: "PaymentMethodGroup"
            }, {
                name: "inputDetails",
                baseName: "inputDetails",
                type: "Array<InputDetail>"
            }, {
                name: "issuers",
                baseName: "issuers",
                type: "Array<PaymentMethodIssuer>"
            }, {
                name: "name",
                baseName: "name",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedDetails",
                baseName: "storedDetails",
                type: "StoredDetails"
            }, {
                name: "type",
                baseName: "type",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {}))
            }(a = t.RecurringDetail || (t.RecurringDetail = {}))
        }
        ,
        25808: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ResponseAdditionalData3DSecure = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ResponseAdditionalData3DSecure = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "cardHolderInfo",
                baseName: "cardHolderInfo",
                type: "string"
            }, {
                name: "cavv",
                baseName: "cavv",
                type: "string"
            }, {
                name: "cavvAlgorithm",
                baseName: "cavvAlgorithm",
                type: "string"
            }, {
                name: "scaExemptionRequested",
                baseName: "scaExemptionRequested",
                type: "string"
            }, {
                name: "threeds2_cardEnrolled",
                baseName: "threeds2.cardEnrolled",
                type: "boolean"
            }]
        }
        ,
        11319: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ResponseAdditionalDataBillingAddress = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ResponseAdditionalDataBillingAddress = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "billingAddress_city",
                baseName: "billingAddress.city",
                type: "string"
            }, {
                name: "billingAddress_country",
                baseName: "billingAddress.country",
                type: "string"
            }, {
                name: "billingAddress_houseNumberOrName",
                baseName: "billingAddress.houseNumberOrName",
                type: "string"
            }, {
                name: "billingAddress_postalCode",
                baseName: "billingAddress.postalCode",
                type: "string"
            }, {
                name: "billingAddress_stateOrProvince",
                baseName: "billingAddress.stateOrProvince",
                type: "string"
            }, {
                name: "billingAddress_street",
                baseName: "billingAddress.street",
                type: "string"
            }]
        }
        ,
        96144: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ResponseAdditionalDataCard = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ResponseAdditionalDataCard = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "cardBin",
                baseName: "cardBin",
                type: "string"
            }, {
                name: "cardHolderName",
                baseName: "cardHolderName",
                type: "string"
            }, {
                name: "cardIssuingBank",
                baseName: "cardIssuingBank",
                type: "string"
            }, {
                name: "cardIssuingCountry",
                baseName: "cardIssuingCountry",
                type: "string"
            }, {
                name: "cardIssuingCurrency",
                baseName: "cardIssuingCurrency",
                type: "string"
            }, {
                name: "cardPaymentMethod",
                baseName: "cardPaymentMethod",
                type: "string"
            }, {
                name: "cardSummary",
                baseName: "cardSummary",
                type: "string"
            }, {
                name: "issuerBin",
                baseName: "issuerBin",
                type: "string"
            }]
        }
        ,
        22463: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ResponseAdditionalDataCommon = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ResponseAdditionalDataCommon = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "acquirerAccountCode",
                baseName: "acquirerAccountCode",
                type: "string"
            }, {
                name: "acquirerCode",
                baseName: "acquirerCode",
                type: "string"
            }, {
                name: "acquirerReference",
                baseName: "acquirerReference",
                type: "string"
            }, {
                name: "alias",
                baseName: "alias",
                type: "string"
            }, {
                name: "aliasType",
                baseName: "aliasType",
                type: "string"
            }, {
                name: "authCode",
                baseName: "authCode",
                type: "string"
            }, {
                name: "authorisationMid",
                baseName: "authorisationMid",
                type: "string"
            }, {
                name: "authorisedAmountCurrency",
                baseName: "authorisedAmountCurrency",
                type: "string"
            }, {
                name: "authorisedAmountValue",
                baseName: "authorisedAmountValue",
                type: "string"
            }, {
                name: "avsResult",
                baseName: "avsResult",
                type: "string"
            }, {
                name: "avsResultRaw",
                baseName: "avsResultRaw",
                type: "string"
            }, {
                name: "bic",
                baseName: "bic",
                type: "string"
            }, {
                name: "coBrandedWith",
                baseName: "coBrandedWith",
                type: "string"
            }, {
                name: "cvcResult",
                baseName: "cvcResult",
                type: "string"
            }, {
                name: "cvcResultRaw",
                baseName: "cvcResultRaw",
                type: "string"
            }, {
                name: "dsTransID",
                baseName: "dsTransID",
                type: "string"
            }, {
                name: "eci",
                baseName: "eci",
                type: "string"
            }, {
                name: "expiryDate",
                baseName: "expiryDate",
                type: "string"
            }, {
                name: "extraCostsCurrency",
                baseName: "extraCostsCurrency",
                type: "string"
            }, {
                name: "extraCostsValue",
                baseName: "extraCostsValue",
                type: "string"
            }, {
                name: "fraudCheck__itemNr__FraudCheckname",
                baseName: "fraudCheck-[itemNr]-[FraudCheckname]",
                type: "string"
            }, {
                name: "fraudManualReview",
                baseName: "fraudManualReview",
                type: "string"
            }, {
                name: "fraudResultType",
                baseName: "fraudResultType",
                type: "ResponseAdditionalDataCommon.FraudResultTypeEnum"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "string"
            }, {
                name: "fundsAvailability",
                baseName: "fundsAvailability",
                type: "string"
            }, {
                name: "inferredRefusalReason",
                baseName: "inferredRefusalReason",
                type: "string"
            }, {
                name: "isCardCommercial",
                baseName: "isCardCommercial",
                type: "string"
            }, {
                name: "issuerCountry",
                baseName: "issuerCountry",
                type: "string"
            }, {
                name: "liabilityShift",
                baseName: "liabilityShift",
                type: "string"
            }, {
                name: "mcBankNetReferenceNumber",
                baseName: "mcBankNetReferenceNumber",
                type: "string"
            }, {
                name: "merchantAdviceCode",
                baseName: "merchantAdviceCode",
                type: "string"
            }, {
                name: "merchantReference",
                baseName: "merchantReference",
                type: "string"
            }, {
                name: "networkTxReference",
                baseName: "networkTxReference",
                type: "string"
            }, {
                name: "ownerName",
                baseName: "ownerName",
                type: "string"
            }, {
                name: "paymentAccountReference",
                baseName: "paymentAccountReference",
                type: "string"
            }, {
                name: "paymentMethod",
                baseName: "paymentMethod",
                type: "string"
            }, {
                name: "paymentMethodVariant",
                baseName: "paymentMethodVariant",
                type: "string"
            }, {
                name: "payoutEligible",
                baseName: "payoutEligible",
                type: "string"
            }, {
                name: "realtimeAccountUpdaterStatus",
                baseName: "realtimeAccountUpdaterStatus",
                type: "string"
            }, {
                name: "receiptFreeText",
                baseName: "receiptFreeText",
                type: "string"
            }, {
                name: "recurring_contractTypes",
                baseName: "recurring.contractTypes",
                type: "string"
            }, {
                name: "recurring_firstPspReference",
                baseName: "recurring.firstPspReference",
                type: "string"
            }, {
                name: "recurring_recurringDetailReference",
                baseName: "recurring.recurringDetailReference",
                type: "string"
            }, {
                name: "recurring_shopperReference",
                baseName: "recurring.shopperReference",
                type: "string"
            }, {
                name: "recurringProcessingModel",
                baseName: "recurringProcessingModel",
                type: "ResponseAdditionalDataCommon.RecurringProcessingModelEnum"
            }, {
                name: "referred",
                baseName: "referred",
                type: "string"
            }, {
                name: "refusalReasonRaw",
                baseName: "refusalReasonRaw",
                type: "string"
            }, {
                name: "requestAmount",
                baseName: "requestAmount",
                type: "string"
            }, {
                name: "requestCurrencyCode",
                baseName: "requestCurrencyCode",
                type: "string"
            }, {
                name: "shopperInteraction",
                baseName: "shopperInteraction",
                type: "string"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "terminalId",
                baseName: "terminalId",
                type: "string"
            }, {
                name: "threeDAuthenticated",
                baseName: "threeDAuthenticated",
                type: "string"
            }, {
                name: "threeDAuthenticatedResponse",
                baseName: "threeDAuthenticatedResponse",
                type: "string"
            }, {
                name: "threeDOffered",
                baseName: "threeDOffered",
                type: "string"
            }, {
                name: "threeDOfferedResponse",
                baseName: "threeDOfferedResponse",
                type: "string"
            }, {
                name: "threeDSVersion",
                baseName: "threeDSVersion",
                type: "string"
            }, {
                name: "visaTransactionId",
                baseName: "visaTransactionId",
                type: "string"
            }, {
                name: "xid",
                baseName: "xid",
                type: "string"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Green = "GREEN",
                    e.Fraud = "FRAUD"
                }(t = e.FraudResultTypeEnum || (e.FraudResultTypeEnum = {})),
                function(e) {
                    e.CardOnFile = "CardOnFile",
                    e.Subscription = "Subscription",
                    e.UnscheduledCardOnFile = "UnscheduledCardOnFile"
                }(a = e.RecurringProcessingModelEnum || (e.RecurringProcessingModelEnum = {}))
            }(a = t.ResponseAdditionalDataCommon || (t.ResponseAdditionalDataCommon = {}))
        }
        ,
        58726: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ResponseAdditionalDataDomesticError = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ResponseAdditionalDataDomesticError = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "domesticRefusalReasonRaw",
                baseName: "domesticRefusalReasonRaw",
                type: "string"
            }, {
                name: "domesticShopperAdvice",
                baseName: "domesticShopperAdvice",
                type: "string"
            }]
        }
        ,
        34490: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ResponseAdditionalDataInstallments = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ResponseAdditionalDataInstallments = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "installmentPaymentData_installmentType",
                baseName: "installmentPaymentData.installmentType",
                type: "string"
            }, {
                name: "installmentPaymentData_option_itemNr_annualPercentageRate",
                baseName: "installmentPaymentData.option[itemNr].annualPercentageRate",
                type: "string"
            }, {
                name: "installmentPaymentData_option_itemNr_firstInstallmentAmount",
                baseName: "installmentPaymentData.option[itemNr].firstInstallmentAmount",
                type: "string"
            }, {
                name: "installmentPaymentData_option_itemNr_installmentFee",
                baseName: "installmentPaymentData.option[itemNr].installmentFee",
                type: "string"
            }, {
                name: "installmentPaymentData_option_itemNr_interestRate",
                baseName: "installmentPaymentData.option[itemNr].interestRate",
                type: "string"
            }, {
                name: "installmentPaymentData_option_itemNr_maximumNumberOfInstallments",
                baseName: "installmentPaymentData.option[itemNr].maximumNumberOfInstallments",
                type: "string"
            }, {
                name: "installmentPaymentData_option_itemNr_minimumNumberOfInstallments",
                baseName: "installmentPaymentData.option[itemNr].minimumNumberOfInstallments",
                type: "string"
            }, {
                name: "installmentPaymentData_option_itemNr_numberOfInstallments",
                baseName: "installmentPaymentData.option[itemNr].numberOfInstallments",
                type: "string"
            }, {
                name: "installmentPaymentData_option_itemNr_subsequentInstallmentAmount",
                baseName: "installmentPaymentData.option[itemNr].subsequentInstallmentAmount",
                type: "string"
            }, {
                name: "installmentPaymentData_option_itemNr_totalAmountDue",
                baseName: "installmentPaymentData.option[itemNr].totalAmountDue",
                type: "string"
            }, {
                name: "installmentPaymentData_paymentOptions",
                baseName: "installmentPaymentData.paymentOptions",
                type: "string"
            }, {
                name: "installments_value",
                baseName: "installments.value",
                type: "string"
            }]
        }
        ,
        86924: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ResponseAdditionalDataNetworkTokens = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ResponseAdditionalDataNetworkTokens = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "networkToken_available",
                baseName: "networkToken.available",
                type: "string"
            }, {
                name: "networkToken_bin",
                baseName: "networkToken.bin",
                type: "string"
            }, {
                name: "networkToken_tokenSummary",
                baseName: "networkToken.tokenSummary",
                type: "string"
            }]
        }
        ,
        34102: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ResponseAdditionalDataOpi = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ResponseAdditionalDataOpi = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "opi_transToken",
                baseName: "opi.transToken",
                type: "string"
            }]
        }
        ,
        79809: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ResponseAdditionalDataSepa = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ResponseAdditionalDataSepa = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "sepadirectdebit_dateOfSignature",
                baseName: "sepadirectdebit.dateOfSignature",
                type: "string"
            }, {
                name: "sepadirectdebit_mandateId",
                baseName: "sepadirectdebit.mandateId",
                type: "string"
            }, {
                name: "sepadirectdebit_sequenceType",
                baseName: "sepadirectdebit.sequenceType",
                type: "string"
            }]
        }
        ,
        47716: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ResponsePaymentMethod = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ResponsePaymentMethod = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "brand",
                baseName: "brand",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "string"
            }]
        }
        ,
        55967: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.RiskData = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.RiskData = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "clientData",
                baseName: "clientData",
                type: "string"
            }, {
                name: "customFields",
                baseName: "customFields",
                type: "{ [key: string]: string; }"
            }, {
                name: "fraudOffset",
                baseName: "fraudOffset",
                type: "number"
            }, {
                name: "profileReference",
                baseName: "profileReference",
                type: "string"
            }]
        }
        ,
        40791: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.SDKEphemPubKey = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.SDKEphemPubKey = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "crv",
                baseName: "crv",
                type: "string"
            }, {
                name: "kty",
                baseName: "kty",
                type: "string"
            }, {
                name: "x",
                baseName: "x",
                type: "string"
            }, {
                name: "y",
                baseName: "y",
                type: "string"
            }]
        }
        ,
        4586: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.SamsungPayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.SamsungPayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "SamsungPayDetails.FundingSourceEnum"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "samsungPayToken",
                baseName: "samsungPayToken",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "SamsungPayDetails.TypeEnum"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {})),
                function(e) {
                    e.Samsungpay = "samsungpay"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.SamsungPayDetails || (t.SamsungPayDetails = {}))
        }
        ,
        49442: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.SepaDirectDebitDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.SepaDirectDebitDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "iban",
                baseName: "iban",
                type: "string"
            }, {
                name: "ownerName",
                baseName: "ownerName",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "SepaDirectDebitDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Sepadirectdebit = "sepadirectdebit",
                    e.SepadirectdebitAmazonpay = "sepadirectdebit_amazonpay"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.SepaDirectDebitDetails || (t.SepaDirectDebitDetails = {}))
        }
        ,
        65211: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ServiceError = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ServiceError = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "additionalData",
                baseName: "additionalData",
                type: "{ [key: string]: string; }"
            }, {
                name: "errorCode",
                baseName: "errorCode",
                type: "string"
            }, {
                name: "errorType",
                baseName: "errorType",
                type: "string"
            }, {
                name: "message",
                baseName: "message",
                type: "string"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "status",
                baseName: "status",
                type: "number"
            }]
        }
        ,
        54477: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ServiceErrorDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ServiceErrorDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "errorCode",
                baseName: "errorCode",
                type: "string"
            }, {
                name: "errorType",
                baseName: "errorType",
                type: "string"
            }, {
                name: "message",
                baseName: "message",
                type: "string"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }]
        }
        ,
        29196: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.SessionResultResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.SessionResultResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "id",
                baseName: "id",
                type: "string"
            }, {
                name: "status",
                baseName: "status",
                type: "SessionResultResponse.StatusEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Active = "active",
                    e.Canceled = "canceled",
                    e.Completed = "completed",
                    e.Expired = "expired",
                    e.PaymentPending = "paymentPending",
                    e.Refused = "refused"
                }(t = e.StatusEnum || (e.StatusEnum = {}))
            }(a = t.SessionResultResponse || (t.SessionResultResponse = {}))
        }
        ,
        40961: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ShopperInput = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ShopperInput = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "billingAddress",
                baseName: "billingAddress",
                type: "ShopperInput.BillingAddressEnum"
            }, {
                name: "deliveryAddress",
                baseName: "deliveryAddress",
                type: "ShopperInput.DeliveryAddressEnum"
            }, {
                name: "personalDetails",
                baseName: "personalDetails",
                type: "ShopperInput.PersonalDetailsEnum"
            }],
            function(e) {
                let t, a, n;
                !function(e) {
                    e.Editable = "editable",
                    e.Hidden = "hidden",
                    e.ReadOnly = "readOnly"
                }(t = e.BillingAddressEnum || (e.BillingAddressEnum = {})),
                function(e) {
                    e.Editable = "editable",
                    e.Hidden = "hidden",
                    e.ReadOnly = "readOnly"
                }(a = e.DeliveryAddressEnum || (e.DeliveryAddressEnum = {})),
                function(e) {
                    e.Editable = "editable",
                    e.Hidden = "hidden",
                    e.ReadOnly = "readOnly"
                }(n = e.PersonalDetailsEnum || (e.PersonalDetailsEnum = {}))
            }(a = t.ShopperInput || (t.ShopperInput = {}))
        }
        ,
        47395: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ShopperInteractionDevice = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ShopperInteractionDevice = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "locale",
                baseName: "locale",
                type: "string"
            }, {
                name: "os",
                baseName: "os",
                type: "string"
            }, {
                name: "osVersion",
                baseName: "osVersion",
                type: "string"
            }]
        }
        ,
        20718: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.Split = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.Split = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "account",
                baseName: "account",
                type: "string"
            }, {
                name: "amount",
                baseName: "amount",
                type: "SplitAmount"
            }, {
                name: "description",
                baseName: "description",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "Split.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.AcquiringFees = "AcquiringFees",
                    e.AdyenCommission = "AdyenCommission",
                    e.AdyenFees = "AdyenFees",
                    e.AdyenMarkup = "AdyenMarkup",
                    e.BalanceAccount = "BalanceAccount",
                    e.Commission = "Commission",
                    e.Default = "Default",
                    e.Interchange = "Interchange",
                    e.MarketPlace = "MarketPlace",
                    e.PaymentFee = "PaymentFee",
                    e.Remainder = "Remainder",
                    e.SchemeFee = "SchemeFee",
                    e.Surcharge = "Surcharge",
                    e.Tip = "Tip",
                    e.Vat = "VAT"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.Split || (t.Split = {}))
        }
        ,
        63026: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.SplitAmount = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.SplitAmount = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "currency",
                baseName: "currency",
                type: "string"
            }, {
                name: "value",
                baseName: "value",
                type: "number"
            }]
        }
        ,
        92278: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.StandalonePaymentCancelRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.StandalonePaymentCancelRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "applicationInfo",
                baseName: "applicationInfo",
                type: "ApplicationInfo"
            }, {
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "paymentReference",
                baseName: "paymentReference",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }]
        }
        ,
        82424: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.StandalonePaymentCancelResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.StandalonePaymentCancelResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "paymentReference",
                baseName: "paymentReference",
                type: "string"
            }, {
                name: "pspReference",
                baseName: "pspReference",
                type: "string"
            }, {
                name: "reference",
                baseName: "reference",
                type: "string"
            }, {
                name: "status",
                baseName: "status",
                type: "StandalonePaymentCancelResponse.StatusEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Received = "received"
                }(t = e.StatusEnum || (e.StatusEnum = {}))
            }(a = t.StandalonePaymentCancelResponse || (t.StandalonePaymentCancelResponse = {}))
        }
        ,
        49410: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.StoredDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.StoredDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "bank",
                baseName: "bank",
                type: "BankAccount"
            }, {
                name: "card",
                baseName: "card",
                type: "Card"
            }, {
                name: "emailAddress",
                baseName: "emailAddress",
                type: "string"
            }]
        }
        ,
        87628: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.StoredPaymentMethod = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.StoredPaymentMethod = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "bankAccountNumber",
                baseName: "bankAccountNumber",
                type: "string"
            }, {
                name: "bankLocationId",
                baseName: "bankLocationId",
                type: "string"
            }, {
                name: "brand",
                baseName: "brand",
                type: "string"
            }, {
                name: "expiryMonth",
                baseName: "expiryMonth",
                type: "string"
            }, {
                name: "expiryYear",
                baseName: "expiryYear",
                type: "string"
            }, {
                name: "holderName",
                baseName: "holderName",
                type: "string"
            }, {
                name: "iban",
                baseName: "iban",
                type: "string"
            }, {
                name: "id",
                baseName: "id",
                type: "string"
            }, {
                name: "label",
                baseName: "label",
                type: "string"
            }, {
                name: "lastFour",
                baseName: "lastFour",
                type: "string"
            }, {
                name: "name",
                baseName: "name",
                type: "string"
            }, {
                name: "networkTxReference",
                baseName: "networkTxReference",
                type: "string"
            }, {
                name: "ownerName",
                baseName: "ownerName",
                type: "string"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "supportedRecurringProcessingModels",
                baseName: "supportedRecurringProcessingModels",
                type: "Array<string>"
            }, {
                name: "supportedShopperInteractions",
                baseName: "supportedShopperInteractions",
                type: "Array<string>"
            }, {
                name: "type",
                baseName: "type",
                type: "string"
            }]
        }
        ,
        86476: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.StoredPaymentMethodDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.StoredPaymentMethodDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "StoredPaymentMethodDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.BcmcMobile = "bcmc_mobile",
                    e.BcmcMobileQr = "bcmc_mobile_QR",
                    e.BcmcMobileApp = "bcmc_mobile_app",
                    e.MomoWallet = "momo_wallet",
                    e.MomoWalletApp = "momo_wallet_app",
                    e.Twint = "twint",
                    e.PaymayaWallet = "paymaya_wallet",
                    e.GrabpaySg = "grabpay_SG",
                    e.GrabpayMy = "grabpay_MY",
                    e.GrabpayTh = "grabpay_TH",
                    e.GrabpayId = "grabpay_ID",
                    e.GrabpayVn = "grabpay_VN",
                    e.GrabpayPh = "grabpay_PH",
                    e.Oxxo = "oxxo",
                    e.Gcash = "gcash",
                    e.Dana = "dana",
                    e.Kakaopay = "kakaopay",
                    e.Truemoney = "truemoney"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.StoredPaymentMethodDetails || (t.StoredPaymentMethodDetails = {}))
        }
        ,
        2567: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.StoredPaymentMethodRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.StoredPaymentMethodRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "merchantAccount",
                baseName: "merchantAccount",
                type: "string"
            }, {
                name: "paymentMethod",
                baseName: "paymentMethod",
                type: "PaymentMethodToStore"
            }, {
                name: "recurringProcessingModel",
                baseName: "recurringProcessingModel",
                type: "StoredPaymentMethodRequest.RecurringProcessingModelEnum"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperIP",
                baseName: "shopperIP",
                type: "string"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.CardOnFile = "CardOnFile",
                    e.Subscription = "Subscription",
                    e.UnscheduledCardOnFile = "UnscheduledCardOnFile"
                }(t = e.RecurringProcessingModelEnum || (e.RecurringProcessingModelEnum = {}))
            }(a = t.StoredPaymentMethodRequest || (t.StoredPaymentMethodRequest = {}))
        }
        ,
        55408: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.StoredPaymentMethodResource = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.StoredPaymentMethodResource = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "brand",
                baseName: "brand",
                type: "string"
            }, {
                name: "expiryMonth",
                baseName: "expiryMonth",
                type: "string"
            }, {
                name: "expiryYear",
                baseName: "expiryYear",
                type: "string"
            }, {
                name: "externalResponseCode",
                baseName: "externalResponseCode",
                type: "string"
            }, {
                name: "externalTokenReference",
                baseName: "externalTokenReference",
                type: "string"
            }, {
                name: "holderName",
                baseName: "holderName",
                type: "string"
            }, {
                name: "iban",
                baseName: "iban",
                type: "string"
            }, {
                name: "id",
                baseName: "id",
                type: "string"
            }, {
                name: "issuerName",
                baseName: "issuerName",
                type: "string"
            }, {
                name: "lastFour",
                baseName: "lastFour",
                type: "string"
            }, {
                name: "name",
                baseName: "name",
                type: "string"
            }, {
                name: "networkTxReference",
                baseName: "networkTxReference",
                type: "string"
            }, {
                name: "ownerName",
                baseName: "ownerName",
                type: "string"
            }, {
                name: "shopperEmail",
                baseName: "shopperEmail",
                type: "string"
            }, {
                name: "shopperReference",
                baseName: "shopperReference",
                type: "string"
            }, {
                name: "supportedRecurringProcessingModels",
                baseName: "supportedRecurringProcessingModels",
                type: "Array<string>"
            }, {
                name: "type",
                baseName: "type",
                type: "string"
            }]
        }
        ,
        19383: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.SubInputDetail = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.SubInputDetail = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "configuration",
                baseName: "configuration",
                type: "{ [key: string]: string; }"
            }, {
                name: "items",
                baseName: "items",
                type: "Array<Item>"
            }, {
                name: "key",
                baseName: "key",
                type: "string"
            }, {
                name: "optional",
                baseName: "optional",
                type: "boolean"
            }, {
                name: "type",
                baseName: "type",
                type: "string"
            }, {
                name: "value",
                baseName: "value",
                type: "string"
            }]
        }
        ,
        98916: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.SubMerchant = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.SubMerchant = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "city",
                baseName: "city",
                type: "string"
            }, {
                name: "country",
                baseName: "country",
                type: "string"
            }, {
                name: "mcc",
                baseName: "mcc",
                type: "string"
            }, {
                name: "name",
                baseName: "name",
                type: "string"
            }, {
                name: "taxId",
                baseName: "taxId",
                type: "string"
            }]
        }
        ,
        20576: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.SubMerchantInfo = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.SubMerchantInfo = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "address",
                baseName: "address",
                type: "BillingAddress"
            }, {
                name: "id",
                baseName: "id",
                type: "string"
            }, {
                name: "mcc",
                baseName: "mcc",
                type: "string"
            }, {
                name: "name",
                baseName: "name",
                type: "string"
            }, {
                name: "taxId",
                baseName: "taxId",
                type: "string"
            }]
        }
        ,
        22192: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ThreeDS2RequestData = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ThreeDS2RequestData = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "acctInfo",
                baseName: "acctInfo",
                type: "AcctInfo"
            }, {
                name: "acctType",
                baseName: "acctType",
                type: "ThreeDS2RequestData.AcctTypeEnum"
            }, {
                name: "acquirerBIN",
                baseName: "acquirerBIN",
                type: "string"
            }, {
                name: "acquirerMerchantID",
                baseName: "acquirerMerchantID",
                type: "string"
            }, {
                name: "addrMatch",
                baseName: "addrMatch",
                type: "ThreeDS2RequestData.AddrMatchEnum"
            }, {
                name: "authenticationOnly",
                baseName: "authenticationOnly",
                type: "boolean"
            }, {
                name: "challengeIndicator",
                baseName: "challengeIndicator",
                type: "ThreeDS2RequestData.ChallengeIndicatorEnum"
            }, {
                name: "deviceChannel",
                baseName: "deviceChannel",
                type: "string"
            }, {
                name: "deviceRenderOptions",
                baseName: "deviceRenderOptions",
                type: "DeviceRenderOptions"
            }, {
                name: "homePhone",
                baseName: "homePhone",
                type: "Phone"
            }, {
                name: "mcc",
                baseName: "mcc",
                type: "string"
            }, {
                name: "merchantName",
                baseName: "merchantName",
                type: "string"
            }, {
                name: "messageVersion",
                baseName: "messageVersion",
                type: "string"
            }, {
                name: "mobilePhone",
                baseName: "mobilePhone",
                type: "Phone"
            }, {
                name: "notificationURL",
                baseName: "notificationURL",
                type: "string"
            }, {
                name: "payTokenInd",
                baseName: "payTokenInd",
                type: "boolean"
            }, {
                name: "paymentAuthenticationUseCase",
                baseName: "paymentAuthenticationUseCase",
                type: "string"
            }, {
                name: "purchaseInstalData",
                baseName: "purchaseInstalData",
                type: "string"
            }, {
                name: "recurringExpiry",
                baseName: "recurringExpiry",
                type: "string"
            }, {
                name: "recurringFrequency",
                baseName: "recurringFrequency",
                type: "string"
            }, {
                name: "sdkAppID",
                baseName: "sdkAppID",
                type: "string"
            }, {
                name: "sdkEncData",
                baseName: "sdkEncData",
                type: "string"
            }, {
                name: "sdkEphemPubKey",
                baseName: "sdkEphemPubKey",
                type: "SDKEphemPubKey"
            }, {
                name: "sdkMaxTimeout",
                baseName: "sdkMaxTimeout",
                type: "number"
            }, {
                name: "sdkReferenceNumber",
                baseName: "sdkReferenceNumber",
                type: "string"
            }, {
                name: "sdkTransID",
                baseName: "sdkTransID",
                type: "string"
            }, {
                name: "sdkVersion",
                baseName: "sdkVersion",
                type: "string"
            }, {
                name: "threeDSCompInd",
                baseName: "threeDSCompInd",
                type: "string"
            }, {
                name: "threeDSRequestorAuthenticationInd",
                baseName: "threeDSRequestorAuthenticationInd",
                type: "string"
            }, {
                name: "threeDSRequestorAuthenticationInfo",
                baseName: "threeDSRequestorAuthenticationInfo",
                type: "ThreeDSRequestorAuthenticationInfo"
            }, {
                name: "threeDSRequestorChallengeInd",
                baseName: "threeDSRequestorChallengeInd",
                type: "ThreeDS2RequestData.ThreeDSRequestorChallengeIndEnum"
            }, {
                name: "threeDSRequestorID",
                baseName: "threeDSRequestorID",
                type: "string"
            }, {
                name: "threeDSRequestorName",
                baseName: "threeDSRequestorName",
                type: "string"
            }, {
                name: "threeDSRequestorPriorAuthenticationInfo",
                baseName: "threeDSRequestorPriorAuthenticationInfo",
                type: "ThreeDSRequestorPriorAuthenticationInfo"
            }, {
                name: "threeDSRequestorURL",
                baseName: "threeDSRequestorURL",
                type: "string"
            }, {
                name: "transType",
                baseName: "transType",
                type: "ThreeDS2RequestData.TransTypeEnum"
            }, {
                name: "transactionType",
                baseName: "transactionType",
                type: "ThreeDS2RequestData.TransactionTypeEnum"
            }, {
                name: "whiteListStatus",
                baseName: "whiteListStatus",
                type: "string"
            }, {
                name: "workPhone",
                baseName: "workPhone",
                type: "Phone"
            }],
            function(e) {
                let t, a, n, i, s, r;
                !function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03"
                }(t = e.AcctTypeEnum || (e.AcctTypeEnum = {})),
                function(e) {
                    e.Y = "Y",
                    e.N = "N"
                }(a = e.AddrMatchEnum || (e.AddrMatchEnum = {})),
                function(e) {
                    e.NoPreference = "noPreference",
                    e.RequestNoChallenge = "requestNoChallenge",
                    e.RequestChallenge = "requestChallenge",
                    e.RequestChallengeAsMandate = "requestChallengeAsMandate"
                }(n = e.ChallengeIndicatorEnum || (e.ChallengeIndicatorEnum = {})),
                function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04",
                    e._05 = "05",
                    e._06 = "06"
                }(i = e.ThreeDSRequestorChallengeIndEnum || (e.ThreeDSRequestorChallengeIndEnum = {})),
                function(e) {
                    e._01 = "01",
                    e._03 = "03",
                    e._10 = "10",
                    e._11 = "11",
                    e._28 = "28"
                }(s = e.TransTypeEnum || (e.TransTypeEnum = {})),
                function(e) {
                    e.GoodsOrServicePurchase = "goodsOrServicePurchase",
                    e.CheckAcceptance = "checkAcceptance",
                    e.AccountFunding = "accountFunding",
                    e.QuasiCashTransaction = "quasiCashTransaction",
                    e.PrepaidActivationAndLoad = "prepaidActivationAndLoad"
                }(r = e.TransactionTypeEnum || (e.TransactionTypeEnum = {}))
            }(a = t.ThreeDS2RequestData || (t.ThreeDS2RequestData = {}))
        }
        ,
        78861: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ThreeDS2RequestFields = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ThreeDS2RequestFields = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "acctInfo",
                baseName: "acctInfo",
                type: "AcctInfo"
            }, {
                name: "acctType",
                baseName: "acctType",
                type: "ThreeDS2RequestFields.AcctTypeEnum"
            }, {
                name: "acquirerBIN",
                baseName: "acquirerBIN",
                type: "string"
            }, {
                name: "acquirerMerchantID",
                baseName: "acquirerMerchantID",
                type: "string"
            }, {
                name: "addrMatch",
                baseName: "addrMatch",
                type: "ThreeDS2RequestFields.AddrMatchEnum"
            }, {
                name: "authenticationOnly",
                baseName: "authenticationOnly",
                type: "boolean"
            }, {
                name: "challengeIndicator",
                baseName: "challengeIndicator",
                type: "ThreeDS2RequestFields.ChallengeIndicatorEnum"
            }, {
                name: "deviceRenderOptions",
                baseName: "deviceRenderOptions",
                type: "DeviceRenderOptions"
            }, {
                name: "homePhone",
                baseName: "homePhone",
                type: "Phone"
            }, {
                name: "mcc",
                baseName: "mcc",
                type: "string"
            }, {
                name: "merchantName",
                baseName: "merchantName",
                type: "string"
            }, {
                name: "messageVersion",
                baseName: "messageVersion",
                type: "string"
            }, {
                name: "mobilePhone",
                baseName: "mobilePhone",
                type: "Phone"
            }, {
                name: "notificationURL",
                baseName: "notificationURL",
                type: "string"
            }, {
                name: "payTokenInd",
                baseName: "payTokenInd",
                type: "boolean"
            }, {
                name: "paymentAuthenticationUseCase",
                baseName: "paymentAuthenticationUseCase",
                type: "string"
            }, {
                name: "purchaseInstalData",
                baseName: "purchaseInstalData",
                type: "string"
            }, {
                name: "recurringExpiry",
                baseName: "recurringExpiry",
                type: "string"
            }, {
                name: "recurringFrequency",
                baseName: "recurringFrequency",
                type: "string"
            }, {
                name: "sdkAppID",
                baseName: "sdkAppID",
                type: "string"
            }, {
                name: "sdkEphemPubKey",
                baseName: "sdkEphemPubKey",
                type: "SDKEphemPubKey"
            }, {
                name: "sdkMaxTimeout",
                baseName: "sdkMaxTimeout",
                type: "number"
            }, {
                name: "sdkReferenceNumber",
                baseName: "sdkReferenceNumber",
                type: "string"
            }, {
                name: "sdkTransID",
                baseName: "sdkTransID",
                type: "string"
            }, {
                name: "threeDSCompInd",
                baseName: "threeDSCompInd",
                type: "string"
            }, {
                name: "threeDSRequestorAuthenticationInd",
                baseName: "threeDSRequestorAuthenticationInd",
                type: "string"
            }, {
                name: "threeDSRequestorAuthenticationInfo",
                baseName: "threeDSRequestorAuthenticationInfo",
                type: "ThreeDSRequestorAuthenticationInfo"
            }, {
                name: "threeDSRequestorChallengeInd",
                baseName: "threeDSRequestorChallengeInd",
                type: "ThreeDS2RequestFields.ThreeDSRequestorChallengeIndEnum"
            }, {
                name: "threeDSRequestorID",
                baseName: "threeDSRequestorID",
                type: "string"
            }, {
                name: "threeDSRequestorName",
                baseName: "threeDSRequestorName",
                type: "string"
            }, {
                name: "threeDSRequestorPriorAuthenticationInfo",
                baseName: "threeDSRequestorPriorAuthenticationInfo",
                type: "ThreeDSRequestorPriorAuthenticationInfo"
            }, {
                name: "threeDSRequestorURL",
                baseName: "threeDSRequestorURL",
                type: "string"
            }, {
                name: "transType",
                baseName: "transType",
                type: "ThreeDS2RequestFields.TransTypeEnum"
            }, {
                name: "transactionType",
                baseName: "transactionType",
                type: "ThreeDS2RequestFields.TransactionTypeEnum"
            }, {
                name: "whiteListStatus",
                baseName: "whiteListStatus",
                type: "string"
            }, {
                name: "workPhone",
                baseName: "workPhone",
                type: "Phone"
            }],
            function(e) {
                let t, a, n, i, s, r;
                !function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03"
                }(t = e.AcctTypeEnum || (e.AcctTypeEnum = {})),
                function(e) {
                    e.Y = "Y",
                    e.N = "N"
                }(a = e.AddrMatchEnum || (e.AddrMatchEnum = {})),
                function(e) {
                    e.NoPreference = "noPreference",
                    e.RequestNoChallenge = "requestNoChallenge",
                    e.RequestChallenge = "requestChallenge",
                    e.RequestChallengeAsMandate = "requestChallengeAsMandate"
                }(n = e.ChallengeIndicatorEnum || (e.ChallengeIndicatorEnum = {})),
                function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04",
                    e._05 = "05",
                    e._06 = "06"
                }(i = e.ThreeDSRequestorChallengeIndEnum || (e.ThreeDSRequestorChallengeIndEnum = {})),
                function(e) {
                    e._01 = "01",
                    e._03 = "03",
                    e._10 = "10",
                    e._11 = "11",
                    e._28 = "28"
                }(s = e.TransTypeEnum || (e.TransTypeEnum = {})),
                function(e) {
                    e.GoodsOrServicePurchase = "goodsOrServicePurchase",
                    e.CheckAcceptance = "checkAcceptance",
                    e.AccountFunding = "accountFunding",
                    e.QuasiCashTransaction = "quasiCashTransaction",
                    e.PrepaidActivationAndLoad = "prepaidActivationAndLoad"
                }(r = e.TransactionTypeEnum || (e.TransactionTypeEnum = {}))
            }(a = t.ThreeDS2RequestFields || (t.ThreeDS2RequestFields = {}))
        }
        ,
        65426: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ThreeDS2ResponseData = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ThreeDS2ResponseData = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "acsChallengeMandated",
                baseName: "acsChallengeMandated",
                type: "string"
            }, {
                name: "acsOperatorID",
                baseName: "acsOperatorID",
                type: "string"
            }, {
                name: "acsReferenceNumber",
                baseName: "acsReferenceNumber",
                type: "string"
            }, {
                name: "acsSignedContent",
                baseName: "acsSignedContent",
                type: "string"
            }, {
                name: "acsTransID",
                baseName: "acsTransID",
                type: "string"
            }, {
                name: "acsURL",
                baseName: "acsURL",
                type: "string"
            }, {
                name: "authenticationType",
                baseName: "authenticationType",
                type: "string"
            }, {
                name: "cardHolderInfo",
                baseName: "cardHolderInfo",
                type: "string"
            }, {
                name: "cavvAlgorithm",
                baseName: "cavvAlgorithm",
                type: "string"
            }, {
                name: "challengeIndicator",
                baseName: "challengeIndicator",
                type: "string"
            }, {
                name: "dsReferenceNumber",
                baseName: "dsReferenceNumber",
                type: "string"
            }, {
                name: "dsTransID",
                baseName: "dsTransID",
                type: "string"
            }, {
                name: "exemptionIndicator",
                baseName: "exemptionIndicator",
                type: "string"
            }, {
                name: "messageVersion",
                baseName: "messageVersion",
                type: "string"
            }, {
                name: "riskScore",
                baseName: "riskScore",
                type: "string"
            }, {
                name: "sdkEphemPubKey",
                baseName: "sdkEphemPubKey",
                type: "string"
            }, {
                name: "threeDSServerTransID",
                baseName: "threeDSServerTransID",
                type: "string"
            }, {
                name: "transStatus",
                baseName: "transStatus",
                type: "string"
            }, {
                name: "transStatusReason",
                baseName: "transStatusReason",
                type: "string"
            }]
        }
        ,
        62348: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ThreeDS2Result = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ThreeDS2Result = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "authenticationValue",
                baseName: "authenticationValue",
                type: "string"
            }, {
                name: "cavvAlgorithm",
                baseName: "cavvAlgorithm",
                type: "string"
            }, {
                name: "challengeCancel",
                baseName: "challengeCancel",
                type: "ThreeDS2Result.ChallengeCancelEnum"
            }, {
                name: "dsTransID",
                baseName: "dsTransID",
                type: "string"
            }, {
                name: "eci",
                baseName: "eci",
                type: "string"
            }, {
                name: "exemptionIndicator",
                baseName: "exemptionIndicator",
                type: "ThreeDS2Result.ExemptionIndicatorEnum"
            }, {
                name: "messageVersion",
                baseName: "messageVersion",
                type: "string"
            }, {
                name: "riskScore",
                baseName: "riskScore",
                type: "string"
            }, {
                name: "threeDSRequestorChallengeInd",
                baseName: "threeDSRequestorChallengeInd",
                type: "ThreeDS2Result.ThreeDSRequestorChallengeIndEnum"
            }, {
                name: "threeDSServerTransID",
                baseName: "threeDSServerTransID",
                type: "string"
            }, {
                name: "timestamp",
                baseName: "timestamp",
                type: "string"
            }, {
                name: "transStatus",
                baseName: "transStatus",
                type: "string"
            }, {
                name: "transStatusReason",
                baseName: "transStatusReason",
                type: "string"
            }, {
                name: "whiteListStatus",
                baseName: "whiteListStatus",
                type: "string"
            }],
            function(e) {
                let t, a, n;
                !function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04",
                    e._05 = "05",
                    e._06 = "06",
                    e._07 = "07"
                }(t = e.ChallengeCancelEnum || (e.ChallengeCancelEnum = {})),
                function(e) {
                    e.LowValue = "lowValue",
                    e.SecureCorporate = "secureCorporate",
                    e.TrustedBeneficiary = "trustedBeneficiary",
                    e.TransactionRiskAnalysis = "transactionRiskAnalysis"
                }(a = e.ExemptionIndicatorEnum || (e.ExemptionIndicatorEnum = {})),
                function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04",
                    e._05 = "05",
                    e._06 = "06"
                }(n = e.ThreeDSRequestorChallengeIndEnum || (e.ThreeDSRequestorChallengeIndEnum = {}))
            }(a = t.ThreeDS2Result || (t.ThreeDS2Result = {}))
        }
        ,
        40730: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ThreeDSRequestData = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ThreeDSRequestData = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "challengeWindowSize",
                baseName: "challengeWindowSize",
                type: "ThreeDSRequestData.ChallengeWindowSizeEnum"
            }, {
                name: "dataOnly",
                baseName: "dataOnly",
                type: "ThreeDSRequestData.DataOnlyEnum"
            }, {
                name: "nativeThreeDS",
                baseName: "nativeThreeDS",
                type: "ThreeDSRequestData.NativeThreeDSEnum"
            }, {
                name: "threeDSVersion",
                baseName: "threeDSVersion",
                type: "ThreeDSRequestData.ThreeDSVersionEnum"
            }],
            function(e) {
                let t, a, n, i;
                !function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04",
                    e._05 = "05"
                }(t = e.ChallengeWindowSizeEnum || (e.ChallengeWindowSizeEnum = {})),
                function(e) {
                    e.False = "false",
                    e.True = "true"
                }(a = e.DataOnlyEnum || (e.DataOnlyEnum = {})),
                function(e) {
                    e.Preferred = "preferred"
                }(n = e.NativeThreeDSEnum || (e.NativeThreeDSEnum = {})),
                function(e) {
                    e._10 = "2.1.0",
                    e._20 = "2.2.0"
                }(i = e.ThreeDSVersionEnum || (e.ThreeDSVersionEnum = {}))
            }(a = t.ThreeDSRequestData || (t.ThreeDSRequestData = {}))
        }
        ,
        96495: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ThreeDSRequestorAuthenticationInfo = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ThreeDSRequestorAuthenticationInfo = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "threeDSReqAuthData",
                baseName: "threeDSReqAuthData",
                type: "string"
            }, {
                name: "threeDSReqAuthMethod",
                baseName: "threeDSReqAuthMethod",
                type: "ThreeDSRequestorAuthenticationInfo.ThreeDSReqAuthMethodEnum"
            }, {
                name: "threeDSReqAuthTimestamp",
                baseName: "threeDSReqAuthTimestamp",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04",
                    e._05 = "05",
                    e._06 = "06"
                }(t = e.ThreeDSReqAuthMethodEnum || (e.ThreeDSReqAuthMethodEnum = {}))
            }(a = t.ThreeDSRequestorAuthenticationInfo || (t.ThreeDSRequestorAuthenticationInfo = {}))
        }
        ,
        24491: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ThreeDSRequestorPriorAuthenticationInfo = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ThreeDSRequestorPriorAuthenticationInfo = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "threeDSReqPriorAuthData",
                baseName: "threeDSReqPriorAuthData",
                type: "string"
            }, {
                name: "threeDSReqPriorAuthMethod",
                baseName: "threeDSReqPriorAuthMethod",
                type: "ThreeDSRequestorPriorAuthenticationInfo.ThreeDSReqPriorAuthMethodEnum"
            }, {
                name: "threeDSReqPriorAuthTimestamp",
                baseName: "threeDSReqPriorAuthTimestamp",
                type: "string"
            }, {
                name: "threeDSReqPriorRef",
                baseName: "threeDSReqPriorRef",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04"
                }(t = e.ThreeDSReqPriorAuthMethodEnum || (e.ThreeDSReqPriorAuthMethodEnum = {}))
            }(a = t.ThreeDSRequestorPriorAuthenticationInfo || (t.ThreeDSRequestorPriorAuthenticationInfo = {}))
        }
        ,
        66877: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ThreeDSecureData = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ThreeDSecureData = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "authenticationResponse",
                baseName: "authenticationResponse",
                type: "ThreeDSecureData.AuthenticationResponseEnum"
            }, {
                name: "cavv",
                baseName: "cavv",
                type: "string"
            }, {
                name: "cavvAlgorithm",
                baseName: "cavvAlgorithm",
                type: "string"
            }, {
                name: "challengeCancel",
                baseName: "challengeCancel",
                type: "ThreeDSecureData.ChallengeCancelEnum"
            }, {
                name: "directoryResponse",
                baseName: "directoryResponse",
                type: "ThreeDSecureData.DirectoryResponseEnum"
            }, {
                name: "dsTransID",
                baseName: "dsTransID",
                type: "string"
            }, {
                name: "eci",
                baseName: "eci",
                type: "string"
            }, {
                name: "riskScore",
                baseName: "riskScore",
                type: "string"
            }, {
                name: "threeDSVersion",
                baseName: "threeDSVersion",
                type: "string"
            }, {
                name: "tokenAuthenticationVerificationValue",
                baseName: "tokenAuthenticationVerificationValue",
                type: "string"
            }, {
                name: "transStatusReason",
                baseName: "transStatusReason",
                type: "string"
            }, {
                name: "xid",
                baseName: "xid",
                type: "string"
            }],
            function(e) {
                let t, a, n;
                !function(e) {
                    e.Y = "Y",
                    e.N = "N",
                    e.U = "U",
                    e.A = "A"
                }(t = e.AuthenticationResponseEnum || (e.AuthenticationResponseEnum = {})),
                function(e) {
                    e._01 = "01",
                    e._02 = "02",
                    e._03 = "03",
                    e._04 = "04",
                    e._05 = "05",
                    e._06 = "06",
                    e._07 = "07"
                }(a = e.ChallengeCancelEnum || (e.ChallengeCancelEnum = {})),
                function(e) {
                    e.A = "A",
                    e.C = "C",
                    e.D = "D",
                    e.I = "I",
                    e.N = "N",
                    e.R = "R",
                    e.U = "U",
                    e.Y = "Y"
                }(n = e.DirectoryResponseEnum || (e.DirectoryResponseEnum = {}))
            }(a = t.ThreeDSecureData || (t.ThreeDSecureData = {}))
        }
        ,
        90590: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.UpdatePaymentLinkRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.UpdatePaymentLinkRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "status",
                baseName: "status",
                type: "UpdatePaymentLinkRequest.StatusEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Expired = "expired"
                }(t = e.StatusEnum || (e.StatusEnum = {}))
            }(a = t.UpdatePaymentLinkRequest || (t.UpdatePaymentLinkRequest = {}))
        }
        ,
        58710: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.UpiCollectDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.UpiCollectDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "billingSequenceNumber",
                baseName: "billingSequenceNumber",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "shopperNotificationReference",
                baseName: "shopperNotificationReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "UpiCollectDetails.TypeEnum"
            }, {
                name: "virtualPaymentAddress",
                baseName: "virtualPaymentAddress",
                type: "string"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.UpiCollect = "upi_collect"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.UpiCollectDetails || (t.UpiCollectDetails = {}))
        }
        ,
        74852: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.UpiIntentDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.UpiIntentDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "appId",
                baseName: "appId",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "shopperNotificationReference",
                baseName: "shopperNotificationReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "UpiIntentDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.UpiIntent = "upi_intent"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.UpiIntentDetails || (t.UpiIntentDetails = {}))
        }
        ,
        82661: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.UtilityRequest = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.UtilityRequest = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "originDomains",
                baseName: "originDomains",
                type: "Array<string>"
            }]
        }
        ,
        81857: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.UtilityResponse = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.UtilityResponse = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "originKeys",
                baseName: "originKeys",
                type: "{ [key: string]: string; }"
            }]
        }
        ,
        57892: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.VippsDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.VippsDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "telephoneNumber",
                baseName: "telephoneNumber",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "VippsDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Vipps = "vipps"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.VippsDetails || (t.VippsDetails = {}))
        }
        ,
        95219: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.VisaCheckoutDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.VisaCheckoutDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "fundingSource",
                baseName: "fundingSource",
                type: "VisaCheckoutDetails.FundingSourceEnum"
            }, {
                name: "type",
                baseName: "type",
                type: "VisaCheckoutDetails.TypeEnum"
            }, {
                name: "visaCheckoutCallId",
                baseName: "visaCheckoutCallId",
                type: "string"
            }],
            function(e) {
                let t, a;
                !function(e) {
                    e.Credit = "credit",
                    e.Debit = "debit"
                }(t = e.FundingSourceEnum || (e.FundingSourceEnum = {})),
                function(e) {
                    e.Visacheckout = "visacheckout"
                }(a = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.VisaCheckoutDetails || (t.VisaCheckoutDetails = {}))
        }
        ,
        51110: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.WeChatPayDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.WeChatPayDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "WeChatPayDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Wechatpay = "wechatpay",
                    e.WechatpayPos = "wechatpay_pos"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.WeChatPayDetails || (t.WeChatPayDetails = {}))
        }
        ,
        13671: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.WeChatPayMiniProgramDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.WeChatPayMiniProgramDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "appId",
                baseName: "appId",
                type: "string"
            }, {
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "openid",
                baseName: "openid",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "WeChatPayMiniProgramDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.WechatpayMiniProgram = "wechatpayMiniProgram"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.WeChatPayMiniProgramDetails || (t.WeChatPayMiniProgramDetails = {}))
        }
        ,
        77851: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }),
            t.ZipDetails = void 0;
            class a {
                static getAttributeTypeMap() {
                    return a.attributeTypeMap
                }
            }
            t.ZipDetails = a,
            a.discriminator = void 0,
            a.attributeTypeMap = [{
                name: "checkoutAttemptId",
                baseName: "checkoutAttemptId",
                type: "string"
            }, {
                name: "clickAndCollect",
                baseName: "clickAndCollect",
                type: "string"
            }, {
                name: "recurringDetailReference",
                baseName: "recurringDetailReference",
                type: "string"
            }, {
                name: "storedPaymentMethodId",
                baseName: "storedPaymentMethodId",
                type: "string"
            }, {
                name: "type",
                baseName: "type",
                type: "ZipDetails.TypeEnum"
            }],
            function(e) {
                let t;
                !function(e) {
                    e.Zip = "zip",
                    e.ZipPos = "zip_pos"
                }(t = e.TypeEnum || (e.TypeEnum = {}))
            }(a = t.ZipDetails || (t.ZipDetails = {}))
        }
        ,
        25177: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("af", {
                    months: "Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split("_"),
                    monthsShort: "Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split("_"),
                    weekdays: "Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split("_"),
                    weekdaysShort: "Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),
                    weekdaysMin: "So_Ma_Di_Wo_Do_Vr_Sa".split("_"),
                    meridiemParse: /vm|nm/i,
                    isPM: function(e) {
                        return /^nm$/i.test(e)
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? a ? "vm" : "VM" : a ? "nm" : "NM"
                    },
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Vandag om] LT",
                        nextDay: "[Môre om] LT",
                        nextWeek: "dddd [om] LT",
                        lastDay: "[Gister om] LT",
                        lastWeek: "[Laas] dddd [om] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "oor %s",
                        past: "%s gelede",
                        s: "'n paar sekondes",
                        ss: "%d sekondes",
                        m: "'n minuut",
                        mm: "%d minute",
                        h: "'n uur",
                        hh: "%d ure",
                        d: "'n dag",
                        dd: "%d dae",
                        M: "'n maand",
                        MM: "%d maande",
                        y: "'n jaar",
                        yy: "%d jaar"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
                    ordinal: function(e) {
                        return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        41488: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = function(e) {
                    return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5
                }
                  , a = {
                    s: ["أقل من ثانية", "ثانية واحدة", ["ثانيتان", "ثانيتين"], "%d ثوان", "%d ثانية", "%d ثانية"],
                    m: ["أقل من دقيقة", "دقيقة واحدة", ["دقيقتان", "دقيقتين"], "%d دقائق", "%d دقيقة", "%d دقيقة"],
                    h: ["أقل من ساعة", "ساعة واحدة", ["ساعتان", "ساعتين"], "%d ساعات", "%d ساعة", "%d ساعة"],
                    d: ["أقل من يوم", "يوم واحد", ["يومان", "يومين"], "%d أيام", "%d يومًا", "%d يوم"],
                    M: ["أقل من شهر", "شهر واحد", ["شهران", "شهرين"], "%d أشهر", "%d شهرا", "%d شهر"],
                    y: ["أقل من عام", "عام واحد", ["عامان", "عامين"], "%d أعوام", "%d عامًا", "%d عام"]
                }
                  , n = function(e) {
                    return function(n, i, s, r) {
                        var o = t(n)
                          , l = a[e][t(n)];
                        return 2 === o && (l = l[i ? 0 : 1]),
                        l.replace(/%d/i, n)
                    }
                }
                  , i = ["جانفي", "فيفري", "مارس", "أفريل", "ماي", "جوان", "جويلية", "أوت", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"];
                e.defineLocale("ar-dz", {
                    months: i,
                    monthsShort: i,
                    weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                    weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
                    weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "D/‏M/‏YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    meridiemParse: /ص|م/,
                    isPM: function(e) {
                        return "م" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "ص" : "م"
                    },
                    calendar: {
                        sameDay: "[اليوم عند الساعة] LT",
                        nextDay: "[غدًا عند الساعة] LT",
                        nextWeek: "dddd [عند الساعة] LT",
                        lastDay: "[أمس عند الساعة] LT",
                        lastWeek: "dddd [عند الساعة] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "بعد %s",
                        past: "منذ %s",
                        s: n("s"),
                        ss: n("s"),
                        m: n("m"),
                        mm: n("m"),
                        h: n("h"),
                        hh: n("h"),
                        d: n("d"),
                        dd: n("d"),
                        M: n("M"),
                        MM: n("M"),
                        y: n("y"),
                        yy: n("y")
                    },
                    postformat: function(e) {
                        return e.replace(/,/g, "،")
                    },
                    week: {
                        dow: 0,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        58676: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("ar-kw", {
                    months: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
                    monthsShort: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
                    weekdays: "الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                    weekdaysShort: "احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
                    weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[اليوم على الساعة] LT",
                        nextDay: "[غدا على الساعة] LT",
                        nextWeek: "dddd [على الساعة] LT",
                        lastDay: "[أمس على الساعة] LT",
                        lastWeek: "dddd [على الساعة] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "في %s",
                        past: "منذ %s",
                        s: "ثوان",
                        ss: "%d ثانية",
                        m: "دقيقة",
                        mm: "%d دقائق",
                        h: "ساعة",
                        hh: "%d ساعات",
                        d: "يوم",
                        dd: "%d أيام",
                        M: "شهر",
                        MM: "%d أشهر",
                        y: "سنة",
                        yy: "%d سنوات"
                    },
                    week: {
                        dow: 0,
                        doy: 12
                    }
                })
            }(a(95093))
        },
        42353: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "1",
                    2: "2",
                    3: "3",
                    4: "4",
                    5: "5",
                    6: "6",
                    7: "7",
                    8: "8",
                    9: "9",
                    0: "0"
                }
                  , a = function(e) {
                    return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5
                }
                  , n = {
                    s: ["أقل من ثانية", "ثانية واحدة", ["ثانيتان", "ثانيتين"], "%d ثوان", "%d ثانية", "%d ثانية"],
                    m: ["أقل من دقيقة", "دقيقة واحدة", ["دقيقتان", "دقيقتين"], "%d دقائق", "%d دقيقة", "%d دقيقة"],
                    h: ["أقل من ساعة", "ساعة واحدة", ["ساعتان", "ساعتين"], "%d ساعات", "%d ساعة", "%d ساعة"],
                    d: ["أقل من يوم", "يوم واحد", ["يومان", "يومين"], "%d أيام", "%d يومًا", "%d يوم"],
                    M: ["أقل من شهر", "شهر واحد", ["شهران", "شهرين"], "%d أشهر", "%d شهرا", "%d شهر"],
                    y: ["أقل من عام", "عام واحد", ["عامان", "عامين"], "%d أعوام", "%d عامًا", "%d عام"]
                }
                  , i = function(e) {
                    return function(t, i, s, r) {
                        var o = a(t)
                          , l = n[e][a(t)];
                        return 2 === o && (l = l[i ? 0 : 1]),
                        l.replace(/%d/i, t)
                    }
                }
                  , s = ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"];
                e.defineLocale("ar-ly", {
                    months: s,
                    monthsShort: s,
                    weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                    weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
                    weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "D/‏M/‏YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    meridiemParse: /ص|م/,
                    isPM: function(e) {
                        return "م" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "ص" : "م"
                    },
                    calendar: {
                        sameDay: "[اليوم عند الساعة] LT",
                        nextDay: "[غدًا عند الساعة] LT",
                        nextWeek: "dddd [عند الساعة] LT",
                        lastDay: "[أمس عند الساعة] LT",
                        lastWeek: "dddd [عند الساعة] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "بعد %s",
                        past: "منذ %s",
                        s: i("s"),
                        ss: i("s"),
                        m: i("m"),
                        mm: i("m"),
                        h: i("h"),
                        hh: i("h"),
                        d: i("d"),
                        dd: i("d"),
                        M: i("M"),
                        MM: i("M"),
                        y: i("y"),
                        yy: i("y")
                    },
                    preparse: function(e) {
                        return e.replace(/،/g, ",")
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        )).replace(/,/g, "،")
                    },
                    week: {
                        dow: 6,
                        doy: 12
                    }
                })
            }(a(95093))
        },
        24496: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("ar-ma", {
                    months: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
                    monthsShort: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
                    weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                    weekdaysShort: "احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
                    weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[اليوم على الساعة] LT",
                        nextDay: "[غدا على الساعة] LT",
                        nextWeek: "dddd [على الساعة] LT",
                        lastDay: "[أمس على الساعة] LT",
                        lastWeek: "dddd [على الساعة] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "في %s",
                        past: "منذ %s",
                        s: "ثوان",
                        ss: "%d ثانية",
                        m: "دقيقة",
                        mm: "%d دقائق",
                        h: "ساعة",
                        hh: "%d ساعات",
                        d: "يوم",
                        dd: "%d أيام",
                        M: "شهر",
                        MM: "%d أشهر",
                        y: "سنة",
                        yy: "%d سنوات"
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        6947: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "١",
                    2: "٢",
                    3: "٣",
                    4: "٤",
                    5: "٥",
                    6: "٦",
                    7: "٧",
                    8: "٨",
                    9: "٩",
                    0: "٠"
                }
                  , a = {
                    "١": "1",
                    "٢": "2",
                    "٣": "3",
                    "٤": "4",
                    "٥": "5",
                    "٦": "6",
                    "٧": "7",
                    "٨": "8",
                    "٩": "9",
                    "٠": "0"
                };
                e.defineLocale("ar-ps", {
                    months: "كانون الثاني_شباط_آذار_نيسان_أيّار_حزيران_تمّوز_آب_أيلول_تشري الأوّل_تشرين الثاني_كانون الأوّل".split("_"),
                    monthsShort: "ك٢_شباط_آذار_نيسان_أيّار_حزيران_تمّوز_آب_أيلول_ت١_ت٢_ك١".split("_"),
                    weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                    weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
                    weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    meridiemParse: /ص|م/,
                    isPM: function(e) {
                        return "م" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "ص" : "م"
                    },
                    calendar: {
                        sameDay: "[اليوم على الساعة] LT",
                        nextDay: "[غدا على الساعة] LT",
                        nextWeek: "dddd [على الساعة] LT",
                        lastDay: "[أمس على الساعة] LT",
                        lastWeek: "dddd [على الساعة] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "في %s",
                        past: "منذ %s",
                        s: "ثوان",
                        ss: "%d ثانية",
                        m: "دقيقة",
                        mm: "%d دقائق",
                        h: "ساعة",
                        hh: "%d ساعات",
                        d: "يوم",
                        dd: "%d أيام",
                        M: "شهر",
                        MM: "%d أشهر",
                        y: "سنة",
                        yy: "%d سنوات"
                    },
                    preparse: function(e) {
                        return e.replace(/[٣٤٥٦٧٨٩٠]/g, (function(e) {
                            return a[e]
                        }
                        )).split("").reverse().join("").replace(/[١٢](?![\u062a\u0643])/g, (function(e) {
                            return a[e]
                        }
                        )).split("").reverse().join("").replace(/،/g, ",")
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        )).replace(/,/g, "،")
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        82682: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "١",
                    2: "٢",
                    3: "٣",
                    4: "٤",
                    5: "٥",
                    6: "٦",
                    7: "٧",
                    8: "٨",
                    9: "٩",
                    0: "٠"
                }
                  , a = {
                    "١": "1",
                    "٢": "2",
                    "٣": "3",
                    "٤": "4",
                    "٥": "5",
                    "٦": "6",
                    "٧": "7",
                    "٨": "8",
                    "٩": "9",
                    "٠": "0"
                };
                e.defineLocale("ar-sa", {
                    months: "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
                    monthsShort: "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
                    weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                    weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
                    weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    meridiemParse: /ص|م/,
                    isPM: function(e) {
                        return "م" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "ص" : "م"
                    },
                    calendar: {
                        sameDay: "[اليوم على الساعة] LT",
                        nextDay: "[غدا على الساعة] LT",
                        nextWeek: "dddd [على الساعة] LT",
                        lastDay: "[أمس على الساعة] LT",
                        lastWeek: "dddd [على الساعة] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "في %s",
                        past: "منذ %s",
                        s: "ثوان",
                        ss: "%d ثانية",
                        m: "دقيقة",
                        mm: "%d دقائق",
                        h: "ساعة",
                        hh: "%d ساعات",
                        d: "يوم",
                        dd: "%d أيام",
                        M: "شهر",
                        MM: "%d أشهر",
                        y: "سنة",
                        yy: "%d سنوات"
                    },
                    preparse: function(e) {
                        return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g, (function(e) {
                            return a[e]
                        }
                        )).replace(/،/g, ",")
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        )).replace(/,/g, "،")
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        89756: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("ar-tn", {
                    months: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
                    monthsShort: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
                    weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                    weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
                    weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[اليوم على الساعة] LT",
                        nextDay: "[غدا على الساعة] LT",
                        nextWeek: "dddd [على الساعة] LT",
                        lastDay: "[أمس على الساعة] LT",
                        lastWeek: "dddd [على الساعة] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "في %s",
                        past: "منذ %s",
                        s: "ثوان",
                        ss: "%d ثانية",
                        m: "دقيقة",
                        mm: "%d دقائق",
                        h: "ساعة",
                        hh: "%d ساعات",
                        d: "يوم",
                        dd: "%d أيام",
                        M: "شهر",
                        MM: "%d أشهر",
                        y: "سنة",
                        yy: "%d سنوات"
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        61509: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "١",
                    2: "٢",
                    3: "٣",
                    4: "٤",
                    5: "٥",
                    6: "٦",
                    7: "٧",
                    8: "٨",
                    9: "٩",
                    0: "٠"
                }
                  , a = {
                    "١": "1",
                    "٢": "2",
                    "٣": "3",
                    "٤": "4",
                    "٥": "5",
                    "٦": "6",
                    "٧": "7",
                    "٨": "8",
                    "٩": "9",
                    "٠": "0"
                }
                  , n = function(e) {
                    return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5
                }
                  , i = {
                    s: ["أقل من ثانية", "ثانية واحدة", ["ثانيتان", "ثانيتين"], "%d ثوان", "%d ثانية", "%d ثانية"],
                    m: ["أقل من دقيقة", "دقيقة واحدة", ["دقيقتان", "دقيقتين"], "%d دقائق", "%d دقيقة", "%d دقيقة"],
                    h: ["أقل من ساعة", "ساعة واحدة", ["ساعتان", "ساعتين"], "%d ساعات", "%d ساعة", "%d ساعة"],
                    d: ["أقل من يوم", "يوم واحد", ["يومان", "يومين"], "%d أيام", "%d يومًا", "%d يوم"],
                    M: ["أقل من شهر", "شهر واحد", ["شهران", "شهرين"], "%d أشهر", "%d شهرا", "%d شهر"],
                    y: ["أقل من عام", "عام واحد", ["عامان", "عامين"], "%d أعوام", "%d عامًا", "%d عام"]
                }
                  , s = function(e) {
                    return function(t, a, s, r) {
                        var o = n(t)
                          , l = i[e][n(t)];
                        return 2 === o && (l = l[a ? 0 : 1]),
                        l.replace(/%d/i, t)
                    }
                }
                  , r = ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"];
                e.defineLocale("ar", {
                    months: r,
                    monthsShort: r,
                    weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
                    weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
                    weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "D/‏M/‏YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    meridiemParse: /ص|م/,
                    isPM: function(e) {
                        return "م" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "ص" : "م"
                    },
                    calendar: {
                        sameDay: "[اليوم عند الساعة] LT",
                        nextDay: "[غدًا عند الساعة] LT",
                        nextWeek: "dddd [عند الساعة] LT",
                        lastDay: "[أمس عند الساعة] LT",
                        lastWeek: "dddd [عند الساعة] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "بعد %s",
                        past: "منذ %s",
                        s: s("s"),
                        ss: s("s"),
                        m: s("m"),
                        mm: s("m"),
                        h: s("h"),
                        hh: s("h"),
                        d: s("d"),
                        dd: s("d"),
                        M: s("M"),
                        MM: s("M"),
                        y: s("y"),
                        yy: s("y")
                    },
                    preparse: function(e) {
                        return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g, (function(e) {
                            return a[e]
                        }
                        )).replace(/،/g, ",")
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        )).replace(/,/g, "،")
                    },
                    week: {
                        dow: 6,
                        doy: 12
                    }
                })
            }(a(95093))
        },
        95533: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "-inci",
                    5: "-inci",
                    8: "-inci",
                    70: "-inci",
                    80: "-inci",
                    2: "-nci",
                    7: "-nci",
                    20: "-nci",
                    50: "-nci",
                    3: "-üncü",
                    4: "-üncü",
                    100: "-üncü",
                    6: "-ncı",
                    9: "-uncu",
                    10: "-uncu",
                    30: "-uncu",
                    60: "-ıncı",
                    90: "-ıncı"
                };
                e.defineLocale("az", {
                    months: "yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split("_"),
                    monthsShort: "yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split("_"),
                    weekdays: "Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə".split("_"),
                    weekdaysShort: "Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən".split("_"),
                    weekdaysMin: "Bz_BE_ÇA_Çə_CA_Cü_Şə".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[bugün saat] LT",
                        nextDay: "[sabah saat] LT",
                        nextWeek: "[gələn həftə] dddd [saat] LT",
                        lastDay: "[dünən] LT",
                        lastWeek: "[keçən həftə] dddd [saat] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s sonra",
                        past: "%s əvvəl",
                        s: "bir neçə saniyə",
                        ss: "%d saniyə",
                        m: "bir dəqiqə",
                        mm: "%d dəqiqə",
                        h: "bir saat",
                        hh: "%d saat",
                        d: "bir gün",
                        dd: "%d gün",
                        M: "bir ay",
                        MM: "%d ay",
                        y: "bir il",
                        yy: "%d il"
                    },
                    meridiemParse: /gecə|səhər|gündüz|axşam/,
                    isPM: function(e) {
                        return /^(gündüz|axşam)$/.test(e)
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "gecə" : e < 12 ? "səhər" : e < 17 ? "gündüz" : "axşam"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
                    ordinal: function(e) {
                        if (0 === e)
                            return e + "-ıncı";
                        var a = e % 10
                          , n = e % 100 - a
                          , i = e >= 100 ? 100 : null;
                        return e + (t[a] || t[n] || t[i])
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        28959: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t) {
                    var a = e.split("_");
                    return t % 10 == 1 && t % 100 != 11 ? a[0] : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? a[1] : a[2]
                }
                function a(e, a, n) {
                    return "m" === n ? a ? "хвіліна" : "хвіліну" : "h" === n ? a ? "гадзіна" : "гадзіну" : e + " " + t({
                        ss: a ? "секунда_секунды_секунд" : "секунду_секунды_секунд",
                        mm: a ? "хвіліна_хвіліны_хвілін" : "хвіліну_хвіліны_хвілін",
                        hh: a ? "гадзіна_гадзіны_гадзін" : "гадзіну_гадзіны_гадзін",
                        dd: "дзень_дні_дзён",
                        MM: "месяц_месяцы_месяцаў",
                        yy: "год_гады_гадоў"
                    }[n], +e)
                }
                e.defineLocale("be", {
                    months: {
                        format: "студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня".split("_"),
                        standalone: "студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань".split("_")
                    },
                    monthsShort: "студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж".split("_"),
                    weekdays: {
                        format: "нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу".split("_"),
                        standalone: "нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота".split("_"),
                        isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/
                    },
                    weekdaysShort: "нд_пн_ат_ср_чц_пт_сб".split("_"),
                    weekdaysMin: "нд_пн_ат_ср_чц_пт_сб".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY г.",
                        LLL: "D MMMM YYYY г., HH:mm",
                        LLLL: "dddd, D MMMM YYYY г., HH:mm"
                    },
                    calendar: {
                        sameDay: "[Сёння ў] LT",
                        nextDay: "[Заўтра ў] LT",
                        lastDay: "[Учора ў] LT",
                        nextWeek: function() {
                            return "[У] dddd [ў] LT"
                        },
                        lastWeek: function() {
                            switch (this.day()) {
                            case 0:
                            case 3:
                            case 5:
                            case 6:
                                return "[У мінулую] dddd [ў] LT";
                            case 1:
                            case 2:
                            case 4:
                                return "[У мінулы] dddd [ў] LT"
                            }
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "праз %s",
                        past: "%s таму",
                        s: "некалькі секунд",
                        m: a,
                        mm: a,
                        h: a,
                        hh: a,
                        d: "дзень",
                        dd: a,
                        M: "месяц",
                        MM: a,
                        y: "год",
                        yy: a
                    },
                    meridiemParse: /ночы|раніцы|дня|вечара/,
                    isPM: function(e) {
                        return /^(дня|вечара)$/.test(e)
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "ночы" : e < 12 ? "раніцы" : e < 17 ? "дня" : "вечара"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "M":
                        case "d":
                        case "DDD":
                        case "w":
                        case "W":
                            return e % 10 != 2 && e % 10 != 3 || e % 100 == 12 || e % 100 == 13 ? e + "-ы" : e + "-і";
                        case "D":
                            return e + "-га";
                        default:
                            return e
                        }
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        47777: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("bg", {
                    months: "януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември".split("_"),
                    monthsShort: "яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек".split("_"),
                    weekdays: "неделя_понеделник_вторник_сряда_четвъртък_петък_събота".split("_"),
                    weekdaysShort: "нед_пон_вто_сря_чет_пет_съб".split("_"),
                    weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "D.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY H:mm",
                        LLLL: "dddd, D MMMM YYYY H:mm"
                    },
                    calendar: {
                        sameDay: "[Днес в] LT",
                        nextDay: "[Утре в] LT",
                        nextWeek: "dddd [в] LT",
                        lastDay: "[Вчера в] LT",
                        lastWeek: function() {
                            switch (this.day()) {
                            case 0:
                            case 3:
                            case 6:
                                return "[Миналата] dddd [в] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[Миналия] dddd [в] LT"
                            }
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "след %s",
                        past: "преди %s",
                        s: "няколко секунди",
                        ss: "%d секунди",
                        m: "минута",
                        mm: "%d минути",
                        h: "час",
                        hh: "%d часа",
                        d: "ден",
                        dd: "%d дена",
                        w: "седмица",
                        ww: "%d седмици",
                        M: "месец",
                        MM: "%d месеца",
                        y: "година",
                        yy: "%d години"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
                    ordinal: function(e) {
                        var t = e % 10
                          , a = e % 100;
                        return 0 === e ? e + "-ев" : 0 === a ? e + "-ен" : a > 10 && a < 20 ? e + "-ти" : 1 === t ? e + "-ви" : 2 === t ? e + "-ри" : 7 === t || 8 === t ? e + "-ми" : e + "-ти"
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        54903: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("bm", {
                    months: "Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo".split("_"),
                    monthsShort: "Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des".split("_"),
                    weekdays: "Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri".split("_"),
                    weekdaysShort: "Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib".split("_"),
                    weekdaysMin: "Ka_Nt_Ta_Ar_Al_Ju_Si".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "MMMM [tile] D [san] YYYY",
                        LLL: "MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm",
                        LLLL: "dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm"
                    },
                    calendar: {
                        sameDay: "[Bi lɛrɛ] LT",
                        nextDay: "[Sini lɛrɛ] LT",
                        nextWeek: "dddd [don lɛrɛ] LT",
                        lastDay: "[Kunu lɛrɛ] LT",
                        lastWeek: "dddd [tɛmɛnen lɛrɛ] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s kɔnɔ",
                        past: "a bɛ %s bɔ",
                        s: "sanga dama dama",
                        ss: "sekondi %d",
                        m: "miniti kelen",
                        mm: "miniti %d",
                        h: "lɛrɛ kelen",
                        hh: "lɛrɛ %d",
                        d: "tile kelen",
                        dd: "tile %d",
                        M: "kalo kelen",
                        MM: "kalo %d",
                        y: "san kelen",
                        yy: "san %d"
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        17357: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "১",
                    2: "২",
                    3: "৩",
                    4: "৪",
                    5: "৫",
                    6: "৬",
                    7: "৭",
                    8: "৮",
                    9: "৯",
                    0: "০"
                }
                  , a = {
                    "১": "1",
                    "২": "2",
                    "৩": "3",
                    "৪": "4",
                    "৫": "5",
                    "৬": "6",
                    "৭": "7",
                    "৮": "8",
                    "৯": "9",
                    "০": "0"
                };
                e.defineLocale("bn-bd", {
                    months: "জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split("_"),
                    monthsShort: "জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে".split("_"),
                    weekdays: "রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার".split("_"),
                    weekdaysShort: "রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি".split("_"),
                    weekdaysMin: "রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি".split("_"),
                    longDateFormat: {
                        LT: "A h:mm সময়",
                        LTS: "A h:mm:ss সময়",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY, A h:mm সময়",
                        LLLL: "dddd, D MMMM YYYY, A h:mm সময়"
                    },
                    calendar: {
                        sameDay: "[আজ] LT",
                        nextDay: "[আগামীকাল] LT",
                        nextWeek: "dddd, LT",
                        lastDay: "[গতকাল] LT",
                        lastWeek: "[গত] dddd, LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s পরে",
                        past: "%s আগে",
                        s: "কয়েক সেকেন্ড",
                        ss: "%d সেকেন্ড",
                        m: "এক মিনিট",
                        mm: "%d মিনিট",
                        h: "এক ঘন্টা",
                        hh: "%d ঘন্টা",
                        d: "এক দিন",
                        dd: "%d দিন",
                        M: "এক মাস",
                        MM: "%d মাস",
                        y: "এক বছর",
                        yy: "%d বছর"
                    },
                    preparse: function(e) {
                        return e.replace(/[১২৩৪৫৬৭৮৯০]/g, (function(e) {
                            return a[e]
                        }
                        ))
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        ))
                    },
                    meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "রাত" === t ? e < 4 ? e : e + 12 : "ভোর" === t || "সকাল" === t ? e : "দুপুর" === t ? e >= 3 ? e : e + 12 : "বিকাল" === t || "সন্ধ্যা" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "রাত" : e < 6 ? "ভোর" : e < 12 ? "সকাল" : e < 15 ? "দুপুর" : e < 18 ? "বিকাল" : e < 20 ? "সন্ধ্যা" : "রাত"
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        61290: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "১",
                    2: "২",
                    3: "৩",
                    4: "৪",
                    5: "৫",
                    6: "৬",
                    7: "৭",
                    8: "৮",
                    9: "৯",
                    0: "০"
                }
                  , a = {
                    "১": "1",
                    "২": "2",
                    "৩": "3",
                    "৪": "4",
                    "৫": "5",
                    "৬": "6",
                    "৭": "7",
                    "৮": "8",
                    "৯": "9",
                    "০": "0"
                };
                e.defineLocale("bn", {
                    months: "জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split("_"),
                    monthsShort: "জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে".split("_"),
                    weekdays: "রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার".split("_"),
                    weekdaysShort: "রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি".split("_"),
                    weekdaysMin: "রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি".split("_"),
                    longDateFormat: {
                        LT: "A h:mm সময়",
                        LTS: "A h:mm:ss সময়",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY, A h:mm সময়",
                        LLLL: "dddd, D MMMM YYYY, A h:mm সময়"
                    },
                    calendar: {
                        sameDay: "[আজ] LT",
                        nextDay: "[আগামীকাল] LT",
                        nextWeek: "dddd, LT",
                        lastDay: "[গতকাল] LT",
                        lastWeek: "[গত] dddd, LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s পরে",
                        past: "%s আগে",
                        s: "কয়েক সেকেন্ড",
                        ss: "%d সেকেন্ড",
                        m: "এক মিনিট",
                        mm: "%d মিনিট",
                        h: "এক ঘন্টা",
                        hh: "%d ঘন্টা",
                        d: "এক দিন",
                        dd: "%d দিন",
                        M: "এক মাস",
                        MM: "%d মাস",
                        y: "এক বছর",
                        yy: "%d বছর"
                    },
                    preparse: function(e) {
                        return e.replace(/[১২৩৪৫৬৭৮৯০]/g, (function(e) {
                            return a[e]
                        }
                        ))
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        ))
                    },
                    meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "রাত" === t && e >= 4 || "দুপুর" === t && e < 5 || "বিকাল" === t ? e + 12 : e
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "রাত" : e < 10 ? "সকাল" : e < 17 ? "দুপুর" : e < 20 ? "বিকাল" : "রাত"
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        31545: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "༡",
                    2: "༢",
                    3: "༣",
                    4: "༤",
                    5: "༥",
                    6: "༦",
                    7: "༧",
                    8: "༨",
                    9: "༩",
                    0: "༠"
                }
                  , a = {
                    "༡": "1",
                    "༢": "2",
                    "༣": "3",
                    "༤": "4",
                    "༥": "5",
                    "༦": "6",
                    "༧": "7",
                    "༨": "8",
                    "༩": "9",
                    "༠": "0"
                };
                e.defineLocale("bo", {
                    months: "ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split("_"),
                    monthsShort: "ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12".split("_"),
                    monthsShortRegex: /^(ཟླ་\d{1,2})/,
                    monthsParseExact: !0,
                    weekdays: "གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་".split("_"),
                    weekdaysShort: "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),
                    weekdaysMin: "ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན".split("_"),
                    longDateFormat: {
                        LT: "A h:mm",
                        LTS: "A h:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY, A h:mm",
                        LLLL: "dddd, D MMMM YYYY, A h:mm"
                    },
                    calendar: {
                        sameDay: "[དི་རིང] LT",
                        nextDay: "[སང་ཉིན] LT",
                        nextWeek: "[བདུན་ཕྲག་རྗེས་མ], LT",
                        lastDay: "[ཁ་སང] LT",
                        lastWeek: "[བདུན་ཕྲག་མཐའ་མ] dddd, LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s ལ་",
                        past: "%s སྔན་ལ",
                        s: "ལམ་སང",
                        ss: "%d སྐར་ཆ།",
                        m: "སྐར་མ་གཅིག",
                        mm: "%d སྐར་མ",
                        h: "ཆུ་ཚོད་གཅིག",
                        hh: "%d ཆུ་ཚོད",
                        d: "ཉིན་གཅིག",
                        dd: "%d ཉིན་",
                        M: "ཟླ་བ་གཅིག",
                        MM: "%d ཟླ་བ",
                        y: "ལོ་གཅིག",
                        yy: "%d ལོ"
                    },
                    preparse: function(e) {
                        return e.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, (function(e) {
                            return a[e]
                        }
                        ))
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        ))
                    },
                    meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "མཚན་མོ" === t && e >= 4 || "ཉིན་གུང" === t && e < 5 || "དགོང་དག" === t ? e + 12 : e
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "མཚན་མོ" : e < 10 ? "ཞོགས་ཀས" : e < 17 ? "ཉིན་གུང" : e < 20 ? "དགོང་དག" : "མཚན་མོ"
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        11470: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a) {
                    return e + " " + i({
                        mm: "munutenn",
                        MM: "miz",
                        dd: "devezh"
                    }[a], e)
                }
                function a(e) {
                    switch (n(e)) {
                    case 1:
                    case 3:
                    case 4:
                    case 5:
                    case 9:
                        return e + " bloaz";
                    default:
                        return e + " vloaz"
                    }
                }
                function n(e) {
                    return e > 9 ? n(e % 10) : e
                }
                function i(e, t) {
                    return 2 === t ? s(e) : e
                }
                function s(e) {
                    var t = {
                        m: "v",
                        b: "v",
                        d: "z"
                    };
                    return void 0 === t[e.charAt(0)] ? e : t[e.charAt(0)] + e.substring(1)
                }
                var r = [/^gen/i, /^c[ʼ\']hwe/i, /^meu/i, /^ebr/i, /^mae/i, /^(mez|eve)/i, /^gou/i, /^eos/i, /^gwe/i, /^her/i, /^du/i, /^ker/i]
                  , o = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i
                  , l = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i
                  , d = /^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i
                  , c = [/^sul/i, /^lun/i, /^meurzh/i, /^merc[ʼ\']her/i, /^yaou/i, /^gwener/i, /^sadorn/i]
                  , m = [/^Sul/i, /^Lun/i, /^Meu/i, /^Mer/i, /^Yao/i, /^Gwe/i, /^Sad/i]
                  , u = [/^Su/i, /^Lu/i, /^Me([^r]|$)/i, /^Mer/i, /^Ya/i, /^Gw/i, /^Sa/i];
                e.defineLocale("br", {
                    months: "Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split("_"),
                    monthsShort: "Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split("_"),
                    weekdays: "Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn".split("_"),
                    weekdaysShort: "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
                    weekdaysMin: "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
                    weekdaysParse: u,
                    fullWeekdaysParse: c,
                    shortWeekdaysParse: m,
                    minWeekdaysParse: u,
                    monthsRegex: o,
                    monthsShortRegex: o,
                    monthsStrictRegex: l,
                    monthsShortStrictRegex: d,
                    monthsParse: r,
                    longMonthsParse: r,
                    shortMonthsParse: r,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D [a viz] MMMM YYYY",
                        LLL: "D [a viz] MMMM YYYY HH:mm",
                        LLLL: "dddd, D [a viz] MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Hiziv da] LT",
                        nextDay: "[Warcʼhoazh da] LT",
                        nextWeek: "dddd [da] LT",
                        lastDay: "[Decʼh da] LT",
                        lastWeek: "dddd [paset da] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "a-benn %s",
                        past: "%s ʼzo",
                        s: "un nebeud segondennoù",
                        ss: "%d eilenn",
                        m: "ur vunutenn",
                        mm: t,
                        h: "un eur",
                        hh: "%d eur",
                        d: "un devezh",
                        dd: t,
                        M: "ur miz",
                        MM: t,
                        y: "ur bloaz",
                        yy: a
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
                    ordinal: function(e) {
                        return e + (1 === e ? "añ" : "vet")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    meridiemParse: /a.m.|g.m./,
                    isPM: function(e) {
                        return "g.m." === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "a.m." : "g.m."
                    }
                })
            }(a(95093))
        },
        44429: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a, n) {
                    if ("m" === a)
                        return t ? "jedna minuta" : n ? "jednu minutu" : "jedne minute"
                }
                function a(e, t, a) {
                    var n = e + " ";
                    switch (a) {
                    case "ss":
                        return n += 1 === e ? "sekunda" : 2 === e || 3 === e || 4 === e ? "sekunde" : "sekundi";
                    case "mm":
                        return n += 1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta";
                    case "h":
                        return "jedan sat";
                    case "hh":
                        return n += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati";
                    case "dd":
                        return n += 1 === e ? "dan" : "dana";
                    case "MM":
                        return n += 1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci";
                    case "yy":
                        return n += 1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina"
                    }
                }
                e.defineLocale("bs", {
                    months: "januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split("_"),
                    monthsShort: "jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
                    weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
                    weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY H:mm",
                        LLLL: "dddd, D. MMMM YYYY H:mm"
                    },
                    calendar: {
                        sameDay: "[danas u] LT",
                        nextDay: "[sutra u] LT",
                        nextWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[u] [nedjelju] [u] LT";
                            case 3:
                                return "[u] [srijedu] [u] LT";
                            case 6:
                                return "[u] [subotu] [u] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[u] dddd [u] LT"
                            }
                        },
                        lastDay: "[jučer u] LT",
                        lastWeek: function() {
                            switch (this.day()) {
                            case 0:
                            case 3:
                                return "[prošlu] dddd [u] LT";
                            case 6:
                                return "[prošle] [subote] [u] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[prošli] dddd [u] LT"
                            }
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "za %s",
                        past: "prije %s",
                        s: "par sekundi",
                        ss: a,
                        m: t,
                        mm: a,
                        h: a,
                        hh: a,
                        d: "dan",
                        dd: a,
                        M: "mjesec",
                        MM: a,
                        y: "godinu",
                        yy: a
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        7306: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("ca", {
                    months: {
                        standalone: "gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split("_"),
                        format: "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split("_"),
                        isFormat: /D[oD]?(\s)+MMMM/
                    },
                    monthsShort: "gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split("_"),
                    weekdaysShort: "dg._dl._dt._dc._dj._dv._ds.".split("_"),
                    weekdaysMin: "dg_dl_dt_dc_dj_dv_ds".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM [de] YYYY",
                        ll: "D MMM YYYY",
                        LLL: "D MMMM [de] YYYY [a les] H:mm",
                        lll: "D MMM YYYY, H:mm",
                        LLLL: "dddd D MMMM [de] YYYY [a les] H:mm",
                        llll: "ddd D MMM YYYY, H:mm"
                    },
                    calendar: {
                        sameDay: function() {
                            return "[avui a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                        },
                        nextDay: function() {
                            return "[demà a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                        },
                        nextWeek: function() {
                            return "dddd [a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                        },
                        lastDay: function() {
                            return "[ahir a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                        },
                        lastWeek: function() {
                            return "[el] dddd [passat a " + (1 !== this.hours() ? "les" : "la") + "] LT"
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "d'aquí %s",
                        past: "fa %s",
                        s: "uns segons",
                        ss: "%d segons",
                        m: "un minut",
                        mm: "%d minuts",
                        h: "una hora",
                        hh: "%d hores",
                        d: "un dia",
                        dd: "%d dies",
                        M: "un mes",
                        MM: "%d mesos",
                        y: "un any",
                        yy: "%d anys"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
                    ordinal: function(e, t) {
                        var a = 1 === e ? "r" : 2 === e ? "n" : 3 === e ? "r" : 4 === e ? "t" : "è";
                        return "w" !== t && "W" !== t || (a = "a"),
                        e + a
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        56464: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    standalone: "leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec".split("_"),
                    format: "ledna_února_března_dubna_května_června_července_srpna_září_října_listopadu_prosince".split("_"),
                    isFormat: /DD?[o.]?(\[[^\[\]]*\]|\s)+MMMM/
                }
                  , a = "led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro".split("_")
                  , n = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i]
                  , i = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;
                function s(e) {
                    return e > 1 && e < 5 && 1 != ~~(e / 10)
                }
                function r(e, t, a, n) {
                    var i = e + " ";
                    switch (a) {
                    case "s":
                        return t || n ? "pár sekund" : "pár sekundami";
                    case "ss":
                        return t || n ? i + (s(e) ? "sekundy" : "sekund") : i + "sekundami";
                    case "m":
                        return t ? "minuta" : n ? "minutu" : "minutou";
                    case "mm":
                        return t || n ? i + (s(e) ? "minuty" : "minut") : i + "minutami";
                    case "h":
                        return t ? "hodina" : n ? "hodinu" : "hodinou";
                    case "hh":
                        return t || n ? i + (s(e) ? "hodiny" : "hodin") : i + "hodinami";
                    case "d":
                        return t || n ? "den" : "dnem";
                    case "dd":
                        return t || n ? i + (s(e) ? "dny" : "dní") : i + "dny";
                    case "M":
                        return t || n ? "měsíc" : "měsícem";
                    case "MM":
                        return t || n ? i + (s(e) ? "měsíce" : "měsíců") : i + "měsíci";
                    case "y":
                        return t || n ? "rok" : "rokem";
                    case "yy":
                        return t || n ? i + (s(e) ? "roky" : "let") : i + "lety"
                    }
                }
                e.defineLocale("cs", {
                    months: t,
                    monthsShort: a,
                    monthsRegex: i,
                    monthsShortRegex: i,
                    monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
                    monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
                    monthsParse: n,
                    longMonthsParse: n,
                    shortMonthsParse: n,
                    weekdays: "neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota".split("_"),
                    weekdaysShort: "ne_po_út_st_čt_pá_so".split("_"),
                    weekdaysMin: "ne_po_út_st_čt_pá_so".split("_"),
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY H:mm",
                        LLLL: "dddd D. MMMM YYYY H:mm",
                        l: "D. M. YYYY"
                    },
                    calendar: {
                        sameDay: "[dnes v] LT",
                        nextDay: "[zítra v] LT",
                        nextWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[v neděli v] LT";
                            case 1:
                            case 2:
                                return "[v] dddd [v] LT";
                            case 3:
                                return "[ve středu v] LT";
                            case 4:
                                return "[ve čtvrtek v] LT";
                            case 5:
                                return "[v pátek v] LT";
                            case 6:
                                return "[v sobotu v] LT"
                            }
                        },
                        lastDay: "[včera v] LT",
                        lastWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[minulou neděli v] LT";
                            case 1:
                            case 2:
                                return "[minulé] dddd [v] LT";
                            case 3:
                                return "[minulou středu v] LT";
                            case 4:
                            case 5:
                                return "[minulý] dddd [v] LT";
                            case 6:
                                return "[minulou sobotu v] LT"
                            }
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "za %s",
                        past: "před %s",
                        s: r,
                        ss: r,
                        m: r,
                        mm: r,
                        h: r,
                        hh: r,
                        d: r,
                        dd: r,
                        M: r,
                        MM: r,
                        y: r,
                        yy: r
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        73635: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("cv", {
                    months: "кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав".split("_"),
                    monthsShort: "кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш".split("_"),
                    weekdays: "вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун".split("_"),
                    weekdaysShort: "выр_тун_ытл_юн_кӗҫ_эрн_шӑм".split("_"),
                    weekdaysMin: "вр_тн_ыт_юн_кҫ_эр_шм".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD-MM-YYYY",
                        LL: "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]",
                        LLL: "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm",
                        LLLL: "dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm"
                    },
                    calendar: {
                        sameDay: "[Паян] LT [сехетре]",
                        nextDay: "[Ыран] LT [сехетре]",
                        lastDay: "[Ӗнер] LT [сехетре]",
                        nextWeek: "[Ҫитес] dddd LT [сехетре]",
                        lastWeek: "[Иртнӗ] dddd LT [сехетре]",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: function(e) {
                            return e + (/сехет$/i.exec(e) ? "рен" : /ҫул$/i.exec(e) ? "тан" : "ран")
                        },
                        past: "%s каялла",
                        s: "пӗр-ик ҫеккунт",
                        ss: "%d ҫеккунт",
                        m: "пӗр минут",
                        mm: "%d минут",
                        h: "пӗр сехет",
                        hh: "%d сехет",
                        d: "пӗр кун",
                        dd: "%d кун",
                        M: "пӗр уйӑх",
                        MM: "%d уйӑх",
                        y: "пӗр ҫул",
                        yy: "%d ҫул"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
                    ordinal: "%d-мӗш",
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        64226: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("cy", {
                    months: "Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split("_"),
                    monthsShort: "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),
                    weekdays: "Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split("_"),
                    weekdaysShort: "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
                    weekdaysMin: "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Heddiw am] LT",
                        nextDay: "[Yfory am] LT",
                        nextWeek: "dddd [am] LT",
                        lastDay: "[Ddoe am] LT",
                        lastWeek: "dddd [diwethaf am] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "mewn %s",
                        past: "%s yn ôl",
                        s: "ychydig eiliadau",
                        ss: "%d eiliad",
                        m: "munud",
                        mm: "%d munud",
                        h: "awr",
                        hh: "%d awr",
                        d: "diwrnod",
                        dd: "%d diwrnod",
                        M: "mis",
                        MM: "%d mis",
                        y: "blwyddyn",
                        yy: "%d flynedd"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
                    ordinal: function(e) {
                        var t = "";
                        return e > 20 ? t = 40 === e || 50 === e || 60 === e || 80 === e || 100 === e ? "fed" : "ain" : e > 0 && (t = ["", "af", "il", "ydd", "ydd", "ed", "ed", "ed", "fed", "fed", "fed", "eg", "fed", "eg", "eg", "fed", "eg", "eg", "fed", "eg", "fed"][e]),
                        e + t
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        93601: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("da", {
                    months: "januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split("_"),
                    monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
                    weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
                    weekdaysShort: "søn_man_tir_ons_tor_fre_lør".split("_"),
                    weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY HH:mm",
                        LLLL: "dddd [d.] D. MMMM YYYY [kl.] HH:mm"
                    },
                    calendar: {
                        sameDay: "[i dag kl.] LT",
                        nextDay: "[i morgen kl.] LT",
                        nextWeek: "på dddd [kl.] LT",
                        lastDay: "[i går kl.] LT",
                        lastWeek: "[i] dddd[s kl.] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "om %s",
                        past: "%s siden",
                        s: "få sekunder",
                        ss: "%d sekunder",
                        m: "et minut",
                        mm: "%d minutter",
                        h: "en time",
                        hh: "%d timer",
                        d: "en dag",
                        dd: "%d dage",
                        M: "en måned",
                        MM: "%d måneder",
                        y: "et år",
                        yy: "%d år"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        26111: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a, n) {
                    var i = {
                        m: ["eine Minute", "einer Minute"],
                        h: ["eine Stunde", "einer Stunde"],
                        d: ["ein Tag", "einem Tag"],
                        dd: [e + " Tage", e + " Tagen"],
                        w: ["eine Woche", "einer Woche"],
                        M: ["ein Monat", "einem Monat"],
                        MM: [e + " Monate", e + " Monaten"],
                        y: ["ein Jahr", "einem Jahr"],
                        yy: [e + " Jahre", e + " Jahren"]
                    };
                    return t ? i[a][0] : i[a][1]
                }
                e.defineLocale("de-at", {
                    months: "Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
                    monthsShort: "Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
                    weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
                    weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY HH:mm",
                        LLLL: "dddd, D. MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[heute um] LT [Uhr]",
                        sameElse: "L",
                        nextDay: "[morgen um] LT [Uhr]",
                        nextWeek: "dddd [um] LT [Uhr]",
                        lastDay: "[gestern um] LT [Uhr]",
                        lastWeek: "[letzten] dddd [um] LT [Uhr]"
                    },
                    relativeTime: {
                        future: "in %s",
                        past: "vor %s",
                        s: "ein paar Sekunden",
                        ss: "%d Sekunden",
                        m: t,
                        mm: "%d Minuten",
                        h: t,
                        hh: "%d Stunden",
                        d: t,
                        dd: t,
                        w: t,
                        ww: "%d Wochen",
                        M: t,
                        MM: t,
                        y: t,
                        yy: t
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        54697: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a, n) {
                    var i = {
                        m: ["eine Minute", "einer Minute"],
                        h: ["eine Stunde", "einer Stunde"],
                        d: ["ein Tag", "einem Tag"],
                        dd: [e + " Tage", e + " Tagen"],
                        w: ["eine Woche", "einer Woche"],
                        M: ["ein Monat", "einem Monat"],
                        MM: [e + " Monate", e + " Monaten"],
                        y: ["ein Jahr", "einem Jahr"],
                        yy: [e + " Jahre", e + " Jahren"]
                    };
                    return t ? i[a][0] : i[a][1]
                }
                e.defineLocale("de-ch", {
                    months: "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
                    monthsShort: "Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
                    weekdaysShort: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
                    weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY HH:mm",
                        LLLL: "dddd, D. MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[heute um] LT [Uhr]",
                        sameElse: "L",
                        nextDay: "[morgen um] LT [Uhr]",
                        nextWeek: "dddd [um] LT [Uhr]",
                        lastDay: "[gestern um] LT [Uhr]",
                        lastWeek: "[letzten] dddd [um] LT [Uhr]"
                    },
                    relativeTime: {
                        future: "in %s",
                        past: "vor %s",
                        s: "ein paar Sekunden",
                        ss: "%d Sekunden",
                        m: t,
                        mm: "%d Minuten",
                        h: t,
                        hh: "%d Stunden",
                        d: t,
                        dd: t,
                        w: t,
                        ww: "%d Wochen",
                        M: t,
                        MM: t,
                        y: t,
                        yy: t
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        77853: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a, n) {
                    var i = {
                        m: ["eine Minute", "einer Minute"],
                        h: ["eine Stunde", "einer Stunde"],
                        d: ["ein Tag", "einem Tag"],
                        dd: [e + " Tage", e + " Tagen"],
                        w: ["eine Woche", "einer Woche"],
                        M: ["ein Monat", "einem Monat"],
                        MM: [e + " Monate", e + " Monaten"],
                        y: ["ein Jahr", "einem Jahr"],
                        yy: [e + " Jahre", e + " Jahren"]
                    };
                    return t ? i[a][0] : i[a][1]
                }
                e.defineLocale("de", {
                    months: "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
                    monthsShort: "Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
                    weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
                    weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY HH:mm",
                        LLLL: "dddd, D. MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[heute um] LT [Uhr]",
                        sameElse: "L",
                        nextDay: "[morgen um] LT [Uhr]",
                        nextWeek: "dddd [um] LT [Uhr]",
                        lastDay: "[gestern um] LT [Uhr]",
                        lastWeek: "[letzten] dddd [um] LT [Uhr]"
                    },
                    relativeTime: {
                        future: "in %s",
                        past: "vor %s",
                        s: "ein paar Sekunden",
                        ss: "%d Sekunden",
                        m: t,
                        mm: "%d Minuten",
                        h: t,
                        hh: "%d Stunden",
                        d: t,
                        dd: t,
                        w: t,
                        ww: "%d Wochen",
                        M: t,
                        MM: t,
                        y: t,
                        yy: t
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        60708: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = ["ޖެނުއަރީ", "ފެބްރުއަރީ", "މާރިޗު", "އޭޕްރީލު", "މޭ", "ޖޫން", "ޖުލައި", "އޯގަސްޓު", "ސެޕްޓެމްބަރު", "އޮކްޓޯބަރު", "ނޮވެމްބަރު", "ޑިސެމްބަރު"]
                  , a = ["އާދިއްތަ", "ހޯމަ", "އަންގާރަ", "ބުދަ", "ބުރާސްފަތި", "ހުކުރު", "ހޮނިހިރު"];
                e.defineLocale("dv", {
                    months: t,
                    monthsShort: t,
                    weekdays: a,
                    weekdaysShort: a,
                    weekdaysMin: "އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "D/M/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    meridiemParse: /މކ|މފ/,
                    isPM: function(e) {
                        return "މފ" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "މކ" : "މފ"
                    },
                    calendar: {
                        sameDay: "[މިއަދު] LT",
                        nextDay: "[މާދަމާ] LT",
                        nextWeek: "dddd LT",
                        lastDay: "[އިއްޔެ] LT",
                        lastWeek: "[ފާއިތުވި] dddd LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "ތެރޭގައި %s",
                        past: "ކުރިން %s",
                        s: "ސިކުންތުކޮޅެއް",
                        ss: "d% ސިކުންތު",
                        m: "މިނިޓެއް",
                        mm: "މިނިޓު %d",
                        h: "ގަޑިއިރެއް",
                        hh: "ގަޑިއިރު %d",
                        d: "ދުވަހެއް",
                        dd: "ދުވަސް %d",
                        M: "މަހެއް",
                        MM: "މަސް %d",
                        y: "އަހަރެއް",
                        yy: "އަހަރު %d"
                    },
                    preparse: function(e) {
                        return e.replace(/،/g, ",")
                    },
                    postformat: function(e) {
                        return e.replace(/,/g, "،")
                    },
                    week: {
                        dow: 7,
                        doy: 12
                    }
                })
            }(a(95093))
        },
        54691: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e) {
                    return "undefined" != typeof Function && e instanceof Function || "[object Function]" === Object.prototype.toString.call(e)
                }
                e.defineLocale("el", {
                    monthsNominativeEl: "Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος".split("_"),
                    monthsGenitiveEl: "Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου".split("_"),
                    months: function(e, t) {
                        return e ? "string" == typeof t && /D/.test(t.substring(0, t.indexOf("MMMM"))) ? this._monthsGenitiveEl[e.month()] : this._monthsNominativeEl[e.month()] : this._monthsNominativeEl
                    },
                    monthsShort: "Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ".split("_"),
                    weekdays: "Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο".split("_"),
                    weekdaysShort: "Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ".split("_"),
                    weekdaysMin: "Κυ_Δε_Τρ_Τε_Πε_Πα_Σα".split("_"),
                    meridiem: function(e, t, a) {
                        return e > 11 ? a ? "μμ" : "ΜΜ" : a ? "πμ" : "ΠΜ"
                    },
                    isPM: function(e) {
                        return "μ" === (e + "").toLowerCase()[0]
                    },
                    meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
                    longDateFormat: {
                        LT: "h:mm A",
                        LTS: "h:mm:ss A",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY h:mm A",
                        LLLL: "dddd, D MMMM YYYY h:mm A"
                    },
                    calendarEl: {
                        sameDay: "[Σήμερα {}] LT",
                        nextDay: "[Αύριο {}] LT",
                        nextWeek: "dddd [{}] LT",
                        lastDay: "[Χθες {}] LT",
                        lastWeek: function() {
                            return 6 === this.day() ? "[το προηγούμενο] dddd [{}] LT" : "[την προηγούμενη] dddd [{}] LT"
                        },
                        sameElse: "L"
                    },
                    calendar: function(e, a) {
                        var n = this._calendarEl[e]
                          , i = a && a.hours();
                        return t(n) && (n = n.apply(a)),
                        n.replace("{}", i % 12 == 1 ? "στη" : "στις")
                    },
                    relativeTime: {
                        future: "σε %s",
                        past: "%s πριν",
                        s: "λίγα δευτερόλεπτα",
                        ss: "%d δευτερόλεπτα",
                        m: "ένα λεπτό",
                        mm: "%d λεπτά",
                        h: "μία ώρα",
                        hh: "%d ώρες",
                        d: "μία μέρα",
                        dd: "%d μέρες",
                        M: "ένας μήνας",
                        MM: "%d μήνες",
                        y: "ένας χρόνος",
                        yy: "%d χρόνια"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}η/,
                    ordinal: "%dη",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        31491: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("en-au", {
                    months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                    monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                    weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                    weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                    weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                    longDateFormat: {
                        LT: "h:mm A",
                        LTS: "h:mm:ss A",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY h:mm A",
                        LLLL: "dddd, D MMMM YYYY h:mm A"
                    },
                    calendar: {
                        sameDay: "[Today at] LT",
                        nextDay: "[Tomorrow at] LT",
                        nextWeek: "dddd [at] LT",
                        lastDay: "[Yesterday at] LT",
                        lastWeek: "[Last] dddd [at] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "in %s",
                        past: "%s ago",
                        s: "a few seconds",
                        ss: "%d seconds",
                        m: "a minute",
                        mm: "%d minutes",
                        h: "an hour",
                        hh: "%d hours",
                        d: "a day",
                        dd: "%d days",
                        M: "a month",
                        MM: "%d months",
                        y: "a year",
                        yy: "%d years"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                    ordinal: function(e) {
                        var t = e % 10;
                        return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                    },
                    week: {
                        dow: 0,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        28298: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("en-ca", {
                    months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                    monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                    weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                    weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                    weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                    longDateFormat: {
                        LT: "h:mm A",
                        LTS: "h:mm:ss A",
                        L: "YYYY-MM-DD",
                        LL: "MMMM D, YYYY",
                        LLL: "MMMM D, YYYY h:mm A",
                        LLLL: "dddd, MMMM D, YYYY h:mm A"
                    },
                    calendar: {
                        sameDay: "[Today at] LT",
                        nextDay: "[Tomorrow at] LT",
                        nextWeek: "dddd [at] LT",
                        lastDay: "[Yesterday at] LT",
                        lastWeek: "[Last] dddd [at] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "in %s",
                        past: "%s ago",
                        s: "a few seconds",
                        ss: "%d seconds",
                        m: "a minute",
                        mm: "%d minutes",
                        h: "an hour",
                        hh: "%d hours",
                        d: "a day",
                        dd: "%d days",
                        M: "a month",
                        MM: "%d months",
                        y: "a year",
                        yy: "%d years"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                    ordinal: function(e) {
                        var t = e % 10;
                        return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                    }
                })
            }(a(95093))
        },
        56195: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("en-gb", {
                    months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                    monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                    weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                    weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                    weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Today at] LT",
                        nextDay: "[Tomorrow at] LT",
                        nextWeek: "dddd [at] LT",
                        lastDay: "[Yesterday at] LT",
                        lastWeek: "[Last] dddd [at] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "in %s",
                        past: "%s ago",
                        s: "a few seconds",
                        ss: "%d seconds",
                        m: "a minute",
                        mm: "%d minutes",
                        h: "an hour",
                        hh: "%d hours",
                        d: "a day",
                        dd: "%d days",
                        M: "a month",
                        MM: "%d months",
                        y: "a year",
                        yy: "%d years"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                    ordinal: function(e) {
                        var t = e % 10;
                        return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        66584: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("en-ie", {
                    months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                    monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                    weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                    weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                    weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Today at] LT",
                        nextDay: "[Tomorrow at] LT",
                        nextWeek: "dddd [at] LT",
                        lastDay: "[Yesterday at] LT",
                        lastWeek: "[Last] dddd [at] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "in %s",
                        past: "%s ago",
                        s: "a few seconds",
                        ss: "%d seconds",
                        m: "a minute",
                        mm: "%d minutes",
                        h: "an hour",
                        hh: "%d hours",
                        d: "a day",
                        dd: "%d days",
                        M: "a month",
                        MM: "%d months",
                        y: "a year",
                        yy: "%d years"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                    ordinal: function(e) {
                        var t = e % 10;
                        return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        65543: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("en-il", {
                    months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                    monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                    weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                    weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                    weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Today at] LT",
                        nextDay: "[Tomorrow at] LT",
                        nextWeek: "dddd [at] LT",
                        lastDay: "[Yesterday at] LT",
                        lastWeek: "[Last] dddd [at] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "in %s",
                        past: "%s ago",
                        s: "a few seconds",
                        ss: "%d seconds",
                        m: "a minute",
                        mm: "%d minutes",
                        h: "an hour",
                        hh: "%d hours",
                        d: "a day",
                        dd: "%d days",
                        M: "a month",
                        MM: "%d months",
                        y: "a year",
                        yy: "%d years"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                    ordinal: function(e) {
                        var t = e % 10;
                        return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                    }
                })
            }(a(95093))
        },
        9033: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("en-in", {
                    months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                    monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                    weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                    weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                    weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                    longDateFormat: {
                        LT: "h:mm A",
                        LTS: "h:mm:ss A",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY h:mm A",
                        LLLL: "dddd, D MMMM YYYY h:mm A"
                    },
                    calendar: {
                        sameDay: "[Today at] LT",
                        nextDay: "[Tomorrow at] LT",
                        nextWeek: "dddd [at] LT",
                        lastDay: "[Yesterday at] LT",
                        lastWeek: "[Last] dddd [at] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "in %s",
                        past: "%s ago",
                        s: "a few seconds",
                        ss: "%d seconds",
                        m: "a minute",
                        mm: "%d minutes",
                        h: "an hour",
                        hh: "%d hours",
                        d: "a day",
                        dd: "%d days",
                        M: "a month",
                        MM: "%d months",
                        y: "a year",
                        yy: "%d years"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                    ordinal: function(e) {
                        var t = e % 10;
                        return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        79402: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("en-nz", {
                    months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                    monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                    weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                    weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                    weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                    longDateFormat: {
                        LT: "h:mm A",
                        LTS: "h:mm:ss A",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY h:mm A",
                        LLLL: "dddd, D MMMM YYYY h:mm A"
                    },
                    calendar: {
                        sameDay: "[Today at] LT",
                        nextDay: "[Tomorrow at] LT",
                        nextWeek: "dddd [at] LT",
                        lastDay: "[Yesterday at] LT",
                        lastWeek: "[Last] dddd [at] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "in %s",
                        past: "%s ago",
                        s: "a few seconds",
                        ss: "%d seconds",
                        m: "a minute",
                        mm: "%d minutes",
                        h: "an hour",
                        hh: "%d hours",
                        d: "a day",
                        dd: "%d days",
                        M: "a month",
                        MM: "%d months",
                        y: "a year",
                        yy: "%d years"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                    ordinal: function(e) {
                        var t = e % 10;
                        return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        43004: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("en-sg", {
                    months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                    monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
                    weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                    weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
                    weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Today at] LT",
                        nextDay: "[Tomorrow at] LT",
                        nextWeek: "dddd [at] LT",
                        lastDay: "[Yesterday at] LT",
                        lastWeek: "[Last] dddd [at] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "in %s",
                        past: "%s ago",
                        s: "a few seconds",
                        ss: "%d seconds",
                        m: "a minute",
                        mm: "%d minutes",
                        h: "an hour",
                        hh: "%d hours",
                        d: "a day",
                        dd: "%d days",
                        M: "a month",
                        MM: "%d months",
                        y: "a year",
                        yy: "%d years"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                    ordinal: function(e) {
                        var t = e % 10;
                        return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        32934: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("eo", {
                    months: "januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro".split("_"),
                    monthsShort: "jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec".split("_"),
                    weekdays: "dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato".split("_"),
                    weekdaysShort: "dim_lun_mard_merk_ĵaŭ_ven_sab".split("_"),
                    weekdaysMin: "di_lu_ma_me_ĵa_ve_sa".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "YYYY-MM-DD",
                        LL: "[la] D[-an de] MMMM, YYYY",
                        LLL: "[la] D[-an de] MMMM, YYYY HH:mm",
                        LLLL: "dddd[n], [la] D[-an de] MMMM, YYYY HH:mm",
                        llll: "ddd, [la] D[-an de] MMM, YYYY HH:mm"
                    },
                    meridiemParse: /[ap]\.t\.m/i,
                    isPM: function(e) {
                        return "p" === e.charAt(0).toLowerCase()
                    },
                    meridiem: function(e, t, a) {
                        return e > 11 ? a ? "p.t.m." : "P.T.M." : a ? "a.t.m." : "A.T.M."
                    },
                    calendar: {
                        sameDay: "[Hodiaŭ je] LT",
                        nextDay: "[Morgaŭ je] LT",
                        nextWeek: "dddd[n je] LT",
                        lastDay: "[Hieraŭ je] LT",
                        lastWeek: "[pasintan] dddd[n je] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "post %s",
                        past: "antaŭ %s",
                        s: "kelkaj sekundoj",
                        ss: "%d sekundoj",
                        m: "unu minuto",
                        mm: "%d minutoj",
                        h: "unu horo",
                        hh: "%d horoj",
                        d: "unu tago",
                        dd: "%d tagoj",
                        M: "unu monato",
                        MM: "%d monatoj",
                        y: "unu jaro",
                        yy: "%d jaroj"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}a/,
                    ordinal: "%da",
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        20838: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_")
                  , a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_")
                  , n = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i]
                  , i = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
                e.defineLocale("es-do", {
                    months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
                    monthsShort: function(e, n) {
                        return e ? /-MMM-/.test(n) ? a[e.month()] : t[e.month()] : t
                    },
                    monthsRegex: i,
                    monthsShortRegex: i,
                    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
                    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
                    monthsParse: n,
                    longMonthsParse: n,
                    shortMonthsParse: n,
                    weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
                    weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
                    weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "h:mm A",
                        LTS: "h:mm:ss A",
                        L: "DD/MM/YYYY",
                        LL: "D [de] MMMM [de] YYYY",
                        LLL: "D [de] MMMM [de] YYYY h:mm A",
                        LLLL: "dddd, D [de] MMMM [de] YYYY h:mm A"
                    },
                    calendar: {
                        sameDay: function() {
                            return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        nextDay: function() {
                            return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        nextWeek: function() {
                            return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        lastDay: function() {
                            return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        lastWeek: function() {
                            return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "en %s",
                        past: "hace %s",
                        s: "unos segundos",
                        ss: "%d segundos",
                        m: "un minuto",
                        mm: "%d minutos",
                        h: "una hora",
                        hh: "%d horas",
                        d: "un día",
                        dd: "%d días",
                        w: "una semana",
                        ww: "%d semanas",
                        M: "un mes",
                        MM: "%d meses",
                        y: "un año",
                        yy: "%d años"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}º/,
                    ordinal: "%dº",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        17730: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_")
                  , a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_")
                  , n = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i]
                  , i = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
                e.defineLocale("es-mx", {
                    months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
                    monthsShort: function(e, n) {
                        return e ? /-MMM-/.test(n) ? a[e.month()] : t[e.month()] : t
                    },
                    monthsRegex: i,
                    monthsShortRegex: i,
                    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
                    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
                    monthsParse: n,
                    longMonthsParse: n,
                    shortMonthsParse: n,
                    weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
                    weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
                    weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D [de] MMMM [de] YYYY",
                        LLL: "D [de] MMMM [de] YYYY H:mm",
                        LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
                    },
                    calendar: {
                        sameDay: function() {
                            return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        nextDay: function() {
                            return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        nextWeek: function() {
                            return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        lastDay: function() {
                            return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        lastWeek: function() {
                            return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "en %s",
                        past: "hace %s",
                        s: "unos segundos",
                        ss: "%d segundos",
                        m: "un minuto",
                        mm: "%d minutos",
                        h: "una hora",
                        hh: "%d horas",
                        d: "un día",
                        dd: "%d días",
                        w: "una semana",
                        ww: "%d semanas",
                        M: "un mes",
                        MM: "%d meses",
                        y: "un año",
                        yy: "%d años"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}º/,
                    ordinal: "%dº",
                    week: {
                        dow: 0,
                        doy: 4
                    },
                    invalidDate: "Fecha inválida"
                })
            }(a(95093))
        },
        56575: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_")
                  , a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_")
                  , n = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i]
                  , i = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
                e.defineLocale("es-us", {
                    months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
                    monthsShort: function(e, n) {
                        return e ? /-MMM-/.test(n) ? a[e.month()] : t[e.month()] : t
                    },
                    monthsRegex: i,
                    monthsShortRegex: i,
                    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
                    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
                    monthsParse: n,
                    longMonthsParse: n,
                    shortMonthsParse: n,
                    weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
                    weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
                    weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "h:mm A",
                        LTS: "h:mm:ss A",
                        L: "MM/DD/YYYY",
                        LL: "D [de] MMMM [de] YYYY",
                        LLL: "D [de] MMMM [de] YYYY h:mm A",
                        LLLL: "dddd, D [de] MMMM [de] YYYY h:mm A"
                    },
                    calendar: {
                        sameDay: function() {
                            return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        nextDay: function() {
                            return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        nextWeek: function() {
                            return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        lastDay: function() {
                            return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        lastWeek: function() {
                            return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "en %s",
                        past: "hace %s",
                        s: "unos segundos",
                        ss: "%d segundos",
                        m: "un minuto",
                        mm: "%d minutos",
                        h: "una hora",
                        hh: "%d horas",
                        d: "un día",
                        dd: "%d días",
                        w: "una semana",
                        ww: "%d semanas",
                        M: "un mes",
                        MM: "%d meses",
                        y: "un año",
                        yy: "%d años"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}º/,
                    ordinal: "%dº",
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        97650: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_")
                  , a = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_")
                  , n = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i]
                  , i = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;
                e.defineLocale("es", {
                    months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
                    monthsShort: function(e, n) {
                        return e ? /-MMM-/.test(n) ? a[e.month()] : t[e.month()] : t
                    },
                    monthsRegex: i,
                    monthsShortRegex: i,
                    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
                    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
                    monthsParse: n,
                    longMonthsParse: n,
                    shortMonthsParse: n,
                    weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
                    weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
                    weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D [de] MMMM [de] YYYY",
                        LLL: "D [de] MMMM [de] YYYY H:mm",
                        LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
                    },
                    calendar: {
                        sameDay: function() {
                            return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        nextDay: function() {
                            return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        nextWeek: function() {
                            return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        lastDay: function() {
                            return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        lastWeek: function() {
                            return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT"
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "en %s",
                        past: "hace %s",
                        s: "unos segundos",
                        ss: "%d segundos",
                        m: "un minuto",
                        mm: "%d minutos",
                        h: "una hora",
                        hh: "%d horas",
                        d: "un día",
                        dd: "%d días",
                        w: "una semana",
                        ww: "%d semanas",
                        M: "un mes",
                        MM: "%d meses",
                        y: "un año",
                        yy: "%d años"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}º/,
                    ordinal: "%dº",
                    week: {
                        dow: 1,
                        doy: 4
                    },
                    invalidDate: "Fecha inválida"
                })
            }(a(95093))
        },
        3035: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a, n) {
                    var i = {
                        s: ["mõne sekundi", "mõni sekund", "paar sekundit"],
                        ss: [e + "sekundi", e + "sekundit"],
                        m: ["ühe minuti", "üks minut"],
                        mm: [e + " minuti", e + " minutit"],
                        h: ["ühe tunni", "tund aega", "üks tund"],
                        hh: [e + " tunni", e + " tundi"],
                        d: ["ühe päeva", "üks päev"],
                        M: ["kuu aja", "kuu aega", "üks kuu"],
                        MM: [e + " kuu", e + " kuud"],
                        y: ["ühe aasta", "aasta", "üks aasta"],
                        yy: [e + " aasta", e + " aastat"]
                    };
                    return t ? i[a][2] ? i[a][2] : i[a][1] : n ? i[a][0] : i[a][1]
                }
                e.defineLocale("et", {
                    months: "jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split("_"),
                    monthsShort: "jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split("_"),
                    weekdays: "pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev".split("_"),
                    weekdaysShort: "P_E_T_K_N_R_L".split("_"),
                    weekdaysMin: "P_E_T_K_N_R_L".split("_"),
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY H:mm",
                        LLLL: "dddd, D. MMMM YYYY H:mm"
                    },
                    calendar: {
                        sameDay: "[Täna,] LT",
                        nextDay: "[Homme,] LT",
                        nextWeek: "[Järgmine] dddd LT",
                        lastDay: "[Eile,] LT",
                        lastWeek: "[Eelmine] dddd LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s pärast",
                        past: "%s tagasi",
                        s: t,
                        ss: t,
                        m: t,
                        mm: t,
                        h: t,
                        hh: t,
                        d: t,
                        dd: "%d päeva",
                        M: t,
                        MM: t,
                        y: t,
                        yy: t
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        3508: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("eu", {
                    months: "urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split("_"),
                    monthsShort: "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split("_"),
                    weekdaysShort: "ig._al._ar._az._og._ol._lr.".split("_"),
                    weekdaysMin: "ig_al_ar_az_og_ol_lr".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "YYYY-MM-DD",
                        LL: "YYYY[ko] MMMM[ren] D[a]",
                        LLL: "YYYY[ko] MMMM[ren] D[a] HH:mm",
                        LLLL: "dddd, YYYY[ko] MMMM[ren] D[a] HH:mm",
                        l: "YYYY-M-D",
                        ll: "YYYY[ko] MMM D[a]",
                        lll: "YYYY[ko] MMM D[a] HH:mm",
                        llll: "ddd, YYYY[ko] MMM D[a] HH:mm"
                    },
                    calendar: {
                        sameDay: "[gaur] LT[etan]",
                        nextDay: "[bihar] LT[etan]",
                        nextWeek: "dddd LT[etan]",
                        lastDay: "[atzo] LT[etan]",
                        lastWeek: "[aurreko] dddd LT[etan]",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s barru",
                        past: "duela %s",
                        s: "segundo batzuk",
                        ss: "%d segundo",
                        m: "minutu bat",
                        mm: "%d minutu",
                        h: "ordu bat",
                        hh: "%d ordu",
                        d: "egun bat",
                        dd: "%d egun",
                        M: "hilabete bat",
                        MM: "%d hilabete",
                        y: "urte bat",
                        yy: "%d urte"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        119: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "۱",
                    2: "۲",
                    3: "۳",
                    4: "۴",
                    5: "۵",
                    6: "۶",
                    7: "۷",
                    8: "۸",
                    9: "۹",
                    0: "۰"
                }
                  , a = {
                    "۱": "1",
                    "۲": "2",
                    "۳": "3",
                    "۴": "4",
                    "۵": "5",
                    "۶": "6",
                    "۷": "7",
                    "۸": "8",
                    "۹": "9",
                    "۰": "0"
                };
                e.defineLocale("fa", {
                    months: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
                    monthsShort: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
                    weekdays: "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
                    weekdaysShort: "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
                    weekdaysMin: "ی_د_س_چ_پ_ج_ش".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    meridiemParse: /قبل از ظهر|بعد از ظهر/,
                    isPM: function(e) {
                        return /بعد از ظهر/.test(e)
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "قبل از ظهر" : "بعد از ظهر"
                    },
                    calendar: {
                        sameDay: "[امروز ساعت] LT",
                        nextDay: "[فردا ساعت] LT",
                        nextWeek: "dddd [ساعت] LT",
                        lastDay: "[دیروز ساعت] LT",
                        lastWeek: "dddd [پیش] [ساعت] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "در %s",
                        past: "%s پیش",
                        s: "چند ثانیه",
                        ss: "%d ثانیه",
                        m: "یک دقیقه",
                        mm: "%d دقیقه",
                        h: "یک ساعت",
                        hh: "%d ساعت",
                        d: "یک روز",
                        dd: "%d روز",
                        M: "یک ماه",
                        MM: "%d ماه",
                        y: "یک سال",
                        yy: "%d سال"
                    },
                    preparse: function(e) {
                        return e.replace(/[۰-۹]/g, (function(e) {
                            return a[e]
                        }
                        )).replace(/،/g, ",")
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        )).replace(/,/g, "،")
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}م/,
                    ordinal: "%dم",
                    week: {
                        dow: 6,
                        doy: 12
                    }
                })
            }(a(95093))
        },
        90527: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = "nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän".split(" ")
                  , a = ["nolla", "yhden", "kahden", "kolmen", "neljän", "viiden", "kuuden", t[7], t[8], t[9]];
                function n(e, t, a, n) {
                    var s = "";
                    switch (a) {
                    case "s":
                        return n ? "muutaman sekunnin" : "muutama sekunti";
                    case "ss":
                        s = n ? "sekunnin" : "sekuntia";
                        break;
                    case "m":
                        return n ? "minuutin" : "minuutti";
                    case "mm":
                        s = n ? "minuutin" : "minuuttia";
                        break;
                    case "h":
                        return n ? "tunnin" : "tunti";
                    case "hh":
                        s = n ? "tunnin" : "tuntia";
                        break;
                    case "d":
                        return n ? "päivän" : "päivä";
                    case "dd":
                        s = n ? "päivän" : "päivää";
                        break;
                    case "M":
                        return n ? "kuukauden" : "kuukausi";
                    case "MM":
                        s = n ? "kuukauden" : "kuukautta";
                        break;
                    case "y":
                        return n ? "vuoden" : "vuosi";
                    case "yy":
                        s = n ? "vuoden" : "vuotta"
                    }
                    return s = i(e, n) + " " + s
                }
                function i(e, n) {
                    return e < 10 ? n ? a[e] : t[e] : e
                }
                e.defineLocale("fi", {
                    months: "tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split("_"),
                    monthsShort: "tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu".split("_"),
                    weekdays: "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split("_"),
                    weekdaysShort: "su_ma_ti_ke_to_pe_la".split("_"),
                    weekdaysMin: "su_ma_ti_ke_to_pe_la".split("_"),
                    longDateFormat: {
                        LT: "HH.mm",
                        LTS: "HH.mm.ss",
                        L: "DD.MM.YYYY",
                        LL: "Do MMMM[ta] YYYY",
                        LLL: "Do MMMM[ta] YYYY, [klo] HH.mm",
                        LLLL: "dddd, Do MMMM[ta] YYYY, [klo] HH.mm",
                        l: "D.M.YYYY",
                        ll: "Do MMM YYYY",
                        lll: "Do MMM YYYY, [klo] HH.mm",
                        llll: "ddd, Do MMM YYYY, [klo] HH.mm"
                    },
                    calendar: {
                        sameDay: "[tänään] [klo] LT",
                        nextDay: "[huomenna] [klo] LT",
                        nextWeek: "dddd [klo] LT",
                        lastDay: "[eilen] [klo] LT",
                        lastWeek: "[viime] dddd[na] [klo] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s päästä",
                        past: "%s sitten",
                        s: n,
                        ss: n,
                        m: n,
                        mm: n,
                        h: n,
                        hh: n,
                        d: n,
                        dd: n,
                        M: n,
                        MM: n,
                        y: n,
                        yy: n
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        95995: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("fil", {
                    months: "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),
                    monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),
                    weekdays: "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
                    weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
                    weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "MM/D/YYYY",
                        LL: "MMMM D, YYYY",
                        LLL: "MMMM D, YYYY HH:mm",
                        LLLL: "dddd, MMMM DD, YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "LT [ngayong araw]",
                        nextDay: "[Bukas ng] LT",
                        nextWeek: "LT [sa susunod na] dddd",
                        lastDay: "LT [kahapon]",
                        lastWeek: "LT [noong nakaraang] dddd",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "sa loob ng %s",
                        past: "%s ang nakalipas",
                        s: "ilang segundo",
                        ss: "%d segundo",
                        m: "isang minuto",
                        mm: "%d minuto",
                        h: "isang oras",
                        hh: "%d oras",
                        d: "isang araw",
                        dd: "%d araw",
                        M: "isang buwan",
                        MM: "%d buwan",
                        y: "isang taon",
                        yy: "%d taon"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}/,
                    ordinal: function(e) {
                        return e
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        52477: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("fo", {
                    months: "januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember".split("_"),
                    monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
                    weekdays: "sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur".split("_"),
                    weekdaysShort: "sun_mán_týs_mik_hós_frí_ley".split("_"),
                    weekdaysMin: "su_má_tý_mi_hó_fr_le".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D. MMMM, YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Í dag kl.] LT",
                        nextDay: "[Í morgin kl.] LT",
                        nextWeek: "dddd [kl.] LT",
                        lastDay: "[Í gjár kl.] LT",
                        lastWeek: "[síðstu] dddd [kl] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "um %s",
                        past: "%s síðani",
                        s: "fá sekund",
                        ss: "%d sekundir",
                        m: "ein minuttur",
                        mm: "%d minuttir",
                        h: "ein tími",
                        hh: "%d tímar",
                        d: "ein dagur",
                        dd: "%d dagar",
                        M: "ein mánaður",
                        MM: "%d mánaðir",
                        y: "eitt ár",
                        yy: "%d ár"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        26435: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("fr-ca", {
                    months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
                    monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
                    weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
                    weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "YYYY-MM-DD",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Aujourd’hui à] LT",
                        nextDay: "[Demain à] LT",
                        nextWeek: "dddd [à] LT",
                        lastDay: "[Hier à] LT",
                        lastWeek: "dddd [dernier à] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "dans %s",
                        past: "il y a %s",
                        s: "quelques secondes",
                        ss: "%d secondes",
                        m: "une minute",
                        mm: "%d minutes",
                        h: "une heure",
                        hh: "%d heures",
                        d: "un jour",
                        dd: "%d jours",
                        M: "un mois",
                        MM: "%d mois",
                        y: "un an",
                        yy: "%d ans"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        default:
                        case "M":
                        case "Q":
                        case "D":
                        case "DDD":
                        case "d":
                            return e + (1 === e ? "er" : "e");
                        case "w":
                        case "W":
                            return e + (1 === e ? "re" : "e")
                        }
                    }
                })
            }(a(95093))
        },
        37892: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("fr-ch", {
                    months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
                    monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
                    weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
                    weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Aujourd’hui à] LT",
                        nextDay: "[Demain à] LT",
                        nextWeek: "dddd [à] LT",
                        lastDay: "[Hier à] LT",
                        lastWeek: "dddd [dernier à] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "dans %s",
                        past: "il y a %s",
                        s: "quelques secondes",
                        ss: "%d secondes",
                        m: "une minute",
                        mm: "%d minutes",
                        h: "une heure",
                        hh: "%d heures",
                        d: "un jour",
                        dd: "%d jours",
                        M: "un mois",
                        MM: "%d mois",
                        y: "un an",
                        yy: "%d ans"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        default:
                        case "M":
                        case "Q":
                        case "D":
                        case "DDD":
                        case "d":
                            return e + (1 === e ? "er" : "e");
                        case "w":
                        case "W":
                            return e + (1 === e ? "re" : "e")
                        }
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        85498: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i
                  , a = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i
                  , n = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i
                  , i = [/^janv/i, /^févr/i, /^mars/i, /^avr/i, /^mai/i, /^juin/i, /^juil/i, /^août/i, /^sept/i, /^oct/i, /^nov/i, /^déc/i];
                e.defineLocale("fr", {
                    months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
                    monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
                    monthsRegex: n,
                    monthsShortRegex: n,
                    monthsStrictRegex: t,
                    monthsShortStrictRegex: a,
                    monthsParse: i,
                    longMonthsParse: i,
                    shortMonthsParse: i,
                    weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
                    weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
                    weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Aujourd’hui à] LT",
                        nextDay: "[Demain à] LT",
                        nextWeek: "dddd [à] LT",
                        lastDay: "[Hier à] LT",
                        lastWeek: "dddd [dernier à] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "dans %s",
                        past: "il y a %s",
                        s: "quelques secondes",
                        ss: "%d secondes",
                        m: "une minute",
                        mm: "%d minutes",
                        h: "une heure",
                        hh: "%d heures",
                        d: "un jour",
                        dd: "%d jours",
                        w: "une semaine",
                        ww: "%d semaines",
                        M: "un mois",
                        MM: "%d mois",
                        y: "un an",
                        yy: "%d ans"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "D":
                            return e + (1 === e ? "er" : "");
                        default:
                        case "M":
                        case "Q":
                        case "DDD":
                        case "d":
                            return e + (1 === e ? "er" : "e");
                        case "w":
                        case "W":
                            return e + (1 === e ? "re" : "e")
                        }
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        37071: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = "jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split("_")
                  , a = "jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_");
                e.defineLocale("fy", {
                    months: "jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split("_"),
                    monthsShort: function(e, n) {
                        return e ? /-MMM-/.test(n) ? a[e.month()] : t[e.month()] : t
                    },
                    monthsParseExact: !0,
                    weekdays: "snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split("_"),
                    weekdaysShort: "si._mo._ti._wo._to._fr._so.".split("_"),
                    weekdaysMin: "Si_Mo_Ti_Wo_To_Fr_So".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD-MM-YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[hjoed om] LT",
                        nextDay: "[moarn om] LT",
                        nextWeek: "dddd [om] LT",
                        lastDay: "[juster om] LT",
                        lastWeek: "[ôfrûne] dddd [om] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "oer %s",
                        past: "%s lyn",
                        s: "in pear sekonden",
                        ss: "%d sekonden",
                        m: "ien minút",
                        mm: "%d minuten",
                        h: "ien oere",
                        hh: "%d oeren",
                        d: "ien dei",
                        dd: "%d dagen",
                        M: "ien moanne",
                        MM: "%d moannen",
                        y: "ien jier",
                        yy: "%d jierren"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
                    ordinal: function(e) {
                        return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        41734: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = ["Eanáir", "Feabhra", "Márta", "Aibreán", "Bealtaine", "Meitheamh", "Iúil", "Lúnasa", "Meán Fómhair", "Deireadh Fómhair", "Samhain", "Nollaig"]
                  , a = ["Ean", "Feabh", "Márt", "Aib", "Beal", "Meith", "Iúil", "Lún", "M.F.", "D.F.", "Samh", "Noll"]
                  , n = ["Dé Domhnaigh", "Dé Luain", "Dé Máirt", "Dé Céadaoin", "Déardaoin", "Dé hAoine", "Dé Sathairn"]
                  , i = ["Domh", "Luan", "Máirt", "Céad", "Déar", "Aoine", "Sath"]
                  , s = ["Do", "Lu", "Má", "Cé", "Dé", "A", "Sa"];
                e.defineLocale("ga", {
                    months: t,
                    monthsShort: a,
                    monthsParseExact: !0,
                    weekdays: n,
                    weekdaysShort: i,
                    weekdaysMin: s,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Inniu ag] LT",
                        nextDay: "[Amárach ag] LT",
                        nextWeek: "dddd [ag] LT",
                        lastDay: "[Inné ag] LT",
                        lastWeek: "dddd [seo caite] [ag] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "i %s",
                        past: "%s ó shin",
                        s: "cúpla soicind",
                        ss: "%d soicind",
                        m: "nóiméad",
                        mm: "%d nóiméad",
                        h: "uair an chloig",
                        hh: "%d uair an chloig",
                        d: "lá",
                        dd: "%d lá",
                        M: "mí",
                        MM: "%d míonna",
                        y: "bliain",
                        yy: "%d bliain"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
                    ordinal: function(e) {
                        return e + (1 === e ? "d" : e % 10 == 2 ? "na" : "mh")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        70217: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = ["Am Faoilleach", "An Gearran", "Am Màrt", "An Giblean", "An Cèitean", "An t-Ògmhios", "An t-Iuchar", "An Lùnastal", "An t-Sultain", "An Dàmhair", "An t-Samhain", "An Dùbhlachd"]
                  , a = ["Faoi", "Gear", "Màrt", "Gibl", "Cèit", "Ògmh", "Iuch", "Lùn", "Sult", "Dàmh", "Samh", "Dùbh"]
                  , n = ["Didòmhnaich", "Diluain", "Dimàirt", "Diciadain", "Diardaoin", "Dihaoine", "Disathairne"]
                  , i = ["Did", "Dil", "Dim", "Dic", "Dia", "Dih", "Dis"]
                  , s = ["Dò", "Lu", "Mà", "Ci", "Ar", "Ha", "Sa"];
                e.defineLocale("gd", {
                    months: t,
                    monthsShort: a,
                    monthsParseExact: !0,
                    weekdays: n,
                    weekdaysShort: i,
                    weekdaysMin: s,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[An-diugh aig] LT",
                        nextDay: "[A-màireach aig] LT",
                        nextWeek: "dddd [aig] LT",
                        lastDay: "[An-dè aig] LT",
                        lastWeek: "dddd [seo chaidh] [aig] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "ann an %s",
                        past: "bho chionn %s",
                        s: "beagan diogan",
                        ss: "%d diogan",
                        m: "mionaid",
                        mm: "%d mionaidean",
                        h: "uair",
                        hh: "%d uairean",
                        d: "latha",
                        dd: "%d latha",
                        M: "mìos",
                        MM: "%d mìosan",
                        y: "bliadhna",
                        yy: "%d bliadhna"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
                    ordinal: function(e) {
                        return e + (1 === e ? "d" : e % 10 == 2 ? "na" : "mh")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        77329: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("gl", {
                    months: "xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro".split("_"),
                    monthsShort: "xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "domingo_luns_martes_mércores_xoves_venres_sábado".split("_"),
                    weekdaysShort: "dom._lun._mar._mér._xov._ven._sáb.".split("_"),
                    weekdaysMin: "do_lu_ma_mé_xo_ve_sá".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D [de] MMMM [de] YYYY",
                        LLL: "D [de] MMMM [de] YYYY H:mm",
                        LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
                    },
                    calendar: {
                        sameDay: function() {
                            return "[hoxe " + (1 !== this.hours() ? "ás" : "á") + "] LT"
                        },
                        nextDay: function() {
                            return "[mañá " + (1 !== this.hours() ? "ás" : "á") + "] LT"
                        },
                        nextWeek: function() {
                            return "dddd [" + (1 !== this.hours() ? "ás" : "a") + "] LT"
                        },
                        lastDay: function() {
                            return "[onte " + (1 !== this.hours() ? "á" : "a") + "] LT"
                        },
                        lastWeek: function() {
                            return "[o] dddd [pasado " + (1 !== this.hours() ? "ás" : "a") + "] LT"
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: function(e) {
                            return 0 === e.indexOf("un") ? "n" + e : "en " + e
                        },
                        past: "hai %s",
                        s: "uns segundos",
                        ss: "%d segundos",
                        m: "un minuto",
                        mm: "%d minutos",
                        h: "unha hora",
                        hh: "%d horas",
                        d: "un día",
                        dd: "%d días",
                        M: "un mes",
                        MM: "%d meses",
                        y: "un ano",
                        yy: "%d anos"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}º/,
                    ordinal: "%dº",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        32124: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a, n) {
                    var i = {
                        s: ["थोडया सॅकंडांनी", "थोडे सॅकंड"],
                        ss: [e + " सॅकंडांनी", e + " सॅकंड"],
                        m: ["एका मिणटान", "एक मिनूट"],
                        mm: [e + " मिणटांनी", e + " मिणटां"],
                        h: ["एका वरान", "एक वर"],
                        hh: [e + " वरांनी", e + " वरां"],
                        d: ["एका दिसान", "एक दीस"],
                        dd: [e + " दिसांनी", e + " दीस"],
                        M: ["एका म्हयन्यान", "एक म्हयनो"],
                        MM: [e + " म्हयन्यानी", e + " म्हयने"],
                        y: ["एका वर्सान", "एक वर्स"],
                        yy: [e + " वर्सांनी", e + " वर्सां"]
                    };
                    return n ? i[a][0] : i[a][1]
                }
                e.defineLocale("gom-deva", {
                    months: {
                        standalone: "जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split("_"),
                        format: "जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या".split("_"),
                        isFormat: /MMMM(\s)+D[oD]?/
                    },
                    monthsShort: "जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार".split("_"),
                    weekdaysShort: "आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.".split("_"),
                    weekdaysMin: "आ_सो_मं_बु_ब्रे_सु_शे".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "A h:mm [वाजतां]",
                        LTS: "A h:mm:ss [वाजतां]",
                        L: "DD-MM-YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY A h:mm [वाजतां]",
                        LLLL: "dddd, MMMM Do, YYYY, A h:mm [वाजतां]",
                        llll: "ddd, D MMM YYYY, A h:mm [वाजतां]"
                    },
                    calendar: {
                        sameDay: "[आयज] LT",
                        nextDay: "[फाल्यां] LT",
                        nextWeek: "[फुडलो] dddd[,] LT",
                        lastDay: "[काल] LT",
                        lastWeek: "[फाटलो] dddd[,] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s",
                        past: "%s आदीं",
                        s: t,
                        ss: t,
                        m: t,
                        mm: t,
                        h: t,
                        hh: t,
                        d: t,
                        dd: t,
                        M: t,
                        MM: t,
                        y: t,
                        yy: t
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(वेर)/,
                    ordinal: function(e, t) {
                        return "D" === t ? e + "वेर" : e
                    },
                    week: {
                        dow: 0,
                        doy: 3
                    },
                    meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "राती" === t ? e < 4 ? e : e + 12 : "सकाळीं" === t ? e : "दनपारां" === t ? e > 12 ? e : e + 12 : "सांजे" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "राती" : e < 12 ? "सकाळीं" : e < 16 ? "दनपारां" : e < 20 ? "सांजे" : "राती"
                    }
                })
            }(a(95093))
        },
        93383: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a, n) {
                    var i = {
                        s: ["thoddea sekondamni", "thodde sekond"],
                        ss: [e + " sekondamni", e + " sekond"],
                        m: ["eka mintan", "ek minut"],
                        mm: [e + " mintamni", e + " mintam"],
                        h: ["eka voran", "ek vor"],
                        hh: [e + " voramni", e + " voram"],
                        d: ["eka disan", "ek dis"],
                        dd: [e + " disamni", e + " dis"],
                        M: ["eka mhoinean", "ek mhoino"],
                        MM: [e + " mhoineamni", e + " mhoine"],
                        y: ["eka vorsan", "ek voros"],
                        yy: [e + " vorsamni", e + " vorsam"]
                    };
                    return n ? i[a][0] : i[a][1]
                }
                e.defineLocale("gom-latn", {
                    months: {
                        standalone: "Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr".split("_"),
                        format: "Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea".split("_"),
                        isFormat: /MMMM(\s)+D[oD]?/
                    },
                    monthsShort: "Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split("_"),
                    weekdaysShort: "Ait._Som._Mon._Bud._Bre._Suk._Son.".split("_"),
                    weekdaysMin: "Ai_Sm_Mo_Bu_Br_Su_Sn".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "A h:mm [vazta]",
                        LTS: "A h:mm:ss [vazta]",
                        L: "DD-MM-YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY A h:mm [vazta]",
                        LLLL: "dddd, MMMM Do, YYYY, A h:mm [vazta]",
                        llll: "ddd, D MMM YYYY, A h:mm [vazta]"
                    },
                    calendar: {
                        sameDay: "[Aiz] LT",
                        nextDay: "[Faleam] LT",
                        nextWeek: "[Fuddlo] dddd[,] LT",
                        lastDay: "[Kal] LT",
                        lastWeek: "[Fattlo] dddd[,] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s",
                        past: "%s adim",
                        s: t,
                        ss: t,
                        m: t,
                        mm: t,
                        h: t,
                        hh: t,
                        d: t,
                        dd: t,
                        M: t,
                        MM: t,
                        y: t,
                        yy: t
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(er)/,
                    ordinal: function(e, t) {
                        return "D" === t ? e + "er" : e
                    },
                    week: {
                        dow: 0,
                        doy: 3
                    },
                    meridiemParse: /rati|sokallim|donparam|sanje/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "rati" === t ? e < 4 ? e : e + 12 : "sokallim" === t ? e : "donparam" === t ? e > 12 ? e : e + 12 : "sanje" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "rati" : e < 12 ? "sokallim" : e < 16 ? "donparam" : e < 20 ? "sanje" : "rati"
                    }
                })
            }(a(95093))
        },
        95050: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "૧",
                    2: "૨",
                    3: "૩",
                    4: "૪",
                    5: "૫",
                    6: "૬",
                    7: "૭",
                    8: "૮",
                    9: "૯",
                    0: "૦"
                }
                  , a = {
                    "૧": "1",
                    "૨": "2",
                    "૩": "3",
                    "૪": "4",
                    "૫": "5",
                    "૬": "6",
                    "૭": "7",
                    "૮": "8",
                    "૯": "9",
                    "૦": "0"
                };
                e.defineLocale("gu", {
                    months: "જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર".split("_"),
                    monthsShort: "જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર".split("_"),
                    weekdaysShort: "રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ".split("_"),
                    weekdaysMin: "ર_સો_મં_બુ_ગુ_શુ_શ".split("_"),
                    longDateFormat: {
                        LT: "A h:mm વાગ્યે",
                        LTS: "A h:mm:ss વાગ્યે",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY, A h:mm વાગ્યે",
                        LLLL: "dddd, D MMMM YYYY, A h:mm વાગ્યે"
                    },
                    calendar: {
                        sameDay: "[આજ] LT",
                        nextDay: "[કાલે] LT",
                        nextWeek: "dddd, LT",
                        lastDay: "[ગઇકાલે] LT",
                        lastWeek: "[પાછલા] dddd, LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s મા",
                        past: "%s પહેલા",
                        s: "અમુક પળો",
                        ss: "%d સેકંડ",
                        m: "એક મિનિટ",
                        mm: "%d મિનિટ",
                        h: "એક કલાક",
                        hh: "%d કલાક",
                        d: "એક દિવસ",
                        dd: "%d દિવસ",
                        M: "એક મહિનો",
                        MM: "%d મહિનો",
                        y: "એક વર્ષ",
                        yy: "%d વર્ષ"
                    },
                    preparse: function(e) {
                        return e.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, (function(e) {
                            return a[e]
                        }
                        ))
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        ))
                    },
                    meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "રાત" === t ? e < 4 ? e : e + 12 : "સવાર" === t ? e : "બપોર" === t ? e >= 10 ? e : e + 12 : "સાંજ" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "રાત" : e < 10 ? "સવાર" : e < 17 ? "બપોર" : e < 20 ? "સાંજ" : "રાત"
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        11713: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("he", {
                    months: "ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר".split("_"),
                    monthsShort: "ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳".split("_"),
                    weekdays: "ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת".split("_"),
                    weekdaysShort: "א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳".split("_"),
                    weekdaysMin: "א_ב_ג_ד_ה_ו_ש".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D [ב]MMMM YYYY",
                        LLL: "D [ב]MMMM YYYY HH:mm",
                        LLLL: "dddd, D [ב]MMMM YYYY HH:mm",
                        l: "D/M/YYYY",
                        ll: "D MMM YYYY",
                        lll: "D MMM YYYY HH:mm",
                        llll: "ddd, D MMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[היום ב־]LT",
                        nextDay: "[מחר ב־]LT",
                        nextWeek: "dddd [בשעה] LT",
                        lastDay: "[אתמול ב־]LT",
                        lastWeek: "[ביום] dddd [האחרון בשעה] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "בעוד %s",
                        past: "לפני %s",
                        s: "מספר שניות",
                        ss: "%d שניות",
                        m: "דקה",
                        mm: "%d דקות",
                        h: "שעה",
                        hh: function(e) {
                            return 2 === e ? "שעתיים" : e + " שעות"
                        },
                        d: "יום",
                        dd: function(e) {
                            return 2 === e ? "יומיים" : e + " ימים"
                        },
                        M: "חודש",
                        MM: function(e) {
                            return 2 === e ? "חודשיים" : e + " חודשים"
                        },
                        y: "שנה",
                        yy: function(e) {
                            return 2 === e ? "שנתיים" : e % 10 == 0 && 10 !== e ? e + " שנה" : e + " שנים"
                        }
                    },
                    meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
                    isPM: function(e) {
                        return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(e)
                    },
                    meridiem: function(e, t, a) {
                        return e < 5 ? "לפנות בוקר" : e < 10 ? "בבוקר" : e < 12 ? a ? 'לפנה"צ' : "לפני הצהריים" : e < 18 ? a ? 'אחה"צ' : "אחרי הצהריים" : "בערב"
                    }
                })
            }(a(95093))
        },
        43861: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "१",
                    2: "२",
                    3: "३",
                    4: "४",
                    5: "५",
                    6: "६",
                    7: "७",
                    8: "८",
                    9: "९",
                    0: "०"
                }
                  , a = {
                    "१": "1",
                    "२": "2",
                    "३": "3",
                    "४": "4",
                    "५": "5",
                    "६": "6",
                    "७": "7",
                    "८": "8",
                    "९": "9",
                    "०": "0"
                }
                  , n = [/^जन/i, /^फ़र|फर/i, /^मार्च/i, /^अप्रै/i, /^मई/i, /^जून/i, /^जुल/i, /^अग/i, /^सितं|सित/i, /^अक्टू/i, /^नव|नवं/i, /^दिसं|दिस/i]
                  , i = [/^जन/i, /^फ़र/i, /^मार्च/i, /^अप्रै/i, /^मई/i, /^जून/i, /^जुल/i, /^अग/i, /^सित/i, /^अक्टू/i, /^नव/i, /^दिस/i];
                e.defineLocale("hi", {
                    months: {
                        format: "जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर".split("_"),
                        standalone: "जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर".split("_")
                    },
                    monthsShort: "जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.".split("_"),
                    weekdays: "रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
                    weekdaysShort: "रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि".split("_"),
                    weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
                    longDateFormat: {
                        LT: "A h:mm बजे",
                        LTS: "A h:mm:ss बजे",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY, A h:mm बजे",
                        LLLL: "dddd, D MMMM YYYY, A h:mm बजे"
                    },
                    monthsParse: n,
                    longMonthsParse: n,
                    shortMonthsParse: i,
                    monthsRegex: /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,
                    monthsShortRegex: /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,
                    monthsStrictRegex: /^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,
                    monthsShortStrictRegex: /^(जन\.?|फ़र\.?|मार्च?|अप्रै\.?|मई?|जून?|जुल\.?|अग\.?|सित\.?|अक्टू\.?|नव\.?|दिस\.?)/i,
                    calendar: {
                        sameDay: "[आज] LT",
                        nextDay: "[कल] LT",
                        nextWeek: "dddd, LT",
                        lastDay: "[कल] LT",
                        lastWeek: "[पिछले] dddd, LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s में",
                        past: "%s पहले",
                        s: "कुछ ही क्षण",
                        ss: "%d सेकंड",
                        m: "एक मिनट",
                        mm: "%d मिनट",
                        h: "एक घंटा",
                        hh: "%d घंटे",
                        d: "एक दिन",
                        dd: "%d दिन",
                        M: "एक महीने",
                        MM: "%d महीने",
                        y: "एक वर्ष",
                        yy: "%d वर्ष"
                    },
                    preparse: function(e) {
                        return e.replace(/[१२३४५६७८९०]/g, (function(e) {
                            return a[e]
                        }
                        ))
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        ))
                    },
                    meridiemParse: /रात|सुबह|दोपहर|शाम/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "रात" === t ? e < 4 ? e : e + 12 : "सुबह" === t ? e : "दोपहर" === t ? e >= 10 ? e : e + 12 : "शाम" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "रात" : e < 10 ? "सुबह" : e < 17 ? "दोपहर" : e < 20 ? "शाम" : "रात"
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        26308: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a) {
                    var n = e + " ";
                    switch (a) {
                    case "ss":
                        return n += 1 === e ? "sekunda" : 2 === e || 3 === e || 4 === e ? "sekunde" : "sekundi";
                    case "m":
                        return t ? "jedna minuta" : "jedne minute";
                    case "mm":
                        return n += 1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta";
                    case "h":
                        return t ? "jedan sat" : "jednog sata";
                    case "hh":
                        return n += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati";
                    case "dd":
                        return n += 1 === e ? "dan" : "dana";
                    case "MM":
                        return n += 1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci";
                    case "yy":
                        return n += 1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina"
                    }
                }
                e.defineLocale("hr", {
                    months: {
                        format: "siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca".split("_"),
                        standalone: "siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split("_")
                    },
                    monthsShort: "sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
                    weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
                    weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "Do MMMM YYYY",
                        LLL: "Do MMMM YYYY H:mm",
                        LLLL: "dddd, Do MMMM YYYY H:mm"
                    },
                    calendar: {
                        sameDay: "[danas u] LT",
                        nextDay: "[sutra u] LT",
                        nextWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[u] [nedjelju] [u] LT";
                            case 3:
                                return "[u] [srijedu] [u] LT";
                            case 6:
                                return "[u] [subotu] [u] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[u] dddd [u] LT"
                            }
                        },
                        lastDay: "[jučer u] LT",
                        lastWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[prošlu] [nedjelju] [u] LT";
                            case 3:
                                return "[prošlu] [srijedu] [u] LT";
                            case 6:
                                return "[prošle] [subote] [u] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[prošli] dddd [u] LT"
                            }
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "za %s",
                        past: "prije %s",
                        s: "par sekundi",
                        ss: t,
                        m: t,
                        mm: t,
                        h: t,
                        hh: t,
                        d: "dan",
                        dd: t,
                        M: "mjesec",
                        MM: t,
                        y: "godinu",
                        yy: t
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        90609: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = "vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton".split(" ");
                function a(e, t, a, n) {
                    var i = e;
                    switch (a) {
                    case "s":
                        return n || t ? "néhány másodperc" : "néhány másodperce";
                    case "ss":
                        return i + (n || t) ? " másodperc" : " másodperce";
                    case "m":
                        return "egy" + (n || t ? " perc" : " perce");
                    case "mm":
                        return i + (n || t ? " perc" : " perce");
                    case "h":
                        return "egy" + (n || t ? " óra" : " órája");
                    case "hh":
                        return i + (n || t ? " óra" : " órája");
                    case "d":
                        return "egy" + (n || t ? " nap" : " napja");
                    case "dd":
                        return i + (n || t ? " nap" : " napja");
                    case "M":
                        return "egy" + (n || t ? " hónap" : " hónapja");
                    case "MM":
                        return i + (n || t ? " hónap" : " hónapja");
                    case "y":
                        return "egy" + (n || t ? " év" : " éve");
                    case "yy":
                        return i + (n || t ? " év" : " éve")
                    }
                    return ""
                }
                function n(e) {
                    return (e ? "" : "[múlt] ") + "[" + t[this.day()] + "] LT[-kor]"
                }
                e.defineLocale("hu", {
                    months: "január_február_március_április_május_június_július_augusztus_szeptember_október_november_december".split("_"),
                    monthsShort: "jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat".split("_"),
                    weekdaysShort: "vas_hét_kedd_sze_csüt_pén_szo".split("_"),
                    weekdaysMin: "v_h_k_sze_cs_p_szo".split("_"),
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "YYYY.MM.DD.",
                        LL: "YYYY. MMMM D.",
                        LLL: "YYYY. MMMM D. H:mm",
                        LLLL: "YYYY. MMMM D., dddd H:mm"
                    },
                    meridiemParse: /de|du/i,
                    isPM: function(e) {
                        return "u" === e.charAt(1).toLowerCase()
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? !0 === a ? "de" : "DE" : !0 === a ? "du" : "DU"
                    },
                    calendar: {
                        sameDay: "[ma] LT[-kor]",
                        nextDay: "[holnap] LT[-kor]",
                        nextWeek: function() {
                            return n.call(this, !0)
                        },
                        lastDay: "[tegnap] LT[-kor]",
                        lastWeek: function() {
                            return n.call(this, !1)
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s múlva",
                        past: "%s",
                        s: a,
                        ss: a,
                        m: a,
                        mm: a,
                        h: a,
                        hh: a,
                        d: a,
                        dd: a,
                        M: a,
                        MM: a,
                        y: a,
                        yy: a
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        17160: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("hy-am", {
                    months: {
                        format: "հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի".split("_"),
                        standalone: "հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր".split("_")
                    },
                    monthsShort: "հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ".split("_"),
                    weekdays: "կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ".split("_"),
                    weekdaysShort: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
                    weekdaysMin: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY թ.",
                        LLL: "D MMMM YYYY թ., HH:mm",
                        LLLL: "dddd, D MMMM YYYY թ., HH:mm"
                    },
                    calendar: {
                        sameDay: "[այսօր] LT",
                        nextDay: "[վաղը] LT",
                        lastDay: "[երեկ] LT",
                        nextWeek: function() {
                            return "dddd [օրը ժամը] LT"
                        },
                        lastWeek: function() {
                            return "[անցած] dddd [օրը ժամը] LT"
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s հետո",
                        past: "%s առաջ",
                        s: "մի քանի վայրկյան",
                        ss: "%d վայրկյան",
                        m: "րոպե",
                        mm: "%d րոպե",
                        h: "ժամ",
                        hh: "%d ժամ",
                        d: "օր",
                        dd: "%d օր",
                        M: "ամիս",
                        MM: "%d ամիս",
                        y: "տարի",
                        yy: "%d տարի"
                    },
                    meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
                    isPM: function(e) {
                        return /^(ցերեկվա|երեկոյան)$/.test(e)
                    },
                    meridiem: function(e) {
                        return e < 4 ? "գիշերվա" : e < 12 ? "առավոտվա" : e < 17 ? "ցերեկվա" : "երեկոյան"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "DDD":
                        case "w":
                        case "W":
                        case "DDDo":
                            return 1 === e ? e + "-ին" : e + "-րդ";
                        default:
                            return e
                        }
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        74063: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("id", {
                    months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split("_"),
                    monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des".split("_"),
                    weekdays: "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
                    weekdaysShort: "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
                    weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
                    longDateFormat: {
                        LT: "HH.mm",
                        LTS: "HH.mm.ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY [pukul] HH.mm",
                        LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
                    },
                    meridiemParse: /pagi|siang|sore|malam/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "pagi" === t ? e : "siang" === t ? e >= 11 ? e : e + 12 : "sore" === t || "malam" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 11 ? "pagi" : e < 15 ? "siang" : e < 19 ? "sore" : "malam"
                    },
                    calendar: {
                        sameDay: "[Hari ini pukul] LT",
                        nextDay: "[Besok pukul] LT",
                        nextWeek: "dddd [pukul] LT",
                        lastDay: "[Kemarin pukul] LT",
                        lastWeek: "dddd [lalu pukul] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "dalam %s",
                        past: "%s yang lalu",
                        s: "beberapa detik",
                        ss: "%d detik",
                        m: "semenit",
                        mm: "%d menit",
                        h: "sejam",
                        hh: "%d jam",
                        d: "sehari",
                        dd: "%d hari",
                        M: "sebulan",
                        MM: "%d bulan",
                        y: "setahun",
                        yy: "%d tahun"
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        89374: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e) {
                    return e % 100 == 11 || e % 10 != 1
                }
                function a(e, a, n, i) {
                    var s = e + " ";
                    switch (n) {
                    case "s":
                        return a || i ? "nokkrar sekúndur" : "nokkrum sekúndum";
                    case "ss":
                        return t(e) ? s + (a || i ? "sekúndur" : "sekúndum") : s + "sekúnda";
                    case "m":
                        return a ? "mínúta" : "mínútu";
                    case "mm":
                        return t(e) ? s + (a || i ? "mínútur" : "mínútum") : a ? s + "mínúta" : s + "mínútu";
                    case "hh":
                        return t(e) ? s + (a || i ? "klukkustundir" : "klukkustundum") : s + "klukkustund";
                    case "d":
                        return a ? "dagur" : i ? "dag" : "degi";
                    case "dd":
                        return t(e) ? a ? s + "dagar" : s + (i ? "daga" : "dögum") : a ? s + "dagur" : s + (i ? "dag" : "degi");
                    case "M":
                        return a ? "mánuður" : i ? "mánuð" : "mánuði";
                    case "MM":
                        return t(e) ? a ? s + "mánuðir" : s + (i ? "mánuði" : "mánuðum") : a ? s + "mánuður" : s + (i ? "mánuð" : "mánuði");
                    case "y":
                        return a || i ? "ár" : "ári";
                    case "yy":
                        return t(e) ? s + (a || i ? "ár" : "árum") : s + (a || i ? "ár" : "ári")
                    }
                }
                e.defineLocale("is", {
                    months: "janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember".split("_"),
                    monthsShort: "jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des".split("_"),
                    weekdays: "sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur".split("_"),
                    weekdaysShort: "sun_mán_þri_mið_fim_fös_lau".split("_"),
                    weekdaysMin: "Su_Má_Þr_Mi_Fi_Fö_La".split("_"),
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY [kl.] H:mm",
                        LLLL: "dddd, D. MMMM YYYY [kl.] H:mm"
                    },
                    calendar: {
                        sameDay: "[í dag kl.] LT",
                        nextDay: "[á morgun kl.] LT",
                        nextWeek: "dddd [kl.] LT",
                        lastDay: "[í gær kl.] LT",
                        lastWeek: "[síðasta] dddd [kl.] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "eftir %s",
                        past: "fyrir %s síðan",
                        s: a,
                        ss: a,
                        m: a,
                        mm: a,
                        h: "klukkustund",
                        hh: a,
                        d: a,
                        dd: a,
                        M: a,
                        MM: a,
                        y: a,
                        yy: a
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        21827: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("it-ch", {
                    months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),
                    monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),
                    weekdays: "domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split("_"),
                    weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"),
                    weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Oggi alle] LT",
                        nextDay: "[Domani alle] LT",
                        nextWeek: "dddd [alle] LT",
                        lastDay: "[Ieri alle] LT",
                        lastWeek: function() {
                            return 0 === this.day() ? "[la scorsa] dddd [alle] LT" : "[lo scorso] dddd [alle] LT"
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: function(e) {
                            return (/^[0-9].+$/.test(e) ? "tra" : "in") + " " + e
                        },
                        past: "%s fa",
                        s: "alcuni secondi",
                        ss: "%d secondi",
                        m: "un minuto",
                        mm: "%d minuti",
                        h: "un'ora",
                        hh: "%d ore",
                        d: "un giorno",
                        dd: "%d giorni",
                        M: "un mese",
                        MM: "%d mesi",
                        y: "un anno",
                        yy: "%d anni"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}º/,
                    ordinal: "%dº",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        88383: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("it", {
                    months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),
                    monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),
                    weekdays: "domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split("_"),
                    weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"),
                    weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: function() {
                            return "[Oggi a" + (this.hours() > 1 ? "lle " : 0 === this.hours() ? " " : "ll'") + "]LT"
                        },
                        nextDay: function() {
                            return "[Domani a" + (this.hours() > 1 ? "lle " : 0 === this.hours() ? " " : "ll'") + "]LT"
                        },
                        nextWeek: function() {
                            return "dddd [a" + (this.hours() > 1 ? "lle " : 0 === this.hours() ? " " : "ll'") + "]LT"
                        },
                        lastDay: function() {
                            return "[Ieri a" + (this.hours() > 1 ? "lle " : 0 === this.hours() ? " " : "ll'") + "]LT"
                        },
                        lastWeek: function() {
                            return 0 === this.day() ? "[La scorsa] dddd [a" + (this.hours() > 1 ? "lle " : 0 === this.hours() ? " " : "ll'") + "]LT" : "[Lo scorso] dddd [a" + (this.hours() > 1 ? "lle " : 0 === this.hours() ? " " : "ll'") + "]LT"
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "tra %s",
                        past: "%s fa",
                        s: "alcuni secondi",
                        ss: "%d secondi",
                        m: "un minuto",
                        mm: "%d minuti",
                        h: "un'ora",
                        hh: "%d ore",
                        d: "un giorno",
                        dd: "%d giorni",
                        w: "una settimana",
                        ww: "%d settimane",
                        M: "un mese",
                        MM: "%d mesi",
                        y: "un anno",
                        yy: "%d anni"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}º/,
                    ordinal: "%dº",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        23827: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("ja", {
                    eras: [{
                        since: "2019-05-01",
                        offset: 1,
                        name: "令和",
                        narrow: "㋿",
                        abbr: "R"
                    }, {
                        since: "1989-01-08",
                        until: "2019-04-30",
                        offset: 1,
                        name: "平成",
                        narrow: "㍻",
                        abbr: "H"
                    }, {
                        since: "1926-12-25",
                        until: "1989-01-07",
                        offset: 1,
                        name: "昭和",
                        narrow: "㍼",
                        abbr: "S"
                    }, {
                        since: "1912-07-30",
                        until: "1926-12-24",
                        offset: 1,
                        name: "大正",
                        narrow: "㍽",
                        abbr: "T"
                    }, {
                        since: "1873-01-01",
                        until: "1912-07-29",
                        offset: 6,
                        name: "明治",
                        narrow: "㍾",
                        abbr: "M"
                    }, {
                        since: "0001-01-01",
                        until: "1873-12-31",
                        offset: 1,
                        name: "西暦",
                        narrow: "AD",
                        abbr: "AD"
                    }, {
                        since: "0000-12-31",
                        until: -1 / 0,
                        offset: 1,
                        name: "紀元前",
                        narrow: "BC",
                        abbr: "BC"
                    }],
                    eraYearOrdinalRegex: /(元|\d+)年/,
                    eraYearOrdinalParse: function(e, t) {
                        return "元" === t[1] ? 1 : parseInt(t[1] || e, 10)
                    },
                    months: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                    monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                    weekdays: "日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"),
                    weekdaysShort: "日_月_火_水_木_金_土".split("_"),
                    weekdaysMin: "日_月_火_水_木_金_土".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "YYYY/MM/DD",
                        LL: "YYYY年M月D日",
                        LLL: "YYYY年M月D日 HH:mm",
                        LLLL: "YYYY年M月D日 dddd HH:mm",
                        l: "YYYY/MM/DD",
                        ll: "YYYY年M月D日",
                        lll: "YYYY年M月D日 HH:mm",
                        llll: "YYYY年M月D日(ddd) HH:mm"
                    },
                    meridiemParse: /午前|午後/i,
                    isPM: function(e) {
                        return "午後" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "午前" : "午後"
                    },
                    calendar: {
                        sameDay: "[今日] LT",
                        nextDay: "[明日] LT",
                        nextWeek: function(e) {
                            return e.week() !== this.week() ? "[来週]dddd LT" : "dddd LT"
                        },
                        lastDay: "[昨日] LT",
                        lastWeek: function(e) {
                            return this.week() !== e.week() ? "[先週]dddd LT" : "dddd LT"
                        },
                        sameElse: "L"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}日/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "y":
                            return 1 === e ? "元年" : e + "年";
                        case "d":
                        case "D":
                        case "DDD":
                            return e + "日";
                        default:
                            return e
                        }
                    },
                    relativeTime: {
                        future: "%s後",
                        past: "%s前",
                        s: "数秒",
                        ss: "%d秒",
                        m: "1分",
                        mm: "%d分",
                        h: "1時間",
                        hh: "%d時間",
                        d: "1日",
                        dd: "%d日",
                        M: "1ヶ月",
                        MM: "%dヶ月",
                        y: "1年",
                        yy: "%d年"
                    }
                })
            }(a(95093))
        },
        89722: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("jv", {
                    months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember".split("_"),
                    monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des".split("_"),
                    weekdays: "Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu".split("_"),
                    weekdaysShort: "Min_Sen_Sel_Reb_Kem_Jem_Sep".split("_"),
                    weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sp".split("_"),
                    longDateFormat: {
                        LT: "HH.mm",
                        LTS: "HH.mm.ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY [pukul] HH.mm",
                        LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
                    },
                    meridiemParse: /enjing|siyang|sonten|ndalu/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "enjing" === t ? e : "siyang" === t ? e >= 11 ? e : e + 12 : "sonten" === t || "ndalu" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 11 ? "enjing" : e < 15 ? "siyang" : e < 19 ? "sonten" : "ndalu"
                    },
                    calendar: {
                        sameDay: "[Dinten puniko pukul] LT",
                        nextDay: "[Mbenjang pukul] LT",
                        nextWeek: "dddd [pukul] LT",
                        lastDay: "[Kala wingi pukul] LT",
                        lastWeek: "dddd [kepengker pukul] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "wonten ing %s",
                        past: "%s ingkang kepengker",
                        s: "sawetawis detik",
                        ss: "%d detik",
                        m: "setunggal menit",
                        mm: "%d menit",
                        h: "setunggal jam",
                        hh: "%d jam",
                        d: "sedinten",
                        dd: "%d dinten",
                        M: "sewulan",
                        MM: "%d wulan",
                        y: "setaun",
                        yy: "%d taun"
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        41794: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("ka", {
                    months: "იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი".split("_"),
                    monthsShort: "იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ".split("_"),
                    weekdays: {
                        standalone: "კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი".split("_"),
                        format: "კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს".split("_"),
                        isFormat: /(წინა|შემდეგ)/
                    },
                    weekdaysShort: "კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ".split("_"),
                    weekdaysMin: "კვ_ორ_სა_ოთ_ხუ_პა_შა".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[დღეს] LT[-ზე]",
                        nextDay: "[ხვალ] LT[-ზე]",
                        lastDay: "[გუშინ] LT[-ზე]",
                        nextWeek: "[შემდეგ] dddd LT[-ზე]",
                        lastWeek: "[წინა] dddd LT-ზე",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: function(e) {
                            return e.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/, (function(e, t, a) {
                                return "ი" === a ? t + "ში" : t + a + "ში"
                            }
                            ))
                        },
                        past: function(e) {
                            return /(წამი|წუთი|საათი|დღე|თვე)/.test(e) ? e.replace(/(ი|ე)$/, "ის წინ") : /წელი/.test(e) ? e.replace(/წელი$/, "წლის წინ") : e
                        },
                        s: "რამდენიმე წამი",
                        ss: "%d წამი",
                        m: "წუთი",
                        mm: "%d წუთი",
                        h: "საათი",
                        hh: "%d საათი",
                        d: "დღე",
                        dd: "%d დღე",
                        M: "თვე",
                        MM: "%d თვე",
                        y: "წელი",
                        yy: "%d წელი"
                    },
                    dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
                    ordinal: function(e) {
                        return 0 === e ? e : 1 === e ? e + "-ლი" : e < 20 || e <= 100 && e % 20 == 0 || e % 100 == 0 ? "მე-" + e : e + "-ე"
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        27088: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    0: "-ші",
                    1: "-ші",
                    2: "-ші",
                    3: "-ші",
                    4: "-ші",
                    5: "-ші",
                    6: "-шы",
                    7: "-ші",
                    8: "-ші",
                    9: "-шы",
                    10: "-шы",
                    20: "-шы",
                    30: "-шы",
                    40: "-шы",
                    50: "-ші",
                    60: "-шы",
                    70: "-ші",
                    80: "-ші",
                    90: "-шы",
                    100: "-ші"
                };
                e.defineLocale("kk", {
                    months: "қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан".split("_"),
                    monthsShort: "қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел".split("_"),
                    weekdays: "жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі".split("_"),
                    weekdaysShort: "жек_дүй_сей_сәр_бей_жұм_сен".split("_"),
                    weekdaysMin: "жк_дй_сй_ср_бй_жм_сн".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Бүгін сағат] LT",
                        nextDay: "[Ертең сағат] LT",
                        nextWeek: "dddd [сағат] LT",
                        lastDay: "[Кеше сағат] LT",
                        lastWeek: "[Өткен аптаның] dddd [сағат] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s ішінде",
                        past: "%s бұрын",
                        s: "бірнеше секунд",
                        ss: "%d секунд",
                        m: "бір минут",
                        mm: "%d минут",
                        h: "бір сағат",
                        hh: "%d сағат",
                        d: "бір күн",
                        dd: "%d күн",
                        M: "бір ай",
                        MM: "%d ай",
                        y: "бір жыл",
                        yy: "%d жыл"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
                    ordinal: function(e) {
                        var a = e % 10
                          , n = e >= 100 ? 100 : null;
                        return e + (t[e] || t[a] || t[n])
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        96870: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "១",
                    2: "២",
                    3: "៣",
                    4: "៤",
                    5: "៥",
                    6: "៦",
                    7: "៧",
                    8: "៨",
                    9: "៩",
                    0: "០"
                }
                  , a = {
                    "១": "1",
                    "២": "2",
                    "៣": "3",
                    "៤": "4",
                    "៥": "5",
                    "៦": "6",
                    "៧": "7",
                    "៨": "8",
                    "៩": "9",
                    "០": "0"
                };
                e.defineLocale("km", {
                    months: "មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
                    monthsShort: "មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
                    weekdays: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
                    weekdaysShort: "អា_ច_អ_ព_ព្រ_សុ_ស".split("_"),
                    weekdaysMin: "អា_ច_អ_ព_ព្រ_សុ_ស".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    meridiemParse: /ព្រឹក|ល្ងាច/,
                    isPM: function(e) {
                        return "ល្ងាច" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "ព្រឹក" : "ល្ងាច"
                    },
                    calendar: {
                        sameDay: "[ថ្ងៃនេះ ម៉ោង] LT",
                        nextDay: "[ស្អែក ម៉ោង] LT",
                        nextWeek: "dddd [ម៉ោង] LT",
                        lastDay: "[ម្សិលមិញ ម៉ោង] LT",
                        lastWeek: "dddd [សប្តាហ៍មុន] [ម៉ោង] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%sទៀត",
                        past: "%sមុន",
                        s: "ប៉ុន្មានវិនាទី",
                        ss: "%d វិនាទី",
                        m: "មួយនាទី",
                        mm: "%d នាទី",
                        h: "មួយម៉ោង",
                        hh: "%d ម៉ោង",
                        d: "មួយថ្ងៃ",
                        dd: "%d ថ្ងៃ",
                        M: "មួយខែ",
                        MM: "%d ខែ",
                        y: "មួយឆ្នាំ",
                        yy: "%d ឆ្នាំ"
                    },
                    dayOfMonthOrdinalParse: /ទី\d{1,2}/,
                    ordinal: "ទី%d",
                    preparse: function(e) {
                        return e.replace(/[១២៣៤៥៦៧៨៩០]/g, (function(e) {
                            return a[e]
                        }
                        ))
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        ))
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        84451: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "೧",
                    2: "೨",
                    3: "೩",
                    4: "೪",
                    5: "೫",
                    6: "೬",
                    7: "೭",
                    8: "೮",
                    9: "೯",
                    0: "೦"
                }
                  , a = {
                    "೧": "1",
                    "೨": "2",
                    "೩": "3",
                    "೪": "4",
                    "೫": "5",
                    "೬": "6",
                    "೭": "7",
                    "೮": "8",
                    "೯": "9",
                    "೦": "0"
                };
                e.defineLocale("kn", {
                    months: "ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್".split("_"),
                    monthsShort: "ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ".split("_"),
                    monthsParseExact: !0,
                    weekdays: "ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ".split("_"),
                    weekdaysShort: "ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ".split("_"),
                    weekdaysMin: "ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ".split("_"),
                    longDateFormat: {
                        LT: "A h:mm",
                        LTS: "A h:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY, A h:mm",
                        LLLL: "dddd, D MMMM YYYY, A h:mm"
                    },
                    calendar: {
                        sameDay: "[ಇಂದು] LT",
                        nextDay: "[ನಾಳೆ] LT",
                        nextWeek: "dddd, LT",
                        lastDay: "[ನಿನ್ನೆ] LT",
                        lastWeek: "[ಕೊನೆಯ] dddd, LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s ನಂತರ",
                        past: "%s ಹಿಂದೆ",
                        s: "ಕೆಲವು ಕ್ಷಣಗಳು",
                        ss: "%d ಸೆಕೆಂಡುಗಳು",
                        m: "ಒಂದು ನಿಮಿಷ",
                        mm: "%d ನಿಮಿಷ",
                        h: "ಒಂದು ಗಂಟೆ",
                        hh: "%d ಗಂಟೆ",
                        d: "ಒಂದು ದಿನ",
                        dd: "%d ದಿನ",
                        M: "ಒಂದು ತಿಂಗಳು",
                        MM: "%d ತಿಂಗಳು",
                        y: "ಒಂದು ವರ್ಷ",
                        yy: "%d ವರ್ಷ"
                    },
                    preparse: function(e) {
                        return e.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, (function(e) {
                            return a[e]
                        }
                        ))
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        ))
                    },
                    meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "ರಾತ್ರಿ" === t ? e < 4 ? e : e + 12 : "ಬೆಳಿಗ್ಗೆ" === t ? e : "ಮಧ್ಯಾಹ್ನ" === t ? e >= 10 ? e : e + 12 : "ಸಂಜೆ" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "ರಾತ್ರಿ" : e < 10 ? "ಬೆಳಿಗ್ಗೆ" : e < 17 ? "ಮಧ್ಯಾಹ್ನ" : e < 20 ? "ಸಂಜೆ" : "ರಾತ್ರಿ"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
                    ordinal: function(e) {
                        return e + "ನೇ"
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        63164: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("ko", {
                    months: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
                    monthsShort: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
                    weekdays: "일요일_월요일_화요일_수요일_목요일_금요일_토요일".split("_"),
                    weekdaysShort: "일_월_화_수_목_금_토".split("_"),
                    weekdaysMin: "일_월_화_수_목_금_토".split("_"),
                    longDateFormat: {
                        LT: "A h:mm",
                        LTS: "A h:mm:ss",
                        L: "YYYY.MM.DD.",
                        LL: "YYYY년 MMMM D일",
                        LLL: "YYYY년 MMMM D일 A h:mm",
                        LLLL: "YYYY년 MMMM D일 dddd A h:mm",
                        l: "YYYY.MM.DD.",
                        ll: "YYYY년 MMMM D일",
                        lll: "YYYY년 MMMM D일 A h:mm",
                        llll: "YYYY년 MMMM D일 dddd A h:mm"
                    },
                    calendar: {
                        sameDay: "오늘 LT",
                        nextDay: "내일 LT",
                        nextWeek: "dddd LT",
                        lastDay: "어제 LT",
                        lastWeek: "지난주 dddd LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s 후",
                        past: "%s 전",
                        s: "몇 초",
                        ss: "%d초",
                        m: "1분",
                        mm: "%d분",
                        h: "한 시간",
                        hh: "%d시간",
                        d: "하루",
                        dd: "%d일",
                        M: "한 달",
                        MM: "%d달",
                        y: "일 년",
                        yy: "%d년"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "d":
                        case "D":
                        case "DDD":
                            return e + "일";
                        case "M":
                            return e + "월";
                        case "w":
                        case "W":
                            return e + "주";
                        default:
                            return e
                        }
                    },
                    meridiemParse: /오전|오후/,
                    isPM: function(e) {
                        return "오후" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "오전" : "오후"
                    }
                })
            }(a(95093))
        },
        6181: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a, n) {
                    var i = {
                        s: ["çend sanîye", "çend sanîyeyan"],
                        ss: [e + " sanîye", e + " sanîyeyan"],
                        m: ["deqîqeyek", "deqîqeyekê"],
                        mm: [e + " deqîqe", e + " deqîqeyan"],
                        h: ["saetek", "saetekê"],
                        hh: [e + " saet", e + " saetan"],
                        d: ["rojek", "rojekê"],
                        dd: [e + " roj", e + " rojan"],
                        w: ["hefteyek", "hefteyekê"],
                        ww: [e + " hefte", e + " hefteyan"],
                        M: ["mehek", "mehekê"],
                        MM: [e + " meh", e + " mehan"],
                        y: ["salek", "salekê"],
                        yy: [e + " sal", e + " salan"]
                    };
                    return t ? i[a][0] : i[a][1]
                }
                function a(e) {
                    var t = (e = "" + e).substring(e.length - 1)
                      , a = e.length > 1 ? e.substring(e.length - 2) : "";
                    return 12 == a || 13 == a || "2" != t && "3" != t && "50" != a && "70" != t && "80" != t ? "ê" : "yê"
                }
                e.defineLocale("ku-kmr", {
                    months: "Rêbendan_Sibat_Adar_Nîsan_Gulan_Hezîran_Tîrmeh_Tebax_Îlon_Cotmeh_Mijdar_Berfanbar".split("_"),
                    monthsShort: "Rêb_Sib_Ada_Nîs_Gul_Hez_Tîr_Teb_Îlo_Cot_Mij_Ber".split("_"),
                    monthsParseExact: !0,
                    weekdays: "Yekşem_Duşem_Sêşem_Çarşem_Pêncşem_În_Şemî".split("_"),
                    weekdaysShort: "Yek_Du_Sê_Çar_Pên_În_Şem".split("_"),
                    weekdaysMin: "Ye_Du_Sê_Ça_Pê_În_Şe".split("_"),
                    meridiem: function(e, t, a) {
                        return e < 12 ? a ? "bn" : "BN" : a ? "pn" : "PN"
                    },
                    meridiemParse: /bn|BN|pn|PN/,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "Do MMMM[a] YYYY[an]",
                        LLL: "Do MMMM[a] YYYY[an] HH:mm",
                        LLLL: "dddd, Do MMMM[a] YYYY[an] HH:mm",
                        ll: "Do MMM[.] YYYY[an]",
                        lll: "Do MMM[.] YYYY[an] HH:mm",
                        llll: "ddd[.], Do MMM[.] YYYY[an] HH:mm"
                    },
                    calendar: {
                        sameDay: "[Îro di saet] LT [de]",
                        nextDay: "[Sibê di saet] LT [de]",
                        nextWeek: "dddd [di saet] LT [de]",
                        lastDay: "[Duh di saet] LT [de]",
                        lastWeek: "dddd[a borî di saet] LT [de]",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "di %s de",
                        past: "berî %s",
                        s: t,
                        ss: t,
                        m: t,
                        mm: t,
                        h: t,
                        hh: t,
                        d: t,
                        dd: t,
                        w: t,
                        ww: t,
                        M: t,
                        MM: t,
                        y: t,
                        yy: t
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(?:yê|ê|\.)/,
                    ordinal: function(e, t) {
                        var n = t.toLowerCase();
                        return n.includes("w") || n.includes("m") ? e + "." : e + a(e)
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        98174: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "١",
                    2: "٢",
                    3: "٣",
                    4: "٤",
                    5: "٥",
                    6: "٦",
                    7: "٧",
                    8: "٨",
                    9: "٩",
                    0: "٠"
                }
                  , a = {
                    "١": "1",
                    "٢": "2",
                    "٣": "3",
                    "٤": "4",
                    "٥": "5",
                    "٦": "6",
                    "٧": "7",
                    "٨": "8",
                    "٩": "9",
                    "٠": "0"
                }
                  , n = ["کانونی دووەم", "شوبات", "ئازار", "نیسان", "ئایار", "حوزەیران", "تەمموز", "ئاب", "ئەیلوول", "تشرینی یەكەم", "تشرینی دووەم", "كانونی یەکەم"];
                e.defineLocale("ku", {
                    months: n,
                    monthsShort: n,
                    weekdays: "یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌".split("_"),
                    weekdaysShort: "یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌".split("_"),
                    weekdaysMin: "ی_د_س_چ_پ_ه_ش".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    meridiemParse: /ئێواره‌|به‌یانی/,
                    isPM: function(e) {
                        return /ئێواره‌/.test(e)
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "به‌یانی" : "ئێواره‌"
                    },
                    calendar: {
                        sameDay: "[ئه‌مرۆ كاتژمێر] LT",
                        nextDay: "[به‌یانی كاتژمێر] LT",
                        nextWeek: "dddd [كاتژمێر] LT",
                        lastDay: "[دوێنێ كاتژمێر] LT",
                        lastWeek: "dddd [كاتژمێر] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "له‌ %s",
                        past: "%s",
                        s: "چه‌ند چركه‌یه‌ك",
                        ss: "چركه‌ %d",
                        m: "یه‌ك خوله‌ك",
                        mm: "%d خوله‌ك",
                        h: "یه‌ك كاتژمێر",
                        hh: "%d كاتژمێر",
                        d: "یه‌ك ڕۆژ",
                        dd: "%d ڕۆژ",
                        M: "یه‌ك مانگ",
                        MM: "%d مانگ",
                        y: "یه‌ك ساڵ",
                        yy: "%d ساڵ"
                    },
                    preparse: function(e) {
                        return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g, (function(e) {
                            return a[e]
                        }
                        )).replace(/،/g, ",")
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        )).replace(/,/g, "،")
                    },
                    week: {
                        dow: 6,
                        doy: 12
                    }
                })
            }(a(95093))
        },
        78474: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    0: "-чү",
                    1: "-чи",
                    2: "-чи",
                    3: "-чү",
                    4: "-чү",
                    5: "-чи",
                    6: "-чы",
                    7: "-чи",
                    8: "-чи",
                    9: "-чу",
                    10: "-чу",
                    20: "-чы",
                    30: "-чу",
                    40: "-чы",
                    50: "-чү",
                    60: "-чы",
                    70: "-чи",
                    80: "-чи",
                    90: "-чу",
                    100: "-чү"
                };
                e.defineLocale("ky", {
                    months: "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),
                    monthsShort: "янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек".split("_"),
                    weekdays: "Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби".split("_"),
                    weekdaysShort: "Жек_Дүй_Шей_Шар_Бей_Жум_Ише".split("_"),
                    weekdaysMin: "Жк_Дй_Шй_Шр_Бй_Жм_Иш".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Бүгүн саат] LT",
                        nextDay: "[Эртең саат] LT",
                        nextWeek: "dddd [саат] LT",
                        lastDay: "[Кечээ саат] LT",
                        lastWeek: "[Өткөн аптанын] dddd [күнү] [саат] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s ичинде",
                        past: "%s мурун",
                        s: "бирнече секунд",
                        ss: "%d секунд",
                        m: "бир мүнөт",
                        mm: "%d мүнөт",
                        h: "бир саат",
                        hh: "%d саат",
                        d: "бир күн",
                        dd: "%d күн",
                        M: "бир ай",
                        MM: "%d ай",
                        y: "бир жыл",
                        yy: "%d жыл"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
                    ordinal: function(e) {
                        var a = e % 10
                          , n = e >= 100 ? 100 : null;
                        return e + (t[e] || t[a] || t[n])
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        79680: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a, n) {
                    var i = {
                        m: ["eng Minutt", "enger Minutt"],
                        h: ["eng Stonn", "enger Stonn"],
                        d: ["een Dag", "engem Dag"],
                        M: ["ee Mount", "engem Mount"],
                        y: ["ee Joer", "engem Joer"]
                    };
                    return t ? i[a][0] : i[a][1]
                }
                function a(e) {
                    return i(e.substr(0, e.indexOf(" "))) ? "a " + e : "an " + e
                }
                function n(e) {
                    return i(e.substr(0, e.indexOf(" "))) ? "viru " + e : "virun " + e
                }
                function i(e) {
                    if (e = parseInt(e, 10),
                    isNaN(e))
                        return !1;
                    if (e < 0)
                        return !0;
                    if (e < 10)
                        return 4 <= e && e <= 7;
                    if (e < 100) {
                        var t = e % 10;
                        return i(0 === t ? e / 10 : t)
                    }
                    if (e < 1e4) {
                        for (; e >= 10; )
                            e /= 10;
                        return i(e)
                    }
                    return i(e /= 1e3)
                }
                e.defineLocale("lb", {
                    months: "Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
                    monthsShort: "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),
                    weekdaysShort: "So._Mé._Dë._Më._Do._Fr._Sa.".split("_"),
                    weekdaysMin: "So_Mé_Dë_Më_Do_Fr_Sa".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm [Auer]",
                        LTS: "H:mm:ss [Auer]",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY H:mm [Auer]",
                        LLLL: "dddd, D. MMMM YYYY H:mm [Auer]"
                    },
                    calendar: {
                        sameDay: "[Haut um] LT",
                        sameElse: "L",
                        nextDay: "[Muer um] LT",
                        nextWeek: "dddd [um] LT",
                        lastDay: "[Gëschter um] LT",
                        lastWeek: function() {
                            switch (this.day()) {
                            case 2:
                            case 4:
                                return "[Leschten] dddd [um] LT";
                            default:
                                return "[Leschte] dddd [um] LT"
                            }
                        }
                    },
                    relativeTime: {
                        future: a,
                        past: n,
                        s: "e puer Sekonnen",
                        ss: "%d Sekonnen",
                        m: t,
                        mm: "%d Minutten",
                        h: t,
                        hh: "%d Stonnen",
                        d: t,
                        dd: "%d Deeg",
                        M: t,
                        MM: "%d Méint",
                        y: t,
                        yy: "%d Joer"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        15867: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("lo", {
                    months: "ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split("_"),
                    monthsShort: "ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split("_"),
                    weekdays: "ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),
                    weekdaysShort: "ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),
                    weekdaysMin: "ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "ວັນdddd D MMMM YYYY HH:mm"
                    },
                    meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
                    isPM: function(e) {
                        return "ຕອນແລງ" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "ຕອນເຊົ້າ" : "ຕອນແລງ"
                    },
                    calendar: {
                        sameDay: "[ມື້ນີ້ເວລາ] LT",
                        nextDay: "[ມື້ອື່ນເວລາ] LT",
                        nextWeek: "[ວັນ]dddd[ໜ້າເວລາ] LT",
                        lastDay: "[ມື້ວານນີ້ເວລາ] LT",
                        lastWeek: "[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "ອີກ %s",
                        past: "%sຜ່ານມາ",
                        s: "ບໍ່ເທົ່າໃດວິນາທີ",
                        ss: "%d ວິນາທີ",
                        m: "1 ນາທີ",
                        mm: "%d ນາທີ",
                        h: "1 ຊົ່ວໂມງ",
                        hh: "%d ຊົ່ວໂມງ",
                        d: "1 ມື້",
                        dd: "%d ມື້",
                        M: "1 ເດືອນ",
                        MM: "%d ເດືອນ",
                        y: "1 ປີ",
                        yy: "%d ປີ"
                    },
                    dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
                    ordinal: function(e) {
                        return "ທີ່" + e
                    }
                })
            }(a(95093))
        },
        45766: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    ss: "sekundė_sekundžių_sekundes",
                    m: "minutė_minutės_minutę",
                    mm: "minutės_minučių_minutes",
                    h: "valanda_valandos_valandą",
                    hh: "valandos_valandų_valandas",
                    d: "diena_dienos_dieną",
                    dd: "dienos_dienų_dienas",
                    M: "mėnuo_mėnesio_mėnesį",
                    MM: "mėnesiai_mėnesių_mėnesius",
                    y: "metai_metų_metus",
                    yy: "metai_metų_metus"
                };
                function a(e, t, a, n) {
                    return t ? "kelios sekundės" : n ? "kelių sekundžių" : "kelias sekundes"
                }
                function n(e, t, a, n) {
                    return t ? s(a)[0] : n ? s(a)[1] : s(a)[2]
                }
                function i(e) {
                    return e % 10 == 0 || e > 10 && e < 20
                }
                function s(e) {
                    return t[e].split("_")
                }
                function r(e, t, a, r) {
                    var o = e + " ";
                    return 1 === e ? o + n(e, t, a[0], r) : t ? o + (i(e) ? s(a)[1] : s(a)[0]) : r ? o + s(a)[1] : o + (i(e) ? s(a)[1] : s(a)[2])
                }
                e.defineLocale("lt", {
                    months: {
                        format: "sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio".split("_"),
                        standalone: "sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis".split("_"),
                        isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
                    },
                    monthsShort: "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split("_"),
                    weekdays: {
                        format: "sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį".split("_"),
                        standalone: "sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis".split("_"),
                        isFormat: /dddd HH:mm/
                    },
                    weekdaysShort: "Sek_Pir_Ant_Tre_Ket_Pen_Šeš".split("_"),
                    weekdaysMin: "S_P_A_T_K_Pn_Š".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "YYYY-MM-DD",
                        LL: "YYYY [m.] MMMM D [d.]",
                        LLL: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
                        LLLL: "YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]",
                        l: "YYYY-MM-DD",
                        ll: "YYYY [m.] MMMM D [d.]",
                        lll: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
                        llll: "YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]"
                    },
                    calendar: {
                        sameDay: "[Šiandien] LT",
                        nextDay: "[Rytoj] LT",
                        nextWeek: "dddd LT",
                        lastDay: "[Vakar] LT",
                        lastWeek: "[Praėjusį] dddd LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "po %s",
                        past: "prieš %s",
                        s: a,
                        ss: r,
                        m: n,
                        mm: r,
                        h: n,
                        hh: r,
                        d: n,
                        dd: r,
                        M: n,
                        MM: r,
                        y: n,
                        yy: r
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}-oji/,
                    ordinal: function(e) {
                        return e + "-oji"
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        69532: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    ss: "sekundes_sekundēm_sekunde_sekundes".split("_"),
                    m: "minūtes_minūtēm_minūte_minūtes".split("_"),
                    mm: "minūtes_minūtēm_minūte_minūtes".split("_"),
                    h: "stundas_stundām_stunda_stundas".split("_"),
                    hh: "stundas_stundām_stunda_stundas".split("_"),
                    d: "dienas_dienām_diena_dienas".split("_"),
                    dd: "dienas_dienām_diena_dienas".split("_"),
                    M: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
                    MM: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
                    y: "gada_gadiem_gads_gadi".split("_"),
                    yy: "gada_gadiem_gads_gadi".split("_")
                };
                function a(e, t, a) {
                    return a ? t % 10 == 1 && t % 100 != 11 ? e[2] : e[3] : t % 10 == 1 && t % 100 != 11 ? e[0] : e[1]
                }
                function n(e, n, i) {
                    return e + " " + a(t[i], e, n)
                }
                function i(e, n, i) {
                    return a(t[i], e, n)
                }
                function s(e, t) {
                    return t ? "dažas sekundes" : "dažām sekundēm"
                }
                e.defineLocale("lv", {
                    months: "janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris".split("_"),
                    monthsShort: "jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec".split("_"),
                    weekdays: "svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena".split("_"),
                    weekdaysShort: "Sv_P_O_T_C_Pk_S".split("_"),
                    weekdaysMin: "Sv_P_O_T_C_Pk_S".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY.",
                        LL: "YYYY. [gada] D. MMMM",
                        LLL: "YYYY. [gada] D. MMMM, HH:mm",
                        LLLL: "YYYY. [gada] D. MMMM, dddd, HH:mm"
                    },
                    calendar: {
                        sameDay: "[Šodien pulksten] LT",
                        nextDay: "[Rīt pulksten] LT",
                        nextWeek: "dddd [pulksten] LT",
                        lastDay: "[Vakar pulksten] LT",
                        lastWeek: "[Pagājušā] dddd [pulksten] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "pēc %s",
                        past: "pirms %s",
                        s,
                        ss: n,
                        m: i,
                        mm: n,
                        h: i,
                        hh: n,
                        d: i,
                        dd: n,
                        M: i,
                        MM: n,
                        y: i,
                        yy: n
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        58076: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    words: {
                        ss: ["sekund", "sekunda", "sekundi"],
                        m: ["jedan minut", "jednog minuta"],
                        mm: ["minut", "minuta", "minuta"],
                        h: ["jedan sat", "jednog sata"],
                        hh: ["sat", "sata", "sati"],
                        dd: ["dan", "dana", "dana"],
                        MM: ["mjesec", "mjeseca", "mjeseci"],
                        yy: ["godina", "godine", "godina"]
                    },
                    correctGrammaticalCase: function(e, t) {
                        return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2]
                    },
                    translate: function(e, a, n) {
                        var i = t.words[n];
                        return 1 === n.length ? a ? i[0] : i[1] : e + " " + t.correctGrammaticalCase(e, i)
                    }
                };
                e.defineLocale("me", {
                    months: "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),
                    monthsShort: "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
                    weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
                    weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY H:mm",
                        LLLL: "dddd, D. MMMM YYYY H:mm"
                    },
                    calendar: {
                        sameDay: "[danas u] LT",
                        nextDay: "[sjutra u] LT",
                        nextWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[u] [nedjelju] [u] LT";
                            case 3:
                                return "[u] [srijedu] [u] LT";
                            case 6:
                                return "[u] [subotu] [u] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[u] dddd [u] LT"
                            }
                        },
                        lastDay: "[juče u] LT",
                        lastWeek: function() {
                            return ["[prošle] [nedjelje] [u] LT", "[prošlog] [ponedjeljka] [u] LT", "[prošlog] [utorka] [u] LT", "[prošle] [srijede] [u] LT", "[prošlog] [četvrtka] [u] LT", "[prošlog] [petka] [u] LT", "[prošle] [subote] [u] LT"][this.day()]
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "za %s",
                        past: "prije %s",
                        s: "nekoliko sekundi",
                        ss: t.translate,
                        m: t.translate,
                        mm: t.translate,
                        h: t.translate,
                        hh: t.translate,
                        d: "dan",
                        dd: t.translate,
                        M: "mjesec",
                        MM: t.translate,
                        y: "godinu",
                        yy: t.translate
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        41848: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("mi", {
                    months: "Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea".split("_"),
                    monthsShort: "Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki".split("_"),
                    monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
                    monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
                    monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
                    monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
                    weekdays: "Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei".split("_"),
                    weekdaysShort: "Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),
                    weekdaysMin: "Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY [i] HH:mm",
                        LLLL: "dddd, D MMMM YYYY [i] HH:mm"
                    },
                    calendar: {
                        sameDay: "[i teie mahana, i] LT",
                        nextDay: "[apopo i] LT",
                        nextWeek: "dddd [i] LT",
                        lastDay: "[inanahi i] LT",
                        lastWeek: "dddd [whakamutunga i] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "i roto i %s",
                        past: "%s i mua",
                        s: "te hēkona ruarua",
                        ss: "%d hēkona",
                        m: "he meneti",
                        mm: "%d meneti",
                        h: "te haora",
                        hh: "%d haora",
                        d: "he ra",
                        dd: "%d ra",
                        M: "he marama",
                        MM: "%d marama",
                        y: "he tau",
                        yy: "%d tau"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}º/,
                    ordinal: "%dº",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        30306: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("mk", {
                    months: "јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември".split("_"),
                    monthsShort: "јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек".split("_"),
                    weekdays: "недела_понеделник_вторник_среда_четврток_петок_сабота".split("_"),
                    weekdaysShort: "нед_пон_вто_сре_чет_пет_саб".split("_"),
                    weekdaysMin: "нe_пo_вт_ср_че_пе_сa".split("_"),
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "D.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY H:mm",
                        LLLL: "dddd, D MMMM YYYY H:mm"
                    },
                    calendar: {
                        sameDay: "[Денес во] LT",
                        nextDay: "[Утре во] LT",
                        nextWeek: "[Во] dddd [во] LT",
                        lastDay: "[Вчера во] LT",
                        lastWeek: function() {
                            switch (this.day()) {
                            case 0:
                            case 3:
                            case 6:
                                return "[Изминатата] dddd [во] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[Изминатиот] dddd [во] LT"
                            }
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "за %s",
                        past: "пред %s",
                        s: "неколку секунди",
                        ss: "%d секунди",
                        m: "една минута",
                        mm: "%d минути",
                        h: "еден час",
                        hh: "%d часа",
                        d: "еден ден",
                        dd: "%d дена",
                        M: "еден месец",
                        MM: "%d месеци",
                        y: "една година",
                        yy: "%d години"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
                    ordinal: function(e) {
                        var t = e % 10
                          , a = e % 100;
                        return 0 === e ? e + "-ев" : 0 === a ? e + "-ен" : a > 10 && a < 20 ? e + "-ти" : 1 === t ? e + "-ви" : 2 === t ? e + "-ри" : 7 === t || 8 === t ? e + "-ми" : e + "-ти"
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        73739: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("ml", {
                    months: "ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ".split("_"),
                    monthsShort: "ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച".split("_"),
                    weekdaysShort: "ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി".split("_"),
                    weekdaysMin: "ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ".split("_"),
                    longDateFormat: {
                        LT: "A h:mm -നു",
                        LTS: "A h:mm:ss -നു",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY, A h:mm -നു",
                        LLLL: "dddd, D MMMM YYYY, A h:mm -നു"
                    },
                    calendar: {
                        sameDay: "[ഇന്ന്] LT",
                        nextDay: "[നാളെ] LT",
                        nextWeek: "dddd, LT",
                        lastDay: "[ഇന്നലെ] LT",
                        lastWeek: "[കഴിഞ്ഞ] dddd, LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s കഴിഞ്ഞ്",
                        past: "%s മുൻപ്",
                        s: "അൽപ നിമിഷങ്ങൾ",
                        ss: "%d സെക്കൻഡ്",
                        m: "ഒരു മിനിറ്റ്",
                        mm: "%d മിനിറ്റ്",
                        h: "ഒരു മണിക്കൂർ",
                        hh: "%d മണിക്കൂർ",
                        d: "ഒരു ദിവസം",
                        dd: "%d ദിവസം",
                        M: "ഒരു മാസം",
                        MM: "%d മാസം",
                        y: "ഒരു വർഷം",
                        yy: "%d വർഷം"
                    },
                    meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "രാത്രി" === t && e >= 4 || "ഉച്ച കഴിഞ്ഞ്" === t || "വൈകുന്നേരം" === t ? e + 12 : e
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "രാത്രി" : e < 12 ? "രാവിലെ" : e < 17 ? "ഉച്ച കഴിഞ്ഞ്" : e < 20 ? "വൈകുന്നേരം" : "രാത്രി"
                    }
                })
            }(a(95093))
        },
        99053: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a, n) {
                    switch (a) {
                    case "s":
                        return t ? "хэдхэн секунд" : "хэдхэн секундын";
                    case "ss":
                        return e + (t ? " секунд" : " секундын");
                    case "m":
                    case "mm":
                        return e + (t ? " минут" : " минутын");
                    case "h":
                    case "hh":
                        return e + (t ? " цаг" : " цагийн");
                    case "d":
                    case "dd":
                        return e + (t ? " өдөр" : " өдрийн");
                    case "M":
                    case "MM":
                        return e + (t ? " сар" : " сарын");
                    case "y":
                    case "yy":
                        return e + (t ? " жил" : " жилийн");
                    default:
                        return e
                    }
                }
                e.defineLocale("mn", {
                    months: "Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар".split("_"),
                    monthsShort: "1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар".split("_"),
                    monthsParseExact: !0,
                    weekdays: "Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба".split("_"),
                    weekdaysShort: "Ням_Дав_Мяг_Лха_Пүр_Баа_Бям".split("_"),
                    weekdaysMin: "Ня_Да_Мя_Лх_Пү_Ба_Бя".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "YYYY-MM-DD",
                        LL: "YYYY оны MMMMын D",
                        LLL: "YYYY оны MMMMын D HH:mm",
                        LLLL: "dddd, YYYY оны MMMMын D HH:mm"
                    },
                    meridiemParse: /ҮӨ|ҮХ/i,
                    isPM: function(e) {
                        return "ҮХ" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "ҮӨ" : "ҮХ"
                    },
                    calendar: {
                        sameDay: "[Өнөөдөр] LT",
                        nextDay: "[Маргааш] LT",
                        nextWeek: "[Ирэх] dddd LT",
                        lastDay: "[Өчигдөр] LT",
                        lastWeek: "[Өнгөрсөн] dddd LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s дараа",
                        past: "%s өмнө",
                        s: t,
                        ss: t,
                        m: t,
                        mm: t,
                        h: t,
                        hh: t,
                        d: t,
                        dd: t,
                        M: t,
                        MM: t,
                        y: t,
                        yy: t
                    },
                    dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "d":
                        case "D":
                        case "DDD":
                            return e + " өдөр";
                        default:
                            return e
                        }
                    }
                })
            }(a(95093))
        },
        86169: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "१",
                    2: "२",
                    3: "३",
                    4: "४",
                    5: "५",
                    6: "६",
                    7: "७",
                    8: "८",
                    9: "९",
                    0: "०"
                }
                  , a = {
                    "१": "1",
                    "२": "2",
                    "३": "3",
                    "४": "4",
                    "५": "5",
                    "६": "6",
                    "७": "7",
                    "८": "8",
                    "९": "9",
                    "०": "0"
                };
                function n(e, t, a, n) {
                    var i = "";
                    if (t)
                        switch (a) {
                        case "s":
                            i = "काही सेकंद";
                            break;
                        case "ss":
                            i = "%d सेकंद";
                            break;
                        case "m":
                            i = "एक मिनिट";
                            break;
                        case "mm":
                            i = "%d मिनिटे";
                            break;
                        case "h":
                            i = "एक तास";
                            break;
                        case "hh":
                            i = "%d तास";
                            break;
                        case "d":
                            i = "एक दिवस";
                            break;
                        case "dd":
                            i = "%d दिवस";
                            break;
                        case "M":
                            i = "एक महिना";
                            break;
                        case "MM":
                            i = "%d महिने";
                            break;
                        case "y":
                            i = "एक वर्ष";
                            break;
                        case "yy":
                            i = "%d वर्षे"
                        }
                    else
                        switch (a) {
                        case "s":
                            i = "काही सेकंदां";
                            break;
                        case "ss":
                            i = "%d सेकंदां";
                            break;
                        case "m":
                            i = "एका मिनिटा";
                            break;
                        case "mm":
                            i = "%d मिनिटां";
                            break;
                        case "h":
                            i = "एका तासा";
                            break;
                        case "hh":
                            i = "%d तासां";
                            break;
                        case "d":
                            i = "एका दिवसा";
                            break;
                        case "dd":
                            i = "%d दिवसां";
                            break;
                        case "M":
                            i = "एका महिन्या";
                            break;
                        case "MM":
                            i = "%d महिन्यां";
                            break;
                        case "y":
                            i = "एका वर्षा";
                            break;
                        case "yy":
                            i = "%d वर्षां"
                        }
                    return i.replace(/%d/i, e)
                }
                e.defineLocale("mr", {
                    months: "जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split("_"),
                    monthsShort: "जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
                    weekdaysShort: "रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि".split("_"),
                    weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
                    longDateFormat: {
                        LT: "A h:mm वाजता",
                        LTS: "A h:mm:ss वाजता",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY, A h:mm वाजता",
                        LLLL: "dddd, D MMMM YYYY, A h:mm वाजता"
                    },
                    calendar: {
                        sameDay: "[आज] LT",
                        nextDay: "[उद्या] LT",
                        nextWeek: "dddd, LT",
                        lastDay: "[काल] LT",
                        lastWeek: "[मागील] dddd, LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%sमध्ये",
                        past: "%sपूर्वी",
                        s: n,
                        ss: n,
                        m: n,
                        mm: n,
                        h: n,
                        hh: n,
                        d: n,
                        dd: n,
                        M: n,
                        MM: n,
                        y: n,
                        yy: n
                    },
                    preparse: function(e) {
                        return e.replace(/[१२३४५६७८९०]/g, (function(e) {
                            return a[e]
                        }
                        ))
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        ))
                    },
                    meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "पहाटे" === t || "सकाळी" === t ? e : "दुपारी" === t || "सायंकाळी" === t || "रात्री" === t ? e >= 12 ? e : e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e >= 0 && e < 6 ? "पहाटे" : e < 12 ? "सकाळी" : e < 17 ? "दुपारी" : e < 20 ? "सायंकाळी" : "रात्री"
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        92297: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("ms-my", {
                    months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
                    monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
                    weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
                    weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
                    weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
                    longDateFormat: {
                        LT: "HH.mm",
                        LTS: "HH.mm.ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY [pukul] HH.mm",
                        LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
                    },
                    meridiemParse: /pagi|tengahari|petang|malam/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "pagi" === t ? e : "tengahari" === t ? e >= 11 ? e : e + 12 : "petang" === t || "malam" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 11 ? "pagi" : e < 15 ? "tengahari" : e < 19 ? "petang" : "malam"
                    },
                    calendar: {
                        sameDay: "[Hari ini pukul] LT",
                        nextDay: "[Esok pukul] LT",
                        nextWeek: "dddd [pukul] LT",
                        lastDay: "[Kelmarin pukul] LT",
                        lastWeek: "dddd [lepas pukul] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "dalam %s",
                        past: "%s yang lepas",
                        s: "beberapa saat",
                        ss: "%d saat",
                        m: "seminit",
                        mm: "%d minit",
                        h: "sejam",
                        hh: "%d jam",
                        d: "sehari",
                        dd: "%d hari",
                        M: "sebulan",
                        MM: "%d bulan",
                        y: "setahun",
                        yy: "%d tahun"
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        73386: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("ms", {
                    months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
                    monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
                    weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
                    weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
                    weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
                    longDateFormat: {
                        LT: "HH.mm",
                        LTS: "HH.mm.ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY [pukul] HH.mm",
                        LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
                    },
                    meridiemParse: /pagi|tengahari|petang|malam/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "pagi" === t ? e : "tengahari" === t ? e >= 11 ? e : e + 12 : "petang" === t || "malam" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 11 ? "pagi" : e < 15 ? "tengahari" : e < 19 ? "petang" : "malam"
                    },
                    calendar: {
                        sameDay: "[Hari ini pukul] LT",
                        nextDay: "[Esok pukul] LT",
                        nextWeek: "dddd [pukul] LT",
                        lastDay: "[Kelmarin pukul] LT",
                        lastWeek: "dddd [lepas pukul] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "dalam %s",
                        past: "%s yang lepas",
                        s: "beberapa saat",
                        ss: "%d saat",
                        m: "seminit",
                        mm: "%d minit",
                        h: "sejam",
                        hh: "%d jam",
                        d: "sehari",
                        dd: "%d hari",
                        M: "sebulan",
                        MM: "%d bulan",
                        y: "setahun",
                        yy: "%d tahun"
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        77075: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("mt", {
                    months: "Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru".split("_"),
                    monthsShort: "Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ".split("_"),
                    weekdays: "Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt".split("_"),
                    weekdaysShort: "Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib".split("_"),
                    weekdaysMin: "Ħa_Tn_Tl_Er_Ħa_Ġi_Si".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Illum fil-]LT",
                        nextDay: "[Għada fil-]LT",
                        nextWeek: "dddd [fil-]LT",
                        lastDay: "[Il-bieraħ fil-]LT",
                        lastWeek: "dddd [li għadda] [fil-]LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "f’ %s",
                        past: "%s ilu",
                        s: "ftit sekondi",
                        ss: "%d sekondi",
                        m: "minuta",
                        mm: "%d minuti",
                        h: "siegħa",
                        hh: "%d siegħat",
                        d: "ġurnata",
                        dd: "%d ġranet",
                        M: "xahar",
                        MM: "%d xhur",
                        y: "sena",
                        yy: "%d sni"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}º/,
                    ordinal: "%dº",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        72264: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "၁",
                    2: "၂",
                    3: "၃",
                    4: "၄",
                    5: "၅",
                    6: "၆",
                    7: "၇",
                    8: "၈",
                    9: "၉",
                    0: "၀"
                }
                  , a = {
                    "၁": "1",
                    "၂": "2",
                    "၃": "3",
                    "၄": "4",
                    "၅": "5",
                    "၆": "6",
                    "၇": "7",
                    "၈": "8",
                    "၉": "9",
                    "၀": "0"
                };
                e.defineLocale("my", {
                    months: "ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ".split("_"),
                    monthsShort: "ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ".split("_"),
                    weekdays: "တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ".split("_"),
                    weekdaysShort: "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
                    weekdaysMin: "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[ယနေ.] LT [မှာ]",
                        nextDay: "[မနက်ဖြန်] LT [မှာ]",
                        nextWeek: "dddd LT [မှာ]",
                        lastDay: "[မနေ.က] LT [မှာ]",
                        lastWeek: "[ပြီးခဲ့သော] dddd LT [မှာ]",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "လာမည့် %s မှာ",
                        past: "လွန်ခဲ့သော %s က",
                        s: "စက္ကန်.အနည်းငယ်",
                        ss: "%d စက္ကန့်",
                        m: "တစ်မိနစ်",
                        mm: "%d မိနစ်",
                        h: "တစ်နာရီ",
                        hh: "%d နာရီ",
                        d: "တစ်ရက်",
                        dd: "%d ရက်",
                        M: "တစ်လ",
                        MM: "%d လ",
                        y: "တစ်နှစ်",
                        yy: "%d နှစ်"
                    },
                    preparse: function(e) {
                        return e.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, (function(e) {
                            return a[e]
                        }
                        ))
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        ))
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        22274: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("nb", {
                    months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
                    monthsShort: "jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
                    weekdaysShort: "sø._ma._ti._on._to._fr._lø.".split("_"),
                    weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY [kl.] HH:mm",
                        LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
                    },
                    calendar: {
                        sameDay: "[i dag kl.] LT",
                        nextDay: "[i morgen kl.] LT",
                        nextWeek: "dddd [kl.] LT",
                        lastDay: "[i går kl.] LT",
                        lastWeek: "[forrige] dddd [kl.] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "om %s",
                        past: "%s siden",
                        s: "noen sekunder",
                        ss: "%d sekunder",
                        m: "ett minutt",
                        mm: "%d minutter",
                        h: "én time",
                        hh: "%d timer",
                        d: "én dag",
                        dd: "%d dager",
                        w: "én uke",
                        ww: "%d uker",
                        M: "én måned",
                        MM: "%d måneder",
                        y: "ett år",
                        yy: "%d år"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        8235: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "१",
                    2: "२",
                    3: "३",
                    4: "४",
                    5: "५",
                    6: "६",
                    7: "७",
                    8: "८",
                    9: "९",
                    0: "०"
                }
                  , a = {
                    "१": "1",
                    "२": "2",
                    "३": "3",
                    "४": "4",
                    "५": "5",
                    "६": "6",
                    "७": "7",
                    "८": "8",
                    "९": "9",
                    "०": "0"
                };
                e.defineLocale("ne", {
                    months: "जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर".split("_"),
                    monthsShort: "जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार".split("_"),
                    weekdaysShort: "आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.".split("_"),
                    weekdaysMin: "आ._सो._मं._बु._बि._शु._श.".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "Aको h:mm बजे",
                        LTS: "Aको h:mm:ss बजे",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY, Aको h:mm बजे",
                        LLLL: "dddd, D MMMM YYYY, Aको h:mm बजे"
                    },
                    preparse: function(e) {
                        return e.replace(/[१२३४५६७८९०]/g, (function(e) {
                            return a[e]
                        }
                        ))
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        ))
                    },
                    meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "राति" === t ? e < 4 ? e : e + 12 : "बिहान" === t ? e : "दिउँसो" === t ? e >= 10 ? e : e + 12 : "साँझ" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 3 ? "राति" : e < 12 ? "बिहान" : e < 16 ? "दिउँसो" : e < 20 ? "साँझ" : "राति"
                    },
                    calendar: {
                        sameDay: "[आज] LT",
                        nextDay: "[भोलि] LT",
                        nextWeek: "[आउँदो] dddd[,] LT",
                        lastDay: "[हिजो] LT",
                        lastWeek: "[गएको] dddd[,] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%sमा",
                        past: "%s अगाडि",
                        s: "केही क्षण",
                        ss: "%d सेकेण्ड",
                        m: "एक मिनेट",
                        mm: "%d मिनेट",
                        h: "एक घण्टा",
                        hh: "%d घण्टा",
                        d: "एक दिन",
                        dd: "%d दिन",
                        M: "एक महिना",
                        MM: "%d महिना",
                        y: "एक बर्ष",
                        yy: "%d बर्ष"
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        43784: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_")
                  , a = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_")
                  , n = [/^jan/i, /^feb/i, /^(maart|mrt\.?)$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i]
                  , i = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
                e.defineLocale("nl-be", {
                    months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
                    monthsShort: function(e, n) {
                        return e ? /-MMM-/.test(n) ? a[e.month()] : t[e.month()] : t
                    },
                    monthsRegex: i,
                    monthsShortRegex: i,
                    monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
                    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
                    monthsParse: n,
                    longMonthsParse: n,
                    shortMonthsParse: n,
                    weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
                    weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
                    weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[vandaag om] LT",
                        nextDay: "[morgen om] LT",
                        nextWeek: "dddd [om] LT",
                        lastDay: "[gisteren om] LT",
                        lastWeek: "[afgelopen] dddd [om] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "over %s",
                        past: "%s geleden",
                        s: "een paar seconden",
                        ss: "%d seconden",
                        m: "één minuut",
                        mm: "%d minuten",
                        h: "één uur",
                        hh: "%d uur",
                        d: "één dag",
                        dd: "%d dagen",
                        M: "één maand",
                        MM: "%d maanden",
                        y: "één jaar",
                        yy: "%d jaar"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
                    ordinal: function(e) {
                        return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        92572: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_")
                  , a = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_")
                  , n = [/^jan/i, /^feb/i, /^(maart|mrt\.?)$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i]
                  , i = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;
                e.defineLocale("nl", {
                    months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
                    monthsShort: function(e, n) {
                        return e ? /-MMM-/.test(n) ? a[e.month()] : t[e.month()] : t
                    },
                    monthsRegex: i,
                    monthsShortRegex: i,
                    monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
                    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
                    monthsParse: n,
                    longMonthsParse: n,
                    shortMonthsParse: n,
                    weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
                    weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
                    weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD-MM-YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[vandaag om] LT",
                        nextDay: "[morgen om] LT",
                        nextWeek: "dddd [om] LT",
                        lastDay: "[gisteren om] LT",
                        lastWeek: "[afgelopen] dddd [om] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "over %s",
                        past: "%s geleden",
                        s: "een paar seconden",
                        ss: "%d seconden",
                        m: "één minuut",
                        mm: "%d minuten",
                        h: "één uur",
                        hh: "%d uur",
                        d: "één dag",
                        dd: "%d dagen",
                        w: "één week",
                        ww: "%d weken",
                        M: "één maand",
                        MM: "%d maanden",
                        y: "één jaar",
                        yy: "%d jaar"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
                    ordinal: function(e) {
                        return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        54566: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("nn", {
                    months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
                    monthsShort: "jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag".split("_"),
                    weekdaysShort: "su._må._ty._on._to._fr._lau.".split("_"),
                    weekdaysMin: "su_må_ty_on_to_fr_la".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY [kl.] H:mm",
                        LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
                    },
                    calendar: {
                        sameDay: "[I dag klokka] LT",
                        nextDay: "[I morgon klokka] LT",
                        nextWeek: "dddd [klokka] LT",
                        lastDay: "[I går klokka] LT",
                        lastWeek: "[Føregåande] dddd [klokka] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "om %s",
                        past: "%s sidan",
                        s: "nokre sekund",
                        ss: "%d sekund",
                        m: "eit minutt",
                        mm: "%d minutt",
                        h: "ein time",
                        hh: "%d timar",
                        d: "ein dag",
                        dd: "%d dagar",
                        w: "ei veke",
                        ww: "%d veker",
                        M: "ein månad",
                        MM: "%d månader",
                        y: "eit år",
                        yy: "%d år"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        69330: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("oc-lnc", {
                    months: {
                        standalone: "genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre".split("_"),
                        format: "de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split("_"),
                        isFormat: /D[oD]?(\s)+MMMM/
                    },
                    monthsShort: "gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte".split("_"),
                    weekdaysShort: "dg._dl._dm._dc._dj._dv._ds.".split("_"),
                    weekdaysMin: "dg_dl_dm_dc_dj_dv_ds".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM [de] YYYY",
                        ll: "D MMM YYYY",
                        LLL: "D MMMM [de] YYYY [a] H:mm",
                        lll: "D MMM YYYY, H:mm",
                        LLLL: "dddd D MMMM [de] YYYY [a] H:mm",
                        llll: "ddd D MMM YYYY, H:mm"
                    },
                    calendar: {
                        sameDay: "[uèi a] LT",
                        nextDay: "[deman a] LT",
                        nextWeek: "dddd [a] LT",
                        lastDay: "[ièr a] LT",
                        lastWeek: "dddd [passat a] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "d'aquí %s",
                        past: "fa %s",
                        s: "unas segondas",
                        ss: "%d segondas",
                        m: "una minuta",
                        mm: "%d minutas",
                        h: "una ora",
                        hh: "%d oras",
                        d: "un jorn",
                        dd: "%d jorns",
                        M: "un mes",
                        MM: "%d meses",
                        y: "un an",
                        yy: "%d ans"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
                    ordinal: function(e, t) {
                        var a = 1 === e ? "r" : 2 === e ? "n" : 3 === e ? "r" : 4 === e ? "t" : "è";
                        return "w" !== t && "W" !== t || (a = "a"),
                        e + a
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        29849: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "੧",
                    2: "੨",
                    3: "੩",
                    4: "੪",
                    5: "੫",
                    6: "੬",
                    7: "੭",
                    8: "੮",
                    9: "੯",
                    0: "੦"
                }
                  , a = {
                    "੧": "1",
                    "੨": "2",
                    "੩": "3",
                    "੪": "4",
                    "੫": "5",
                    "੬": "6",
                    "੭": "7",
                    "੮": "8",
                    "੯": "9",
                    "੦": "0"
                };
                e.defineLocale("pa-in", {
                    months: "ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split("_"),
                    monthsShort: "ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split("_"),
                    weekdays: "ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ".split("_"),
                    weekdaysShort: "ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),
                    weekdaysMin: "ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),
                    longDateFormat: {
                        LT: "A h:mm ਵਜੇ",
                        LTS: "A h:mm:ss ਵਜੇ",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY, A h:mm ਵਜੇ",
                        LLLL: "dddd, D MMMM YYYY, A h:mm ਵਜੇ"
                    },
                    calendar: {
                        sameDay: "[ਅਜ] LT",
                        nextDay: "[ਕਲ] LT",
                        nextWeek: "[ਅਗਲਾ] dddd, LT",
                        lastDay: "[ਕਲ] LT",
                        lastWeek: "[ਪਿਛਲੇ] dddd, LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s ਵਿੱਚ",
                        past: "%s ਪਿਛਲੇ",
                        s: "ਕੁਝ ਸਕਿੰਟ",
                        ss: "%d ਸਕਿੰਟ",
                        m: "ਇਕ ਮਿੰਟ",
                        mm: "%d ਮਿੰਟ",
                        h: "ਇੱਕ ਘੰਟਾ",
                        hh: "%d ਘੰਟੇ",
                        d: "ਇੱਕ ਦਿਨ",
                        dd: "%d ਦਿਨ",
                        M: "ਇੱਕ ਮਹੀਨਾ",
                        MM: "%d ਮਹੀਨੇ",
                        y: "ਇੱਕ ਸਾਲ",
                        yy: "%d ਸਾਲ"
                    },
                    preparse: function(e) {
                        return e.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, (function(e) {
                            return a[e]
                        }
                        ))
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        ))
                    },
                    meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "ਰਾਤ" === t ? e < 4 ? e : e + 12 : "ਸਵੇਰ" === t ? e : "ਦੁਪਹਿਰ" === t ? e >= 10 ? e : e + 12 : "ਸ਼ਾਮ" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "ਰਾਤ" : e < 10 ? "ਸਵੇਰ" : e < 17 ? "ਦੁਪਹਿਰ" : e < 20 ? "ਸ਼ਾਮ" : "ਰਾਤ"
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        94418: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = "styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień".split("_")
                  , a = "stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia".split("_")
                  , n = [/^sty/i, /^lut/i, /^mar/i, /^kwi/i, /^maj/i, /^cze/i, /^lip/i, /^sie/i, /^wrz/i, /^paź/i, /^lis/i, /^gru/i];
                function i(e) {
                    return e % 10 < 5 && e % 10 > 1 && ~~(e / 10) % 10 != 1
                }
                function s(e, t, a) {
                    var n = e + " ";
                    switch (a) {
                    case "ss":
                        return n + (i(e) ? "sekundy" : "sekund");
                    case "m":
                        return t ? "minuta" : "minutę";
                    case "mm":
                        return n + (i(e) ? "minuty" : "minut");
                    case "h":
                        return t ? "godzina" : "godzinę";
                    case "hh":
                        return n + (i(e) ? "godziny" : "godzin");
                    case "ww":
                        return n + (i(e) ? "tygodnie" : "tygodni");
                    case "MM":
                        return n + (i(e) ? "miesiące" : "miesięcy");
                    case "yy":
                        return n + (i(e) ? "lata" : "lat")
                    }
                }
                e.defineLocale("pl", {
                    months: function(e, n) {
                        return e ? /D MMMM/.test(n) ? a[e.month()] : t[e.month()] : t
                    },
                    monthsShort: "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru".split("_"),
                    monthsParse: n,
                    longMonthsParse: n,
                    shortMonthsParse: n,
                    weekdays: "niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota".split("_"),
                    weekdaysShort: "ndz_pon_wt_śr_czw_pt_sob".split("_"),
                    weekdaysMin: "Nd_Pn_Wt_Śr_Cz_Pt_So".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Dziś o] LT",
                        nextDay: "[Jutro o] LT",
                        nextWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[W niedzielę o] LT";
                            case 2:
                                return "[We wtorek o] LT";
                            case 3:
                                return "[W środę o] LT";
                            case 6:
                                return "[W sobotę o] LT";
                            default:
                                return "[W] dddd [o] LT"
                            }
                        },
                        lastDay: "[Wczoraj o] LT",
                        lastWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[W zeszłą niedzielę o] LT";
                            case 3:
                                return "[W zeszłą środę o] LT";
                            case 6:
                                return "[W zeszłą sobotę o] LT";
                            default:
                                return "[W zeszły] dddd [o] LT"
                            }
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "za %s",
                        past: "%s temu",
                        s: "kilka sekund",
                        ss: s,
                        m: s,
                        mm: s,
                        h: s,
                        hh: s,
                        d: "1 dzień",
                        dd: "%d dni",
                        w: "tydzień",
                        ww: s,
                        M: "miesiąc",
                        MM: s,
                        y: "rok",
                        yy: s
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        48303: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("pt-br", {
                    months: "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),
                    monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
                    weekdays: "domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado".split("_"),
                    weekdaysShort: "dom_seg_ter_qua_qui_sex_sáb".split("_"),
                    weekdaysMin: "do_2ª_3ª_4ª_5ª_6ª_sá".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D [de] MMMM [de] YYYY",
                        LLL: "D [de] MMMM [de] YYYY [às] HH:mm",
                        LLLL: "dddd, D [de] MMMM [de] YYYY [às] HH:mm"
                    },
                    calendar: {
                        sameDay: "[Hoje às] LT",
                        nextDay: "[Amanhã às] LT",
                        nextWeek: "dddd [às] LT",
                        lastDay: "[Ontem às] LT",
                        lastWeek: function() {
                            return 0 === this.day() || 6 === this.day() ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT"
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "em %s",
                        past: "há %s",
                        s: "poucos segundos",
                        ss: "%d segundos",
                        m: "um minuto",
                        mm: "%d minutos",
                        h: "uma hora",
                        hh: "%d horas",
                        d: "um dia",
                        dd: "%d dias",
                        M: "um mês",
                        MM: "%d meses",
                        y: "um ano",
                        yy: "%d anos"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}º/,
                    ordinal: "%dº",
                    invalidDate: "Data inválida"
                })
            }(a(95093))
        },
        79834: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("pt", {
                    months: "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),
                    monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
                    weekdays: "Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split("_"),
                    weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
                    weekdaysMin: "Do_2ª_3ª_4ª_5ª_6ª_Sá".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D [de] MMMM [de] YYYY",
                        LLL: "D [de] MMMM [de] YYYY HH:mm",
                        LLLL: "dddd, D [de] MMMM [de] YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Hoje às] LT",
                        nextDay: "[Amanhã às] LT",
                        nextWeek: "dddd [às] LT",
                        lastDay: "[Ontem às] LT",
                        lastWeek: function() {
                            return 0 === this.day() || 6 === this.day() ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT"
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "em %s",
                        past: "há %s",
                        s: "segundos",
                        ss: "%d segundos",
                        m: "um minuto",
                        mm: "%d minutos",
                        h: "uma hora",
                        hh: "%d horas",
                        d: "um dia",
                        dd: "%d dias",
                        w: "uma semana",
                        ww: "%d semanas",
                        M: "um mês",
                        MM: "%d meses",
                        y: "um ano",
                        yy: "%d anos"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}º/,
                    ordinal: "%dº",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        24457: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a) {
                    var n = " ";
                    return (e % 100 >= 20 || e >= 100 && e % 100 == 0) && (n = " de "),
                    e + n + {
                        ss: "secunde",
                        mm: "minute",
                        hh: "ore",
                        dd: "zile",
                        ww: "săptămâni",
                        MM: "luni",
                        yy: "ani"
                    }[a]
                }
                e.defineLocale("ro", {
                    months: "ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split("_"),
                    monthsShort: "ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "duminică_luni_marți_miercuri_joi_vineri_sâmbătă".split("_"),
                    weekdaysShort: "Dum_Lun_Mar_Mie_Joi_Vin_Sâm".split("_"),
                    weekdaysMin: "Du_Lu_Ma_Mi_Jo_Vi_Sâ".split("_"),
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY H:mm",
                        LLLL: "dddd, D MMMM YYYY H:mm"
                    },
                    calendar: {
                        sameDay: "[azi la] LT",
                        nextDay: "[mâine la] LT",
                        nextWeek: "dddd [la] LT",
                        lastDay: "[ieri la] LT",
                        lastWeek: "[fosta] dddd [la] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "peste %s",
                        past: "%s în urmă",
                        s: "câteva secunde",
                        ss: t,
                        m: "un minut",
                        mm: t,
                        h: "o oră",
                        hh: t,
                        d: "o zi",
                        dd: t,
                        w: "o săptămână",
                        ww: t,
                        M: "o lună",
                        MM: t,
                        y: "un an",
                        yy: t
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        82271: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t) {
                    var a = e.split("_");
                    return t % 10 == 1 && t % 100 != 11 ? a[0] : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? a[1] : a[2]
                }
                function a(e, a, n) {
                    return "m" === n ? a ? "минута" : "минуту" : e + " " + t({
                        ss: a ? "секунда_секунды_секунд" : "секунду_секунды_секунд",
                        mm: a ? "минута_минуты_минут" : "минуту_минуты_минут",
                        hh: "час_часа_часов",
                        dd: "день_дня_дней",
                        ww: "неделя_недели_недель",
                        MM: "месяц_месяца_месяцев",
                        yy: "год_года_лет"
                    }[n], +e)
                }
                var n = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];
                e.defineLocale("ru", {
                    months: {
                        format: "января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split("_"),
                        standalone: "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_")
                    },
                    monthsShort: {
                        format: "янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.".split("_"),
                        standalone: "янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.".split("_")
                    },
                    weekdays: {
                        standalone: "воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split("_"),
                        format: "воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу".split("_"),
                        isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/
                    },
                    weekdaysShort: "вс_пн_вт_ср_чт_пт_сб".split("_"),
                    weekdaysMin: "вс_пн_вт_ср_чт_пт_сб".split("_"),
                    monthsParse: n,
                    longMonthsParse: n,
                    shortMonthsParse: n,
                    monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
                    monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
                    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,
                    monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY г.",
                        LLL: "D MMMM YYYY г., H:mm",
                        LLLL: "dddd, D MMMM YYYY г., H:mm"
                    },
                    calendar: {
                        sameDay: "[Сегодня, в] LT",
                        nextDay: "[Завтра, в] LT",
                        lastDay: "[Вчера, в] LT",
                        nextWeek: function(e) {
                            if (e.week() === this.week())
                                return 2 === this.day() ? "[Во] dddd, [в] LT" : "[В] dddd, [в] LT";
                            switch (this.day()) {
                            case 0:
                                return "[В следующее] dddd, [в] LT";
                            case 1:
                            case 2:
                            case 4:
                                return "[В следующий] dddd, [в] LT";
                            case 3:
                            case 5:
                            case 6:
                                return "[В следующую] dddd, [в] LT"
                            }
                        },
                        lastWeek: function(e) {
                            if (e.week() === this.week())
                                return 2 === this.day() ? "[Во] dddd, [в] LT" : "[В] dddd, [в] LT";
                            switch (this.day()) {
                            case 0:
                                return "[В прошлое] dddd, [в] LT";
                            case 1:
                            case 2:
                            case 4:
                                return "[В прошлый] dddd, [в] LT";
                            case 3:
                            case 5:
                            case 6:
                                return "[В прошлую] dddd, [в] LT"
                            }
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "через %s",
                        past: "%s назад",
                        s: "несколько секунд",
                        ss: a,
                        m: a,
                        mm: a,
                        h: "час",
                        hh: a,
                        d: "день",
                        dd: a,
                        w: "неделя",
                        ww: a,
                        M: "месяц",
                        MM: a,
                        y: "год",
                        yy: a
                    },
                    meridiemParse: /ночи|утра|дня|вечера/i,
                    isPM: function(e) {
                        return /^(дня|вечера)$/.test(e)
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "ночи" : e < 12 ? "утра" : e < 17 ? "дня" : "вечера"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "M":
                        case "d":
                        case "DDD":
                            return e + "-й";
                        case "D":
                            return e + "-го";
                        case "w":
                        case "W":
                            return e + "-я";
                        default:
                            return e
                        }
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        1221: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = ["جنوري", "فيبروري", "مارچ", "اپريل", "مئي", "جون", "جولاءِ", "آگسٽ", "سيپٽمبر", "آڪٽوبر", "نومبر", "ڊسمبر"]
                  , a = ["آچر", "سومر", "اڱارو", "اربع", "خميس", "جمع", "ڇنڇر"];
                e.defineLocale("sd", {
                    months: t,
                    monthsShort: t,
                    weekdays: a,
                    weekdaysShort: a,
                    weekdaysMin: a,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd، D MMMM YYYY HH:mm"
                    },
                    meridiemParse: /صبح|شام/,
                    isPM: function(e) {
                        return "شام" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "صبح" : "شام"
                    },
                    calendar: {
                        sameDay: "[اڄ] LT",
                        nextDay: "[سڀاڻي] LT",
                        nextWeek: "dddd [اڳين هفتي تي] LT",
                        lastDay: "[ڪالهه] LT",
                        lastWeek: "[گزريل هفتي] dddd [تي] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s پوء",
                        past: "%s اڳ",
                        s: "چند سيڪنڊ",
                        ss: "%d سيڪنڊ",
                        m: "هڪ منٽ",
                        mm: "%d منٽ",
                        h: "هڪ ڪلاڪ",
                        hh: "%d ڪلاڪ",
                        d: "هڪ ڏينهن",
                        dd: "%d ڏينهن",
                        M: "هڪ مهينو",
                        MM: "%d مهينا",
                        y: "هڪ سال",
                        yy: "%d سال"
                    },
                    preparse: function(e) {
                        return e.replace(/،/g, ",")
                    },
                    postformat: function(e) {
                        return e.replace(/,/g, "،")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        33478: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("se", {
                    months: "ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu".split("_"),
                    monthsShort: "ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov".split("_"),
                    weekdays: "sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat".split("_"),
                    weekdaysShort: "sotn_vuos_maŋ_gask_duor_bear_láv".split("_"),
                    weekdaysMin: "s_v_m_g_d_b_L".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "MMMM D. [b.] YYYY",
                        LLL: "MMMM D. [b.] YYYY [ti.] HH:mm",
                        LLLL: "dddd, MMMM D. [b.] YYYY [ti.] HH:mm"
                    },
                    calendar: {
                        sameDay: "[otne ti] LT",
                        nextDay: "[ihttin ti] LT",
                        nextWeek: "dddd [ti] LT",
                        lastDay: "[ikte ti] LT",
                        lastWeek: "[ovddit] dddd [ti] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s geažes",
                        past: "maŋit %s",
                        s: "moadde sekunddat",
                        ss: "%d sekunddat",
                        m: "okta minuhta",
                        mm: "%d minuhtat",
                        h: "okta diimmu",
                        hh: "%d diimmut",
                        d: "okta beaivi",
                        dd: "%d beaivvit",
                        M: "okta mánnu",
                        MM: "%d mánut",
                        y: "okta jahki",
                        yy: "%d jagit"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        17538: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("si", {
                    months: "ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්".split("_"),
                    monthsShort: "ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ".split("_"),
                    weekdays: "ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා".split("_"),
                    weekdaysShort: "ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන".split("_"),
                    weekdaysMin: "ඉ_ස_අ_බ_බ්‍ර_සි_සෙ".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "a h:mm",
                        LTS: "a h:mm:ss",
                        L: "YYYY/MM/DD",
                        LL: "YYYY MMMM D",
                        LLL: "YYYY MMMM D, a h:mm",
                        LLLL: "YYYY MMMM D [වැනි] dddd, a h:mm:ss"
                    },
                    calendar: {
                        sameDay: "[අද] LT[ට]",
                        nextDay: "[හෙට] LT[ට]",
                        nextWeek: "dddd LT[ට]",
                        lastDay: "[ඊයේ] LT[ට]",
                        lastWeek: "[පසුගිය] dddd LT[ට]",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%sකින්",
                        past: "%sකට පෙර",
                        s: "තත්පර කිහිපය",
                        ss: "තත්පර %d",
                        m: "මිනිත්තුව",
                        mm: "මිනිත්තු %d",
                        h: "පැය",
                        hh: "පැය %d",
                        d: "දිනය",
                        dd: "දින %d",
                        M: "මාසය",
                        MM: "මාස %d",
                        y: "වසර",
                        yy: "වසර %d"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
                    ordinal: function(e) {
                        return e + " වැනි"
                    },
                    meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
                    isPM: function(e) {
                        return "ප.ව." === e || "පස් වරු" === e
                    },
                    meridiem: function(e, t, a) {
                        return e > 11 ? a ? "ප.ව." : "පස් වරු" : a ? "පෙ.ව." : "පෙර වරු"
                    }
                })
            }(a(95093))
        },
        5784: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = "január_február_marec_apríl_máj_jún_júl_august_september_október_november_december".split("_")
                  , a = "jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec".split("_");
                function n(e) {
                    return e > 1 && e < 5
                }
                function i(e, t, a, i) {
                    var s = e + " ";
                    switch (a) {
                    case "s":
                        return t || i ? "pár sekúnd" : "pár sekundami";
                    case "ss":
                        return t || i ? s + (n(e) ? "sekundy" : "sekúnd") : s + "sekundami";
                    case "m":
                        return t ? "minúta" : i ? "minútu" : "minútou";
                    case "mm":
                        return t || i ? s + (n(e) ? "minúty" : "minút") : s + "minútami";
                    case "h":
                        return t ? "hodina" : i ? "hodinu" : "hodinou";
                    case "hh":
                        return t || i ? s + (n(e) ? "hodiny" : "hodín") : s + "hodinami";
                    case "d":
                        return t || i ? "deň" : "dňom";
                    case "dd":
                        return t || i ? s + (n(e) ? "dni" : "dní") : s + "dňami";
                    case "M":
                        return t || i ? "mesiac" : "mesiacom";
                    case "MM":
                        return t || i ? s + (n(e) ? "mesiace" : "mesiacov") : s + "mesiacmi";
                    case "y":
                        return t || i ? "rok" : "rokom";
                    case "yy":
                        return t || i ? s + (n(e) ? "roky" : "rokov") : s + "rokmi"
                    }
                }
                e.defineLocale("sk", {
                    months: t,
                    monthsShort: a,
                    weekdays: "nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota".split("_"),
                    weekdaysShort: "ne_po_ut_st_št_pi_so".split("_"),
                    weekdaysMin: "ne_po_ut_st_št_pi_so".split("_"),
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY H:mm",
                        LLLL: "dddd D. MMMM YYYY H:mm"
                    },
                    calendar: {
                        sameDay: "[dnes o] LT",
                        nextDay: "[zajtra o] LT",
                        nextWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[v nedeľu o] LT";
                            case 1:
                            case 2:
                                return "[v] dddd [o] LT";
                            case 3:
                                return "[v stredu o] LT";
                            case 4:
                                return "[vo štvrtok o] LT";
                            case 5:
                                return "[v piatok o] LT";
                            case 6:
                                return "[v sobotu o] LT"
                            }
                        },
                        lastDay: "[včera o] LT",
                        lastWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[minulú nedeľu o] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[minulý] dddd [o] LT";
                            case 3:
                                return "[minulú stredu o] LT";
                            case 6:
                                return "[minulú sobotu o] LT"
                            }
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "za %s",
                        past: "pred %s",
                        s: i,
                        ss: i,
                        m: i,
                        mm: i,
                        h: i,
                        hh: i,
                        d: i,
                        dd: i,
                        M: i,
                        MM: i,
                        y: i,
                        yy: i
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        46637: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a, n) {
                    var i = e + " ";
                    switch (a) {
                    case "s":
                        return t || n ? "nekaj sekund" : "nekaj sekundami";
                    case "ss":
                        return i += 1 === e ? t ? "sekundo" : "sekundi" : 2 === e ? t || n ? "sekundi" : "sekundah" : e < 5 ? t || n ? "sekunde" : "sekundah" : "sekund";
                    case "m":
                        return t ? "ena minuta" : "eno minuto";
                    case "mm":
                        return i += 1 === e ? t ? "minuta" : "minuto" : 2 === e ? t || n ? "minuti" : "minutama" : e < 5 ? t || n ? "minute" : "minutami" : t || n ? "minut" : "minutami";
                    case "h":
                        return t ? "ena ura" : "eno uro";
                    case "hh":
                        return i += 1 === e ? t ? "ura" : "uro" : 2 === e ? t || n ? "uri" : "urama" : e < 5 ? t || n ? "ure" : "urami" : t || n ? "ur" : "urami";
                    case "d":
                        return t || n ? "en dan" : "enim dnem";
                    case "dd":
                        return i += 1 === e ? t || n ? "dan" : "dnem" : 2 === e ? t || n ? "dni" : "dnevoma" : t || n ? "dni" : "dnevi";
                    case "M":
                        return t || n ? "en mesec" : "enim mesecem";
                    case "MM":
                        return i += 1 === e ? t || n ? "mesec" : "mesecem" : 2 === e ? t || n ? "meseca" : "mesecema" : e < 5 ? t || n ? "mesece" : "meseci" : t || n ? "mesecev" : "meseci";
                    case "y":
                        return t || n ? "eno leto" : "enim letom";
                    case "yy":
                        return i += 1 === e ? t || n ? "leto" : "letom" : 2 === e ? t || n ? "leti" : "letoma" : e < 5 ? t || n ? "leta" : "leti" : t || n ? "let" : "leti"
                    }
                }
                e.defineLocale("sl", {
                    months: "januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split("_"),
                    monthsShort: "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota".split("_"),
                    weekdaysShort: "ned._pon._tor._sre._čet._pet._sob.".split("_"),
                    weekdaysMin: "ne_po_to_sr_če_pe_so".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD. MM. YYYY",
                        LL: "D. MMMM YYYY",
                        LLL: "D. MMMM YYYY H:mm",
                        LLLL: "dddd, D. MMMM YYYY H:mm"
                    },
                    calendar: {
                        sameDay: "[danes ob] LT",
                        nextDay: "[jutri ob] LT",
                        nextWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[v] [nedeljo] [ob] LT";
                            case 3:
                                return "[v] [sredo] [ob] LT";
                            case 6:
                                return "[v] [soboto] [ob] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[v] dddd [ob] LT"
                            }
                        },
                        lastDay: "[včeraj ob] LT",
                        lastWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[prejšnjo] [nedeljo] [ob] LT";
                            case 3:
                                return "[prejšnjo] [sredo] [ob] LT";
                            case 6:
                                return "[prejšnjo] [soboto] [ob] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[prejšnji] dddd [ob] LT"
                            }
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "čez %s",
                        past: "pred %s",
                        s: t,
                        ss: t,
                        m: t,
                        mm: t,
                        h: t,
                        hh: t,
                        d: t,
                        dd: t,
                        M: t,
                        MM: t,
                        y: t,
                        yy: t
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        86794: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("sq", {
                    months: "Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor".split("_"),
                    monthsShort: "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj".split("_"),
                    weekdays: "E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë".split("_"),
                    weekdaysShort: "Die_Hën_Mar_Mër_Enj_Pre_Sht".split("_"),
                    weekdaysMin: "D_H_Ma_Më_E_P_Sh".split("_"),
                    weekdaysParseExact: !0,
                    meridiemParse: /PD|MD/,
                    isPM: function(e) {
                        return "M" === e.charAt(0)
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "PD" : "MD"
                    },
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Sot në] LT",
                        nextDay: "[Nesër në] LT",
                        nextWeek: "dddd [në] LT",
                        lastDay: "[Dje në] LT",
                        lastWeek: "dddd [e kaluar në] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "në %s",
                        past: "%s më parë",
                        s: "disa sekonda",
                        ss: "%d sekonda",
                        m: "një minutë",
                        mm: "%d minuta",
                        h: "një orë",
                        hh: "%d orë",
                        d: "një ditë",
                        dd: "%d ditë",
                        M: "një muaj",
                        MM: "%d muaj",
                        y: "një vit",
                        yy: "%d vite"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        3322: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    words: {
                        ss: ["секунда", "секунде", "секунди"],
                        m: ["један минут", "једног минута"],
                        mm: ["минут", "минута", "минута"],
                        h: ["један сат", "једног сата"],
                        hh: ["сат", "сата", "сати"],
                        d: ["један дан", "једног дана"],
                        dd: ["дан", "дана", "дана"],
                        M: ["један месец", "једног месеца"],
                        MM: ["месец", "месеца", "месеци"],
                        y: ["једну годину", "једне године"],
                        yy: ["годину", "године", "година"]
                    },
                    correctGrammaticalCase: function(e, t) {
                        return e % 10 >= 1 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? e % 10 == 1 ? t[0] : t[1] : t[2]
                    },
                    translate: function(e, a, n, i) {
                        var s, r = t.words[n];
                        return 1 === n.length ? "y" === n && a ? "једна година" : i || a ? r[0] : r[1] : (s = t.correctGrammaticalCase(e, r),
                        "yy" === n && a && "годину" === s ? e + " година" : e + " " + s)
                    }
                };
                e.defineLocale("sr-cyrl", {
                    months: "јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар".split("_"),
                    monthsShort: "јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "недеља_понедељак_уторак_среда_четвртак_петак_субота".split("_"),
                    weekdaysShort: "нед._пон._уто._сре._чет._пет._суб.".split("_"),
                    weekdaysMin: "не_по_ут_ср_че_пе_су".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "D. M. YYYY.",
                        LL: "D. MMMM YYYY.",
                        LLL: "D. MMMM YYYY. H:mm",
                        LLLL: "dddd, D. MMMM YYYY. H:mm"
                    },
                    calendar: {
                        sameDay: "[данас у] LT",
                        nextDay: "[сутра у] LT",
                        nextWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[у] [недељу] [у] LT";
                            case 3:
                                return "[у] [среду] [у] LT";
                            case 6:
                                return "[у] [суботу] [у] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[у] dddd [у] LT"
                            }
                        },
                        lastDay: "[јуче у] LT",
                        lastWeek: function() {
                            return ["[прошле] [недеље] [у] LT", "[прошлог] [понедељка] [у] LT", "[прошлог] [уторка] [у] LT", "[прошле] [среде] [у] LT", "[прошлог] [четвртка] [у] LT", "[прошлог] [петка] [у] LT", "[прошле] [суботе] [у] LT"][this.day()]
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "за %s",
                        past: "пре %s",
                        s: "неколико секунди",
                        ss: t.translate,
                        m: t.translate,
                        mm: t.translate,
                        h: t.translate,
                        hh: t.translate,
                        d: t.translate,
                        dd: t.translate,
                        M: t.translate,
                        MM: t.translate,
                        y: t.translate,
                        yy: t.translate
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        45719: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    words: {
                        ss: ["sekunda", "sekunde", "sekundi"],
                        m: ["jedan minut", "jednog minuta"],
                        mm: ["minut", "minuta", "minuta"],
                        h: ["jedan sat", "jednog sata"],
                        hh: ["sat", "sata", "sati"],
                        d: ["jedan dan", "jednog dana"],
                        dd: ["dan", "dana", "dana"],
                        M: ["jedan mesec", "jednog meseca"],
                        MM: ["mesec", "meseca", "meseci"],
                        y: ["jednu godinu", "jedne godine"],
                        yy: ["godinu", "godine", "godina"]
                    },
                    correctGrammaticalCase: function(e, t) {
                        return e % 10 >= 1 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? e % 10 == 1 ? t[0] : t[1] : t[2]
                    },
                    translate: function(e, a, n, i) {
                        var s, r = t.words[n];
                        return 1 === n.length ? "y" === n && a ? "jedna godina" : i || a ? r[0] : r[1] : (s = t.correctGrammaticalCase(e, r),
                        "yy" === n && a && "godinu" === s ? e + " godina" : e + " " + s)
                    }
                };
                e.defineLocale("sr", {
                    months: "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),
                    monthsShort: "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota".split("_"),
                    weekdaysShort: "ned._pon._uto._sre._čet._pet._sub.".split("_"),
                    weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "D. M. YYYY.",
                        LL: "D. MMMM YYYY.",
                        LLL: "D. MMMM YYYY. H:mm",
                        LLLL: "dddd, D. MMMM YYYY. H:mm"
                    },
                    calendar: {
                        sameDay: "[danas u] LT",
                        nextDay: "[sutra u] LT",
                        nextWeek: function() {
                            switch (this.day()) {
                            case 0:
                                return "[u] [nedelju] [u] LT";
                            case 3:
                                return "[u] [sredu] [u] LT";
                            case 6:
                                return "[u] [subotu] [u] LT";
                            case 1:
                            case 2:
                            case 4:
                            case 5:
                                return "[u] dddd [u] LT"
                            }
                        },
                        lastDay: "[juče u] LT",
                        lastWeek: function() {
                            return ["[prošle] [nedelje] [u] LT", "[prošlog] [ponedeljka] [u] LT", "[prošlog] [utorka] [u] LT", "[prošle] [srede] [u] LT", "[prošlog] [četvrtka] [u] LT", "[prošlog] [petka] [u] LT", "[prošle] [subote] [u] LT"][this.day()]
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "za %s",
                        past: "pre %s",
                        s: "nekoliko sekundi",
                        ss: t.translate,
                        m: t.translate,
                        mm: t.translate,
                        h: t.translate,
                        hh: t.translate,
                        d: t.translate,
                        dd: t.translate,
                        M: t.translate,
                        MM: t.translate,
                        y: t.translate,
                        yy: t.translate
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        56e3: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("ss", {
                    months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split("_"),
                    monthsShort: "Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo".split("_"),
                    weekdays: "Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo".split("_"),
                    weekdaysShort: "Lis_Umb_Lsb_Les_Lsi_Lsh_Umg".split("_"),
                    weekdaysMin: "Li_Us_Lb_Lt_Ls_Lh_Ug".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "h:mm A",
                        LTS: "h:mm:ss A",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY h:mm A",
                        LLLL: "dddd, D MMMM YYYY h:mm A"
                    },
                    calendar: {
                        sameDay: "[Namuhla nga] LT",
                        nextDay: "[Kusasa nga] LT",
                        nextWeek: "dddd [nga] LT",
                        lastDay: "[Itolo nga] LT",
                        lastWeek: "dddd [leliphelile] [nga] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "nga %s",
                        past: "wenteka nga %s",
                        s: "emizuzwana lomcane",
                        ss: "%d mzuzwana",
                        m: "umzuzu",
                        mm: "%d emizuzu",
                        h: "lihora",
                        hh: "%d emahora",
                        d: "lilanga",
                        dd: "%d emalanga",
                        M: "inyanga",
                        MM: "%d tinyanga",
                        y: "umnyaka",
                        yy: "%d iminyaka"
                    },
                    meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
                    meridiem: function(e, t, a) {
                        return e < 11 ? "ekuseni" : e < 15 ? "emini" : e < 19 ? "entsambama" : "ebusuku"
                    },
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "ekuseni" === t ? e : "emini" === t ? e >= 11 ? e : e + 12 : "entsambama" === t || "ebusuku" === t ? 0 === e ? 0 : e + 12 : void 0
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}/,
                    ordinal: "%d",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        41011: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("sv", {
                    months: "januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split("_"),
                    monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
                    weekdays: "söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag".split("_"),
                    weekdaysShort: "sön_mån_tis_ons_tor_fre_lör".split("_"),
                    weekdaysMin: "sö_må_ti_on_to_fr_lö".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "YYYY-MM-DD",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY [kl.] HH:mm",
                        LLLL: "dddd D MMMM YYYY [kl.] HH:mm",
                        lll: "D MMM YYYY HH:mm",
                        llll: "ddd D MMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Idag] LT",
                        nextDay: "[Imorgon] LT",
                        lastDay: "[Igår] LT",
                        nextWeek: "[På] dddd LT",
                        lastWeek: "[I] dddd[s] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "om %s",
                        past: "för %s sedan",
                        s: "några sekunder",
                        ss: "%d sekunder",
                        m: "en minut",
                        mm: "%d minuter",
                        h: "en timme",
                        hh: "%d timmar",
                        d: "en dag",
                        dd: "%d dagar",
                        M: "en månad",
                        MM: "%d månader",
                        y: "ett år",
                        yy: "%d år"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(\:e|\:a)/,
                    ordinal: function(e) {
                        var t = e % 10;
                        return e + (1 == ~~(e % 100 / 10) ? ":e" : 1 === t || 2 === t ? ":a" : ":e")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        40748: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("sw", {
                    months: "Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba".split("_"),
                    monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des".split("_"),
                    weekdays: "Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi".split("_"),
                    weekdaysShort: "Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos".split("_"),
                    weekdaysMin: "J2_J3_J4_J5_Al_Ij_J1".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "hh:mm A",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[leo saa] LT",
                        nextDay: "[kesho saa] LT",
                        nextWeek: "[wiki ijayo] dddd [saat] LT",
                        lastDay: "[jana] LT",
                        lastWeek: "[wiki iliyopita] dddd [saat] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s baadaye",
                        past: "tokea %s",
                        s: "hivi punde",
                        ss: "sekunde %d",
                        m: "dakika moja",
                        mm: "dakika %d",
                        h: "saa limoja",
                        hh: "masaa %d",
                        d: "siku moja",
                        dd: "siku %d",
                        M: "mwezi mmoja",
                        MM: "miezi %d",
                        y: "mwaka mmoja",
                        yy: "miaka %d"
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        11025: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "௧",
                    2: "௨",
                    3: "௩",
                    4: "௪",
                    5: "௫",
                    6: "௬",
                    7: "௭",
                    8: "௮",
                    9: "௯",
                    0: "௦"
                }
                  , a = {
                    "௧": "1",
                    "௨": "2",
                    "௩": "3",
                    "௪": "4",
                    "௫": "5",
                    "௬": "6",
                    "௭": "7",
                    "௮": "8",
                    "௯": "9",
                    "௦": "0"
                };
                e.defineLocale("ta", {
                    months: "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),
                    monthsShort: "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),
                    weekdays: "ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை".split("_"),
                    weekdaysShort: "ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி".split("_"),
                    weekdaysMin: "ஞா_தி_செ_பு_வி_வெ_ச".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY, HH:mm",
                        LLLL: "dddd, D MMMM YYYY, HH:mm"
                    },
                    calendar: {
                        sameDay: "[இன்று] LT",
                        nextDay: "[நாளை] LT",
                        nextWeek: "dddd, LT",
                        lastDay: "[நேற்று] LT",
                        lastWeek: "[கடந்த வாரம்] dddd, LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s இல்",
                        past: "%s முன்",
                        s: "ஒரு சில விநாடிகள்",
                        ss: "%d விநாடிகள்",
                        m: "ஒரு நிமிடம்",
                        mm: "%d நிமிடங்கள்",
                        h: "ஒரு மணி நேரம்",
                        hh: "%d மணி நேரம்",
                        d: "ஒரு நாள்",
                        dd: "%d நாட்கள்",
                        M: "ஒரு மாதம்",
                        MM: "%d மாதங்கள்",
                        y: "ஒரு வருடம்",
                        yy: "%d ஆண்டுகள்"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}வது/,
                    ordinal: function(e) {
                        return e + "வது"
                    },
                    preparse: function(e) {
                        return e.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, (function(e) {
                            return a[e]
                        }
                        ))
                    },
                    postformat: function(e) {
                        return e.replace(/\d/g, (function(e) {
                            return t[e]
                        }
                        ))
                    },
                    meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
                    meridiem: function(e, t, a) {
                        return e < 2 ? " யாமம்" : e < 6 ? " வைகறை" : e < 10 ? " காலை" : e < 14 ? " நண்பகல்" : e < 18 ? " எற்பாடு" : e < 22 ? " மாலை" : " யாமம்"
                    },
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "யாமம்" === t ? e < 2 ? e : e + 12 : "வைகறை" === t || "காலை" === t || "நண்பகல்" === t && e >= 10 ? e : e + 12
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        11885: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("te", {
                    months: "జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్".split("_"),
                    monthsShort: "జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం".split("_"),
                    weekdaysShort: "ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని".split("_"),
                    weekdaysMin: "ఆ_సో_మం_బు_గు_శు_శ".split("_"),
                    longDateFormat: {
                        LT: "A h:mm",
                        LTS: "A h:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY, A h:mm",
                        LLLL: "dddd, D MMMM YYYY, A h:mm"
                    },
                    calendar: {
                        sameDay: "[నేడు] LT",
                        nextDay: "[రేపు] LT",
                        nextWeek: "dddd, LT",
                        lastDay: "[నిన్న] LT",
                        lastWeek: "[గత] dddd, LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s లో",
                        past: "%s క్రితం",
                        s: "కొన్ని క్షణాలు",
                        ss: "%d సెకన్లు",
                        m: "ఒక నిమిషం",
                        mm: "%d నిమిషాలు",
                        h: "ఒక గంట",
                        hh: "%d గంటలు",
                        d: "ఒక రోజు",
                        dd: "%d రోజులు",
                        M: "ఒక నెల",
                        MM: "%d నెలలు",
                        y: "ఒక సంవత్సరం",
                        yy: "%d సంవత్సరాలు"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}వ/,
                    ordinal: "%dవ",
                    meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "రాత్రి" === t ? e < 4 ? e : e + 12 : "ఉదయం" === t ? e : "మధ్యాహ్నం" === t ? e >= 10 ? e : e + 12 : "సాయంత్రం" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "రాత్రి" : e < 10 ? "ఉదయం" : e < 17 ? "మధ్యాహ్నం" : e < 20 ? "సాయంత్రం" : "రాత్రి"
                    },
                    week: {
                        dow: 0,
                        doy: 6
                    }
                })
            }(a(95093))
        },
        28861: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("tet", {
                    months: "Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru".split("_"),
                    monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),
                    weekdays: "Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu".split("_"),
                    weekdaysShort: "Dom_Seg_Ters_Kua_Kint_Sest_Sab".split("_"),
                    weekdaysMin: "Do_Seg_Te_Ku_Ki_Ses_Sa".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Ohin iha] LT",
                        nextDay: "[Aban iha] LT",
                        nextWeek: "dddd [iha] LT",
                        lastDay: "[Horiseik iha] LT",
                        lastWeek: "dddd [semana kotuk] [iha] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "iha %s",
                        past: "%s liuba",
                        s: "segundu balun",
                        ss: "segundu %d",
                        m: "minutu ida",
                        mm: "minutu %d",
                        h: "oras ida",
                        hh: "oras %d",
                        d: "loron ida",
                        dd: "loron %d",
                        M: "fulan ida",
                        MM: "fulan %d",
                        y: "tinan ida",
                        yy: "tinan %d"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
                    ordinal: function(e) {
                        var t = e % 10;
                        return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        86571: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    0: "-ум",
                    1: "-ум",
                    2: "-юм",
                    3: "-юм",
                    4: "-ум",
                    5: "-ум",
                    6: "-ум",
                    7: "-ум",
                    8: "-ум",
                    9: "-ум",
                    10: "-ум",
                    12: "-ум",
                    13: "-ум",
                    20: "-ум",
                    30: "-юм",
                    40: "-ум",
                    50: "-ум",
                    60: "-ум",
                    70: "-ум",
                    80: "-ум",
                    90: "-ум",
                    100: "-ум"
                };
                e.defineLocale("tg", {
                    months: {
                        format: "январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри".split("_"),
                        standalone: "январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split("_")
                    },
                    monthsShort: "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),
                    weekdays: "якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе".split("_"),
                    weekdaysShort: "яшб_дшб_сшб_чшб_пшб_ҷум_шнб".split("_"),
                    weekdaysMin: "яш_дш_сш_чш_пш_ҷм_шб".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Имрӯз соати] LT",
                        nextDay: "[Фардо соати] LT",
                        lastDay: "[Дирӯз соати] LT",
                        nextWeek: "dddd[и] [ҳафтаи оянда соати] LT",
                        lastWeek: "dddd[и] [ҳафтаи гузашта соати] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "баъди %s",
                        past: "%s пеш",
                        s: "якчанд сония",
                        m: "як дақиқа",
                        mm: "%d дақиқа",
                        h: "як соат",
                        hh: "%d соат",
                        d: "як рӯз",
                        dd: "%d рӯз",
                        M: "як моҳ",
                        MM: "%d моҳ",
                        y: "як сол",
                        yy: "%d сол"
                    },
                    meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "шаб" === t ? e < 4 ? e : e + 12 : "субҳ" === t ? e : "рӯз" === t ? e >= 11 ? e : e + 12 : "бегоҳ" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "шаб" : e < 11 ? "субҳ" : e < 16 ? "рӯз" : e < 19 ? "бегоҳ" : "шаб"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
                    ordinal: function(e) {
                        var a = e % 10
                          , n = e >= 100 ? 100 : null;
                        return e + (t[e] || t[a] || t[n])
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        55802: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("th", {
                    months: "มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม".split("_"),
                    monthsShort: "ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.".split("_"),
                    monthsParseExact: !0,
                    weekdays: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์".split("_"),
                    weekdaysShort: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์".split("_"),
                    weekdaysMin: "อา._จ._อ._พ._พฤ._ศ._ส.".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "H:mm",
                        LTS: "H:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY เวลา H:mm",
                        LLLL: "วันddddที่ D MMMM YYYY เวลา H:mm"
                    },
                    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
                    isPM: function(e) {
                        return "หลังเที่ยง" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "ก่อนเที่ยง" : "หลังเที่ยง"
                    },
                    calendar: {
                        sameDay: "[วันนี้ เวลา] LT",
                        nextDay: "[พรุ่งนี้ เวลา] LT",
                        nextWeek: "dddd[หน้า เวลา] LT",
                        lastDay: "[เมื่อวานนี้ เวลา] LT",
                        lastWeek: "[วัน]dddd[ที่แล้ว เวลา] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "อีก %s",
                        past: "%sที่แล้ว",
                        s: "ไม่กี่วินาที",
                        ss: "%d วินาที",
                        m: "1 นาที",
                        mm: "%d นาที",
                        h: "1 ชั่วโมง",
                        hh: "%d ชั่วโมง",
                        d: "1 วัน",
                        dd: "%d วัน",
                        w: "1 สัปดาห์",
                        ww: "%d สัปดาห์",
                        M: "1 เดือน",
                        MM: "%d เดือน",
                        y: "1 ปี",
                        yy: "%d ปี"
                    }
                })
            }(a(95093))
        },
        59527: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "'inji",
                    5: "'inji",
                    8: "'inji",
                    70: "'inji",
                    80: "'inji",
                    2: "'nji",
                    7: "'nji",
                    20: "'nji",
                    50: "'nji",
                    3: "'ünji",
                    4: "'ünji",
                    100: "'ünji",
                    6: "'njy",
                    9: "'unjy",
                    10: "'unjy",
                    30: "'unjy",
                    60: "'ynjy",
                    90: "'ynjy"
                };
                e.defineLocale("tk", {
                    months: "Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr".split("_"),
                    monthsShort: "Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek".split("_"),
                    weekdays: "Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe".split("_"),
                    weekdaysShort: "Ýek_Duş_Siş_Çar_Pen_Ann_Şen".split("_"),
                    weekdaysMin: "Ýk_Dş_Sş_Çr_Pn_An_Şn".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[bugün sagat] LT",
                        nextDay: "[ertir sagat] LT",
                        nextWeek: "[indiki] dddd [sagat] LT",
                        lastDay: "[düýn] LT",
                        lastWeek: "[geçen] dddd [sagat] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s soň",
                        past: "%s öň",
                        s: "birnäçe sekunt",
                        m: "bir minut",
                        mm: "%d minut",
                        h: "bir sagat",
                        hh: "%d sagat",
                        d: "bir gün",
                        dd: "%d gün",
                        M: "bir aý",
                        MM: "%d aý",
                        y: "bir ýyl",
                        yy: "%d ýyl"
                    },
                    ordinal: function(e, a) {
                        switch (a) {
                        case "d":
                        case "D":
                        case "Do":
                        case "DD":
                            return e;
                        default:
                            if (0 === e)
                                return e + "'unjy";
                            var n = e % 10
                              , i = e % 100 - n
                              , s = e >= 100 ? 100 : null;
                            return e + (t[n] || t[i] || t[s])
                        }
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        29231: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("tl-ph", {
                    months: "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),
                    monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),
                    weekdays: "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
                    weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
                    weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "MM/D/YYYY",
                        LL: "MMMM D, YYYY",
                        LLL: "MMMM D, YYYY HH:mm",
                        LLLL: "dddd, MMMM DD, YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "LT [ngayong araw]",
                        nextDay: "[Bukas ng] LT",
                        nextWeek: "LT [sa susunod na] dddd",
                        lastDay: "LT [kahapon]",
                        lastWeek: "LT [noong nakaraang] dddd",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "sa loob ng %s",
                        past: "%s ang nakalipas",
                        s: "ilang segundo",
                        ss: "%d segundo",
                        m: "isang minuto",
                        mm: "%d minuto",
                        h: "isang oras",
                        hh: "%d oras",
                        d: "isang araw",
                        dd: "%d araw",
                        M: "isang buwan",
                        MM: "%d buwan",
                        y: "isang taon",
                        yy: "%d taon"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}/,
                    ordinal: function(e) {
                        return e
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        31052: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = "pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut".split("_");
                function a(e) {
                    var t = e;
                    return t = -1 !== e.indexOf("jaj") ? t.slice(0, -3) + "leS" : -1 !== e.indexOf("jar") ? t.slice(0, -3) + "waQ" : -1 !== e.indexOf("DIS") ? t.slice(0, -3) + "nem" : t + " pIq"
                }
                function n(e) {
                    var t = e;
                    return t = -1 !== e.indexOf("jaj") ? t.slice(0, -3) + "Hu’" : -1 !== e.indexOf("jar") ? t.slice(0, -3) + "wen" : -1 !== e.indexOf("DIS") ? t.slice(0, -3) + "ben" : t + " ret"
                }
                function i(e, t, a, n) {
                    var i = s(e);
                    switch (a) {
                    case "ss":
                        return i + " lup";
                    case "mm":
                        return i + " tup";
                    case "hh":
                        return i + " rep";
                    case "dd":
                        return i + " jaj";
                    case "MM":
                        return i + " jar";
                    case "yy":
                        return i + " DIS"
                    }
                }
                function s(e) {
                    var a = Math.floor(e % 1e3 / 100)
                      , n = Math.floor(e % 100 / 10)
                      , i = e % 10
                      , s = "";
                    return a > 0 && (s += t[a] + "vatlh"),
                    n > 0 && (s += ("" !== s ? " " : "") + t[n] + "maH"),
                    i > 0 && (s += ("" !== s ? " " : "") + t[i]),
                    "" === s ? "pagh" : s
                }
                e.defineLocale("tlh", {
                    months: "tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’".split("_"),
                    monthsShort: "jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’".split("_"),
                    monthsParseExact: !0,
                    weekdays: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
                    weekdaysShort: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
                    weekdaysMin: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[DaHjaj] LT",
                        nextDay: "[wa’leS] LT",
                        nextWeek: "LLL",
                        lastDay: "[wa’Hu’] LT",
                        lastWeek: "LLL",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: a,
                        past: n,
                        s: "puS lup",
                        ss: i,
                        m: "wa’ tup",
                        mm: i,
                        h: "wa’ rep",
                        hh: i,
                        d: "wa’ jaj",
                        dd: i,
                        M: "wa’ jar",
                        MM: i,
                        y: "wa’ DIS",
                        yy: i
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        85096: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = {
                    1: "'inci",
                    5: "'inci",
                    8: "'inci",
                    70: "'inci",
                    80: "'inci",
                    2: "'nci",
                    7: "'nci",
                    20: "'nci",
                    50: "'nci",
                    3: "'üncü",
                    4: "'üncü",
                    100: "'üncü",
                    6: "'ncı",
                    9: "'uncu",
                    10: "'uncu",
                    30: "'uncu",
                    60: "'ıncı",
                    90: "'ıncı"
                };
                e.defineLocale("tr", {
                    months: "Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık".split("_"),
                    monthsShort: "Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara".split("_"),
                    weekdays: "Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi".split("_"),
                    weekdaysShort: "Paz_Pzt_Sal_Çar_Per_Cum_Cmt".split("_"),
                    weekdaysMin: "Pz_Pt_Sa_Ça_Pe_Cu_Ct".split("_"),
                    meridiem: function(e, t, a) {
                        return e < 12 ? a ? "öö" : "ÖÖ" : a ? "ös" : "ÖS"
                    },
                    meridiemParse: /öö|ÖÖ|ös|ÖS/,
                    isPM: function(e) {
                        return "ös" === e || "ÖS" === e
                    },
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[bugün saat] LT",
                        nextDay: "[yarın saat] LT",
                        nextWeek: "[gelecek] dddd [saat] LT",
                        lastDay: "[dün] LT",
                        lastWeek: "[geçen] dddd [saat] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s sonra",
                        past: "%s önce",
                        s: "birkaç saniye",
                        ss: "%d saniye",
                        m: "bir dakika",
                        mm: "%d dakika",
                        h: "bir saat",
                        hh: "%d saat",
                        d: "bir gün",
                        dd: "%d gün",
                        w: "bir hafta",
                        ww: "%d hafta",
                        M: "bir ay",
                        MM: "%d ay",
                        y: "bir yıl",
                        yy: "%d yıl"
                    },
                    ordinal: function(e, a) {
                        switch (a) {
                        case "d":
                        case "D":
                        case "Do":
                        case "DD":
                            return e;
                        default:
                            if (0 === e)
                                return e + "'ıncı";
                            var n = e % 10
                              , i = e % 100 - n
                              , s = e >= 100 ? 100 : null;
                            return e + (t[n] || t[i] || t[s])
                        }
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        79846: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t, a, n) {
                    var i = {
                        s: ["viensas secunds", "'iensas secunds"],
                        ss: [e + " secunds", e + " secunds"],
                        m: ["'n míut", "'iens míut"],
                        mm: [e + " míuts", e + " míuts"],
                        h: ["'n þora", "'iensa þora"],
                        hh: [e + " þoras", e + " þoras"],
                        d: ["'n ziua", "'iensa ziua"],
                        dd: [e + " ziuas", e + " ziuas"],
                        M: ["'n mes", "'iens mes"],
                        MM: [e + " mesen", e + " mesen"],
                        y: ["'n ar", "'iens ar"],
                        yy: [e + " ars", e + " ars"]
                    };
                    return n || t ? i[a][0] : i[a][1]
                }
                e.defineLocale("tzl", {
                    months: "Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar".split("_"),
                    monthsShort: "Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec".split("_"),
                    weekdays: "Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi".split("_"),
                    weekdaysShort: "Súl_Lún_Mai_Már_Xhú_Vié_Sát".split("_"),
                    weekdaysMin: "Sú_Lú_Ma_Má_Xh_Vi_Sá".split("_"),
                    longDateFormat: {
                        LT: "HH.mm",
                        LTS: "HH.mm.ss",
                        L: "DD.MM.YYYY",
                        LL: "D. MMMM [dallas] YYYY",
                        LLL: "D. MMMM [dallas] YYYY HH.mm",
                        LLLL: "dddd, [li] D. MMMM [dallas] YYYY HH.mm"
                    },
                    meridiemParse: /d\'o|d\'a/i,
                    isPM: function(e) {
                        return "d'o" === e.toLowerCase()
                    },
                    meridiem: function(e, t, a) {
                        return e > 11 ? a ? "d'o" : "D'O" : a ? "d'a" : "D'A"
                    },
                    calendar: {
                        sameDay: "[oxhi à] LT",
                        nextDay: "[demà à] LT",
                        nextWeek: "dddd [à] LT",
                        lastDay: "[ieiri à] LT",
                        lastWeek: "[sür el] dddd [lasteu à] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "osprei %s",
                        past: "ja%s",
                        s: t,
                        ss: t,
                        m: t,
                        mm: t,
                        h: t,
                        hh: t,
                        d: t,
                        dd: t,
                        M: t,
                        MM: t,
                        y: t,
                        yy: t
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}\./,
                    ordinal: "%d.",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        97711: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("tzm-latn", {
                    months: "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),
                    monthsShort: "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),
                    weekdays: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
                    weekdaysShort: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
                    weekdaysMin: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[asdkh g] LT",
                        nextDay: "[aska g] LT",
                        nextWeek: "dddd [g] LT",
                        lastDay: "[assant g] LT",
                        lastWeek: "dddd [g] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "dadkh s yan %s",
                        past: "yan %s",
                        s: "imik",
                        ss: "%d imik",
                        m: "minuḍ",
                        mm: "%d minuḍ",
                        h: "saɛa",
                        hh: "%d tassaɛin",
                        d: "ass",
                        dd: "%d ossan",
                        M: "ayowr",
                        MM: "%d iyyirn",
                        y: "asgas",
                        yy: "%d isgasn"
                    },
                    week: {
                        dow: 6,
                        doy: 12
                    }
                })
            }(a(95093))
        },
        81765: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("tzm", {
                    months: "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),
                    monthsShort: "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),
                    weekdays: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
                    weekdaysShort: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
                    weekdaysMin: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[ⴰⵙⴷⵅ ⴴ] LT",
                        nextDay: "[ⴰⵙⴽⴰ ⴴ] LT",
                        nextWeek: "dddd [ⴴ] LT",
                        lastDay: "[ⴰⵚⴰⵏⵜ ⴴ] LT",
                        lastWeek: "dddd [ⴴ] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s",
                        past: "ⵢⴰⵏ %s",
                        s: "ⵉⵎⵉⴽ",
                        ss: "%d ⵉⵎⵉⴽ",
                        m: "ⵎⵉⵏⵓⴺ",
                        mm: "%d ⵎⵉⵏⵓⴺ",
                        h: "ⵙⴰⵄⴰ",
                        hh: "%d ⵜⴰⵙⵙⴰⵄⵉⵏ",
                        d: "ⴰⵙⵙ",
                        dd: "%d oⵙⵙⴰⵏ",
                        M: "ⴰⵢoⵓⵔ",
                        MM: "%d ⵉⵢⵢⵉⵔⵏ",
                        y: "ⴰⵙⴳⴰⵙ",
                        yy: "%d ⵉⵙⴳⴰⵙⵏ"
                    },
                    week: {
                        dow: 6,
                        doy: 12
                    }
                })
            }(a(95093))
        },
        48414: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("ug-cn", {
                    months: "يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر".split("_"),
                    monthsShort: "يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر".split("_"),
                    weekdays: "يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە".split("_"),
                    weekdaysShort: "يە_دۈ_سە_چا_پە_جۈ_شە".split("_"),
                    weekdaysMin: "يە_دۈ_سە_چا_پە_جۈ_شە".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "YYYY-MM-DD",
                        LL: "YYYY-يىلىM-ئاينىڭD-كۈنى",
                        LLL: "YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm",
                        LLLL: "dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm"
                    },
                    meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "يېرىم كېچە" === t || "سەھەر" === t || "چۈشتىن بۇرۇن" === t ? e : "چۈشتىن كېيىن" === t || "كەچ" === t ? e + 12 : e >= 11 ? e : e + 12
                    },
                    meridiem: function(e, t, a) {
                        var n = 100 * e + t;
                        return n < 600 ? "يېرىم كېچە" : n < 900 ? "سەھەر" : n < 1130 ? "چۈشتىن بۇرۇن" : n < 1230 ? "چۈش" : n < 1800 ? "چۈشتىن كېيىن" : "كەچ"
                    },
                    calendar: {
                        sameDay: "[بۈگۈن سائەت] LT",
                        nextDay: "[ئەتە سائەت] LT",
                        nextWeek: "[كېلەركى] dddd [سائەت] LT",
                        lastDay: "[تۆنۈگۈن] LT",
                        lastWeek: "[ئالدىنقى] dddd [سائەت] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s كېيىن",
                        past: "%s بۇرۇن",
                        s: "نەچچە سېكونت",
                        ss: "%d سېكونت",
                        m: "بىر مىنۇت",
                        mm: "%d مىنۇت",
                        h: "بىر سائەت",
                        hh: "%d سائەت",
                        d: "بىر كۈن",
                        dd: "%d كۈن",
                        M: "بىر ئاي",
                        MM: "%d ئاي",
                        y: "بىر يىل",
                        yy: "%d يىل"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "d":
                        case "D":
                        case "DDD":
                            return e + "-كۈنى";
                        case "w":
                        case "W":
                            return e + "-ھەپتە";
                        default:
                            return e
                        }
                    },
                    preparse: function(e) {
                        return e.replace(/،/g, ",")
                    },
                    postformat: function(e) {
                        return e.replace(/,/g, "،")
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        16618: function(e, t, a) {
            !function(e) {
                "use strict";
                function t(e, t) {
                    var a = e.split("_");
                    return t % 10 == 1 && t % 100 != 11 ? a[0] : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? a[1] : a[2]
                }
                function a(e, a, n) {
                    return "m" === n ? a ? "хвилина" : "хвилину" : "h" === n ? a ? "година" : "годину" : e + " " + t({
                        ss: a ? "секунда_секунди_секунд" : "секунду_секунди_секунд",
                        mm: a ? "хвилина_хвилини_хвилин" : "хвилину_хвилини_хвилин",
                        hh: a ? "година_години_годин" : "годину_години_годин",
                        dd: "день_дні_днів",
                        MM: "місяць_місяці_місяців",
                        yy: "рік_роки_років"
                    }[n], +e)
                }
                function n(e, t) {
                    var a = {
                        nominative: "неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота".split("_"),
                        accusative: "неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу".split("_"),
                        genitive: "неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи".split("_")
                    };
                    return !0 === e ? a.nominative.slice(1, 7).concat(a.nominative.slice(0, 1)) : e ? a[/(\[[ВвУу]\]) ?dddd/.test(t) ? "accusative" : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(t) ? "genitive" : "nominative"][e.day()] : a.nominative
                }
                function i(e) {
                    return function() {
                        return e + "о" + (11 === this.hours() ? "б" : "") + "] LT"
                    }
                }
                e.defineLocale("uk", {
                    months: {
                        format: "січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня".split("_"),
                        standalone: "січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень".split("_")
                    },
                    monthsShort: "січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд".split("_"),
                    weekdays: n,
                    weekdaysShort: "нд_пн_вт_ср_чт_пт_сб".split("_"),
                    weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD.MM.YYYY",
                        LL: "D MMMM YYYY р.",
                        LLL: "D MMMM YYYY р., HH:mm",
                        LLLL: "dddd, D MMMM YYYY р., HH:mm"
                    },
                    calendar: {
                        sameDay: i("[Сьогодні "),
                        nextDay: i("[Завтра "),
                        lastDay: i("[Вчора "),
                        nextWeek: i("[У] dddd ["),
                        lastWeek: function() {
                            switch (this.day()) {
                            case 0:
                            case 3:
                            case 5:
                            case 6:
                                return i("[Минулої] dddd [").call(this);
                            case 1:
                            case 2:
                            case 4:
                                return i("[Минулого] dddd [").call(this)
                            }
                        },
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "за %s",
                        past: "%s тому",
                        s: "декілька секунд",
                        ss: a,
                        m: a,
                        mm: a,
                        h: "годину",
                        hh: a,
                        d: "день",
                        dd: a,
                        M: "місяць",
                        MM: a,
                        y: "рік",
                        yy: a
                    },
                    meridiemParse: /ночі|ранку|дня|вечора/,
                    isPM: function(e) {
                        return /^(дня|вечора)$/.test(e)
                    },
                    meridiem: function(e, t, a) {
                        return e < 4 ? "ночі" : e < 12 ? "ранку" : e < 17 ? "дня" : "вечора"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "M":
                        case "d":
                        case "DDD":
                        case "w":
                        case "W":
                            return e + "-й";
                        case "D":
                            return e + "-го";
                        default:
                            return e
                        }
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        57777: function(e, t, a) {
            !function(e) {
                "use strict";
                var t = ["جنوری", "فروری", "مارچ", "اپریل", "مئی", "جون", "جولائی", "اگست", "ستمبر", "اکتوبر", "نومبر", "دسمبر"]
                  , a = ["اتوار", "پیر", "منگل", "بدھ", "جمعرات", "جمعہ", "ہفتہ"];
                e.defineLocale("ur", {
                    months: t,
                    monthsShort: t,
                    weekdays: a,
                    weekdaysShort: a,
                    weekdaysMin: a,
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd، D MMMM YYYY HH:mm"
                    },
                    meridiemParse: /صبح|شام/,
                    isPM: function(e) {
                        return "شام" === e
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? "صبح" : "شام"
                    },
                    calendar: {
                        sameDay: "[آج بوقت] LT",
                        nextDay: "[کل بوقت] LT",
                        nextWeek: "dddd [بوقت] LT",
                        lastDay: "[گذشتہ روز بوقت] LT",
                        lastWeek: "[گذشتہ] dddd [بوقت] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s بعد",
                        past: "%s قبل",
                        s: "چند سیکنڈ",
                        ss: "%d سیکنڈ",
                        m: "ایک منٹ",
                        mm: "%d منٹ",
                        h: "ایک گھنٹہ",
                        hh: "%d گھنٹے",
                        d: "ایک دن",
                        dd: "%d دن",
                        M: "ایک ماہ",
                        MM: "%d ماہ",
                        y: "ایک سال",
                        yy: "%d سال"
                    },
                    preparse: function(e) {
                        return e.replace(/،/g, ",")
                    },
                    postformat: function(e) {
                        return e.replace(/,/g, "،")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        72475: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("uz-latn", {
                    months: "Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr".split("_"),
                    monthsShort: "Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek".split("_"),
                    weekdays: "Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba".split("_"),
                    weekdaysShort: "Yak_Dush_Sesh_Chor_Pay_Jum_Shan".split("_"),
                    weekdaysMin: "Ya_Du_Se_Cho_Pa_Ju_Sha".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "D MMMM YYYY, dddd HH:mm"
                    },
                    calendar: {
                        sameDay: "[Bugun soat] LT [da]",
                        nextDay: "[Ertaga] LT [da]",
                        nextWeek: "dddd [kuni soat] LT [da]",
                        lastDay: "[Kecha soat] LT [da]",
                        lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "Yaqin %s ichida",
                        past: "Bir necha %s oldin",
                        s: "soniya",
                        ss: "%d soniya",
                        m: "bir daqiqa",
                        mm: "%d daqiqa",
                        h: "bir soat",
                        hh: "%d soat",
                        d: "bir kun",
                        dd: "%d kun",
                        M: "bir oy",
                        MM: "%d oy",
                        y: "bir yil",
                        yy: "%d yil"
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        57609: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("uz", {
                    months: "январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split("_"),
                    monthsShort: "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),
                    weekdays: "Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба".split("_"),
                    weekdaysShort: "Якш_Душ_Сеш_Чор_Пай_Жум_Шан".split("_"),
                    weekdaysMin: "Як_Ду_Се_Чо_Па_Жу_Ша".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "D MMMM YYYY, dddd HH:mm"
                    },
                    calendar: {
                        sameDay: "[Бугун соат] LT [да]",
                        nextDay: "[Эртага] LT [да]",
                        nextWeek: "dddd [куни соат] LT [да]",
                        lastDay: "[Кеча соат] LT [да]",
                        lastWeek: "[Утган] dddd [куни соат] LT [да]",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "Якин %s ичида",
                        past: "Бир неча %s олдин",
                        s: "фурсат",
                        ss: "%d фурсат",
                        m: "бир дакика",
                        mm: "%d дакика",
                        h: "бир соат",
                        hh: "%d соат",
                        d: "бир кун",
                        dd: "%d кун",
                        M: "бир ой",
                        MM: "%d ой",
                        y: "бир йил",
                        yy: "%d йил"
                    },
                    week: {
                        dow: 1,
                        doy: 7
                    }
                })
            }(a(95093))
        },
        21135: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("vi", {
                    months: "tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12".split("_"),
                    monthsShort: "Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12".split("_"),
                    monthsParseExact: !0,
                    weekdays: "chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy".split("_"),
                    weekdaysShort: "CN_T2_T3_T4_T5_T6_T7".split("_"),
                    weekdaysMin: "CN_T2_T3_T4_T5_T6_T7".split("_"),
                    weekdaysParseExact: !0,
                    meridiemParse: /sa|ch/i,
                    isPM: function(e) {
                        return /^ch$/i.test(e)
                    },
                    meridiem: function(e, t, a) {
                        return e < 12 ? a ? "sa" : "SA" : a ? "ch" : "CH"
                    },
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM [năm] YYYY",
                        LLL: "D MMMM [năm] YYYY HH:mm",
                        LLLL: "dddd, D MMMM [năm] YYYY HH:mm",
                        l: "DD/M/YYYY",
                        ll: "D MMM YYYY",
                        lll: "D MMM YYYY HH:mm",
                        llll: "ddd, D MMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[Hôm nay lúc] LT",
                        nextDay: "[Ngày mai lúc] LT",
                        nextWeek: "dddd [tuần tới lúc] LT",
                        lastDay: "[Hôm qua lúc] LT",
                        lastWeek: "dddd [tuần trước lúc] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "%s tới",
                        past: "%s trước",
                        s: "vài giây",
                        ss: "%d giây",
                        m: "một phút",
                        mm: "%d phút",
                        h: "một giờ",
                        hh: "%d giờ",
                        d: "một ngày",
                        dd: "%d ngày",
                        w: "một tuần",
                        ww: "%d tuần",
                        M: "một tháng",
                        MM: "%d tháng",
                        y: "một năm",
                        yy: "%d năm"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}/,
                    ordinal: function(e) {
                        return e
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        64051: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("x-pseudo", {
                    months: "J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér".split("_"),
                    monthsShort: "J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc".split("_"),
                    monthsParseExact: !0,
                    weekdays: "S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý".split("_"),
                    weekdaysShort: "S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát".split("_"),
                    weekdaysMin: "S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá".split("_"),
                    weekdaysParseExact: !0,
                    longDateFormat: {
                        LT: "HH:mm",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY HH:mm",
                        LLLL: "dddd, D MMMM YYYY HH:mm"
                    },
                    calendar: {
                        sameDay: "[T~ódá~ý át] LT",
                        nextDay: "[T~ómó~rró~w át] LT",
                        nextWeek: "dddd [át] LT",
                        lastDay: "[Ý~ést~érdá~ý át] LT",
                        lastWeek: "[L~ást] dddd [át] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "í~ñ %s",
                        past: "%s á~gó",
                        s: "á ~féw ~sécó~ñds",
                        ss: "%d s~écóñ~ds",
                        m: "á ~míñ~úté",
                        mm: "%d m~íñú~tés",
                        h: "á~ñ hó~úr",
                        hh: "%d h~óúrs",
                        d: "á ~dáý",
                        dd: "%d d~áýs",
                        M: "á ~móñ~th",
                        MM: "%d m~óñt~hs",
                        y: "á ~ýéár",
                        yy: "%d ý~éárs"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
                    ordinal: function(e) {
                        var t = e % 10;
                        return e + (1 == ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        82218: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("yo", {
                    months: "Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀".split("_"),
                    monthsShort: "Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀".split("_"),
                    weekdays: "Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta".split("_"),
                    weekdaysShort: "Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá".split("_"),
                    weekdaysMin: "Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb".split("_"),
                    longDateFormat: {
                        LT: "h:mm A",
                        LTS: "h:mm:ss A",
                        L: "DD/MM/YYYY",
                        LL: "D MMMM YYYY",
                        LLL: "D MMMM YYYY h:mm A",
                        LLLL: "dddd, D MMMM YYYY h:mm A"
                    },
                    calendar: {
                        sameDay: "[Ònì ni] LT",
                        nextDay: "[Ọ̀la ni] LT",
                        nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
                        lastDay: "[Àna ni] LT",
                        lastWeek: "dddd [Ọsẹ̀ tólọ́] [ni] LT",
                        sameElse: "L"
                    },
                    relativeTime: {
                        future: "ní %s",
                        past: "%s kọjá",
                        s: "ìsẹjú aayá die",
                        ss: "aayá %d",
                        m: "ìsẹjú kan",
                        mm: "ìsẹjú %d",
                        h: "wákati kan",
                        hh: "wákati %d",
                        d: "ọjọ́ kan",
                        dd: "ọjọ́ %d",
                        M: "osù kan",
                        MM: "osù %d",
                        y: "ọdún kan",
                        yy: "ọdún %d"
                    },
                    dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
                    ordinal: "ọjọ́ %d",
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        52648: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("zh-cn", {
                    months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
                    monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                    weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
                    weekdaysShort: "周日_周一_周二_周三_周四_周五_周六".split("_"),
                    weekdaysMin: "日_一_二_三_四_五_六".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "YYYY/MM/DD",
                        LL: "YYYY年M月D日",
                        LLL: "YYYY年M月D日Ah点mm分",
                        LLLL: "YYYY年M月D日ddddAh点mm分",
                        l: "YYYY/M/D",
                        ll: "YYYY年M月D日",
                        lll: "YYYY年M月D日 HH:mm",
                        llll: "YYYY年M月D日dddd HH:mm"
                    },
                    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "凌晨" === t || "早上" === t || "上午" === t ? e : "下午" === t || "晚上" === t ? e + 12 : e >= 11 ? e : e + 12
                    },
                    meridiem: function(e, t, a) {
                        var n = 100 * e + t;
                        return n < 600 ? "凌晨" : n < 900 ? "早上" : n < 1130 ? "上午" : n < 1230 ? "中午" : n < 1800 ? "下午" : "晚上"
                    },
                    calendar: {
                        sameDay: "[今天]LT",
                        nextDay: "[明天]LT",
                        nextWeek: function(e) {
                            return e.week() !== this.week() ? "[下]dddLT" : "[本]dddLT"
                        },
                        lastDay: "[昨天]LT",
                        lastWeek: function(e) {
                            return this.week() !== e.week() ? "[上]dddLT" : "[本]dddLT"
                        },
                        sameElse: "L"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "d":
                        case "D":
                        case "DDD":
                            return e + "日";
                        case "M":
                            return e + "月";
                        case "w":
                        case "W":
                            return e + "周";
                        default:
                            return e
                        }
                    },
                    relativeTime: {
                        future: "%s后",
                        past: "%s前",
                        s: "几秒",
                        ss: "%d 秒",
                        m: "1 分钟",
                        mm: "%d 分钟",
                        h: "1 小时",
                        hh: "%d 小时",
                        d: "1 天",
                        dd: "%d 天",
                        w: "1 周",
                        ww: "%d 周",
                        M: "1 个月",
                        MM: "%d 个月",
                        y: "1 年",
                        yy: "%d 年"
                    },
                    week: {
                        dow: 1,
                        doy: 4
                    }
                })
            }(a(95093))
        },
        1632: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("zh-hk", {
                    months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
                    monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                    weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
                    weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
                    weekdaysMin: "日_一_二_三_四_五_六".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "YYYY/MM/DD",
                        LL: "YYYY年M月D日",
                        LLL: "YYYY年M月D日 HH:mm",
                        LLLL: "YYYY年M月D日dddd HH:mm",
                        l: "YYYY/M/D",
                        ll: "YYYY年M月D日",
                        lll: "YYYY年M月D日 HH:mm",
                        llll: "YYYY年M月D日dddd HH:mm"
                    },
                    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "凌晨" === t || "早上" === t || "上午" === t ? e : "中午" === t ? e >= 11 ? e : e + 12 : "下午" === t || "晚上" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        var n = 100 * e + t;
                        return n < 600 ? "凌晨" : n < 900 ? "早上" : n < 1200 ? "上午" : 1200 === n ? "中午" : n < 1800 ? "下午" : "晚上"
                    },
                    calendar: {
                        sameDay: "[今天]LT",
                        nextDay: "[明天]LT",
                        nextWeek: "[下]ddddLT",
                        lastDay: "[昨天]LT",
                        lastWeek: "[上]ddddLT",
                        sameElse: "L"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "d":
                        case "D":
                        case "DDD":
                            return e + "日";
                        case "M":
                            return e + "月";
                        case "w":
                        case "W":
                            return e + "週";
                        default:
                            return e
                        }
                    },
                    relativeTime: {
                        future: "%s後",
                        past: "%s前",
                        s: "幾秒",
                        ss: "%d 秒",
                        m: "1 分鐘",
                        mm: "%d 分鐘",
                        h: "1 小時",
                        hh: "%d 小時",
                        d: "1 天",
                        dd: "%d 天",
                        M: "1 個月",
                        MM: "%d 個月",
                        y: "1 年",
                        yy: "%d 年"
                    }
                })
            }(a(95093))
        },
        31541: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("zh-mo", {
                    months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
                    monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                    weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
                    weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
                    weekdaysMin: "日_一_二_三_四_五_六".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "DD/MM/YYYY",
                        LL: "YYYY年M月D日",
                        LLL: "YYYY年M月D日 HH:mm",
                        LLLL: "YYYY年M月D日dddd HH:mm",
                        l: "D/M/YYYY",
                        ll: "YYYY年M月D日",
                        lll: "YYYY年M月D日 HH:mm",
                        llll: "YYYY年M月D日dddd HH:mm"
                    },
                    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "凌晨" === t || "早上" === t || "上午" === t ? e : "中午" === t ? e >= 11 ? e : e + 12 : "下午" === t || "晚上" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        var n = 100 * e + t;
                        return n < 600 ? "凌晨" : n < 900 ? "早上" : n < 1130 ? "上午" : n < 1230 ? "中午" : n < 1800 ? "下午" : "晚上"
                    },
                    calendar: {
                        sameDay: "[今天] LT",
                        nextDay: "[明天] LT",
                        nextWeek: "[下]dddd LT",
                        lastDay: "[昨天] LT",
                        lastWeek: "[上]dddd LT",
                        sameElse: "L"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "d":
                        case "D":
                        case "DDD":
                            return e + "日";
                        case "M":
                            return e + "月";
                        case "w":
                        case "W":
                            return e + "週";
                        default:
                            return e
                        }
                    },
                    relativeTime: {
                        future: "%s內",
                        past: "%s前",
                        s: "幾秒",
                        ss: "%d 秒",
                        m: "1 分鐘",
                        mm: "%d 分鐘",
                        h: "1 小時",
                        hh: "%d 小時",
                        d: "1 天",
                        dd: "%d 天",
                        M: "1 個月",
                        MM: "%d 個月",
                        y: "1 年",
                        yy: "%d 年"
                    }
                })
            }(a(95093))
        },
        50304: function(e, t, a) {
            !function(e) {
                "use strict";
                e.defineLocale("zh-tw", {
                    months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
                    monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
                    weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
                    weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
                    weekdaysMin: "日_一_二_三_四_五_六".split("_"),
                    longDateFormat: {
                        LT: "HH:mm",
                        LTS: "HH:mm:ss",
                        L: "YYYY/MM/DD",
                        LL: "YYYY年M月D日",
                        LLL: "YYYY年M月D日 HH:mm",
                        LLLL: "YYYY年M月D日dddd HH:mm",
                        l: "YYYY/M/D",
                        ll: "YYYY年M月D日",
                        lll: "YYYY年M月D日 HH:mm",
                        llll: "YYYY年M月D日dddd HH:mm"
                    },
                    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
                    meridiemHour: function(e, t) {
                        return 12 === e && (e = 0),
                        "凌晨" === t || "早上" === t || "上午" === t ? e : "中午" === t ? e >= 11 ? e : e + 12 : "下午" === t || "晚上" === t ? e + 12 : void 0
                    },
                    meridiem: function(e, t, a) {
                        var n = 100 * e + t;
                        return n < 600 ? "凌晨" : n < 900 ? "早上" : n < 1130 ? "上午" : n < 1230 ? "中午" : n < 1800 ? "下午" : "晚上"
                    },
                    calendar: {
                        sameDay: "[今天] LT",
                        nextDay: "[明天] LT",
                        nextWeek: "[下]dddd LT",
                        lastDay: "[昨天] LT",
                        lastWeek: "[上]dddd LT",
                        sameElse: "L"
                    },
                    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
                    ordinal: function(e, t) {
                        switch (t) {
                        case "d":
                        case "D":
                        case "DDD":
                            return e + "日";
                        case "M":
                            return e + "月";
                        case "w":
                        case "W":
                            return e + "週";
                        default:
                            return e
                        }
                    },
                    relativeTime: {
                        future: "%s後",
                        past: "%s前",
                        s: "幾秒",
                        ss: "%d 秒",
                        m: "1 分鐘",
                        mm: "%d 分鐘",
                        h: "1 小時",
                        hh: "%d 小時",
                        d: "1 天",
                        dd: "%d 天",
                        M: "1 個月",
                        MM: "%d 個月",
                        y: "1 年",
                        yy: "%d 年"
                    }
                })
            }(a(95093))
        },
        35358: (e, t, a) => {
            var n = {
                "./af": 25177,
                "./af.js": 25177,
                "./ar": 61509,
                "./ar-dz": 41488,
                "./ar-dz.js": 41488,
                "./ar-kw": 58676,
                "./ar-kw.js": 58676,
                "./ar-ly": 42353,
                "./ar-ly.js": 42353,
                "./ar-ma": 24496,
                "./ar-ma.js": 24496,
                "./ar-ps": 6947,
                "./ar-ps.js": 6947,
                "./ar-sa": 82682,
                "./ar-sa.js": 82682,
                "./ar-tn": 89756,
                "./ar-tn.js": 89756,
                "./ar.js": 61509,
                "./az": 95533,
                "./az.js": 95533,
                "./be": 28959,
                "./be.js": 28959,
                "./bg": 47777,
                "./bg.js": 47777,
                "./bm": 54903,
                "./bm.js": 54903,
                "./bn": 61290,
                "./bn-bd": 17357,
                "./bn-bd.js": 17357,
                "./bn.js": 61290,
                "./bo": 31545,
                "./bo.js": 31545,
                "./br": 11470,
                "./br.js": 11470,
                "./bs": 44429,
                "./bs.js": 44429,
                "./ca": 7306,
                "./ca.js": 7306,
                "./cs": 56464,
                "./cs.js": 56464,
                "./cv": 73635,
                "./cv.js": 73635,
                "./cy": 64226,
                "./cy.js": 64226,
                "./da": 93601,
                "./da.js": 93601,
                "./de": 77853,
                "./de-at": 26111,
                "./de-at.js": 26111,
                "./de-ch": 54697,
                "./de-ch.js": 54697,
                "./de.js": 77853,
                "./dv": 60708,
                "./dv.js": 60708,
                "./el": 54691,
                "./el.js": 54691,
                "./en-au": 31491,
                "./en-au.js": 31491,
                "./en-ca": 28298,
                "./en-ca.js": 28298,
                "./en-gb": 56195,
                "./en-gb.js": 56195,
                "./en-ie": 66584,
                "./en-ie.js": 66584,
                "./en-il": 65543,
                "./en-il.js": 65543,
                "./en-in": 9033,
                "./en-in.js": 9033,
                "./en-nz": 79402,
                "./en-nz.js": 79402,
                "./en-sg": 43004,
                "./en-sg.js": 43004,
                "./eo": 32934,
                "./eo.js": 32934,
                "./es": 97650,
                "./es-do": 20838,
                "./es-do.js": 20838,
                "./es-mx": 17730,
                "./es-mx.js": 17730,
                "./es-us": 56575,
                "./es-us.js": 56575,
                "./es.js": 97650,
                "./et": 3035,
                "./et.js": 3035,
                "./eu": 3508,
                "./eu.js": 3508,
                "./fa": 119,
                "./fa.js": 119,
                "./fi": 90527,
                "./fi.js": 90527,
                "./fil": 95995,
                "./fil.js": 95995,
                "./fo": 52477,
                "./fo.js": 52477,
                "./fr": 85498,
                "./fr-ca": 26435,
                "./fr-ca.js": 26435,
                "./fr-ch": 37892,
                "./fr-ch.js": 37892,
                "./fr.js": 85498,
                "./fy": 37071,
                "./fy.js": 37071,
                "./ga": 41734,
                "./ga.js": 41734,
                "./gd": 70217,
                "./gd.js": 70217,
                "./gl": 77329,
                "./gl.js": 77329,
                "./gom-deva": 32124,
                "./gom-deva.js": 32124,
                "./gom-latn": 93383,
                "./gom-latn.js": 93383,
                "./gu": 95050,
                "./gu.js": 95050,
                "./he": 11713,
                "./he.js": 11713,
                "./hi": 43861,
                "./hi.js": 43861,
                "./hr": 26308,
                "./hr.js": 26308,
                "./hu": 90609,
                "./hu.js": 90609,
                "./hy-am": 17160,
                "./hy-am.js": 17160,
                "./id": 74063,
                "./id.js": 74063,
                "./is": 89374,
                "./is.js": 89374,
                "./it": 88383,
                "./it-ch": 21827,
                "./it-ch.js": 21827,
                "./it.js": 88383,
                "./ja": 23827,
                "./ja.js": 23827,
                "./jv": 89722,
                "./jv.js": 89722,
                "./ka": 41794,
                "./ka.js": 41794,
                "./kk": 27088,
                "./kk.js": 27088,
                "./km": 96870,
                "./km.js": 96870,
                "./kn": 84451,
                "./kn.js": 84451,
                "./ko": 63164,
                "./ko.js": 63164,
                "./ku": 98174,
                "./ku-kmr": 6181,
                "./ku-kmr.js": 6181,
                "./ku.js": 98174,
                "./ky": 78474,
                "./ky.js": 78474,
                "./lb": 79680,
                "./lb.js": 79680,
                "./lo": 15867,
                "./lo.js": 15867,
                "./lt": 45766,
                "./lt.js": 45766,
                "./lv": 69532,
                "./lv.js": 69532,
                "./me": 58076,
                "./me.js": 58076,
                "./mi": 41848,
                "./mi.js": 41848,
                "./mk": 30306,
                "./mk.js": 30306,
                "./ml": 73739,
                "./ml.js": 73739,
                "./mn": 99053,
                "./mn.js": 99053,
                "./mr": 86169,
                "./mr.js": 86169,
                "./ms": 73386,
                "./ms-my": 92297,
                "./ms-my.js": 92297,
                "./ms.js": 73386,
                "./mt": 77075,
                "./mt.js": 77075,
                "./my": 72264,
                "./my.js": 72264,
                "./nb": 22274,
                "./nb.js": 22274,
                "./ne": 8235,
                "./ne.js": 8235,
                "./nl": 92572,
                "./nl-be": 43784,
                "./nl-be.js": 43784,
                "./nl.js": 92572,
                "./nn": 54566,
                "./nn.js": 54566,
                "./oc-lnc": 69330,
                "./oc-lnc.js": 69330,
                "./pa-in": 29849,
                "./pa-in.js": 29849,
                "./pl": 94418,
                "./pl.js": 94418,
                "./pt": 79834,
                "./pt-br": 48303,
                "./pt-br.js": 48303,
                "./pt.js": 79834,
                "./ro": 24457,
                "./ro.js": 24457,
                "./ru": 82271,
                "./ru.js": 82271,
                "./sd": 1221,
                "./sd.js": 1221,
                "./se": 33478,
                "./se.js": 33478,
                "./si": 17538,
                "./si.js": 17538,
                "./sk": 5784,
                "./sk.js": 5784,
                "./sl": 46637,
                "./sl.js": 46637,
                "./sq": 86794,
                "./sq.js": 86794,
                "./sr": 45719,
                "./sr-cyrl": 3322,
                "./sr-cyrl.js": 3322,
                "./sr.js": 45719,
                "./ss": 56e3,
                "./ss.js": 56e3,
                "./sv": 41011,
                "./sv.js": 41011,
                "./sw": 40748,
                "./sw.js": 40748,
                "./ta": 11025,
                "./ta.js": 11025,
                "./te": 11885,
                "./te.js": 11885,
                "./tet": 28861,
                "./tet.js": 28861,
                "./tg": 86571,
                "./tg.js": 86571,
                "./th": 55802,
                "./th.js": 55802,
                "./tk": 59527,
                "./tk.js": 59527,
                "./tl-ph": 29231,
                "./tl-ph.js": 29231,
                "./tlh": 31052,
                "./tlh.js": 31052,
                "./tr": 85096,
                "./tr.js": 85096,
                "./tzl": 79846,
                "./tzl.js": 79846,
                "./tzm": 81765,
                "./tzm-latn": 97711,
                "./tzm-latn.js": 97711,
                "./tzm.js": 81765,
                "./ug-cn": 48414,
                "./ug-cn.js": 48414,
                "./uk": 16618,
                "./uk.js": 16618,
                "./ur": 57777,
                "./ur.js": 57777,
                "./uz": 57609,
                "./uz-latn": 72475,
                "./uz-latn.js": 72475,
                "./uz.js": 57609,
                "./vi": 21135,
                "./vi.js": 21135,
                "./x-pseudo": 64051,
                "./x-pseudo.js": 64051,
                "./yo": 82218,
                "./yo.js": 82218,
                "./zh-cn": 52648,
                "./zh-cn.js": 52648,
                "./zh-hk": 1632,
                "./zh-hk.js": 1632,
                "./zh-mo": 31541,
                "./zh-mo.js": 31541,
                "./zh-tw": 50304,
                "./zh-tw.js": 50304
            };
            function i(e) {
                var t = s(e);
                return a(t)
            }
            function s(e) {
                if (!a.o(n, e)) {
                    var t = new Error("Cannot find module '" + e + "'");
                    throw t.code = "MODULE_NOT_FOUND",
                    t
                }
                return n[e]
            }
            i.keys = function() {
                return Object.keys(n)
            }
            ,
            i.resolve = s,
            e.exports = i,
            i.id = 35358
        }
        ,
        95093: function(e, t, a) {
            (e = a.nmd(e)).exports = function() {
                "use strict";
                var t, n;
                function i() {
                    return t.apply(null, arguments)
                }
                function s(e) {
                    t = e
                }
                function r(e) {
                    return e instanceof Array || "[object Array]" === Object.prototype.toString.call(e)
                }
                function o(e) {
                    return null != e && "[object Object]" === Object.prototype.toString.call(e)
                }
                function l(e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t)
                }
                function d(e) {
                    if (Object.getOwnPropertyNames)
                        return 0 === Object.getOwnPropertyNames(e).length;
                    var t;
                    for (t in e)
                        if (l(e, t))
                            return !1;
                    return !0
                }
                function c(e) {
                    return void 0 === e
                }
                function m(e) {
                    return "number" == typeof e || "[object Number]" === Object.prototype.toString.call(e)
                }
                function u(e) {
                    return e instanceof Date || "[object Date]" === Object.prototype.toString.call(e)
                }
                function h(e, t) {
                    var a, n = [], i = e.length;
                    for (a = 0; a < i; ++a)
                        n.push(t(e[a], a));
                    return n
                }
                function p(e, t) {
                    for (var a in t)
                        l(t, a) && (e[a] = t[a]);
                    return l(t, "toString") && (e.toString = t.toString),
                    l(t, "valueOf") && (e.valueOf = t.valueOf),
                    e
                }
                function y(e, t, a, n) {
                    return Va(e, t, a, n, !0).utc()
                }
                function g() {
                    return {
                        empty: !1,
                        unusedTokens: [],
                        unusedInput: [],
                        overflow: -2,
                        charsLeftOver: 0,
                        nullInput: !1,
                        invalidEra: null,
                        invalidMonth: null,
                        invalidFormat: !1,
                        userInvalidated: !1,
                        iso: !1,
                        parsedDateParts: [],
                        era: null,
                        meridiem: null,
                        rfc2822: !1,
                        weekdayMismatch: !1
                    }
                }
                function f(e) {
                    return null == e._pf && (e._pf = g()),
                    e._pf
                }
                function _(e) {
                    var t = null
                      , a = !1
                      , i = e._d && !isNaN(e._d.getTime());
                    return i && (t = f(e),
                    a = n.call(t.parsedDateParts, (function(e) {
                        return null != e
                    }
                    )),
                    i = t.overflow < 0 && !t.empty && !t.invalidEra && !t.invalidMonth && !t.invalidWeekday && !t.weekdayMismatch && !t.nullInput && !t.invalidFormat && !t.userInvalidated && (!t.meridiem || t.meridiem && a),
                    e._strict && (i = i && 0 === t.charsLeftOver && 0 === t.unusedTokens.length && void 0 === t.bigHour)),
                    null != Object.isFrozen && Object.isFrozen(e) ? i : (e._isValid = i,
                    e._isValid)
                }
                function b(e) {
                    var t = y(NaN);
                    return null != e ? p(f(t), e) : f(t).userInvalidated = !0,
                    t
                }
                n = Array.prototype.some ? Array.prototype.some : function(e) {
                    var t, a = Object(this), n = a.length >>> 0;
                    for (t = 0; t < n; t++)
                        if (t in a && e.call(this, a[t], t, a))
                            return !0;
                    return !1
                }
                ;
                var v = i.momentProperties = []
                  , M = !1;
                function w(e, t) {
                    var a, n, i, s = v.length;
                    if (c(t._isAMomentObject) || (e._isAMomentObject = t._isAMomentObject),
                    c(t._i) || (e._i = t._i),
                    c(t._f) || (e._f = t._f),
                    c(t._l) || (e._l = t._l),
                    c(t._strict) || (e._strict = t._strict),
                    c(t._tzm) || (e._tzm = t._tzm),
                    c(t._isUTC) || (e._isUTC = t._isUTC),
                    c(t._offset) || (e._offset = t._offset),
                    c(t._pf) || (e._pf = f(t)),
                    c(t._locale) || (e._locale = t._locale),
                    s > 0)
                        for (a = 0; a < s; a++)
                            c(i = t[n = v[a]]) || (e[n] = i);
                    return e
                }
                function T(e) {
                    w(this, e),
                    this._d = new Date(null != e._d ? e._d.getTime() : NaN),
                    this.isValid() || (this._d = new Date(NaN)),
                    !1 === M && (M = !0,
                    i.updateOffset(this),
                    M = !1)
                }
                function k(e) {
                    return e instanceof T || null != e && null != e._isAMomentObject
                }
                function D(e) {
                    !1 === i.suppressDeprecationWarnings && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + e)
                }
                function x(e, t) {
                    var a = !0;
                    return p((function() {
                        if (null != i.deprecationHandler && i.deprecationHandler(null, e),
                        a) {
                            var n, s, r, o = [], d = arguments.length;
                            for (s = 0; s < d; s++) {
                                if (n = "",
                                "object" == typeof arguments[s]) {
                                    for (r in n += "\n[" + s + "] ",
                                    arguments[0])
                                        l(arguments[0], r) && (n += r + ": " + arguments[0][r] + ", ");
                                    n = n.slice(0, -2)
                                } else
                                    n = arguments[s];
                                o.push(n)
                            }
                            D(e + "\nArguments: " + Array.prototype.slice.call(o).join("") + "\n" + (new Error).stack),
                            a = !1
                        }
                        return t.apply(this, arguments)
                    }
                    ), t)
                }
                var A, L = {};
                function S(e, t) {
                    null != i.deprecationHandler && i.deprecationHandler(e, t),
                    L[e] || (D(t),
                    L[e] = !0)
                }
                function N(e) {
                    return "undefined" != typeof Function && e instanceof Function || "[object Function]" === Object.prototype.toString.call(e)
                }
                function P(e) {
                    var t, a;
                    for (a in e)
                        l(e, a) && (N(t = e[a]) ? this[a] = t : this["_" + a] = t);
                    this._config = e,
                    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source)
                }
                function Y(e, t) {
                    var a, n = p({}, e);
                    for (a in t)
                        l(t, a) && (o(e[a]) && o(t[a]) ? (n[a] = {},
                        p(n[a], e[a]),
                        p(n[a], t[a])) : null != t[a] ? n[a] = t[a] : delete n[a]);
                    for (a in e)
                        l(e, a) && !l(t, a) && o(e[a]) && (n[a] = p({}, n[a]));
                    return n
                }
                function E(e) {
                    null != e && this.set(e)
                }
                i.suppressDeprecationWarnings = !1,
                i.deprecationHandler = null,
                A = Object.keys ? Object.keys : function(e) {
                    var t, a = [];
                    for (t in e)
                        l(e, t) && a.push(t);
                    return a
                }
                ;
                var C = {
                    sameDay: "[Today at] LT",
                    nextDay: "[Tomorrow at] LT",
                    nextWeek: "dddd [at] LT",
                    lastDay: "[Yesterday at] LT",
                    lastWeek: "[Last] dddd [at] LT",
                    sameElse: "L"
                };
                function R(e, t, a) {
                    var n = this._calendar[e] || this._calendar.sameElse;
                    return N(n) ? n.call(t, a) : n
                }
                function I(e, t, a) {
                    var n = "" + Math.abs(e)
                      , i = t - n.length;
                    return (e >= 0 ? a ? "+" : "" : "-") + Math.pow(10, Math.max(0, i)).toString().substr(1) + n
                }
                var O = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g
                  , H = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g
                  , F = {}
                  , j = {};
                function q(e, t, a, n) {
                    var i = n;
                    "string" == typeof n && (i = function() {
                        return this[n]()
                    }
                    ),
                    e && (j[e] = i),
                    t && (j[t[0]] = function() {
                        return I(i.apply(this, arguments), t[1], t[2])
                    }
                    ),
                    a && (j[a] = function() {
                        return this.localeData().ordinal(i.apply(this, arguments), e)
                    }
                    )
                }
                function U(e) {
                    return e.match(/\[[\s\S]/) ? e.replace(/^\[|\]$/g, "") : e.replace(/\\/g, "")
                }
                function W(e) {
                    var t, a, n = e.match(O);
                    for (t = 0,
                    a = n.length; t < a; t++)
                        j[n[t]] ? n[t] = j[n[t]] : n[t] = U(n[t]);
                    return function(t) {
                        var i, s = "";
                        for (i = 0; i < a; i++)
                            s += N(n[i]) ? n[i].call(t, e) : n[i];
                        return s
                    }
                }
                function B(e, t) {
                    return e.isValid() ? (t = z(t, e.localeData()),
                    F[t] = F[t] || W(t),
                    F[t](e)) : e.localeData().invalidDate()
                }
                function z(e, t) {
                    var a = 5;
                    function n(e) {
                        return t.longDateFormat(e) || e
                    }
                    for (H.lastIndex = 0; a >= 0 && H.test(e); )
                        e = e.replace(H, n),
                        H.lastIndex = 0,
                        a -= 1;
                    return e
                }
                var $ = {
                    LTS: "h:mm:ss A",
                    LT: "h:mm A",
                    L: "MM/DD/YYYY",
                    LL: "MMMM D, YYYY",
                    LLL: "MMMM D, YYYY h:mm A",
                    LLLL: "dddd, MMMM D, YYYY h:mm A"
                };
                function G(e) {
                    var t = this._longDateFormat[e]
                      , a = this._longDateFormat[e.toUpperCase()];
                    return t || !a ? t : (this._longDateFormat[e] = a.match(O).map((function(e) {
                        return "MMMM" === e || "MM" === e || "DD" === e || "dddd" === e ? e.slice(1) : e
                    }
                    )).join(""),
                    this._longDateFormat[e])
                }
                var V = "Invalid date";
                function K() {
                    return this._invalidDate
                }
                var J = "%d"
                  , X = /\d{1,2}/;
                function Q(e) {
                    return this._ordinal.replace("%d", e)
                }
                var Z = {
                    future: "in %s",
                    past: "%s ago",
                    s: "a few seconds",
                    ss: "%d seconds",
                    m: "a minute",
                    mm: "%d minutes",
                    h: "an hour",
                    hh: "%d hours",
                    d: "a day",
                    dd: "%d days",
                    w: "a week",
                    ww: "%d weeks",
                    M: "a month",
                    MM: "%d months",
                    y: "a year",
                    yy: "%d years"
                };
                function ee(e, t, a, n) {
                    var i = this._relativeTime[a];
                    return N(i) ? i(e, t, a, n) : i.replace(/%d/i, e)
                }
                function te(e, t) {
                    var a = this._relativeTime[e > 0 ? "future" : "past"];
                    return N(a) ? a(t) : a.replace(/%s/i, t)
                }
                var ae = {
                    D: "date",
                    dates: "date",
                    date: "date",
                    d: "day",
                    days: "day",
                    day: "day",
                    e: "weekday",
                    weekdays: "weekday",
                    weekday: "weekday",
                    E: "isoWeekday",
                    isoweekdays: "isoWeekday",
                    isoweekday: "isoWeekday",
                    DDD: "dayOfYear",
                    dayofyears: "dayOfYear",
                    dayofyear: "dayOfYear",
                    h: "hour",
                    hours: "hour",
                    hour: "hour",
                    ms: "millisecond",
                    milliseconds: "millisecond",
                    millisecond: "millisecond",
                    m: "minute",
                    minutes: "minute",
                    minute: "minute",
                    M: "month",
                    months: "month",
                    month: "month",
                    Q: "quarter",
                    quarters: "quarter",
                    quarter: "quarter",
                    s: "second",
                    seconds: "second",
                    second: "second",
                    gg: "weekYear",
                    weekyears: "weekYear",
                    weekyear: "weekYear",
                    GG: "isoWeekYear",
                    isoweekyears: "isoWeekYear",
                    isoweekyear: "isoWeekYear",
                    w: "week",
                    weeks: "week",
                    week: "week",
                    W: "isoWeek",
                    isoweeks: "isoWeek",
                    isoweek: "isoWeek",
                    y: "year",
                    years: "year",
                    year: "year"
                };
                function ne(e) {
                    return "string" == typeof e ? ae[e] || ae[e.toLowerCase()] : void 0
                }
                function ie(e) {
                    var t, a, n = {};
                    for (a in e)
                        l(e, a) && (t = ne(a)) && (n[t] = e[a]);
                    return n
                }
                var se = {
                    date: 9,
                    day: 11,
                    weekday: 11,
                    isoWeekday: 11,
                    dayOfYear: 4,
                    hour: 13,
                    millisecond: 16,
                    minute: 14,
                    month: 8,
                    quarter: 7,
                    second: 15,
                    weekYear: 1,
                    isoWeekYear: 1,
                    week: 5,
                    isoWeek: 5,
                    year: 1
                };
                function re(e) {
                    var t, a = [];
                    for (t in e)
                        l(e, t) && a.push({
                            unit: t,
                            priority: se[t]
                        });
                    return a.sort((function(e, t) {
                        return e.priority - t.priority
                    }
                    )),
                    a
                }
                var oe, le = /\d/, de = /\d\d/, ce = /\d{3}/, me = /\d{4}/, ue = /[+-]?\d{6}/, he = /\d\d?/, pe = /\d\d\d\d?/, ye = /\d\d\d\d\d\d?/, ge = /\d{1,3}/, fe = /\d{1,4}/, _e = /[+-]?\d{1,6}/, be = /\d+/, ve = /[+-]?\d+/, Me = /Z|[+-]\d\d:?\d\d/gi, we = /Z|[+-]\d\d(?::?\d\d)?/gi, Te = /[+-]?\d+(\.\d{1,3})?/, ke = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, De = /^[1-9]\d?/, xe = /^([1-9]\d|\d)/;
                function Ae(e, t, a) {
                    oe[e] = N(t) ? t : function(e, n) {
                        return e && a ? a : t
                    }
                }
                function Le(e, t) {
                    return l(oe, e) ? oe[e](t._strict, t._locale) : new RegExp(Se(e))
                }
                function Se(e) {
                    return Ne(e.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, (function(e, t, a, n, i) {
                        return t || a || n || i
                    }
                    )))
                }
                function Ne(e) {
                    return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
                }
                function Pe(e) {
                    return e < 0 ? Math.ceil(e) || 0 : Math.floor(e)
                }
                function Ye(e) {
                    var t = +e
                      , a = 0;
                    return 0 !== t && isFinite(t) && (a = Pe(t)),
                    a
                }
                oe = {};
                var Ee = {};
                function Ce(e, t) {
                    var a, n, i = t;
                    for ("string" == typeof e && (e = [e]),
                    m(t) && (i = function(e, a) {
                        a[t] = Ye(e)
                    }
                    ),
                    n = e.length,
                    a = 0; a < n; a++)
                        Ee[e[a]] = i
                }
                function Re(e, t) {
                    Ce(e, (function(e, a, n, i) {
                        n._w = n._w || {},
                        t(e, n._w, n, i)
                    }
                    ))
                }
                function Ie(e, t, a) {
                    null != t && l(Ee, e) && Ee[e](t, a._a, a, e)
                }
                function Oe(e) {
                    return e % 4 == 0 && e % 100 != 0 || e % 400 == 0
                }
                var He = 0
                  , Fe = 1
                  , je = 2
                  , qe = 3
                  , Ue = 4
                  , We = 5
                  , Be = 6
                  , ze = 7
                  , $e = 8;
                function Ge(e) {
                    return Oe(e) ? 366 : 365
                }
                q("Y", 0, 0, (function() {
                    var e = this.year();
                    return e <= 9999 ? I(e, 4) : "+" + e
                }
                )),
                q(0, ["YY", 2], 0, (function() {
                    return this.year() % 100
                }
                )),
                q(0, ["YYYY", 4], 0, "year"),
                q(0, ["YYYYY", 5], 0, "year"),
                q(0, ["YYYYYY", 6, !0], 0, "year"),
                Ae("Y", ve),
                Ae("YY", he, de),
                Ae("YYYY", fe, me),
                Ae("YYYYY", _e, ue),
                Ae("YYYYYY", _e, ue),
                Ce(["YYYYY", "YYYYYY"], He),
                Ce("YYYY", (function(e, t) {
                    t[He] = 2 === e.length ? i.parseTwoDigitYear(e) : Ye(e)
                }
                )),
                Ce("YY", (function(e, t) {
                    t[He] = i.parseTwoDigitYear(e)
                }
                )),
                Ce("Y", (function(e, t) {
                    t[He] = parseInt(e, 10)
                }
                )),
                i.parseTwoDigitYear = function(e) {
                    return Ye(e) + (Ye(e) > 68 ? 1900 : 2e3)
                }
                ;
                var Ve, Ke = Xe("FullYear", !0);
                function Je() {
                    return Oe(this.year())
                }
                function Xe(e, t) {
                    return function(a) {
                        return null != a ? (Ze(this, e, a),
                        i.updateOffset(this, t),
                        this) : Qe(this, e)
                    }
                }
                function Qe(e, t) {
                    if (!e.isValid())
                        return NaN;
                    var a = e._d
                      , n = e._isUTC;
                    switch (t) {
                    case "Milliseconds":
                        return n ? a.getUTCMilliseconds() : a.getMilliseconds();
                    case "Seconds":
                        return n ? a.getUTCSeconds() : a.getSeconds();
                    case "Minutes":
                        return n ? a.getUTCMinutes() : a.getMinutes();
                    case "Hours":
                        return n ? a.getUTCHours() : a.getHours();
                    case "Date":
                        return n ? a.getUTCDate() : a.getDate();
                    case "Day":
                        return n ? a.getUTCDay() : a.getDay();
                    case "Month":
                        return n ? a.getUTCMonth() : a.getMonth();
                    case "FullYear":
                        return n ? a.getUTCFullYear() : a.getFullYear();
                    default:
                        return NaN
                    }
                }
                function Ze(e, t, a) {
                    var n, i, s, r, o;
                    if (e.isValid() && !isNaN(a)) {
                        switch (n = e._d,
                        i = e._isUTC,
                        t) {
                        case "Milliseconds":
                            return void (i ? n.setUTCMilliseconds(a) : n.setMilliseconds(a));
                        case "Seconds":
                            return void (i ? n.setUTCSeconds(a) : n.setSeconds(a));
                        case "Minutes":
                            return void (i ? n.setUTCMinutes(a) : n.setMinutes(a));
                        case "Hours":
                            return void (i ? n.setUTCHours(a) : n.setHours(a));
                        case "Date":
                            return void (i ? n.setUTCDate(a) : n.setDate(a));
                        case "FullYear":
                            break;
                        default:
                            return
                        }
                        s = a,
                        r = e.month(),
                        o = 29 !== (o = e.date()) || 1 !== r || Oe(s) ? o : 28,
                        i ? n.setUTCFullYear(s, r, o) : n.setFullYear(s, r, o)
                    }
                }
                function et(e) {
                    return N(this[e = ne(e)]) ? this[e]() : this
                }
                function tt(e, t) {
                    if ("object" == typeof e) {
                        var a, n = re(e = ie(e)), i = n.length;
                        for (a = 0; a < i; a++)
                            this[n[a].unit](e[n[a].unit])
                    } else if (N(this[e = ne(e)]))
                        return this[e](t);
                    return this
                }
                function at(e, t) {
                    return (e % t + t) % t
                }
                function nt(e, t) {
                    if (isNaN(e) || isNaN(t))
                        return NaN;
                    var a = at(t, 12);
                    return e += (t - a) / 12,
                    1 === a ? Oe(e) ? 29 : 28 : 31 - a % 7 % 2
                }
                Ve = Array.prototype.indexOf ? Array.prototype.indexOf : function(e) {
                    var t;
                    for (t = 0; t < this.length; ++t)
                        if (this[t] === e)
                            return t;
                    return -1
                }
                ,
                q("M", ["MM", 2], "Mo", (function() {
                    return this.month() + 1
                }
                )),
                q("MMM", 0, 0, (function(e) {
                    return this.localeData().monthsShort(this, e)
                }
                )),
                q("MMMM", 0, 0, (function(e) {
                    return this.localeData().months(this, e)
                }
                )),
                Ae("M", he, De),
                Ae("MM", he, de),
                Ae("MMM", (function(e, t) {
                    return t.monthsShortRegex(e)
                }
                )),
                Ae("MMMM", (function(e, t) {
                    return t.monthsRegex(e)
                }
                )),
                Ce(["M", "MM"], (function(e, t) {
                    t[Fe] = Ye(e) - 1
                }
                )),
                Ce(["MMM", "MMMM"], (function(e, t, a, n) {
                    var i = a._locale.monthsParse(e, n, a._strict);
                    null != i ? t[Fe] = i : f(a).invalidMonth = e
                }
                ));
                var it = "January_February_March_April_May_June_July_August_September_October_November_December".split("_")
                  , st = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_")
                  , rt = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/
                  , ot = ke
                  , lt = ke;
                function dt(e, t) {
                    return e ? r(this._months) ? this._months[e.month()] : this._months[(this._months.isFormat || rt).test(t) ? "format" : "standalone"][e.month()] : r(this._months) ? this._months : this._months.standalone
                }
                function ct(e, t) {
                    return e ? r(this._monthsShort) ? this._monthsShort[e.month()] : this._monthsShort[rt.test(t) ? "format" : "standalone"][e.month()] : r(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone
                }
                function mt(e, t, a) {
                    var n, i, s, r = e.toLocaleLowerCase();
                    if (!this._monthsParse)
                        for (this._monthsParse = [],
                        this._longMonthsParse = [],
                        this._shortMonthsParse = [],
                        n = 0; n < 12; ++n)
                            s = y([2e3, n]),
                            this._shortMonthsParse[n] = this.monthsShort(s, "").toLocaleLowerCase(),
                            this._longMonthsParse[n] = this.months(s, "").toLocaleLowerCase();
                    return a ? "MMM" === t ? -1 !== (i = Ve.call(this._shortMonthsParse, r)) ? i : null : -1 !== (i = Ve.call(this._longMonthsParse, r)) ? i : null : "MMM" === t ? -1 !== (i = Ve.call(this._shortMonthsParse, r)) || -1 !== (i = Ve.call(this._longMonthsParse, r)) ? i : null : -1 !== (i = Ve.call(this._longMonthsParse, r)) || -1 !== (i = Ve.call(this._shortMonthsParse, r)) ? i : null
                }
                function ut(e, t, a) {
                    var n, i, s;
                    if (this._monthsParseExact)
                        return mt.call(this, e, t, a);
                    for (this._monthsParse || (this._monthsParse = [],
                    this._longMonthsParse = [],
                    this._shortMonthsParse = []),
                    n = 0; n < 12; n++) {
                        if (i = y([2e3, n]),
                        a && !this._longMonthsParse[n] && (this._longMonthsParse[n] = new RegExp("^" + this.months(i, "").replace(".", "") + "$","i"),
                        this._shortMonthsParse[n] = new RegExp("^" + this.monthsShort(i, "").replace(".", "") + "$","i")),
                        a || this._monthsParse[n] || (s = "^" + this.months(i, "") + "|^" + this.monthsShort(i, ""),
                        this._monthsParse[n] = new RegExp(s.replace(".", ""),"i")),
                        a && "MMMM" === t && this._longMonthsParse[n].test(e))
                            return n;
                        if (a && "MMM" === t && this._shortMonthsParse[n].test(e))
                            return n;
                        if (!a && this._monthsParse[n].test(e))
                            return n
                    }
                }
                function ht(e, t) {
                    if (!e.isValid())
                        return e;
                    if ("string" == typeof t)
                        if (/^\d+$/.test(t))
                            t = Ye(t);
                        else if (!m(t = e.localeData().monthsParse(t)))
                            return e;
                    var a = t
                      , n = e.date();
                    return n = n < 29 ? n : Math.min(n, nt(e.year(), a)),
                    e._isUTC ? e._d.setUTCMonth(a, n) : e._d.setMonth(a, n),
                    e
                }
                function pt(e) {
                    return null != e ? (ht(this, e),
                    i.updateOffset(this, !0),
                    this) : Qe(this, "Month")
                }
                function yt() {
                    return nt(this.year(), this.month())
                }
                function gt(e) {
                    return this._monthsParseExact ? (l(this, "_monthsRegex") || _t.call(this),
                    e ? this._monthsShortStrictRegex : this._monthsShortRegex) : (l(this, "_monthsShortRegex") || (this._monthsShortRegex = ot),
                    this._monthsShortStrictRegex && e ? this._monthsShortStrictRegex : this._monthsShortRegex)
                }
                function ft(e) {
                    return this._monthsParseExact ? (l(this, "_monthsRegex") || _t.call(this),
                    e ? this._monthsStrictRegex : this._monthsRegex) : (l(this, "_monthsRegex") || (this._monthsRegex = lt),
                    this._monthsStrictRegex && e ? this._monthsStrictRegex : this._monthsRegex)
                }
                function _t() {
                    function e(e, t) {
                        return t.length - e.length
                    }
                    var t, a, n, i, s = [], r = [], o = [];
                    for (t = 0; t < 12; t++)
                        a = y([2e3, t]),
                        n = Ne(this.monthsShort(a, "")),
                        i = Ne(this.months(a, "")),
                        s.push(n),
                        r.push(i),
                        o.push(i),
                        o.push(n);
                    s.sort(e),
                    r.sort(e),
                    o.sort(e),
                    this._monthsRegex = new RegExp("^(" + o.join("|") + ")","i"),
                    this._monthsShortRegex = this._monthsRegex,
                    this._monthsStrictRegex = new RegExp("^(" + r.join("|") + ")","i"),
                    this._monthsShortStrictRegex = new RegExp("^(" + s.join("|") + ")","i")
                }
                function bt(e, t, a, n, i, s, r) {
                    var o;
                    return e < 100 && e >= 0 ? (o = new Date(e + 400,t,a,n,i,s,r),
                    isFinite(o.getFullYear()) && o.setFullYear(e)) : o = new Date(e,t,a,n,i,s,r),
                    o
                }
                function vt(e) {
                    var t, a;
                    return e < 100 && e >= 0 ? ((a = Array.prototype.slice.call(arguments))[0] = e + 400,
                    t = new Date(Date.UTC.apply(null, a)),
                    isFinite(t.getUTCFullYear()) && t.setUTCFullYear(e)) : t = new Date(Date.UTC.apply(null, arguments)),
                    t
                }
                function Mt(e, t, a) {
                    var n = 7 + t - a;
                    return -(7 + vt(e, 0, n).getUTCDay() - t) % 7 + n - 1
                }
                function wt(e, t, a, n, i) {
                    var s, r, o = 1 + 7 * (t - 1) + (7 + a - n) % 7 + Mt(e, n, i);
                    return o <= 0 ? r = Ge(s = e - 1) + o : o > Ge(e) ? (s = e + 1,
                    r = o - Ge(e)) : (s = e,
                    r = o),
                    {
                        year: s,
                        dayOfYear: r
                    }
                }
                function Tt(e, t, a) {
                    var n, i, s = Mt(e.year(), t, a), r = Math.floor((e.dayOfYear() - s - 1) / 7) + 1;
                    return r < 1 ? n = r + kt(i = e.year() - 1, t, a) : r > kt(e.year(), t, a) ? (n = r - kt(e.year(), t, a),
                    i = e.year() + 1) : (i = e.year(),
                    n = r),
                    {
                        week: n,
                        year: i
                    }
                }
                function kt(e, t, a) {
                    var n = Mt(e, t, a)
                      , i = Mt(e + 1, t, a);
                    return (Ge(e) - n + i) / 7
                }
                function Dt(e) {
                    return Tt(e, this._week.dow, this._week.doy).week
                }
                q("w", ["ww", 2], "wo", "week"),
                q("W", ["WW", 2], "Wo", "isoWeek"),
                Ae("w", he, De),
                Ae("ww", he, de),
                Ae("W", he, De),
                Ae("WW", he, de),
                Re(["w", "ww", "W", "WW"], (function(e, t, a, n) {
                    t[n.substr(0, 1)] = Ye(e)
                }
                ));
                var xt = {
                    dow: 0,
                    doy: 6
                };
                function At() {
                    return this._week.dow
                }
                function Lt() {
                    return this._week.doy
                }
                function St(e) {
                    var t = this.localeData().week(this);
                    return null == e ? t : this.add(7 * (e - t), "d")
                }
                function Nt(e) {
                    var t = Tt(this, 1, 4).week;
                    return null == e ? t : this.add(7 * (e - t), "d")
                }
                function Pt(e, t) {
                    return "string" != typeof e ? e : isNaN(e) ? "number" == typeof (e = t.weekdaysParse(e)) ? e : null : parseInt(e, 10)
                }
                function Yt(e, t) {
                    return "string" == typeof e ? t.weekdaysParse(e) % 7 || 7 : isNaN(e) ? null : e
                }
                function Et(e, t) {
                    return e.slice(t, 7).concat(e.slice(0, t))
                }
                q("d", 0, "do", "day"),
                q("dd", 0, 0, (function(e) {
                    return this.localeData().weekdaysMin(this, e)
                }
                )),
                q("ddd", 0, 0, (function(e) {
                    return this.localeData().weekdaysShort(this, e)
                }
                )),
                q("dddd", 0, 0, (function(e) {
                    return this.localeData().weekdays(this, e)
                }
                )),
                q("e", 0, 0, "weekday"),
                q("E", 0, 0, "isoWeekday"),
                Ae("d", he),
                Ae("e", he),
                Ae("E", he),
                Ae("dd", (function(e, t) {
                    return t.weekdaysMinRegex(e)
                }
                )),
                Ae("ddd", (function(e, t) {
                    return t.weekdaysShortRegex(e)
                }
                )),
                Ae("dddd", (function(e, t) {
                    return t.weekdaysRegex(e)
                }
                )),
                Re(["dd", "ddd", "dddd"], (function(e, t, a, n) {
                    var i = a._locale.weekdaysParse(e, n, a._strict);
                    null != i ? t.d = i : f(a).invalidWeekday = e
                }
                )),
                Re(["d", "e", "E"], (function(e, t, a, n) {
                    t[n] = Ye(e)
                }
                ));
                var Ct = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_")
                  , Rt = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_")
                  , It = "Su_Mo_Tu_We_Th_Fr_Sa".split("_")
                  , Ot = ke
                  , Ht = ke
                  , Ft = ke;
                function jt(e, t) {
                    var a = r(this._weekdays) ? this._weekdays : this._weekdays[e && !0 !== e && this._weekdays.isFormat.test(t) ? "format" : "standalone"];
                    return !0 === e ? Et(a, this._week.dow) : e ? a[e.day()] : a
                }
                function qt(e) {
                    return !0 === e ? Et(this._weekdaysShort, this._week.dow) : e ? this._weekdaysShort[e.day()] : this._weekdaysShort
                }
                function Ut(e) {
                    return !0 === e ? Et(this._weekdaysMin, this._week.dow) : e ? this._weekdaysMin[e.day()] : this._weekdaysMin
                }
                function Wt(e, t, a) {
                    var n, i, s, r = e.toLocaleLowerCase();
                    if (!this._weekdaysParse)
                        for (this._weekdaysParse = [],
                        this._shortWeekdaysParse = [],
                        this._minWeekdaysParse = [],
                        n = 0; n < 7; ++n)
                            s = y([2e3, 1]).day(n),
                            this._minWeekdaysParse[n] = this.weekdaysMin(s, "").toLocaleLowerCase(),
                            this._shortWeekdaysParse[n] = this.weekdaysShort(s, "").toLocaleLowerCase(),
                            this._weekdaysParse[n] = this.weekdays(s, "").toLocaleLowerCase();
                    return a ? "dddd" === t ? -1 !== (i = Ve.call(this._weekdaysParse, r)) ? i : null : "ddd" === t ? -1 !== (i = Ve.call(this._shortWeekdaysParse, r)) ? i : null : -1 !== (i = Ve.call(this._minWeekdaysParse, r)) ? i : null : "dddd" === t ? -1 !== (i = Ve.call(this._weekdaysParse, r)) || -1 !== (i = Ve.call(this._shortWeekdaysParse, r)) || -1 !== (i = Ve.call(this._minWeekdaysParse, r)) ? i : null : "ddd" === t ? -1 !== (i = Ve.call(this._shortWeekdaysParse, r)) || -1 !== (i = Ve.call(this._weekdaysParse, r)) || -1 !== (i = Ve.call(this._minWeekdaysParse, r)) ? i : null : -1 !== (i = Ve.call(this._minWeekdaysParse, r)) || -1 !== (i = Ve.call(this._weekdaysParse, r)) || -1 !== (i = Ve.call(this._shortWeekdaysParse, r)) ? i : null
                }
                function Bt(e, t, a) {
                    var n, i, s;
                    if (this._weekdaysParseExact)
                        return Wt.call(this, e, t, a);
                    for (this._weekdaysParse || (this._weekdaysParse = [],
                    this._minWeekdaysParse = [],
                    this._shortWeekdaysParse = [],
                    this._fullWeekdaysParse = []),
                    n = 0; n < 7; n++) {
                        if (i = y([2e3, 1]).day(n),
                        a && !this._fullWeekdaysParse[n] && (this._fullWeekdaysParse[n] = new RegExp("^" + this.weekdays(i, "").replace(".", "\\.?") + "$","i"),
                        this._shortWeekdaysParse[n] = new RegExp("^" + this.weekdaysShort(i, "").replace(".", "\\.?") + "$","i"),
                        this._minWeekdaysParse[n] = new RegExp("^" + this.weekdaysMin(i, "").replace(".", "\\.?") + "$","i")),
                        this._weekdaysParse[n] || (s = "^" + this.weekdays(i, "") + "|^" + this.weekdaysShort(i, "") + "|^" + this.weekdaysMin(i, ""),
                        this._weekdaysParse[n] = new RegExp(s.replace(".", ""),"i")),
                        a && "dddd" === t && this._fullWeekdaysParse[n].test(e))
                            return n;
                        if (a && "ddd" === t && this._shortWeekdaysParse[n].test(e))
                            return n;
                        if (a && "dd" === t && this._minWeekdaysParse[n].test(e))
                            return n;
                        if (!a && this._weekdaysParse[n].test(e))
                            return n
                    }
                }
                function zt(e) {
                    if (!this.isValid())
                        return null != e ? this : NaN;
                    var t = Qe(this, "Day");
                    return null != e ? (e = Pt(e, this.localeData()),
                    this.add(e - t, "d")) : t
                }
                function $t(e) {
                    if (!this.isValid())
                        return null != e ? this : NaN;
                    var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
                    return null == e ? t : this.add(e - t, "d")
                }
                function Gt(e) {
                    if (!this.isValid())
                        return null != e ? this : NaN;
                    if (null != e) {
                        var t = Yt(e, this.localeData());
                        return this.day(this.day() % 7 ? t : t - 7)
                    }
                    return this.day() || 7
                }
                function Vt(e) {
                    return this._weekdaysParseExact ? (l(this, "_weekdaysRegex") || Xt.call(this),
                    e ? this._weekdaysStrictRegex : this._weekdaysRegex) : (l(this, "_weekdaysRegex") || (this._weekdaysRegex = Ot),
                    this._weekdaysStrictRegex && e ? this._weekdaysStrictRegex : this._weekdaysRegex)
                }
                function Kt(e) {
                    return this._weekdaysParseExact ? (l(this, "_weekdaysRegex") || Xt.call(this),
                    e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (l(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = Ht),
                    this._weekdaysShortStrictRegex && e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
                }
                function Jt(e) {
                    return this._weekdaysParseExact ? (l(this, "_weekdaysRegex") || Xt.call(this),
                    e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (l(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = Ft),
                    this._weekdaysMinStrictRegex && e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
                }
                function Xt() {
                    function e(e, t) {
                        return t.length - e.length
                    }
                    var t, a, n, i, s, r = [], o = [], l = [], d = [];
                    for (t = 0; t < 7; t++)
                        a = y([2e3, 1]).day(t),
                        n = Ne(this.weekdaysMin(a, "")),
                        i = Ne(this.weekdaysShort(a, "")),
                        s = Ne(this.weekdays(a, "")),
                        r.push(n),
                        o.push(i),
                        l.push(s),
                        d.push(n),
                        d.push(i),
                        d.push(s);
                    r.sort(e),
                    o.sort(e),
                    l.sort(e),
                    d.sort(e),
                    this._weekdaysRegex = new RegExp("^(" + d.join("|") + ")","i"),
                    this._weekdaysShortRegex = this._weekdaysRegex,
                    this._weekdaysMinRegex = this._weekdaysRegex,
                    this._weekdaysStrictRegex = new RegExp("^(" + l.join("|") + ")","i"),
                    this._weekdaysShortStrictRegex = new RegExp("^(" + o.join("|") + ")","i"),
                    this._weekdaysMinStrictRegex = new RegExp("^(" + r.join("|") + ")","i")
                }
                function Qt() {
                    return this.hours() % 12 || 12
                }
                function Zt() {
                    return this.hours() || 24
                }
                function ea(e, t) {
                    q(e, 0, 0, (function() {
                        return this.localeData().meridiem(this.hours(), this.minutes(), t)
                    }
                    ))
                }
                function ta(e, t) {
                    return t._meridiemParse
                }
                function aa(e) {
                    return "p" === (e + "").toLowerCase().charAt(0)
                }
                q("H", ["HH", 2], 0, "hour"),
                q("h", ["hh", 2], 0, Qt),
                q("k", ["kk", 2], 0, Zt),
                q("hmm", 0, 0, (function() {
                    return "" + Qt.apply(this) + I(this.minutes(), 2)
                }
                )),
                q("hmmss", 0, 0, (function() {
                    return "" + Qt.apply(this) + I(this.minutes(), 2) + I(this.seconds(), 2)
                }
                )),
                q("Hmm", 0, 0, (function() {
                    return "" + this.hours() + I(this.minutes(), 2)
                }
                )),
                q("Hmmss", 0, 0, (function() {
                    return "" + this.hours() + I(this.minutes(), 2) + I(this.seconds(), 2)
                }
                )),
                ea("a", !0),
                ea("A", !1),
                Ae("a", ta),
                Ae("A", ta),
                Ae("H", he, xe),
                Ae("h", he, De),
                Ae("k", he, De),
                Ae("HH", he, de),
                Ae("hh", he, de),
                Ae("kk", he, de),
                Ae("hmm", pe),
                Ae("hmmss", ye),
                Ae("Hmm", pe),
                Ae("Hmmss", ye),
                Ce(["H", "HH"], qe),
                Ce(["k", "kk"], (function(e, t, a) {
                    var n = Ye(e);
                    t[qe] = 24 === n ? 0 : n
                }
                )),
                Ce(["a", "A"], (function(e, t, a) {
                    a._isPm = a._locale.isPM(e),
                    a._meridiem = e
                }
                )),
                Ce(["h", "hh"], (function(e, t, a) {
                    t[qe] = Ye(e),
                    f(a).bigHour = !0
                }
                )),
                Ce("hmm", (function(e, t, a) {
                    var n = e.length - 2;
                    t[qe] = Ye(e.substr(0, n)),
                    t[Ue] = Ye(e.substr(n)),
                    f(a).bigHour = !0
                }
                )),
                Ce("hmmss", (function(e, t, a) {
                    var n = e.length - 4
                      , i = e.length - 2;
                    t[qe] = Ye(e.substr(0, n)),
                    t[Ue] = Ye(e.substr(n, 2)),
                    t[We] = Ye(e.substr(i)),
                    f(a).bigHour = !0
                }
                )),
                Ce("Hmm", (function(e, t, a) {
                    var n = e.length - 2;
                    t[qe] = Ye(e.substr(0, n)),
                    t[Ue] = Ye(e.substr(n))
                }
                )),
                Ce("Hmmss", (function(e, t, a) {
                    var n = e.length - 4
                      , i = e.length - 2;
                    t[qe] = Ye(e.substr(0, n)),
                    t[Ue] = Ye(e.substr(n, 2)),
                    t[We] = Ye(e.substr(i))
                }
                ));
                var na = /[ap]\.?m?\.?/i
                  , ia = Xe("Hours", !0);
                function sa(e, t, a) {
                    return e > 11 ? a ? "pm" : "PM" : a ? "am" : "AM"
                }
                var ra, oa = {
                    calendar: C,
                    longDateFormat: $,
                    invalidDate: V,
                    ordinal: J,
                    dayOfMonthOrdinalParse: X,
                    relativeTime: Z,
                    months: it,
                    monthsShort: st,
                    week: xt,
                    weekdays: Ct,
                    weekdaysMin: It,
                    weekdaysShort: Rt,
                    meridiemParse: na
                }, la = {}, da = {};
                function ca(e, t) {
                    var a, n = Math.min(e.length, t.length);
                    for (a = 0; a < n; a += 1)
                        if (e[a] !== t[a])
                            return a;
                    return n
                }
                function ma(e) {
                    return e ? e.toLowerCase().replace("_", "-") : e
                }
                function ua(e) {
                    for (var t, a, n, i, s = 0; s < e.length; ) {
                        for (t = (i = ma(e[s]).split("-")).length,
                        a = (a = ma(e[s + 1])) ? a.split("-") : null; t > 0; ) {
                            if (n = pa(i.slice(0, t).join("-")))
                                return n;
                            if (a && a.length >= t && ca(i, a) >= t - 1)
                                break;
                            t--
                        }
                        s++
                    }
                    return ra
                }
                function ha(e) {
                    return !(!e || !e.match("^[^/\\\\]*$"))
                }
                function pa(t) {
                    var n = null;
                    if (void 0 === la[t] && e && e.exports && ha(t))
                        try {
                            n = ra._abbr,
                            a(35358)("./" + t),
                            ya(n)
                        } catch (i) {
                            la[t] = null
                        }
                    return la[t]
                }
                function ya(e, t) {
                    var a;
                    return e && ((a = c(t) ? _a(e) : ga(e, t)) ? ra = a : "undefined" != typeof console && console.warn && console.warn("Locale " + e + " not found. Did you forget to load it?")),
                    ra._abbr
                }
                function ga(e, t) {
                    if (null !== t) {
                        var a, n = oa;
                        if (t.abbr = e,
                        null != la[e])
                            S("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),
                            n = la[e]._config;
                        else if (null != t.parentLocale)
                            if (null != la[t.parentLocale])
                                n = la[t.parentLocale]._config;
                            else {
                                if (null == (a = pa(t.parentLocale)))
                                    return da[t.parentLocale] || (da[t.parentLocale] = []),
                                    da[t.parentLocale].push({
                                        name: e,
                                        config: t
                                    }),
                                    null;
                                n = a._config
                            }
                        return la[e] = new E(Y(n, t)),
                        da[e] && da[e].forEach((function(e) {
                            ga(e.name, e.config)
                        }
                        )),
                        ya(e),
                        la[e]
                    }
                    return delete la[e],
                    null
                }
                function fa(e, t) {
                    if (null != t) {
                        var a, n, i = oa;
                        null != la[e] && null != la[e].parentLocale ? la[e].set(Y(la[e]._config, t)) : (null != (n = pa(e)) && (i = n._config),
                        t = Y(i, t),
                        null == n && (t.abbr = e),
                        (a = new E(t)).parentLocale = la[e],
                        la[e] = a),
                        ya(e)
                    } else
                        null != la[e] && (null != la[e].parentLocale ? (la[e] = la[e].parentLocale,
                        e === ya() && ya(e)) : null != la[e] && delete la[e]);
                    return la[e]
                }
                function _a(e) {
                    var t;
                    if (e && e._locale && e._locale._abbr && (e = e._locale._abbr),
                    !e)
                        return ra;
                    if (!r(e)) {
                        if (t = pa(e))
                            return t;
                        e = [e]
                    }
                    return ua(e)
                }
                function ba() {
                    return A(la)
                }
                function va(e) {
                    var t, a = e._a;
                    return a && -2 === f(e).overflow && (t = a[Fe] < 0 || a[Fe] > 11 ? Fe : a[je] < 1 || a[je] > nt(a[He], a[Fe]) ? je : a[qe] < 0 || a[qe] > 24 || 24 === a[qe] && (0 !== a[Ue] || 0 !== a[We] || 0 !== a[Be]) ? qe : a[Ue] < 0 || a[Ue] > 59 ? Ue : a[We] < 0 || a[We] > 59 ? We : a[Be] < 0 || a[Be] > 999 ? Be : -1,
                    f(e)._overflowDayOfYear && (t < He || t > je) && (t = je),
                    f(e)._overflowWeeks && -1 === t && (t = ze),
                    f(e)._overflowWeekday && -1 === t && (t = $e),
                    f(e).overflow = t),
                    e
                }
                var Ma = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/
                  , wa = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/
                  , Ta = /Z|[+-]\d\d(?::?\d\d)?/
                  , ka = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, !1], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, !1], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, !1], ["YYYYDDD", /\d{7}/], ["YYYYMM", /\d{6}/, !1], ["YYYY", /\d{4}/, !1]]
                  , Da = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]]
                  , xa = /^\/?Date\((-?\d+)/i
                  , Aa = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/
                  , La = {
                    UT: 0,
                    GMT: 0,
                    EDT: -240,
                    EST: -300,
                    CDT: -300,
                    CST: -360,
                    MDT: -360,
                    MST: -420,
                    PDT: -420,
                    PST: -480
                };
                function Sa(e) {
                    var t, a, n, i, s, r, o = e._i, l = Ma.exec(o) || wa.exec(o), d = ka.length, c = Da.length;
                    if (l) {
                        for (f(e).iso = !0,
                        t = 0,
                        a = d; t < a; t++)
                            if (ka[t][1].exec(l[1])) {
                                i = ka[t][0],
                                n = !1 !== ka[t][2];
                                break
                            }
                        if (null == i)
                            return void (e._isValid = !1);
                        if (l[3]) {
                            for (t = 0,
                            a = c; t < a; t++)
                                if (Da[t][1].exec(l[3])) {
                                    s = (l[2] || " ") + Da[t][0];
                                    break
                                }
                            if (null == s)
                                return void (e._isValid = !1)
                        }
                        if (!n && null != s)
                            return void (e._isValid = !1);
                        if (l[4]) {
                            if (!Ta.exec(l[4]))
                                return void (e._isValid = !1);
                            r = "Z"
                        }
                        e._f = i + (s || "") + (r || ""),
                        qa(e)
                    } else
                        e._isValid = !1
                }
                function Na(e, t, a, n, i, s) {
                    var r = [Pa(e), st.indexOf(t), parseInt(a, 10), parseInt(n, 10), parseInt(i, 10)];
                    return s && r.push(parseInt(s, 10)),
                    r
                }
                function Pa(e) {
                    var t = parseInt(e, 10);
                    return t <= 49 ? 2e3 + t : t <= 999 ? 1900 + t : t
                }
                function Ya(e) {
                    return e.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "")
                }
                function Ea(e, t, a) {
                    return !e || Rt.indexOf(e) === new Date(t[0],t[1],t[2]).getDay() || (f(a).weekdayMismatch = !0,
                    a._isValid = !1,
                    !1)
                }
                function Ca(e, t, a) {
                    if (e)
                        return La[e];
                    if (t)
                        return 0;
                    var n = parseInt(a, 10)
                      , i = n % 100;
                    return (n - i) / 100 * 60 + i
                }
                function Ra(e) {
                    var t, a = Aa.exec(Ya(e._i));
                    if (a) {
                        if (t = Na(a[4], a[3], a[2], a[5], a[6], a[7]),
                        !Ea(a[1], t, e))
                            return;
                        e._a = t,
                        e._tzm = Ca(a[8], a[9], a[10]),
                        e._d = vt.apply(null, e._a),
                        e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
                        f(e).rfc2822 = !0
                    } else
                        e._isValid = !1
                }
                function Ia(e) {
                    var t = xa.exec(e._i);
                    null === t ? (Sa(e),
                    !1 === e._isValid && (delete e._isValid,
                    Ra(e),
                    !1 === e._isValid && (delete e._isValid,
                    e._strict ? e._isValid = !1 : i.createFromInputFallback(e)))) : e._d = new Date(+t[1])
                }
                function Oa(e, t, a) {
                    return null != e ? e : null != t ? t : a
                }
                function Ha(e) {
                    var t = new Date(i.now());
                    return e._useUTC ? [t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate()] : [t.getFullYear(), t.getMonth(), t.getDate()]
                }
                function Fa(e) {
                    var t, a, n, i, s, r = [];
                    if (!e._d) {
                        for (n = Ha(e),
                        e._w && null == e._a[je] && null == e._a[Fe] && ja(e),
                        null != e._dayOfYear && (s = Oa(e._a[He], n[He]),
                        (e._dayOfYear > Ge(s) || 0 === e._dayOfYear) && (f(e)._overflowDayOfYear = !0),
                        a = vt(s, 0, e._dayOfYear),
                        e._a[Fe] = a.getUTCMonth(),
                        e._a[je] = a.getUTCDate()),
                        t = 0; t < 3 && null == e._a[t]; ++t)
                            e._a[t] = r[t] = n[t];
                        for (; t < 7; t++)
                            e._a[t] = r[t] = null == e._a[t] ? 2 === t ? 1 : 0 : e._a[t];
                        24 === e._a[qe] && 0 === e._a[Ue] && 0 === e._a[We] && 0 === e._a[Be] && (e._nextDay = !0,
                        e._a[qe] = 0),
                        e._d = (e._useUTC ? vt : bt).apply(null, r),
                        i = e._useUTC ? e._d.getUTCDay() : e._d.getDay(),
                        null != e._tzm && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
                        e._nextDay && (e._a[qe] = 24),
                        e._w && void 0 !== e._w.d && e._w.d !== i && (f(e).weekdayMismatch = !0)
                    }
                }
                function ja(e) {
                    var t, a, n, i, s, r, o, l, d;
                    null != (t = e._w).GG || null != t.W || null != t.E ? (s = 1,
                    r = 4,
                    a = Oa(t.GG, e._a[He], Tt(Ka(), 1, 4).year),
                    n = Oa(t.W, 1),
                    ((i = Oa(t.E, 1)) < 1 || i > 7) && (l = !0)) : (s = e._locale._week.dow,
                    r = e._locale._week.doy,
                    d = Tt(Ka(), s, r),
                    a = Oa(t.gg, e._a[He], d.year),
                    n = Oa(t.w, d.week),
                    null != t.d ? ((i = t.d) < 0 || i > 6) && (l = !0) : null != t.e ? (i = t.e + s,
                    (t.e < 0 || t.e > 6) && (l = !0)) : i = s),
                    n < 1 || n > kt(a, s, r) ? f(e)._overflowWeeks = !0 : null != l ? f(e)._overflowWeekday = !0 : (o = wt(a, n, i, s, r),
                    e._a[He] = o.year,
                    e._dayOfYear = o.dayOfYear)
                }
                function qa(e) {
                    if (e._f !== i.ISO_8601)
                        if (e._f !== i.RFC_2822) {
                            e._a = [],
                            f(e).empty = !0;
                            var t, a, n, s, r, o, l, d = "" + e._i, c = d.length, m = 0;
                            for (l = (n = z(e._f, e._locale).match(O) || []).length,
                            t = 0; t < l; t++)
                                s = n[t],
                                (a = (d.match(Le(s, e)) || [])[0]) && ((r = d.substr(0, d.indexOf(a))).length > 0 && f(e).unusedInput.push(r),
                                d = d.slice(d.indexOf(a) + a.length),
                                m += a.length),
                                j[s] ? (a ? f(e).empty = !1 : f(e).unusedTokens.push(s),
                                Ie(s, a, e)) : e._strict && !a && f(e).unusedTokens.push(s);
                            f(e).charsLeftOver = c - m,
                            d.length > 0 && f(e).unusedInput.push(d),
                            e._a[qe] <= 12 && !0 === f(e).bigHour && e._a[qe] > 0 && (f(e).bigHour = void 0),
                            f(e).parsedDateParts = e._a.slice(0),
                            f(e).meridiem = e._meridiem,
                            e._a[qe] = Ua(e._locale, e._a[qe], e._meridiem),
                            null !== (o = f(e).era) && (e._a[He] = e._locale.erasConvertYear(o, e._a[He])),
                            Fa(e),
                            va(e)
                        } else
                            Ra(e);
                    else
                        Sa(e)
                }
                function Ua(e, t, a) {
                    var n;
                    return null == a ? t : null != e.meridiemHour ? e.meridiemHour(t, a) : null != e.isPM ? ((n = e.isPM(a)) && t < 12 && (t += 12),
                    n || 12 !== t || (t = 0),
                    t) : t
                }
                function Wa(e) {
                    var t, a, n, i, s, r, o = !1, l = e._f.length;
                    if (0 === l)
                        return f(e).invalidFormat = !0,
                        void (e._d = new Date(NaN));
                    for (i = 0; i < l; i++)
                        s = 0,
                        r = !1,
                        t = w({}, e),
                        null != e._useUTC && (t._useUTC = e._useUTC),
                        t._f = e._f[i],
                        qa(t),
                        _(t) && (r = !0),
                        s += f(t).charsLeftOver,
                        s += 10 * f(t).unusedTokens.length,
                        f(t).score = s,
                        o ? s < n && (n = s,
                        a = t) : (null == n || s < n || r) && (n = s,
                        a = t,
                        r && (o = !0));
                    p(e, a || t)
                }
                function Ba(e) {
                    if (!e._d) {
                        var t = ie(e._i)
                          , a = void 0 === t.day ? t.date : t.day;
                        e._a = h([t.year, t.month, a, t.hour, t.minute, t.second, t.millisecond], (function(e) {
                            return e && parseInt(e, 10)
                        }
                        )),
                        Fa(e)
                    }
                }
                function za(e) {
                    var t = new T(va($a(e)));
                    return t._nextDay && (t.add(1, "d"),
                    t._nextDay = void 0),
                    t
                }
                function $a(e) {
                    var t = e._i
                      , a = e._f;
                    return e._locale = e._locale || _a(e._l),
                    null === t || void 0 === a && "" === t ? b({
                        nullInput: !0
                    }) : ("string" == typeof t && (e._i = t = e._locale.preparse(t)),
                    k(t) ? new T(va(t)) : (u(t) ? e._d = t : r(a) ? Wa(e) : a ? qa(e) : Ga(e),
                    _(e) || (e._d = null),
                    e))
                }
                function Ga(e) {
                    var t = e._i;
                    c(t) ? e._d = new Date(i.now()) : u(t) ? e._d = new Date(t.valueOf()) : "string" == typeof t ? Ia(e) : r(t) ? (e._a = h(t.slice(0), (function(e) {
                        return parseInt(e, 10)
                    }
                    )),
                    Fa(e)) : o(t) ? Ba(e) : m(t) ? e._d = new Date(t) : i.createFromInputFallback(e)
                }
                function Va(e, t, a, n, i) {
                    var s = {};
                    return !0 !== t && !1 !== t || (n = t,
                    t = void 0),
                    !0 !== a && !1 !== a || (n = a,
                    a = void 0),
                    (o(e) && d(e) || r(e) && 0 === e.length) && (e = void 0),
                    s._isAMomentObject = !0,
                    s._useUTC = s._isUTC = i,
                    s._l = a,
                    s._i = e,
                    s._f = t,
                    s._strict = n,
                    za(s)
                }
                function Ka(e, t, a, n) {
                    return Va(e, t, a, n, !1)
                }
                i.createFromInputFallback = x("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", (function(e) {
                    e._d = new Date(e._i + (e._useUTC ? " UTC" : ""))
                }
                )),
                i.ISO_8601 = function() {}
                ,
                i.RFC_2822 = function() {}
                ;
                var Ja = x("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", (function() {
                    var e = Ka.apply(null, arguments);
                    return this.isValid() && e.isValid() ? e < this ? this : e : b()
                }
                ))
                  , Xa = x("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", (function() {
                    var e = Ka.apply(null, arguments);
                    return this.isValid() && e.isValid() ? e > this ? this : e : b()
                }
                ));
                function Qa(e, t) {
                    var a, n;
                    if (1 === t.length && r(t[0]) && (t = t[0]),
                    !t.length)
                        return Ka();
                    for (a = t[0],
                    n = 1; n < t.length; ++n)
                        t[n].isValid() && !t[n][e](a) || (a = t[n]);
                    return a
                }
                function Za() {
                    return Qa("isBefore", [].slice.call(arguments, 0))
                }
                function en() {
                    return Qa("isAfter", [].slice.call(arguments, 0))
                }
                var tn = function() {
                    return Date.now ? Date.now() : +new Date
                }
                  , an = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];
                function nn(e) {
                    var t, a, n = !1, i = an.length;
                    for (t in e)
                        if (l(e, t) && (-1 === Ve.call(an, t) || null != e[t] && isNaN(e[t])))
                            return !1;
                    for (a = 0; a < i; ++a)
                        if (e[an[a]]) {
                            if (n)
                                return !1;
                            parseFloat(e[an[a]]) !== Ye(e[an[a]]) && (n = !0)
                        }
                    return !0
                }
                function sn() {
                    return this._isValid
                }
                function rn() {
                    return Sn(NaN)
                }
                function on(e) {
                    var t = ie(e)
                      , a = t.year || 0
                      , n = t.quarter || 0
                      , i = t.month || 0
                      , s = t.week || t.isoWeek || 0
                      , r = t.day || 0
                      , o = t.hour || 0
                      , l = t.minute || 0
                      , d = t.second || 0
                      , c = t.millisecond || 0;
                    this._isValid = nn(t),
                    this._milliseconds = +c + 1e3 * d + 6e4 * l + 1e3 * o * 60 * 60,
                    this._days = +r + 7 * s,
                    this._months = +i + 3 * n + 12 * a,
                    this._data = {},
                    this._locale = _a(),
                    this._bubble()
                }
                function ln(e) {
                    return e instanceof on
                }
                function dn(e) {
                    return e < 0 ? -1 * Math.round(-1 * e) : Math.round(e)
                }
                function cn(e, t, a) {
                    var n, i = Math.min(e.length, t.length), s = Math.abs(e.length - t.length), r = 0;
                    for (n = 0; n < i; n++)
                        (a && e[n] !== t[n] || !a && Ye(e[n]) !== Ye(t[n])) && r++;
                    return r + s
                }
                function mn(e, t) {
                    q(e, 0, 0, (function() {
                        var e = this.utcOffset()
                          , a = "+";
                        return e < 0 && (e = -e,
                        a = "-"),
                        a + I(~~(e / 60), 2) + t + I(~~e % 60, 2)
                    }
                    ))
                }
                mn("Z", ":"),
                mn("ZZ", ""),
                Ae("Z", we),
                Ae("ZZ", we),
                Ce(["Z", "ZZ"], (function(e, t, a) {
                    a._useUTC = !0,
                    a._tzm = hn(we, e)
                }
                ));
                var un = /([\+\-]|\d\d)/gi;
                function hn(e, t) {
                    var a, n, i = (t || "").match(e);
                    return null === i ? null : 0 === (n = 60 * (a = ((i[i.length - 1] || []) + "").match(un) || ["-", 0, 0])[1] + Ye(a[2])) ? 0 : "+" === a[0] ? n : -n
                }
                function pn(e, t) {
                    var a, n;
                    return t._isUTC ? (a = t.clone(),
                    n = (k(e) || u(e) ? e.valueOf() : Ka(e).valueOf()) - a.valueOf(),
                    a._d.setTime(a._d.valueOf() + n),
                    i.updateOffset(a, !1),
                    a) : Ka(e).local()
                }
                function yn(e) {
                    return -Math.round(e._d.getTimezoneOffset())
                }
                function gn(e, t, a) {
                    var n, s = this._offset || 0;
                    if (!this.isValid())
                        return null != e ? this : NaN;
                    if (null != e) {
                        if ("string" == typeof e) {
                            if (null === (e = hn(we, e)))
                                return this
                        } else
                            Math.abs(e) < 16 && !a && (e *= 60);
                        return !this._isUTC && t && (n = yn(this)),
                        this._offset = e,
                        this._isUTC = !0,
                        null != n && this.add(n, "m"),
                        s !== e && (!t || this._changeInProgress ? Cn(this, Sn(e - s, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0,
                        i.updateOffset(this, !0),
                        this._changeInProgress = null)),
                        this
                    }
                    return this._isUTC ? s : yn(this)
                }
                function fn(e, t) {
                    return null != e ? ("string" != typeof e && (e = -e),
                    this.utcOffset(e, t),
                    this) : -this.utcOffset()
                }
                function _n(e) {
                    return this.utcOffset(0, e)
                }
                function bn(e) {
                    return this._isUTC && (this.utcOffset(0, e),
                    this._isUTC = !1,
                    e && this.subtract(yn(this), "m")),
                    this
                }
                function vn() {
                    if (null != this._tzm)
                        this.utcOffset(this._tzm, !1, !0);
                    else if ("string" == typeof this._i) {
                        var e = hn(Me, this._i);
                        null != e ? this.utcOffset(e) : this.utcOffset(0, !0)
                    }
                    return this
                }
                function Mn(e) {
                    return !!this.isValid() && (e = e ? Ka(e).utcOffset() : 0,
                    (this.utcOffset() - e) % 60 == 0)
                }
                function wn() {
                    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset()
                }
                function Tn() {
                    if (!c(this._isDSTShifted))
                        return this._isDSTShifted;
                    var e, t = {};
                    return w(t, this),
                    (t = $a(t))._a ? (e = t._isUTC ? y(t._a) : Ka(t._a),
                    this._isDSTShifted = this.isValid() && cn(t._a, e.toArray()) > 0) : this._isDSTShifted = !1,
                    this._isDSTShifted
                }
                function kn() {
                    return !!this.isValid() && !this._isUTC
                }
                function Dn() {
                    return !!this.isValid() && this._isUTC
                }
                function xn() {
                    return !!this.isValid() && this._isUTC && 0 === this._offset
                }
                i.updateOffset = function() {}
                ;
                var An = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/
                  , Ln = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
                function Sn(e, t) {
                    var a, n, i, s = e, r = null;
                    return ln(e) ? s = {
                        ms: e._milliseconds,
                        d: e._days,
                        M: e._months
                    } : m(e) || !isNaN(+e) ? (s = {},
                    t ? s[t] = +e : s.milliseconds = +e) : (r = An.exec(e)) ? (a = "-" === r[1] ? -1 : 1,
                    s = {
                        y: 0,
                        d: Ye(r[je]) * a,
                        h: Ye(r[qe]) * a,
                        m: Ye(r[Ue]) * a,
                        s: Ye(r[We]) * a,
                        ms: Ye(dn(1e3 * r[Be])) * a
                    }) : (r = Ln.exec(e)) ? (a = "-" === r[1] ? -1 : 1,
                    s = {
                        y: Nn(r[2], a),
                        M: Nn(r[3], a),
                        w: Nn(r[4], a),
                        d: Nn(r[5], a),
                        h: Nn(r[6], a),
                        m: Nn(r[7], a),
                        s: Nn(r[8], a)
                    }) : null == s ? s = {} : "object" == typeof s && ("from"in s || "to"in s) && (i = Yn(Ka(s.from), Ka(s.to)),
                    (s = {}).ms = i.milliseconds,
                    s.M = i.months),
                    n = new on(s),
                    ln(e) && l(e, "_locale") && (n._locale = e._locale),
                    ln(e) && l(e, "_isValid") && (n._isValid = e._isValid),
                    n
                }
                function Nn(e, t) {
                    var a = e && parseFloat(e.replace(",", "."));
                    return (isNaN(a) ? 0 : a) * t
                }
                function Pn(e, t) {
                    var a = {};
                    return a.months = t.month() - e.month() + 12 * (t.year() - e.year()),
                    e.clone().add(a.months, "M").isAfter(t) && --a.months,
                    a.milliseconds = +t - +e.clone().add(a.months, "M"),
                    a
                }
                function Yn(e, t) {
                    var a;
                    return e.isValid() && t.isValid() ? (t = pn(t, e),
                    e.isBefore(t) ? a = Pn(e, t) : ((a = Pn(t, e)).milliseconds = -a.milliseconds,
                    a.months = -a.months),
                    a) : {
                        milliseconds: 0,
                        months: 0
                    }
                }
                function En(e, t) {
                    return function(a, n) {
                        var i;
                        return null === n || isNaN(+n) || (S(t, "moment()." + t + "(period, number) is deprecated. Please use moment()." + t + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),
                        i = a,
                        a = n,
                        n = i),
                        Cn(this, Sn(a, n), e),
                        this
                    }
                }
                function Cn(e, t, a, n) {
                    var s = t._milliseconds
                      , r = dn(t._days)
                      , o = dn(t._months);
                    e.isValid() && (n = null == n || n,
                    o && ht(e, Qe(e, "Month") + o * a),
                    r && Ze(e, "Date", Qe(e, "Date") + r * a),
                    s && e._d.setTime(e._d.valueOf() + s * a),
                    n && i.updateOffset(e, r || o))
                }
                Sn.fn = on.prototype,
                Sn.invalid = rn;
                var Rn = En(1, "add")
                  , In = En(-1, "subtract");
                function On(e) {
                    return "string" == typeof e || e instanceof String
                }
                function Hn(e) {
                    return k(e) || u(e) || On(e) || m(e) || jn(e) || Fn(e) || null == e
                }
                function Fn(e) {
                    var t, a, n = o(e) && !d(e), i = !1, s = ["years", "year", "y", "months", "month", "M", "days", "day", "d", "dates", "date", "D", "hours", "hour", "h", "minutes", "minute", "m", "seconds", "second", "s", "milliseconds", "millisecond", "ms"], r = s.length;
                    for (t = 0; t < r; t += 1)
                        a = s[t],
                        i = i || l(e, a);
                    return n && i
                }
                function jn(e) {
                    var t = r(e)
                      , a = !1;
                    return t && (a = 0 === e.filter((function(t) {
                        return !m(t) && On(e)
                    }
                    )).length),
                    t && a
                }
                function qn(e) {
                    var t, a, n = o(e) && !d(e), i = !1, s = ["sameDay", "nextDay", "lastDay", "nextWeek", "lastWeek", "sameElse"];
                    for (t = 0; t < s.length; t += 1)
                        a = s[t],
                        i = i || l(e, a);
                    return n && i
                }
                function Un(e, t) {
                    var a = e.diff(t, "days", !0);
                    return a < -6 ? "sameElse" : a < -1 ? "lastWeek" : a < 0 ? "lastDay" : a < 1 ? "sameDay" : a < 2 ? "nextDay" : a < 7 ? "nextWeek" : "sameElse"
                }
                function Wn(e, t) {
                    1 === arguments.length && (arguments[0] ? Hn(arguments[0]) ? (e = arguments[0],
                    t = void 0) : qn(arguments[0]) && (t = arguments[0],
                    e = void 0) : (e = void 0,
                    t = void 0));
                    var a = e || Ka()
                      , n = pn(a, this).startOf("day")
                      , s = i.calendarFormat(this, n) || "sameElse"
                      , r = t && (N(t[s]) ? t[s].call(this, a) : t[s]);
                    return this.format(r || this.localeData().calendar(s, this, Ka(a)))
                }
                function Bn() {
                    return new T(this)
                }
                function zn(e, t) {
                    var a = k(e) ? e : Ka(e);
                    return !(!this.isValid() || !a.isValid()) && ("millisecond" === (t = ne(t) || "millisecond") ? this.valueOf() > a.valueOf() : a.valueOf() < this.clone().startOf(t).valueOf())
                }
                function $n(e, t) {
                    var a = k(e) ? e : Ka(e);
                    return !(!this.isValid() || !a.isValid()) && ("millisecond" === (t = ne(t) || "millisecond") ? this.valueOf() < a.valueOf() : this.clone().endOf(t).valueOf() < a.valueOf())
                }
                function Gn(e, t, a, n) {
                    var i = k(e) ? e : Ka(e)
                      , s = k(t) ? t : Ka(t);
                    return !!(this.isValid() && i.isValid() && s.isValid()) && ("(" === (n = n || "()")[0] ? this.isAfter(i, a) : !this.isBefore(i, a)) && (")" === n[1] ? this.isBefore(s, a) : !this.isAfter(s, a))
                }
                function Vn(e, t) {
                    var a, n = k(e) ? e : Ka(e);
                    return !(!this.isValid() || !n.isValid()) && ("millisecond" === (t = ne(t) || "millisecond") ? this.valueOf() === n.valueOf() : (a = n.valueOf(),
                    this.clone().startOf(t).valueOf() <= a && a <= this.clone().endOf(t).valueOf()))
                }
                function Kn(e, t) {
                    return this.isSame(e, t) || this.isAfter(e, t)
                }
                function Jn(e, t) {
                    return this.isSame(e, t) || this.isBefore(e, t)
                }
                function Xn(e, t, a) {
                    var n, i, s;
                    if (!this.isValid())
                        return NaN;
                    if (!(n = pn(e, this)).isValid())
                        return NaN;
                    switch (i = 6e4 * (n.utcOffset() - this.utcOffset()),
                    t = ne(t)) {
                    case "year":
                        s = Qn(this, n) / 12;
                        break;
                    case "month":
                        s = Qn(this, n);
                        break;
                    case "quarter":
                        s = Qn(this, n) / 3;
                        break;
                    case "second":
                        s = (this - n) / 1e3;
                        break;
                    case "minute":
                        s = (this - n) / 6e4;
                        break;
                    case "hour":
                        s = (this - n) / 36e5;
                        break;
                    case "day":
                        s = (this - n - i) / 864e5;
                        break;
                    case "week":
                        s = (this - n - i) / 6048e5;
                        break;
                    default:
                        s = this - n
                    }
                    return a ? s : Pe(s)
                }
                function Qn(e, t) {
                    if (e.date() < t.date())
                        return -Qn(t, e);
                    var a = 12 * (t.year() - e.year()) + (t.month() - e.month())
                      , n = e.clone().add(a, "months");
                    return -(a + (t - n < 0 ? (t - n) / (n - e.clone().add(a - 1, "months")) : (t - n) / (e.clone().add(a + 1, "months") - n))) || 0
                }
                function Zn() {
                    return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
                }
                function ei(e) {
                    if (!this.isValid())
                        return null;
                    var t = !0 !== e
                      , a = t ? this.clone().utc() : this;
                    return a.year() < 0 || a.year() > 9999 ? B(a, t ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ") : N(Date.prototype.toISOString) ? t ? this.toDate().toISOString() : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3).toISOString().replace("Z", B(a, "Z")) : B(a, t ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ")
                }
                function ti() {
                    if (!this.isValid())
                        return "moment.invalid(/* " + this._i + " */)";
                    var e, t, a, n, i = "moment", s = "";
                    return this.isLocal() || (i = 0 === this.utcOffset() ? "moment.utc" : "moment.parseZone",
                    s = "Z"),
                    e = "[" + i + '("]',
                    t = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY",
                    a = "-MM-DD[T]HH:mm:ss.SSS",
                    n = s + '[")]',
                    this.format(e + t + a + n)
                }
                function ai(e) {
                    e || (e = this.isUtc() ? i.defaultFormatUtc : i.defaultFormat);
                    var t = B(this, e);
                    return this.localeData().postformat(t)
                }
                function ni(e, t) {
                    return this.isValid() && (k(e) && e.isValid() || Ka(e).isValid()) ? Sn({
                        to: this,
                        from: e
                    }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate()
                }
                function ii(e) {
                    return this.from(Ka(), e)
                }
                function si(e, t) {
                    return this.isValid() && (k(e) && e.isValid() || Ka(e).isValid()) ? Sn({
                        from: this,
                        to: e
                    }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate()
                }
                function ri(e) {
                    return this.to(Ka(), e)
                }
                function oi(e) {
                    var t;
                    return void 0 === e ? this._locale._abbr : (null != (t = _a(e)) && (this._locale = t),
                    this)
                }
                i.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ",
                i.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
                var li = x("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", (function(e) {
                    return void 0 === e ? this.localeData() : this.locale(e)
                }
                ));
                function di() {
                    return this._locale
                }
                var ci = 1e3
                  , mi = 60 * ci
                  , ui = 60 * mi
                  , hi = 3506328 * ui;
                function pi(e, t) {
                    return (e % t + t) % t
                }
                function yi(e, t, a) {
                    return e < 100 && e >= 0 ? new Date(e + 400,t,a) - hi : new Date(e,t,a).valueOf()
                }
                function gi(e, t, a) {
                    return e < 100 && e >= 0 ? Date.UTC(e + 400, t, a) - hi : Date.UTC(e, t, a)
                }
                function fi(e) {
                    var t, a;
                    if (void 0 === (e = ne(e)) || "millisecond" === e || !this.isValid())
                        return this;
                    switch (a = this._isUTC ? gi : yi,
                    e) {
                    case "year":
                        t = a(this.year(), 0, 1);
                        break;
                    case "quarter":
                        t = a(this.year(), this.month() - this.month() % 3, 1);
                        break;
                    case "month":
                        t = a(this.year(), this.month(), 1);
                        break;
                    case "week":
                        t = a(this.year(), this.month(), this.date() - this.weekday());
                        break;
                    case "isoWeek":
                        t = a(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                        break;
                    case "day":
                    case "date":
                        t = a(this.year(), this.month(), this.date());
                        break;
                    case "hour":
                        t = this._d.valueOf(),
                        t -= pi(t + (this._isUTC ? 0 : this.utcOffset() * mi), ui);
                        break;
                    case "minute":
                        t = this._d.valueOf(),
                        t -= pi(t, mi);
                        break;
                    case "second":
                        t = this._d.valueOf(),
                        t -= pi(t, ci)
                    }
                    return this._d.setTime(t),
                    i.updateOffset(this, !0),
                    this
                }
                function _i(e) {
                    var t, a;
                    if (void 0 === (e = ne(e)) || "millisecond" === e || !this.isValid())
                        return this;
                    switch (a = this._isUTC ? gi : yi,
                    e) {
                    case "year":
                        t = a(this.year() + 1, 0, 1) - 1;
                        break;
                    case "quarter":
                        t = a(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                        break;
                    case "month":
                        t = a(this.year(), this.month() + 1, 1) - 1;
                        break;
                    case "week":
                        t = a(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                        break;
                    case "isoWeek":
                        t = a(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                        break;
                    case "day":
                    case "date":
                        t = a(this.year(), this.month(), this.date() + 1) - 1;
                        break;
                    case "hour":
                        t = this._d.valueOf(),
                        t += ui - pi(t + (this._isUTC ? 0 : this.utcOffset() * mi), ui) - 1;
                        break;
                    case "minute":
                        t = this._d.valueOf(),
                        t += mi - pi(t, mi) - 1;
                        break;
                    case "second":
                        t = this._d.valueOf(),
                        t += ci - pi(t, ci) - 1
                    }
                    return this._d.setTime(t),
                    i.updateOffset(this, !0),
                    this
                }
                function bi() {
                    return this._d.valueOf() - 6e4 * (this._offset || 0)
                }
                function vi() {
                    return Math.floor(this.valueOf() / 1e3)
                }
                function Mi() {
                    return new Date(this.valueOf())
                }
                function wi() {
                    var e = this;
                    return [e.year(), e.month(), e.date(), e.hour(), e.minute(), e.second(), e.millisecond()]
                }
                function Ti() {
                    var e = this;
                    return {
                        years: e.year(),
                        months: e.month(),
                        date: e.date(),
                        hours: e.hours(),
                        minutes: e.minutes(),
                        seconds: e.seconds(),
                        milliseconds: e.milliseconds()
                    }
                }
                function ki() {
                    return this.isValid() ? this.toISOString() : null
                }
                function Di() {
                    return _(this)
                }
                function xi() {
                    return p({}, f(this))
                }
                function Ai() {
                    return f(this).overflow
                }
                function Li() {
                    return {
                        input: this._i,
                        format: this._f,
                        locale: this._locale,
                        isUTC: this._isUTC,
                        strict: this._strict
                    }
                }
                function Si(e, t) {
                    var a, n, s, r = this._eras || _a("en")._eras;
                    for (a = 0,
                    n = r.length; a < n; ++a)
                        switch ("string" == typeof r[a].since && (s = i(r[a].since).startOf("day"),
                        r[a].since = s.valueOf()),
                        typeof r[a].until) {
                        case "undefined":
                            r[a].until = 1 / 0;
                            break;
                        case "string":
                            s = i(r[a].until).startOf("day").valueOf(),
                            r[a].until = s.valueOf()
                        }
                    return r
                }
                function Ni(e, t, a) {
                    var n, i, s, r, o, l = this.eras();
                    for (e = e.toUpperCase(),
                    n = 0,
                    i = l.length; n < i; ++n)
                        if (s = l[n].name.toUpperCase(),
                        r = l[n].abbr.toUpperCase(),
                        o = l[n].narrow.toUpperCase(),
                        a)
                            switch (t) {
                            case "N":
                            case "NN":
                            case "NNN":
                                if (r === e)
                                    return l[n];
                                break;
                            case "NNNN":
                                if (s === e)
                                    return l[n];
                                break;
                            case "NNNNN":
                                if (o === e)
                                    return l[n]
                            }
                        else if ([s, r, o].indexOf(e) >= 0)
                            return l[n]
                }
                function Pi(e, t) {
                    var a = e.since <= e.until ? 1 : -1;
                    return void 0 === t ? i(e.since).year() : i(e.since).year() + (t - e.offset) * a
                }
                function Yi() {
                    var e, t, a, n = this.localeData().eras();
                    for (e = 0,
                    t = n.length; e < t; ++e) {
                        if (a = this.clone().startOf("day").valueOf(),
                        n[e].since <= a && a <= n[e].until)
                            return n[e].name;
                        if (n[e].until <= a && a <= n[e].since)
                            return n[e].name
                    }
                    return ""
                }
                function Ei() {
                    var e, t, a, n = this.localeData().eras();
                    for (e = 0,
                    t = n.length; e < t; ++e) {
                        if (a = this.clone().startOf("day").valueOf(),
                        n[e].since <= a && a <= n[e].until)
                            return n[e].narrow;
                        if (n[e].until <= a && a <= n[e].since)
                            return n[e].narrow
                    }
                    return ""
                }
                function Ci() {
                    var e, t, a, n = this.localeData().eras();
                    for (e = 0,
                    t = n.length; e < t; ++e) {
                        if (a = this.clone().startOf("day").valueOf(),
                        n[e].since <= a && a <= n[e].until)
                            return n[e].abbr;
                        if (n[e].until <= a && a <= n[e].since)
                            return n[e].abbr
                    }
                    return ""
                }
                function Ri() {
                    var e, t, a, n, s = this.localeData().eras();
                    for (e = 0,
                    t = s.length; e < t; ++e)
                        if (a = s[e].since <= s[e].until ? 1 : -1,
                        n = this.clone().startOf("day").valueOf(),
                        s[e].since <= n && n <= s[e].until || s[e].until <= n && n <= s[e].since)
                            return (this.year() - i(s[e].since).year()) * a + s[e].offset;
                    return this.year()
                }
                function Ii(e) {
                    return l(this, "_erasNameRegex") || Wi.call(this),
                    e ? this._erasNameRegex : this._erasRegex
                }
                function Oi(e) {
                    return l(this, "_erasAbbrRegex") || Wi.call(this),
                    e ? this._erasAbbrRegex : this._erasRegex
                }
                function Hi(e) {
                    return l(this, "_erasNarrowRegex") || Wi.call(this),
                    e ? this._erasNarrowRegex : this._erasRegex
                }
                function Fi(e, t) {
                    return t.erasAbbrRegex(e)
                }
                function ji(e, t) {
                    return t.erasNameRegex(e)
                }
                function qi(e, t) {
                    return t.erasNarrowRegex(e)
                }
                function Ui(e, t) {
                    return t._eraYearOrdinalRegex || be
                }
                function Wi() {
                    var e, t, a, n, i, s = [], r = [], o = [], l = [], d = this.eras();
                    for (e = 0,
                    t = d.length; e < t; ++e)
                        a = Ne(d[e].name),
                        n = Ne(d[e].abbr),
                        i = Ne(d[e].narrow),
                        r.push(a),
                        s.push(n),
                        o.push(i),
                        l.push(a),
                        l.push(n),
                        l.push(i);
                    this._erasRegex = new RegExp("^(" + l.join("|") + ")","i"),
                    this._erasNameRegex = new RegExp("^(" + r.join("|") + ")","i"),
                    this._erasAbbrRegex = new RegExp("^(" + s.join("|") + ")","i"),
                    this._erasNarrowRegex = new RegExp("^(" + o.join("|") + ")","i")
                }
                function Bi(e, t) {
                    q(0, [e, e.length], 0, t)
                }
                function zi(e) {
                    return Xi.call(this, e, this.week(), this.weekday() + this.localeData()._week.dow, this.localeData()._week.dow, this.localeData()._week.doy)
                }
                function $i(e) {
                    return Xi.call(this, e, this.isoWeek(), this.isoWeekday(), 1, 4)
                }
                function Gi() {
                    return kt(this.year(), 1, 4)
                }
                function Vi() {
                    return kt(this.isoWeekYear(), 1, 4)
                }
                function Ki() {
                    var e = this.localeData()._week;
                    return kt(this.year(), e.dow, e.doy)
                }
                function Ji() {
                    var e = this.localeData()._week;
                    return kt(this.weekYear(), e.dow, e.doy)
                }
                function Xi(e, t, a, n, i) {
                    var s;
                    return null == e ? Tt(this, n, i).year : (t > (s = kt(e, n, i)) && (t = s),
                    Qi.call(this, e, t, a, n, i))
                }
                function Qi(e, t, a, n, i) {
                    var s = wt(e, t, a, n, i)
                      , r = vt(s.year, 0, s.dayOfYear);
                    return this.year(r.getUTCFullYear()),
                    this.month(r.getUTCMonth()),
                    this.date(r.getUTCDate()),
                    this
                }
                function Zi(e) {
                    return null == e ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (e - 1) + this.month() % 3)
                }
                q("N", 0, 0, "eraAbbr"),
                q("NN", 0, 0, "eraAbbr"),
                q("NNN", 0, 0, "eraAbbr"),
                q("NNNN", 0, 0, "eraName"),
                q("NNNNN", 0, 0, "eraNarrow"),
                q("y", ["y", 1], "yo", "eraYear"),
                q("y", ["yy", 2], 0, "eraYear"),
                q("y", ["yyy", 3], 0, "eraYear"),
                q("y", ["yyyy", 4], 0, "eraYear"),
                Ae("N", Fi),
                Ae("NN", Fi),
                Ae("NNN", Fi),
                Ae("NNNN", ji),
                Ae("NNNNN", qi),
                Ce(["N", "NN", "NNN", "NNNN", "NNNNN"], (function(e, t, a, n) {
                    var i = a._locale.erasParse(e, n, a._strict);
                    i ? f(a).era = i : f(a).invalidEra = e
                }
                )),
                Ae("y", be),
                Ae("yy", be),
                Ae("yyy", be),
                Ae("yyyy", be),
                Ae("yo", Ui),
                Ce(["y", "yy", "yyy", "yyyy"], He),
                Ce(["yo"], (function(e, t, a, n) {
                    var i;
                    a._locale._eraYearOrdinalRegex && (i = e.match(a._locale._eraYearOrdinalRegex)),
                    a._locale.eraYearOrdinalParse ? t[He] = a._locale.eraYearOrdinalParse(e, i) : t[He] = parseInt(e, 10)
                }
                )),
                q(0, ["gg", 2], 0, (function() {
                    return this.weekYear() % 100
                }
                )),
                q(0, ["GG", 2], 0, (function() {
                    return this.isoWeekYear() % 100
                }
                )),
                Bi("gggg", "weekYear"),
                Bi("ggggg", "weekYear"),
                Bi("GGGG", "isoWeekYear"),
                Bi("GGGGG", "isoWeekYear"),
                Ae("G", ve),
                Ae("g", ve),
                Ae("GG", he, de),
                Ae("gg", he, de),
                Ae("GGGG", fe, me),
                Ae("gggg", fe, me),
                Ae("GGGGG", _e, ue),
                Ae("ggggg", _e, ue),
                Re(["gggg", "ggggg", "GGGG", "GGGGG"], (function(e, t, a, n) {
                    t[n.substr(0, 2)] = Ye(e)
                }
                )),
                Re(["gg", "GG"], (function(e, t, a, n) {
                    t[n] = i.parseTwoDigitYear(e)
                }
                )),
                q("Q", 0, "Qo", "quarter"),
                Ae("Q", le),
                Ce("Q", (function(e, t) {
                    t[Fe] = 3 * (Ye(e) - 1)
                }
                )),
                q("D", ["DD", 2], "Do", "date"),
                Ae("D", he, De),
                Ae("DD", he, de),
                Ae("Do", (function(e, t) {
                    return e ? t._dayOfMonthOrdinalParse || t._ordinalParse : t._dayOfMonthOrdinalParseLenient
                }
                )),
                Ce(["D", "DD"], je),
                Ce("Do", (function(e, t) {
                    t[je] = Ye(e.match(he)[0])
                }
                ));
                var es = Xe("Date", !0);
                function ts(e) {
                    var t = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
                    return null == e ? t : this.add(e - t, "d")
                }
                q("DDD", ["DDDD", 3], "DDDo", "dayOfYear"),
                Ae("DDD", ge),
                Ae("DDDD", ce),
                Ce(["DDD", "DDDD"], (function(e, t, a) {
                    a._dayOfYear = Ye(e)
                }
                )),
                q("m", ["mm", 2], 0, "minute"),
                Ae("m", he, xe),
                Ae("mm", he, de),
                Ce(["m", "mm"], Ue);
                var as = Xe("Minutes", !1);
                q("s", ["ss", 2], 0, "second"),
                Ae("s", he, xe),
                Ae("ss", he, de),
                Ce(["s", "ss"], We);
                var ns, is, ss = Xe("Seconds", !1);
                for (q("S", 0, 0, (function() {
                    return ~~(this.millisecond() / 100)
                }
                )),
                q(0, ["SS", 2], 0, (function() {
                    return ~~(this.millisecond() / 10)
                }
                )),
                q(0, ["SSS", 3], 0, "millisecond"),
                q(0, ["SSSS", 4], 0, (function() {
                    return 10 * this.millisecond()
                }
                )),
                q(0, ["SSSSS", 5], 0, (function() {
                    return 100 * this.millisecond()
                }
                )),
                q(0, ["SSSSSS", 6], 0, (function() {
                    return 1e3 * this.millisecond()
                }
                )),
                q(0, ["SSSSSSS", 7], 0, (function() {
                    return 1e4 * this.millisecond()
                }
                )),
                q(0, ["SSSSSSSS", 8], 0, (function() {
                    return 1e5 * this.millisecond()
                }
                )),
                q(0, ["SSSSSSSSS", 9], 0, (function() {
                    return 1e6 * this.millisecond()
                }
                )),
                Ae("S", ge, le),
                Ae("SS", ge, de),
                Ae("SSS", ge, ce),
                ns = "SSSS"; ns.length <= 9; ns += "S")
                    Ae(ns, be);
                function rs(e, t) {
                    t[Be] = Ye(1e3 * ("0." + e))
                }
                for (ns = "S"; ns.length <= 9; ns += "S")
                    Ce(ns, rs);
                function os() {
                    return this._isUTC ? "UTC" : ""
                }
                function ls() {
                    return this._isUTC ? "Coordinated Universal Time" : ""
                }
                is = Xe("Milliseconds", !1),
                q("z", 0, 0, "zoneAbbr"),
                q("zz", 0, 0, "zoneName");
                var ds = T.prototype;
                function cs(e) {
                    return Ka(1e3 * e)
                }
                function ms() {
                    return Ka.apply(null, arguments).parseZone()
                }
                function us(e) {
                    return e
                }
                ds.add = Rn,
                ds.calendar = Wn,
                ds.clone = Bn,
                ds.diff = Xn,
                ds.endOf = _i,
                ds.format = ai,
                ds.from = ni,
                ds.fromNow = ii,
                ds.to = si,
                ds.toNow = ri,
                ds.get = et,
                ds.invalidAt = Ai,
                ds.isAfter = zn,
                ds.isBefore = $n,
                ds.isBetween = Gn,
                ds.isSame = Vn,
                ds.isSameOrAfter = Kn,
                ds.isSameOrBefore = Jn,
                ds.isValid = Di,
                ds.lang = li,
                ds.locale = oi,
                ds.localeData = di,
                ds.max = Xa,
                ds.min = Ja,
                ds.parsingFlags = xi,
                ds.set = tt,
                ds.startOf = fi,
                ds.subtract = In,
                ds.toArray = wi,
                ds.toObject = Ti,
                ds.toDate = Mi,
                ds.toISOString = ei,
                ds.inspect = ti,
                "undefined" != typeof Symbol && null != Symbol.for && (ds[Symbol.for("nodejs.util.inspect.custom")] = function() {
                    return "Moment<" + this.format() + ">"
                }
                ),
                ds.toJSON = ki,
                ds.toString = Zn,
                ds.unix = vi,
                ds.valueOf = bi,
                ds.creationData = Li,
                ds.eraName = Yi,
                ds.eraNarrow = Ei,
                ds.eraAbbr = Ci,
                ds.eraYear = Ri,
                ds.year = Ke,
                ds.isLeapYear = Je,
                ds.weekYear = zi,
                ds.isoWeekYear = $i,
                ds.quarter = ds.quarters = Zi,
                ds.month = pt,
                ds.daysInMonth = yt,
                ds.week = ds.weeks = St,
                ds.isoWeek = ds.isoWeeks = Nt,
                ds.weeksInYear = Ki,
                ds.weeksInWeekYear = Ji,
                ds.isoWeeksInYear = Gi,
                ds.isoWeeksInISOWeekYear = Vi,
                ds.date = es,
                ds.day = ds.days = zt,
                ds.weekday = $t,
                ds.isoWeekday = Gt,
                ds.dayOfYear = ts,
                ds.hour = ds.hours = ia,
                ds.minute = ds.minutes = as,
                ds.second = ds.seconds = ss,
                ds.millisecond = ds.milliseconds = is,
                ds.utcOffset = gn,
                ds.utc = _n,
                ds.local = bn,
                ds.parseZone = vn,
                ds.hasAlignedHourOffset = Mn,
                ds.isDST = wn,
                ds.isLocal = kn,
                ds.isUtcOffset = Dn,
                ds.isUtc = xn,
                ds.isUTC = xn,
                ds.zoneAbbr = os,
                ds.zoneName = ls,
                ds.dates = x("dates accessor is deprecated. Use date instead.", es),
                ds.months = x("months accessor is deprecated. Use month instead", pt),
                ds.years = x("years accessor is deprecated. Use year instead", Ke),
                ds.zone = x("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", fn),
                ds.isDSTShifted = x("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", Tn);
                var hs = E.prototype;
                function ps(e, t, a, n) {
                    var i = _a()
                      , s = y().set(n, t);
                    return i[a](s, e)
                }
                function ys(e, t, a) {
                    if (m(e) && (t = e,
                    e = void 0),
                    e = e || "",
                    null != t)
                        return ps(e, t, a, "month");
                    var n, i = [];
                    for (n = 0; n < 12; n++)
                        i[n] = ps(e, n, a, "month");
                    return i
                }
                function gs(e, t, a, n) {
                    "boolean" == typeof e ? (m(t) && (a = t,
                    t = void 0),
                    t = t || "") : (a = t = e,
                    e = !1,
                    m(t) && (a = t,
                    t = void 0),
                    t = t || "");
                    var i, s = _a(), r = e ? s._week.dow : 0, o = [];
                    if (null != a)
                        return ps(t, (a + r) % 7, n, "day");
                    for (i = 0; i < 7; i++)
                        o[i] = ps(t, (i + r) % 7, n, "day");
                    return o
                }
                function fs(e, t) {
                    return ys(e, t, "months")
                }
                function _s(e, t) {
                    return ys(e, t, "monthsShort")
                }
                function bs(e, t, a) {
                    return gs(e, t, a, "weekdays")
                }
                function vs(e, t, a) {
                    return gs(e, t, a, "weekdaysShort")
                }
                function Ms(e, t, a) {
                    return gs(e, t, a, "weekdaysMin")
                }
                hs.calendar = R,
                hs.longDateFormat = G,
                hs.invalidDate = K,
                hs.ordinal = Q,
                hs.preparse = us,
                hs.postformat = us,
                hs.relativeTime = ee,
                hs.pastFuture = te,
                hs.set = P,
                hs.eras = Si,
                hs.erasParse = Ni,
                hs.erasConvertYear = Pi,
                hs.erasAbbrRegex = Oi,
                hs.erasNameRegex = Ii,
                hs.erasNarrowRegex = Hi,
                hs.months = dt,
                hs.monthsShort = ct,
                hs.monthsParse = ut,
                hs.monthsRegex = ft,
                hs.monthsShortRegex = gt,
                hs.week = Dt,
                hs.firstDayOfYear = Lt,
                hs.firstDayOfWeek = At,
                hs.weekdays = jt,
                hs.weekdaysMin = Ut,
                hs.weekdaysShort = qt,
                hs.weekdaysParse = Bt,
                hs.weekdaysRegex = Vt,
                hs.weekdaysShortRegex = Kt,
                hs.weekdaysMinRegex = Jt,
                hs.isPM = aa,
                hs.meridiem = sa,
                ya("en", {
                    eras: [{
                        since: "0001-01-01",
                        until: 1 / 0,
                        offset: 1,
                        name: "Anno Domini",
                        narrow: "AD",
                        abbr: "AD"
                    }, {
                        since: "0000-12-31",
                        until: -1 / 0,
                        offset: 1,
                        name: "Before Christ",
                        narrow: "BC",
                        abbr: "BC"
                    }],
                    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
                    ordinal: function(e) {
                        var t = e % 10;
                        return e + (1 === Ye(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th")
                    }
                }),
                i.lang = x("moment.lang is deprecated. Use moment.locale instead.", ya),
                i.langData = x("moment.langData is deprecated. Use moment.localeData instead.", _a);
                var ws = Math.abs;
                function Ts() {
                    var e = this._data;
                    return this._milliseconds = ws(this._milliseconds),
                    this._days = ws(this._days),
                    this._months = ws(this._months),
                    e.milliseconds = ws(e.milliseconds),
                    e.seconds = ws(e.seconds),
                    e.minutes = ws(e.minutes),
                    e.hours = ws(e.hours),
                    e.months = ws(e.months),
                    e.years = ws(e.years),
                    this
                }
                function ks(e, t, a, n) {
                    var i = Sn(t, a);
                    return e._milliseconds += n * i._milliseconds,
                    e._days += n * i._days,
                    e._months += n * i._months,
                    e._bubble()
                }
                function Ds(e, t) {
                    return ks(this, e, t, 1)
                }
                function xs(e, t) {
                    return ks(this, e, t, -1)
                }
                function As(e) {
                    return e < 0 ? Math.floor(e) : Math.ceil(e)
                }
                function Ls() {
                    var e, t, a, n, i, s = this._milliseconds, r = this._days, o = this._months, l = this._data;
                    return s >= 0 && r >= 0 && o >= 0 || s <= 0 && r <= 0 && o <= 0 || (s += 864e5 * As(Ns(o) + r),
                    r = 0,
                    o = 0),
                    l.milliseconds = s % 1e3,
                    e = Pe(s / 1e3),
                    l.seconds = e % 60,
                    t = Pe(e / 60),
                    l.minutes = t % 60,
                    a = Pe(t / 60),
                    l.hours = a % 24,
                    r += Pe(a / 24),
                    o += i = Pe(Ss(r)),
                    r -= As(Ns(i)),
                    n = Pe(o / 12),
                    o %= 12,
                    l.days = r,
                    l.months = o,
                    l.years = n,
                    this
                }
                function Ss(e) {
                    return 4800 * e / 146097
                }
                function Ns(e) {
                    return 146097 * e / 4800
                }
                function Ps(e) {
                    if (!this.isValid())
                        return NaN;
                    var t, a, n = this._milliseconds;
                    if ("month" === (e = ne(e)) || "quarter" === e || "year" === e)
                        switch (t = this._days + n / 864e5,
                        a = this._months + Ss(t),
                        e) {
                        case "month":
                            return a;
                        case "quarter":
                            return a / 3;
                        case "year":
                            return a / 12
                        }
                    else
                        switch (t = this._days + Math.round(Ns(this._months)),
                        e) {
                        case "week":
                            return t / 7 + n / 6048e5;
                        case "day":
                            return t + n / 864e5;
                        case "hour":
                            return 24 * t + n / 36e5;
                        case "minute":
                            return 1440 * t + n / 6e4;
                        case "second":
                            return 86400 * t + n / 1e3;
                        case "millisecond":
                            return Math.floor(864e5 * t) + n;
                        default:
                            throw new Error("Unknown unit " + e)
                        }
                }
                function Ys(e) {
                    return function() {
                        return this.as(e)
                    }
                }
                var Es = Ys("ms")
                  , Cs = Ys("s")
                  , Rs = Ys("m")
                  , Is = Ys("h")
                  , Os = Ys("d")
                  , Hs = Ys("w")
                  , Fs = Ys("M")
                  , js = Ys("Q")
                  , qs = Ys("y")
                  , Us = Es;
                function Ws() {
                    return Sn(this)
                }
                function Bs(e) {
                    return e = ne(e),
                    this.isValid() ? this[e + "s"]() : NaN
                }
                function zs(e) {
                    return function() {
                        return this.isValid() ? this._data[e] : NaN
                    }
                }
                var $s = zs("milliseconds")
                  , Gs = zs("seconds")
                  , Vs = zs("minutes")
                  , Ks = zs("hours")
                  , Js = zs("days")
                  , Xs = zs("months")
                  , Qs = zs("years");
                function Zs() {
                    return Pe(this.days() / 7)
                }
                var er = Math.round
                  , tr = {
                    ss: 44,
                    s: 45,
                    m: 45,
                    h: 22,
                    d: 26,
                    w: null,
                    M: 11
                };
                function ar(e, t, a, n, i) {
                    return i.relativeTime(t || 1, !!a, e, n)
                }
                function nr(e, t, a, n) {
                    var i = Sn(e).abs()
                      , s = er(i.as("s"))
                      , r = er(i.as("m"))
                      , o = er(i.as("h"))
                      , l = er(i.as("d"))
                      , d = er(i.as("M"))
                      , c = er(i.as("w"))
                      , m = er(i.as("y"))
                      , u = s <= a.ss && ["s", s] || s < a.s && ["ss", s] || r <= 1 && ["m"] || r < a.m && ["mm", r] || o <= 1 && ["h"] || o < a.h && ["hh", o] || l <= 1 && ["d"] || l < a.d && ["dd", l];
                    return null != a.w && (u = u || c <= 1 && ["w"] || c < a.w && ["ww", c]),
                    (u = u || d <= 1 && ["M"] || d < a.M && ["MM", d] || m <= 1 && ["y"] || ["yy", m])[2] = t,
                    u[3] = +e > 0,
                    u[4] = n,
                    ar.apply(null, u)
                }
                function ir(e) {
                    return void 0 === e ? er : "function" == typeof e && (er = e,
                    !0)
                }
                function sr(e, t) {
                    return void 0 !== tr[e] && (void 0 === t ? tr[e] : (tr[e] = t,
                    "s" === e && (tr.ss = t - 1),
                    !0))
                }
                function rr(e, t) {
                    if (!this.isValid())
                        return this.localeData().invalidDate();
                    var a, n, i = !1, s = tr;
                    return "object" == typeof e && (t = e,
                    e = !1),
                    "boolean" == typeof e && (i = e),
                    "object" == typeof t && (s = Object.assign({}, tr, t),
                    null != t.s && null == t.ss && (s.ss = t.s - 1)),
                    n = nr(this, !i, s, a = this.localeData()),
                    i && (n = a.pastFuture(+this, n)),
                    a.postformat(n)
                }
                var or = Math.abs;
                function lr(e) {
                    return (e > 0) - (e < 0) || +e
                }
                function dr() {
                    if (!this.isValid())
                        return this.localeData().invalidDate();
                    var e, t, a, n, i, s, r, o, l = or(this._milliseconds) / 1e3, d = or(this._days), c = or(this._months), m = this.asSeconds();
                    return m ? (e = Pe(l / 60),
                    t = Pe(e / 60),
                    l %= 60,
                    e %= 60,
                    a = Pe(c / 12),
                    c %= 12,
                    n = l ? l.toFixed(3).replace(/\.?0+$/, "") : "",
                    i = m < 0 ? "-" : "",
                    s = lr(this._months) !== lr(m) ? "-" : "",
                    r = lr(this._days) !== lr(m) ? "-" : "",
                    o = lr(this._milliseconds) !== lr(m) ? "-" : "",
                    i + "P" + (a ? s + a + "Y" : "") + (c ? s + c + "M" : "") + (d ? r + d + "D" : "") + (t || e || l ? "T" : "") + (t ? o + t + "H" : "") + (e ? o + e + "M" : "") + (l ? o + n + "S" : "")) : "P0D"
                }
                var cr = on.prototype;
                return cr.isValid = sn,
                cr.abs = Ts,
                cr.add = Ds,
                cr.subtract = xs,
                cr.as = Ps,
                cr.asMilliseconds = Es,
                cr.asSeconds = Cs,
                cr.asMinutes = Rs,
                cr.asHours = Is,
                cr.asDays = Os,
                cr.asWeeks = Hs,
                cr.asMonths = Fs,
                cr.asQuarters = js,
                cr.asYears = qs,
                cr.valueOf = Us,
                cr._bubble = Ls,
                cr.clone = Ws,
                cr.get = Bs,
                cr.milliseconds = $s,
                cr.seconds = Gs,
                cr.minutes = Vs,
                cr.hours = Ks,
                cr.days = Js,
                cr.weeks = Zs,
                cr.months = Xs,
                cr.years = Qs,
                cr.humanize = rr,
                cr.toISOString = dr,
                cr.toString = dr,
                cr.toJSON = dr,
                cr.locale = oi,
                cr.localeData = di,
                cr.toIsoString = x("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", dr),
                cr.lang = li,
                q("X", 0, 0, "unix"),
                q("x", 0, 0, "valueOf"),
                Ae("x", ve),
                Ae("X", Te),
                Ce("X", (function(e, t, a) {
                    a._d = new Date(1e3 * parseFloat(e))
                }
                )),
                Ce("x", (function(e, t, a) {
                    a._d = new Date(Ye(e))
                }
                )),
                i.version = "2.30.1",
                s(Ka),
                i.fn = ds,
                i.min = Za,
                i.max = en,
                i.now = tn,
                i.utc = y,
                i.unix = cs,
                i.months = fs,
                i.isDate = u,
                i.locale = ya,
                i.invalid = b,
                i.duration = Sn,
                i.isMoment = k,
                i.weekdays = bs,
                i.parseZone = ms,
                i.localeData = _a,
                i.isDuration = ln,
                i.monthsShort = _s,
                i.weekdaysMin = Ms,
                i.defineLocale = ga,
                i.updateLocale = fa,
                i.locales = ba,
                i.weekdaysShort = vs,
                i.normalizeUnits = ne,
                i.relativeTimeRounding = ir,
                i.relativeTimeThreshold = sr,
                i.calendarFormat = Un,
                i.prototype = ds,
                i.HTML5_FMT = {
                    DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
                    DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
                    DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
                    DATE: "YYYY-MM-DD",
                    TIME: "HH:mm",
                    TIME_SECONDS: "HH:mm:ss",
                    TIME_MS: "HH:mm:ss.SSS",
                    WEEK: "GGGG-[W]WW",
                    MONTH: "YYYY-MM"
                },
                i
            }()
        },
        98244: (e, t, a) => {
            "use strict";
            a.d(t, {
                A: () => s
            });
            var n = a(29755)
              , i = a(79453);
            const s = (e, t) => {
                var a, s, r;
                "undefined" == typeof gtag || (null !== (s = null === (a = window.dataLayer) || void 0 === a ? void 0 : a.length) && void 0 !== s ? s : 0) > 1e3 || gtag("event", e, {
                    product: n.Ay.product,
                    user_type: null !== (r = null === i.N || void 0 === i.N ? void 0 : i.N.type) && void 0 !== r ? r : "guest",
                    label: t
                })
            }
        }
        ,
        78508: (e, t, a) => {
            "use strict";
            a.d(t, {
                In: () => s,
                Pe: () => p,
                Ue: () => d,
                Vi: () => m,
                W2: () => _,
                Wv: () => u,
                X6: () => y,
                XC: () => r,
                _t: () => g,
                a0: () => f,
                c_: () => l,
                gs: () => o,
                sG: () => h,
                vN: () => c
            });
            var n = a(79453)
              , i = a(42268);
            async function s(e, t="GET", a={}, n=!1) {
                try {
                    const s = {
                        "Content-Type": "application/json"
                    };
                    n && (s.Authorization = `Bearer ${(0,
                    i.lR)("__pat", (0,
                    i.lR)("__prt", ""))}`);
                    const r = {
                        method: t,
                        headers: s
                    };
                    "GET" !== t && (r.body = JSON.stringify(a));
                    const o = await fetch(e, r);
                    return await o.json()
                } catch (s) {
                    return console.error(s),
                    {
                        status: !1,
                        message: "Internal Server Error"
                    }
                }
            }
            const r = () => s("/checkout/giftcard")
              , o = () => s("/checkout/plans")
              , l = () => s("/api/subscription/active")
              , d = () => s("/api/subscription/upgrade/plan", "POST")
              , c = () => s("/api/subscription/team/")
              , m = e => s("/checkout/upgrade/details", "POST", {
                plan: e
            })
              , u = (e={}) => s("/checkout/paymentmethods", "POST", e)
              , h = (e, t) => s(`/paypal/polling?id=${e}&type=${t}`, "POST")
              , p = (e, t, a) => s(`/api/promo/status/?code=${e}&product=${t}&splan=${a}`)
              , y = () => s("/api/country/")
              , g = async () => {
                try {
                    const e = await fetch("/api/geoip/")
                      , t = await e.json();
                    return t.registeredCountry.isoCode
                } catch (e) {
                    return "US"
                }
            }
              , f = e => s(`/api/image-generator/${e}`)
              , _ = () => s("/api/credits", "GET").then((e => {
                !0 === e.status && (n.N.credits = e.data.credits)
            }
            ))
        }
        ,
        11839: (e, t, a) => {
            "use strict";
            a.d(t, {
                FS: () => d,
                Ay: () => c
            });
            var n = a(21742)
              , i = a(98244)
              , s = a(78508)
              , r = a(42268)
              , o = a(79453);
            class l {
                constructor() {
                    this.chooser = () => `\n            <div class="chooser">\n                <div class="social-button" data-social="google">\n                    <img src="/images/icon/google.svg" alt="google">\n                    ${(0,
                    n.A)("common-continueWith")} Google\n                </div>\n                <div class="social-button" data-social="facebook">\n                    <img src="/images/icon/facebook.svg" alt="facebook">\n                    ${(0,
                    n.A)("common-continueWith")} Facebook\n                </div>\n                <div class="social-button" data-social="apple">\n                    <img src="/images/icon/apple_gray.svg" alt="apple">\n                    ${(0,
                    n.A)("common-continueWith")} Apple\n                </div>\n                <a class="top-20" style="display:inline-block;text-align:center;font-size:15px;" id="choose-email">\n                    <strong>${(0,
                    n.A)("common-orUseEmail")}</strong>\n                </a>\n            </div>\n            <p class="top-30 center" style="padding:0 25px">\n                ${(0,
                    n.A)("common-agreeTo")} <a href="/terms-of-use/" target='_new'>${(0,
                    n.A)("common-termsOfUse")}</a> ${(0,
                    n.A)("common-and")} <a href="/privacy-policy/" target='_new'> ${(0,
                    n.A)("common-privacyPolicy")}</a>.\n            </p>\n        `,
                    this.login = () => `\n\n            <div class="center top-10">\n                ${(0,
                    n.A)("common-notMember")} &nbsp; <strong><a id="load-signup">${(0,
                    n.A)("common-signUp")}!</a></strong>\n            </div>\n\n            <form id="entry-form" data-entry="login" class="top-30">\n                <div class="input-group">\n                    <label for="entry-email">${(0,
                    n.A)("common-email")}</label>\n                    <input type="email" maxlength="70" name="email" id="entry-email" placeholder="Email address">\n                    <p class="error-msg">${(0,
                    n.A)("common-enterValidEmail")}</p>\n                </div>\n                <div class="input-group">\n                    <label for="entry-password">${(0,
                    n.A)("common-password")}</label>\n                    <input type="password" name="password" id="entry-password" placeholder="Enter password" >\n                    <p class="error-msg"></p>\n                    <img id="toggle-password" class="input-icon" src="/img/icon/eye-hide.svg">\n                </div>\n\n                <input type="checkbox" id="entry-rememberMe" name="rememberMe" checked/>\n                <label class="top-20 switch" for="entry-rememberMe"><span></span> ${(0,
                    n.A)("common-rememberMe")}</label>\n\n                <button type="submit" class="button med w-100 top-40" id="entry-submit">${(0,
                    n.A)("common-login")}</button>\n\n                <div class="center top-30"><strong><a id="load-forgotPassword">${(0,
                    n.A)("common-forgotPass")}</a></strong></center>\n\n            </form>\n        `,
                    this.register = async () => {
                        let e = ""
                          , t = !1;
                        const a = await (0,
                        s._t)();
                        for (let n in d)
                            t || "US" !== n && a != n ? e += `<option value="${n}">${d[n]}</option>` : (e += `<option value="${n}" selected>${d[n]}</option>`,
                            t = !0);
                        return `\n            <form id="entry-form" data-entry="register">\n                <div class="input-group">\n                    <label for="entry-email">${(0,
                        n.A)("common-email")}</label>\n                    <input type="email" maxlength="70" name="email" id="entry-email" placeholder="Email address">\n                    <p class="error-msg">${(0,
                        n.A)("common-enterValidEmail")}</p>\n                </div>\n                <div class="input-group">\n                    <label for="entry-password">${(0,
                        n.A)("common-password")}</label>\n                    <input type="password" name="password" id="entry-password" placeholder="Enter password">\n                    <p class="error-msg"></p>\n                    <img id="toggle-password" class="input-icon" src="/img/icon/eye-hide.svg">\n                 </div>\n                <div class="input-group">\n                    <label for="country">${(0,
                        n.A)("common-country")}</label>\n                    <select name="country">\n                        ${e}\n                    </select>\n                </div>\n\n                <input type="checkbox" id="entry-newsletter" name="newsletter" checked>\n                <label class="top-20 switch" for="entry-newsletter"><span></span>${(0,
                        n.A)("subscribeToNewsletter")}</label>\n\n                <button type="submit" class="button med w-100 top-40">${(0,
                        n.A)("common-signUp")}</button>\n            </form>\n        `
                    }
                    ,
                    this.forgotPassword = () => `\n            <h2 class="top-30">${(0,
                    n.A)("common-forgotPass")}</h2>\n\n            <form id="entry-form" class="top-30" data-entry="forgotPassword">\n                <div class="input-group">\n                    <label for="entry-email">${(0,
                    n.A)("common-email")}</label>\n                    <input type="email" maxlength="70" name="email" id="entry-email" placeholder="Email address"/>\n                    <p class="error-msg">${(0,
                    n.A)("common-enterValidEmail")}</p>\n                </div>\n\n                <button type="submit" class="button large w-100 top-40" id="load-verification">${(0,
                    n.A)("common-reqCode")}</button>\n            </form>\n        `,
                    this.resetPassword = (e=!1) => `\n            <h2 class="top-10">${e ? (0,
                    n.A)("common-setPassword") : (0,
                    n.A)("common-resetPass")}</h2>\n\n            <form id="entry-form" class="top-30" data-entry="${e ? "setPassword" : "resetPassword"}">\n                <div class="input-group">\n                    <label for="entry-email">${(0,
                    n.A)("common-email")}</label>\n                    <input type="email" maxlength="70" name="email" id="entry-email" readonly/>\n                    <p class="error-msg">${(0,
                    n.A)("common-enterValidEmail")}</p>\n                </div>\n                <div class="input-group">\n                    <label for="entry-password">${(0,
                    n.A)("common-newPass")}</label>\n                    <input type="password" name="password" id="entry-password">\n                    <p class="error-msg"></p>\n                    <img id="toggle-password" class="input-icon" src="/img/icon/eye-hide.svg">\n                    <span id="password-meter" class="none">\n                        <span></span><span></span><span></span><span></span>\n                    </span>\n                </div>\n                <div class="input-group">\n                    <label for="entry-code">${(0,
                    n.A)("common-code")}</label>\n                    <input type="number" name="code" id="entry-code" onkeypress="if(this.value.length===6)return false;">\n                    <p class="error-msg">${(0,
                    n.A)("common-enterValidCode")}</p>                    \n                </div>\n                \n                ${e ? `<p class="center top-20 text-center"><strong><a id="entry-resend">${(0,
                    n.A)("common-SendResetCode")}</a></strong></p>` : ""}\n\n                <div id="recaptcha" style="padding-top: 5px"></div>\n                <button class="button large w-100" type="submit">${(0,
                    n.A)("common-updatePass")}</button>\n                ${e ? "" : `<p class="top-20 hide center" id="entry-resend">${(0,
                    n.A)("common-didNotReceiveCode")} <a class="anchor">${(0,
                    n.A)("common-resend")}</a></p>`}\n            </form>\n        `,
                    this.verification = e => `\n            <h1>${(0,
                    n.A)("common-verifyAcc")}</h1>\n            <p id="entry-to-email" data-text="${(0,
                    n.A)("common-sentCodeDesc")}">${(0,
                    n.A)("common-sentCodeDesc")}</p>\n\n            <form id="entry-form" data-entry="${e}">\n                <input id="verification-email" type="hidden" name="email" readonly/>\n                <div class="input-group">\n                    <label for="code">${(0,
                    n.A)("common-code")}</label>\n                    <input type="number" name="code" id="entry-code" onkeypress="if(this.value.length===6)return false;">\n                    <p class="error-msg">${(0,
                    n.A)("common-enterValidCode")}</p>\n                </div>\n\n                <button type="submit" class="button large w-100 top-20">${(0,
                    n.A)("common-verify")}</button>\n                <p class="top-20 hide text-center" id="entry-resend">${(0,
                    n.A)("common-didNotReceiveCode")} &nbsp; <a class="anchor">${(0,
                    n.A)("common-resend")}</a></p>\n            </form>\n        `,
                    this.changePassword = () => `\n            <h2>${(0,
                    n.A)("common-changePassword")}</h2>\n            <form id="entry-form" class="top-30" data-entry="changePassword">\n                <div class="input-group">\n                    <label for="entry-password">${(0,
                    n.A)("common-oldPass")}</label>\n                    <input type="password" name="password" id="entry-password">\n                    <p class="error-msg"></p>\n                    <img id="toggle-password" class="input-icon" src="/img/icon/eye-hide.svg">\n                </div>\n                <div class="input-group">\n                    <label for="entry-password">${(0,
                    n.A)("common-newPass")}</label>\n                    <input type="password" name="new-password" id="entry-password-new">\n                    <p class="error-msg"></p>\n                    <img id="toggle-password-2" class="input-icon" src="/img/icon/eye-hide.svg">\n                    <span id="password-meter" class="none">\n                        <span></span><span></span><span></span><span></span>\n                    </span>\n                </div>\n                <button type="submit" class="button w-100 top-20" style="margin-bottom: 20px">${(0,
                    n.A)("common-changePassword")}</button>\n            </form>\n        `,
                    this.changeEmail = () => `\n            <h2>${(0,
                    n.A)("common-changeEmail")}</h2>\n\n            <form id="entry-form" class="top-30" data-entry="changeEmail">\n                <div class="input-group">\n                    <label class="text-capitalize" for="email">${(0,
                    n.A)("common-newEmail")}</label>\n                    <input type="email" maxlength="70" name="email" id="entry-email">\n                    <p class="error-msg">${(0,
                    n.A)("common-EnterValidEmail")}</p>\n                </div>\n            \n                <button type="submit" class="button w-100 top-20" style="margin-bottom: 20px">${(0,
                    n.A)("common-newEmail")}</button>\n            </form>\n        `,
                    this.changeUsername = (e="") => `\n            <h2>${(0,
                    n.A)("changeUsername")}</h2>\n\n            <form id="entry-form" class="top-30" data-entry="changeUsername">\n                <div class="input-group">\n                    <label for="entry-username">${(0,
                    n.A)("newUsername")}</label>\n                    <input type="text" name="name" id="entry-username" value="${e}">\n                </div>\n\n                <button type="submit" class="button w-100 top-20">${(0,
                    n.A)("update")}</button>\n            </form>\n        `,
                    this.deleteAccount = e => `\n            <h2>${(0,
                    n.A)("common-deleteMyAccount")}</h2>\n            <p class="top-20">Hey ${e},</p>\n            <p class="no-margin">${(0,
                    n.A)("common-sadToSeeYouGoWhyLeaving")}</p>\n\n            <form id="entry-form" data-entry="deleteAccount">\n                <div class="input-group">\n                    <label class="top-20 text-uppercase">${(0,
                    n.A)("common-leavingBecause")}</label>\n                    <select name="reason">\n                        <option value="leavingReasonDefault" disabled selected>${(0,
                    n.A)("common-leavingReasonDefault")}</option>\n                        <option value="leavingReasons1">${(0,
                    n.A)("common-leavingReasons1")}</option>\n                        <option value="leavingReasons2">${(0,
                    n.A)("common-leavingReasons2")}</option>\n                        <option value="leavingReasons3">${(0,
                    n.A)("common-leavingReasons3")}</option>\n                        <option value="leavingReasons4">${(0,
                    n.A)("common-leavingReasons4")}</option>\n                        <option value="leavingReasons5">${(0,
                    n.A)("common-leavingReasons5")}</option>\n                    <select>\n                </div>\n\n                <button type="submit" class="button red w-100 top-20" style="margin-bottom: 20px">${(0,
                    n.A)("common-deleteMyAccount")}</button>\n            </form>\n        `,
                    this.deleteAccountConfirmation = (e="leavingReasonDefault") => `\n            <h4 class="top-35 text-default">${(0,
                    n.A)("areYouSureYouWantToDelete")} </h4>\n            ${o.N.subscription ? `<p class="top-35">${(0,
                    n.A)("common-youHaveActiveSubsBeforeDelete")}</p>` : ""}\n            <p class="top-15">${(0,
                    n.A)("youCanStillChangeYourMind")} </p>\n\n            <form id="entry-form" data-entry="deleteAccountConfirmation">\n                <input type="hidden" name="reason" value="${e}">\n                <div class="input-group">\n                    <label for="entry-password">${(0,
                    n.A)("common-password")}</label>\n                    <input type="password" name="password" id="entry-password">\n                    <p class="error-msg"></p>\n                    <img id="toggle-password" class="input-icon" src="/img/icon/eye-hide.svg">\n                </div>\n\n                <div class="input-group checkbox-group inline justify-center flex-wrap" style="margin-top: 30px">\n                    <button id="entry-cancel" class="button full positive">${(0,
                    n.A)("cancel")}</button>\n                    <button id="delete-confirm" type="submit" class="button w-100 transparent">${(0,
                    n.A)("deleteMyAccount")}</button>\n                </div>\n            </form>\n        `,
                    this.additionalVerification = () => `\n            <h3 class="heavy">${(0,
                    n.A)("enterYourPasswordToContinue")}</h3>\n\n            <form id="entry-form" data-entry="additionalVerification">\n                <div class="input-group">\n                    <label for="entry-password">${(0,
                    n.A)("common-password")}</label>\n                    <input type="password" name="password" id="entry-password">\n                    <p class="error-msg"></p>\n                    <img id="toggle-password" class="input-icon" src="/img/icon/eye-hide.svg">\n                </div>\n\n                <div class="input-group checkbox-group inline justify-center" style="margin-top: 30px">\n                    <button type="submit" class="button full top-20">Continue</button>\n                </div>\n            </form>\n        `
                }
            }
            const d = {
                AF: "Afghanistan",
                AX: "Åland Islands",
                AL: "Albania",
                DZ: "Algeria",
                AS: "American Samoa",
                AD: "Andorra",
                AO: "Angola",
                AI: "Anguilla",
                AQ: "Antarctica",
                AG: "Antigua and Barbuda",
                AR: "Argentina",
                AM: "Armenia",
                AW: "Aruba",
                AU: "Australia",
                AT: "Austria",
                AZ: "Azerbaijan",
                BS: "Bahamas",
                BH: "Bahrain",
                BD: "Bangladesh",
                BB: "Barbados",
                BY: "Belarus",
                BE: "Belgium",
                BZ: "Belize",
                BJ: "Benin",
                BM: "Bermuda",
                BT: "Bhutan",
                BO: "Bolivia",
                BQ: "Bonaire, Sint Eustatius and Saba",
                BA: "Bosnia and Herzegovina",
                BW: "Botswana",
                BV: "Bouvet Island",
                BR: "Brazil",
                IO: "British Indian Ocean Territory",
                BN: "Brunei Darussalam",
                BG: "Bulgaria",
                BF: "Burkina Faso",
                BI: "Burundi",
                KH: "Cambodia",
                CM: "Cameroon",
                CA: "Canada",
                CV: "Cape Verde",
                KY: "Cayman Islands",
                CF: "Central African Republic",
                TD: "Chad",
                CL: "Chile",
                CN: "China",
                CX: "Christmas Island",
                CC: "Cocos (Keeling) Islands",
                CO: "Colombia",
                KM: "Comoros",
                CG: "Congo, Republic of the (Brazzaville)",
                CD: "Congo, the Democratic Republic of the (Kinshasa)",
                CK: "Cook Islands",
                CR: "Costa Rica",
                CI: "Côte d'Ivoire, Republic of",
                HR: "Croatia",
                CU: "Cuba",
                CW: "Curaçao",
                CY: "Cyprus",
                CZ: "Czech Republic",
                DK: "Denmark",
                DJ: "Djibouti",
                DM: "Dominica",
                DO: "Dominican Republic",
                EC: "Ecuador",
                EG: "Egypt",
                SV: "El Salvador",
                GQ: "Equatorial Guinea",
                ER: "Eritrea",
                EE: "Estonia",
                ET: "Ethiopia",
                FK: "Falkland Islands (Islas Malvinas)",
                FO: "Faroe Islands",
                FJ: "Fiji",
                FI: "Finland",
                FR: "France",
                GF: "French Guiana",
                PF: "French Polynesia",
                TF: "French Southern and Antarctic Lands",
                GA: "Gabon",
                GM: "Gambia, The",
                GE: "Georgia",
                DE: "Germany",
                GH: "Ghana",
                GI: "Gibraltar",
                GR: "Greece",
                GL: "Greenland",
                GD: "Grenada",
                GP: "Guadeloupe",
                GU: "Guam",
                GT: "Guatemala",
                GG: "Guernsey",
                GN: "Guinea",
                GW: "Guinea-Bissau",
                GY: "Guyana",
                HT: "Haiti",
                HM: "Heard Island and McDonald Islands",
                VA: "Holy See (Vatican City)",
                HN: "Honduras",
                HK: "Hong Kong",
                HU: "Hungary",
                IS: "Iceland",
                IN: "India",
                ID: "Indonesia",
                IR: "Iran, Islamic Republic of",
                IQ: "Iraq",
                IE: "Ireland",
                IM: "Isle of Man",
                IL: "Israel",
                IT: "Italy",
                JM: "Jamaica",
                JP: "Japan",
                JE: "Jersey",
                JO: "Jordan",
                KZ: "Kazakhstan",
                KE: "Kenya",
                KI: "Kiribati",
                KP: "Korea, Democratic People's Republic of",
                KR: "Korea, Republic of",
                KW: "Kuwait",
                KG: "Kyrgyzstan",
                LA: "Laos",
                LV: "Latvia",
                LB: "Lebanon",
                LS: "Lesotho",
                LR: "Liberia",
                LY: "Libya",
                LI: "Liechtenstein",
                LT: "Lithuania",
                LU: "Luxembourg",
                MO: "Macao",
                MK: "Macedonia, Republic of",
                MG: "Madagascar",
                MW: "Malawi",
                MY: "Malaysia",
                MV: "Maldives",
                ML: "Mali",
                MT: "Malta",
                MH: "Marshall Islands",
                MQ: "Martinique",
                MR: "Mauritania",
                MU: "Mauritius",
                YT: "Mayotte",
                MX: "Mexico",
                FM: "Micronesia, Federated States of",
                MD: "Moldova",
                MC: "Monaco",
                MN: "Mongolia",
                ME: "Montenegro",
                MS: "Montserrat",
                MA: "Morocco",
                MZ: "Mozambique",
                MM: "Myanmar",
                NA: "Namibia",
                NR: "Nauru",
                NP: "Nepal",
                NL: "Netherlands",
                NC: "New Caledonia",
                NZ: "New Zealand",
                NI: "Nicaragua",
                NE: "Niger",
                NG: "Nigeria",
                NU: "Niue",
                NF: "Norfolk Island",
                MP: "Northern Mariana Islands",
                NO: "Norway",
                OM: "Oman",
                PK: "Pakistan",
                PW: "Palau",
                PS: "Palestine, State of",
                PA: "Panama",
                PG: "Papua New Guinea",
                PY: "Paraguay",
                PE: "Peru",
                PH: "Philippines",
                PN: "Pitcairn",
                PL: "Poland",
                PT: "Portugal",
                PR: "Puerto Rico",
                QA: "Qatar",
                RE: "Réunion",
                RO: "Romania",
                RU: "Russian Federation",
                RW: "Rwanda",
                BL: "Saint Barthélemy",
                SH: "Saint Helena, Ascension and Tristan da Cunha",
                KN: "Saint Kitts and Nevis",
                LC: "Saint Lucia",
                MF: "Saint Martin",
                PM: "Saint Pierre and Miquelon",
                VC: "Saint Vincent and the Grenadines",
                WS: "Samoa",
                SM: "San Marino",
                ST: "Sao Tome and Principe",
                SA: "Saudi Arabia",
                SN: "Senegal",
                RS: "Serbia",
                SC: "Seychelles",
                SL: "Sierra Leone",
                SG: "Singapore",
                SX: "Sint Maarten (Dutch part)",
                SK: "Slovakia",
                SI: "Slovenia",
                SB: "Solomon Islands",
                SO: "Somalia",
                ZA: "South Africa",
                GS: "South Georgia and South Sandwich Islands",
                SS: "South Sudan",
                ES: "Spain",
                LK: "Sri Lanka",
                SD: "Sudan",
                SR: "Suriname",
                SZ: "Swaziland",
                SE: "Sweden",
                CH: "Switzerland",
                SY: "Syrian Arab Republic",
                TW: "Taiwan",
                TJ: "Tajikistan",
                TZ: "Tanzania, United Republic of",
                TH: "Thailand",
                TL: "Timor-Leste",
                TG: "Togo",
                TK: "Tokelau",
                TO: "Tonga",
                TT: "Trinidad and Tobago",
                TN: "Tunisia",
                TR: "Turkey",
                TM: "Turkmenistan",
                TC: "Turks and Caicos Islands",
                TV: "Tuvalu",
                UG: "Uganda",
                UA: "Ukraine",
                AE: "United Arab Emirates",
                GB: "United Kingdom",
                US: "United States",
                UM: "United States Minor Outlying Islands",
                UY: "Uruguay",
                UZ: "Uzbekistan",
                VU: "Vanuatu",
                VE: "Venezuela, Bolivarian Republic of",
                VN: "Viet Nam",
                VG: "Virgin Islands, British",
                VI: "Virgin Islands, U.S.",
                WF: "Wallis and Futuna",
                EH: "Western Sahara",
                YE: "Yemen",
                ZM: "Zambia",
                ZW: "Zimbabwe"
            };
            class c {
                constructor(e={}) {
                    var t;
                    this.setContent = async (e, t) => {
                        var a, n;
                        switch (e) {
                        case "chooser":
                            this.content.innerHTML = this.form.chooser(),
                            document.querySelectorAll(".social-button").forEach((e => {
                                e.addEventListener("click", ( () => this.loadSocialLogin(e.dataset.social)))
                            }
                            )),
                            null === (a = (0,
                            r.Ay)("choose-email")) || void 0 === a || a.addEventListener("click", ( () => this.loadForm("login")));
                            break;
                        case "login":
                            this.content.innerHTML = this.form.login(),
                            (0,
                            r.Ay)("load-signup").onclick = () => this.loadForm("register"),
                            this.options.email && ((0,
                            r.Ay)("entry-email").value = this.options.email);
                            break;
                        case "register":
                            this.content.innerHTML = await this.form.register();
                            break;
                        case "forgotPassword":
                            this.content.innerHTML = this.form.forgotPassword();
                            break;
                        case "setPassword":
                            this.loadCaptcha(),
                            this.content.innerHTML = this.form.resetPassword(!0);
                            break;
                        case "resetPassword":
                            this.loadCaptcha(),
                            this.content.innerHTML = this.form.resetPassword();
                            break;
                        case "verification":
                            this.content.innerHTML = this.form.verification(null !== (n = t.verify) && void 0 !== n ? n : "verification");
                            break;
                        case "changePassword":
                            this.content.innerHTML = this.form.changePassword();
                            break;
                        case "changeEmail":
                            this.content.innerHTML = this.form.changeEmail();
                            break;
                        case "changeUsername":
                            this.content.innerHTML = this.form.changeUsername((0,
                            r.Ay)("change-name").dataset.name);
                            break;
                        case "deleteAccount":
                            const e = (0,
                            r.Ay)("delete-account").dataset.name || "User";
                            this.content.innerHTML = this.form.deleteAccount(e);
                            break;
                        case "deleteAccountConfirmation":
                            this.content.innerHTML = this.form.deleteAccountConfirmation(t.reason);
                            break;
                        case "additionalVerification":
                            this.passwordVerification = "pending",
                            this.content.innerHTML = this.form.additionalVerification()
                        }
                    }
                    ,
                    this.setFooter = e => {
                        switch (this.footer.style.display = "block",
                        e) {
                        case "login":
                            this.footer.innerHTML = `${(0,
                            n.A)("common-notMember")} &nbsp; <a id="load-chooser">${(0,
                            n.A)("common-signUpNow")}</a>`,
                            (0,
                            r.Ay)("load-chooser").onclick = () => this.loadForm("chooser");
                            break;
                        case "register":
                            this.footer.innerHTML = `${(0,
                            n.A)("common-alreadyMember")} &nbsp; <a id="load-login">${(0,
                            n.A)("common-loginHere")}</a>`,
                            (0,
                            r.Ay)("load-login").onclick = () => this.loadForm("login");
                            break;
                        case "forgotPassword":
                            this.footer.innerHTML = `<a class="back" id="entry-back">&#10094; &nbsp; ${(0,
                            n.A)("common-back")}</a>`,
                            (0,
                            r.Ay)("entry-back").onclick = () => this.loadForm("login");
                            break;
                        case "resetPassword":
                            this.footer.innerHTML = `<a class="back" id="entry-back">&#10094; &nbsp; ${(0,
                            n.A)("common-back")}</a>`,
                            (0,
                            r.Ay)("entry-back").onclick = () => this.loadForm("forgotPassword");
                            break;
                        default:
                            return this.footer.innerHTML = "",
                            void (this.footer.style.display = "none")
                        }
                    }
                    ,
                    this.loadForm = async (e, t={}) => {
                        var a, n, i, s, o, l, d;
                        if (this.options.view = e,
                        await this.setContent(this.options.view, t),
                        "setPassword" !== this.options.view && "resetPassword" !== this.options.view || this.renderCaptcha(),
                        null === (a = (0,
                        r.Ay)("entry-form")) || void 0 === a || a.addEventListener("submit", (e => {
                            this.submitForm((0,
                            r.Ay)("entry-form").dataset.entry, e)
                        }
                        )),
                        "setPassword" === this.options.view && (t.email = (0,
                        r.Ay)("set-password").dataset.email),
                        "resetPassword" !== this.options.view && "setPassword" !== this.options.view || ((0,
                        r.Ay)("entry-email").value = t.email),
                        (0,
                        r.Ay)("entry-to-email")) {
                            const e = (0,
                            r.Ay)("entry-to-email").dataset.text.replace("[EMAIL]", t.email);
                            (0,
                            r.Ay)("entry-to-email").innerHTML = e
                        }
                        (0,
                        r.Ay)("verification-email") && ((0,
                        r.Ay)("verification-email").value = t.email),
                        (0,
                        r.Ay)("entry-resend") && (clearTimeout(this.resendCodeTimeouts),
                        this.resendCodeTimeouts = setTimeout(( () => {
                            (0,
                            r.Ay)("entry-resend").classList.remove("hide")
                        }
                        ), 3e4),
                        null === (n = (0,
                        r.Ay)("entry-resend")) || void 0 === n || n.addEventListener("click", ( () => this.resendCode(t.email)))),
                        null === (i = (0,
                        r.Ay)("entry-email")) || void 0 === i || i.addEventListener("keyup", ( () => {
                            this.validateInputTimer("email")
                        }
                        )),
                        null === (s = (0,
                        r.Ay)("entry-email")) || void 0 === s || s.addEventListener("blur", ( () => {
                            (0,
                            r.TT)((0,
                            r.Ay)("entry-email"), "", "email")
                        }
                        )),
                        null === (o = (0,
                        r.Ay)("load-forgotPassword")) || void 0 === o || o.addEventListener("click", ( () => this.loadForm("forgotPassword"))),
                        null === (l = (0,
                        r.Ay)("toggle-password")) || void 0 === l || l.addEventListener("click", ( () => this.togglePassword())),
                        null === (d = (0,
                        r.Ay)("toggle-password-2")) || void 0 === d || d.addEventListener("click", ( () => this.togglePassword("toggle-password-2", "entry-password-new")))
                    }
                    ,
                    this.loadSocialLogin = async e => {
                        if ((0,
                        i.A)("login", e),
                        "apple" === e) {
                            const e = await new Promise(( (e, t) => {
                                let a = document.createElement("script");
                                a.type = "text/javascript",
                                a.crossOrigin = "anonymous",
                                a.src = "https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js",
                                document.body.appendChild(a),
                                a.onload = function() {
                                    e(AppleID ? AppleID.auth : null)
                                }
                                ,
                                a.onerror = function() {
                                    t("Failed to load apple auth script")
                                }
                            }
                            ));
                            e && (e.init({
                                clientId: "com.pixlr.web",
                                scope: "name email",
                                redirectURI: new URL(location.href).origin + "/auth/apple/callback",
                                state: location.href,
                                nonce: "",
                                usePopup: !1
                            }),
                            e.signIn())
                        } else {
                            const t = window.location.origin;
                            let a = this.options.callback ? decodeURIComponent(this.options.callback).split("#")[0] : encodeURIComponent(window.location.href);
                            window.location.href = `${t}/auth/${e}?callbackUrl=${a}`
                        }
                    }
                    ,
                    this.togglePassword = (e="toggle-password", t="entry-password") => {
                        const a = (0,
                        r.Ay)(e)
                          , n = (0,
                        r.Ay)(t);
                        "text" === n.type ? (n.type = "password",
                        a.src = "/img/icon/eye-hide.svg") : (n.type = "text",
                        a.src = "/img/icon/eye-show.svg")
                    }
                    ,
                    this.validateInputTimer = e => {
                        this.validationTimer[e] && clearTimeout(this.validationTimer[e]),
                        this.validationTimer[e] = setTimeout(( () => (0,
                        r.TT)((0,
                        r.Ay)(`entry-${e}`), "", e)), 1e3)
                    }
                    ,
                    this.loadCaptcha = () => {
                        let e = document.createElement("script");
                        e.id = "recaptcha-js-api",
                        e.defer = !0,
                        e.src = "https://www.google.com/recaptcha/api.js",
                        document.getElementsByTagName("head")[0].appendChild(e)
                    }
                    ,
                    this.renderCaptcha = () => {
                        this.captcha = void 0;
                        const e = window.location.href.includes("localhost") ? "6LeBQzcaAAAAAPwVny3IG23_fY_FasFVKXvQG9qB" : "6LcqBEsaAAAAAF-JcOUzRtVKASZt5b-EMITWxEJf";
                        setTimeout(( () => {
                            try {
                                this.captcha = grecaptcha.render((0,
                                r.Ay)("recaptcha"), {
                                    sitekey: e
                                })
                            } catch (t) {
                                console.error("Failed to load Captcha, please check your network connection!")
                            }
                        }
                        ), 2500)
                    }
                    ,
                    this.getFormInput = () => {
                        const e = {}
                          , t = (0,
                        r.Ay)("entry-form");
                        return t.querySelectorAll("input").forEach((t => {
                            "checkbox" == t.type ? e[t.name] = t.checked : e[t.name] = t.value
                        }
                        )),
                        t.querySelectorAll("select").forEach((t => {
                            e[t.name] = t.value
                        }
                        )),
                        e
                    }
                    ,
                    this.submitForm = async (e, t) => {
                        switch (t.preventDefault(),
                        e) {
                        case "login":
                            this.loginHandler();
                            break;
                        case "register":
                            this.registerHandler();
                            break;
                        case "verification":
                            this.verificationHandler();
                            break;
                        case "forgotPassword":
                            this.forgotPasswordHandler();
                            break;
                        case "setPassword":
                            this.passwordResetHandler(!0);
                            break;
                        case "resetPassword":
                            this.passwordResetHandler();
                            break;
                        case "changeEmail":
                            this.changeEmailHandler();
                            break;
                        case "changeEmailVerification":
                            this.changeEmailVerificationHandler();
                            break;
                        case "changePassword":
                            this.changePasswordHandler();
                            break;
                        case "changeUsername":
                            this.changeUsernameHandler();
                            break;
                        case "deleteAccount":
                            this.deleteAccountHandler();
                            break;
                        case "deleteAccountConfirmation":
                            this.deleteAccountConfirmationHandler()
                        }
                    }
                    ,
                    this.loginHandler = async () => {
                        var e;
                        const t = this.getFormInput();
                        t.email = t.email.trim();
                        const a = (0,
                        r.TT)((0,
                        r.Ay)("entry-email"), t.email, "email")
                          , n = (0,
                        r.TT)((0,
                        r.Ay)("entry-password"), t.password, "password");
                        if (!a || !n)
                            return;
                        (0,
                        r.Ay)("entry-submit").classList.add("working");
                        const o = await (0,
                        s.In)("/auth/login", "POST", t);
                        o.status ? ((0,
                        i.A)("login", "password"),
                        this.options.callback ? window.location.href = decodeURIComponent(this.options.callback).split("#")[0] : window.location.reload()) : o.verify ? (this.loadForm("verification", {
                            email: t.email
                        }),
                        (0,
                        r.y8)("danger", o.message, 5)) : ((0,
                        r.Ay)("entry-submit").innerText = "Login",
                        (0,
                        r.y8)("danger", o.message, 5)),
                        null === (e = (0,
                        r.Ay)("entry-submit")) || void 0 === e || e.classList.remove("working")
                    }
                    ,
                    this.registerHandler = async () => {
                        this.registerData = this.getFormInput();
                        const e = (0,
                        r.TT)((0,
                        r.Ay)("entry-email"), this.registerData.email, "email")
                          , t = (0,
                        r.TT)((0,
                        r.Ay)("entry-password"), this.registerData.password, "password");
                        if (!e || !t)
                            return;
                        const a = this.getFormInput();
                        Object.assign(a, this.registerData);
                        const n = await (0,
                        s.In)("/auth/register", "POST", a);
                        if (!n.status)
                            return (0,
                            r.y8)("danger", n.message, 5),
                            void this.loadForm("register");
                        this.loadForm("verification", {
                            email: a.email
                        })
                    }
                    ,
                    this.verificationHandler = async () => {
                        const e = this.getFormInput()
                          , t = await (0,
                        s.In)("/auth/verify", "POST", e);
                        if (!t.status)
                            return (0,
                            r.y8)("danger", t.message, 5);
                        (0,
                        r.y8)("success", t.message, 5),
                        setTimeout(( () => {
                            const e = this.options.callback ? decodeURIComponent(this.options.callback).split("#")[0] : location.href;
                            t.redirectUpsell && "/pricing/" !== location.pathname ? window.location.href = `${location.origin}/upsell?next=${e}` : window.location.href = e
                        }
                        ), 1e3)
                    }
                    ,
                    this.forgotPasswordHandler = async () => {
                        const e = this.getFormInput();
                        if (!(0,
                        r.TT)((0,
                        r.Ay)("entry-email"), e.email, "email"))
                            return;
                        e.resend = !1;
                        const t = await (0,
                        s.In)("/auth/request/code/", "POST", e);
                        if (!t.status)
                            return (0,
                            r.y8)("danger", t.message, 5);
                        (0,
                        r.y8)("success", t.message, 5, e.email),
                        this.loadForm("resetPassword", {
                            email: e.email
                        })
                    }
                    ,
                    this.passwordResetHandler = async (e=!1) => {
                        let t;
                        try {
                            if (t = grecaptcha.getResponse(this.captcha),
                            grecaptcha.reset(this.captcha),
                            !t)
                                return (0,
                                r.y8)("danger", "Please complete the CAPTCHA!", 3)
                        } catch (d) {
                            console.error("Failed to get Captcha Token!")
                        }
                        const a = this.getFormInput();
                        a.token = t;
                        const n = (0,
                        r.TT)((0,
                        r.Ay)("entry-email"), a.email, "email")
                          , i = (0,
                        r.TT)((0,
                        r.Ay)("entry-password"), a.password, "password")
                          , o = (0,
                        r.TT)((0,
                        r.Ay)("entry-code"), a.code, "code");
                        if (!n || !i || !o)
                            return;
                        const l = await (0,
                        s.In)("/auth/reset", "POST", a);
                        if (!l.status)
                            return (0,
                            r.y8)("danger", l.message, 5);
                        (0,
                        r.y8)("success", l.message, 5),
                        setTimeout(( () => {
                            e ? window.location.href = "/logout" : window.location.reload()
                        }
                        ), 1e3)
                    }
                    ,
                    this.resendCode = async e => {
                        (0,
                        r.Ay)("entry-resend").classList.add("hide"),
                        this.resendCodeTimeouts = setTimeout(( () => {
                            (0,
                            r.Ay)("entry-resend").classList.remove("hide")
                        }
                        ), 3e4);
                        const t = await (0,
                        s.In)("/auth/request/code/", "POST", {
                            email: e,
                            resend: !0
                        });
                        if (!t.status)
                            return (0,
                            r.y8)("danger", t.message, 5);
                        (0,
                        r.y8)("success", t.message, 5, e)
                    }
                    ,
                    this.changeEmailHandler = async () => {
                        const e = this.getFormInput();
                        if (!(0,
                        r.TT)((0,
                        r.Ay)("entry-email"), e.email, "email"))
                            return;
                        const t = await (0,
                        s.In)("/auth/changeemail/request", "POST", {
                            newEmail: e.email
                        });
                        if (!t.status)
                            return (0,
                            r.y8)("danger", t.message);
                        this.loadForm("verification", {
                            email: e.email,
                            verify: "changeEmailVerification"
                        }),
                        (0,
                        r.y8)("success", t.message, 5, e.email)
                    }
                    ,
                    this.changeEmailVerificationHandler = async () => {
                        const e = this.getFormInput();
                        e.newEmail = e.email;
                        if (!(0,
                        r.TT)((0,
                        r.Ay)("entry-code"), e.code, "code"))
                            return;
                        const t = await (0,
                        s.In)("/auth/changeemail/verify", "POST", e);
                        if (!t.status)
                            return (0,
                            r.y8)("danger", t.message, 5);
                        (0,
                        r.y8)("success", t.message, 5),
                        setTimeout(( () => {
                            window.location.replace("/logout?callbackUrl=/")
                        }
                        ), 1e3)
                    }
                    ,
                    this.changePasswordHandler = async () => {
                        const e = this.getFormInput()
                          , t = (0,
                        r.TT)((0,
                        r.Ay)("entry-password"), e.password, "password")
                          , a = (0,
                        r.TT)((0,
                        r.Ay)("entry-password-new"), e["new-password"], "password");
                        if (!t || !a)
                            return;
                        const n = await (0,
                        s.In)("/auth/changepassword", "PUT", {
                            oldPassword: e.password,
                            newPassword: e["new-password"]
                        });
                        if (!n.status)
                            return (0,
                            r.y8)("danger", n.message, 5);
                        (0,
                        r.y8)("success", n.message, 5),
                        setTimeout(( () => {
                            window.location.replace("/")
                        }
                        ), 2e3)
                    }
                    ,
                    this.changeUsernameHandler = async () => {
                        const e = this.getFormInput()
                          , t = await (0,
                        s.In)("/myaccount/api/profile", "PUT", e, !0);
                        if (!t.status)
                            return (0,
                            r.y8)("danger", t.message);
                        (0,
                        r.y8)("success", t.message),
                        setTimeout(( () => window.location.reload()), 500)
                    }
                    ,
                    this.deleteAccountHandler = async () => {
                        const e = this.getFormInput();
                        "leavingReasonDefault" !== e.reason && this.loadForm("deleteAccountConfirmation", {
                            reason: e.reason
                        })
                    }
                    ,
                    this.deleteAccountConfirmationHandler = async () => {
                        const e = this.getFormInput();
                        if (!(0,
                        r.TT)((0,
                        r.Ay)("entry-password"), e.password, "password"))
                            return;
                        (0,
                        r.Ay)("entry-cancel").style.display = "none",
                        (0,
                        r.Ay)("delete-confirm").innerText = (0,
                        n.A)("common-deleteInProgress");
                        const t = await (0,
                        s.In)("/api/myaccount/profile", "DELETE", e, !0);
                        if (!t.status)
                            return (0,
                            r.Ay)("entry-cancel").style.display = "block",
                            (0,
                            r.Ay)("delete-confirm").innerText = (0,
                            n.A)("deleteMyAccount"),
                            (0,
                            r.y8)("danger", t.message);
                        window.location.href = "/logout/"
                    }
                    ,
                    this.getAdditionalVerificationstatus = () => (0,
                    r.Ay)("entry-form"),
                    this.additionalVerificationHandler = async () => {
                        const e = this.getFormInput();
                        if (!(0,
                        r.TT)((0,
                        r.Ay)("entry-password"), e.password, "password"))
                            return !1;
                        const t = await (0,
                        s.In)("/api/myaccount/verification", "POST", e, !0);
                        return !!t.status || ((0,
                        r.y8)("danger", t.message),
                        !1)
                    }
                    ,
                    this.options = Object.assign({}, e),
                    this.form = new l,
                    this.registerData = {},
                    this.validationTimer = {},
                    this.captcha = {},
                    this.dialog = this.options.holder,
                    this.dialog.classList.add("entry"),
                    this.content = (0,
                    r.T)("div", {
                        className: "entry-content"
                    }),
                    this.footer = (0,
                    r.T)("div", {
                        id: "entry-footer",
                        className: "center"
                    }),
                    this.dialog.append(this.content, this.footer),
                    this.loadForm(null !== (t = this.options.view) && void 0 !== t ? t : "chooser")
                }
            }
        }
        ,
        96703: (e, t, a) => {
            "use strict";
            a.d(t, {
                A: () => f
            });
            var n = a(42268)
              , i = a(21742);
            function s(e, t=100, a="", s="", r="") {
                return (0,
                n.T)("div", {
                    className: `form-group w-${t}`
                }, (0,
                n.T)("div", {
                    className: "adyen-checkout-title"
                }, (0,
                n.T)("span", {
                    className: "adyen-checkout__label__text"
                }, `${(0,
                i.A)(e)} ${(0,
                i.A)(s)}`), r), (0,
                n.T)("input", {
                    type: "text",
                    id: e.replace("checkout-", ""),
                    maxLength: 56,
                    required: !0,
                    value: a
                }))
            }
            const r = (e, t, a) => {
                const [s,r] = function(e, t) {
                    let a, n;
                    return t.forEach((t => {
                        t.product === e && (1 === t.monthDuration ? a = t : 12 === t.monthDuration && (n = t))
                    }
                    )),
                    [{
                        code: a.code,
                        monthlyPrice: a.pricing.USD.amount.toFixed(2),
                        yearlyPrice: (12 * a.pricing.USD.amount).toFixed(2)
                    }, {
                        code: n.code,
                        monthlyPrice: String(n.pricing.USD.displayPriceInMonths),
                        yearlyPrice: n.pricing.USD.amount.toFixed(2)
                    }]
                }(t, a)
                  , o = Math.round(100 * (1 - +r.yearlyPrice / +s.yearlyPrice));
                return (0,
                n.T)("details", {
                    id: "chckout-planSelection",
                    className: "kort",
                    open: "Pixlr Plus" === t
                }, (0,
                n.T)("summary", {
                    style: "display: flex; align-items: center;"
                }, (0,
                n.T)("img", {
                    src: `/images/checkout/icon/${t}.svg`,
                    width: 24,
                    height: 24,
                    style: "margin-right: 8px;"
                }), (0,
                n.T)("span", {
                    className: "fs-16 fw-7"
                }, t), (0,
                n.T)("img", {
                    src: "/images/icon/up.svg",
                    style: "margin-left: auto"
                })), (0,
                n.T)("div", {
                    style: "display: flex; flex-direction: column; row-gap: 8px"
                }, (0,
                n.T)("div", {
                    className: "plan-options " + (e === s.code ? "selected" : ""),
                    dataset: {
                        plan: s.code
                    }
                }, (0,
                n.T)("p", {
                    className: "fs-14 fw-7"
                }, (0,
                i.A)("payMonthly")), (0,
                n.T)("p", (0,
                n.T)("span", {
                    className: "fs-14 fw-7",
                    style: "margin-right: 5px"
                }, `${s.monthlyPrice} /month`), (0,
                n.T)("span", {
                    className: "fs-12 fw-4"
                }, `. ${s.yearlyPrice} /year`))), (0,
                n.T)("div", {
                    className: "plan-options " + (e === r.code ? "selected" : ""),
                    dataset: {
                        plan: r.code
                    }
                }, (0,
                n.T)("p", {
                    className: "fs-14 fw-7"
                }, (0,
                i.A)("payYearly")), (0,
                n.T)("p", (0,
                n.T)("span", {
                    className: "fs-14 fw-7",
                    style: "margin-right: 5px"
                }, `${r.monthlyPrice} /month`), (0,
                n.T)("span", {
                    className: "fs-12 fw-4"
                }, `. ${r.yearlyPrice} /year`, (0,
                n.T)("span", {
                    className: "saving-badge"
                }, `Save ${o}%`)))), (0,
                n.T)("span", {
                    className: "fs-12 fw-4",
                    style: "line-height: 18px"
                }, (0,
                i.A)("youCanCancelAuto"))))
            }
              , o = () => (0,
            n.T)("details", {
                open: !0,
                id: "wrapper-payment-method",
                className: "kort"
            }, (0,
            n.T)("summary", {
                style: "display: flex; align-items: center;"
            }, (0,
            n.T)("img", {
                src: "/images/checkout/icon/card.svg",
                width: 24,
                height: 24,
                style: "margin-right: 8px;"
            }), (0,
            n.T)("span", {
                className: "fs-16 fw-7"
            }, (0,
            i.A)("paymentMethod")), (0,
            n.T)("img", {
                src: "/images/icon/up.svg",
                style: "margin-left: auto"
            })), (0,
            n.T)("div", {
                style: "display: flex; flex-direction: column; row-gap: 18px;"
            }, (0,
            n.T)("div", {
                id: "saved-cards"
            }), (0,
            n.T)("div", {
                id: "payment-option-radios"
            }, (0,
            n.T)("div", {
                className: "payment-options"
            }, (0,
            n.T)("input", {
                id: "adyen-radio-option",
                type: "radio",
                name: "payment",
                value: "adyen",
                checked: !0
            }), (0,
            n.T)("label", {
                htmlFor: "adyen-radio-option",
                className: "fs-12 fw-7"
            }, "Credit Card")), (0,
            n.T)("div", {
                id: "paypal-payment-option",
                className: "payment-options"
            }, (0,
            n.T)("input", {
                id: "paypal-radio-option",
                type: "radio",
                name: "payment",
                value: "paypal"
            }), (0,
            n.T)("label", {
                htmlFor: "paypal-radio-option",
                className: "fs-12 fw-7"
            }, "Paypal"))), (0,
            n.T)("div", {
                id: "component-container"
            }), (0,
            n.T)("div", {
                id: "component-3ds-container"
            })))
              , l = () => (0,
            n.T)("details", {
                id: "wrapper-billing-option",
                className: "kort"
            }, (0,
            n.T)("summary", {
                style: "display: flex; align-items: center;"
            }, (0,
            n.T)("img", {
                src: "/images/checkout/icon/card.svg",
                width: 24,
                height: 24,
                style: "margin-right: 8px;"
            }), (0,
            n.T)("span", {
                className: "fs-16 fw-7"
            }, (0,
            i.A)("optionalBillingInformation")), (0,
            n.T)("img", {
                src: "/images/icon/up.svg",
                style: "margin-left: auto"
            })), (0,
            n.T)("div", {
                id: "billing-form",
                className: "w-100"
            }, (0,
            n.T)("form", {}, (0,
            n.T)("div", {
                className: "flex"
            }, s("checkout-firstName", 50), s("checkout-lastName", 50)), (0,
            n.T)("div", {
                className: "flex"
            }, s("checkout-companyName", 100, "", "checkout-optional")), (0,
            n.T)("div", {
                className: "flex"
            }, s("checkout-vatNumber", 100, "", "checkout-optional")), (0,
            n.T)("div", {
                className: "flex"
            }, s("checkout-address", 100)), (0,
            n.T)("div", {
                className: "flex"
            }, s("checkout-city", 50), s("checkout-zipCode", 50)), (0,
            n.T)("div", {
                className: "flex"
            }, s("checkout-state", 50), function(e, t=100) {
                return (0,
                n.T)("div", {
                    className: `form-group w-${t}`
                }, (0,
                n.T)("span", {
                    className: "adyen-checkout__label__text"
                }, (0,
                i.A)(e)), (0,
                n.T)("select", {
                    id: "country",
                    name: "country",
                    className: "country-select"
                }))
            }("checkout-country", 50)))))
              , d = () => (0,
            n.T)("details", {
                id: "wrapper-seat-option",
                className: "kort"
            }, (0,
            n.T)("summary", {
                style: "display: flex; align-items: center;"
            }, (0,
            n.T)("img", {
                src: "/images/checkout/icon/seats.svg",
                width: 24,
                height: 24,
                style: "margin-right: 8px;"
            }), (0,
            n.T)("span", {
                className: "fs-16 fw-7"
            }, (0,
            i.A)("addMoreSeats")), (0,
            n.T)("img", {
                src: "/images/icon/up.svg",
                style: "margin-left: auto"
            })), (0,
            n.T)("div", (0,
            n.T)("div", {
                className: "seat-select"
            }, (0,
            n.T)("span", {
                className: "seat-option",
                dataset: {
                    value: "5"
                }
            }, "5 seats"), (0,
            n.T)("span", {
                className: "seat-option",
                dataset: {
                    value: "10"
                }
            }, "10 seats"), (0,
            n.T)("span", {
                className: "seat-option",
                dataset: {
                    value: "20"
                }
            }, "20 seats"), (0,
            n.T)("span", {
                className: "seat-option seat-option-custom"
            }, (0,
            n.T)("input", {
                type: "number",
                placeholder: "Custom",
                min: "1",
                max: "100"
            })))))
              , c = (e, t) => (0,
            n.T)("div", {
                id: "summary-wrapper"
            }, (0,
            n.T)("h3", (0,
            i.A)("orderSummary")), "giftcard" === e ? (0,
            n.T)("div", {
                style: "display: flex; column-gap: 8px"
            }, (0,
            n.T)("img", {
                src: "/images/checkout/icon/gift-card.png",
                height: 45
            }), (0,
            n.T)("div", (0,
            n.T)("h4", (0,
            i.A)("pixlrGiftCard")), (0,
            n.T)("h6", (0,
            n.T)("span", {
                className: "bold"
            }, (0,
            i.A)("purchaseFor")), (0,
            n.T)("span", {
                id: "summary-giftcard-to"
            })))) : "", "credits" === e ? (0,
            n.T)("div", (0,
            n.T)("h4", (0,
            i.A)("generativeCredits")), (0,
            n.T)("h6", (0,
            i.A)("useCreditToGenerateAIAcrossTools"))) : "", (0,
            n.T)("hr"), (0,
            n.T)("div", {
                style: "display: flex; flex-direction: column; row-gap: 14px"
            }, "subscription" === e ? (0,
            n.T)("div", {
                id: "summary-base",
                className: "summary-group inc"
            }, (0,
            n.T)("div", {
                className: "desc"
            }, (0,
            n.T)("h5", `${t.replace("Pixlr ", "")} Subscription`), "Pixlr Plus" === t ? (0,
            n.T)("ul", {
                className: "top-5"
            }, (0,
            n.T)("li", (0,
            i.A)("addFreeUnlimitedSave")), (0,
            n.T)("li", {
                id: "summary-base-credits"
            })) : "Pixlr Premium" === t ? (0,
            n.T)("ul", {
                className: "top-5"
            }, (0,
            n.T)("li", (0,
            i.A)("fullAccesstoPixlrAppAndAsset")), (0,
            n.T)("li", {
                id: "summary-base-credits"
            }), (0,
            n.T)("li", {
                id: "summary-base-credits-free-trial",
                style: "display: none"
            })) : "Pixlr Team" === t ? (0,
            n.T)("ul", {
                className: "top-5"
            }, (0,
            n.T)("li", (0,
            i.A)("manageYourTeamMembersAndCollaborate")), (0,
            n.T)("li", {
                id: "summary-base-credits"
            }), (0,
            n.T)("li", (0,
            i.A)("fiveExtraSeatsIncluded"))) : ""), (0,
            n.T)("span", {
                id: "summary-base-value",
                className: "bold"
            }, "9.99")) : "", "giftcard" === e ? (0,
            n.T)("div", {
                id: "summary-giftcard",
                className: "summary-group"
            }, (0,
            n.T)("h5", (0,
            i.A)("price")), (0,
            n.T)("span", {
                id: "summary-giftcard-value",
                className: "bold"
            }, "x")) : "", "credits" === e ? (0,
            n.T)("div", {
                id: "summary-credits",
                className: "summary-group"
            }, (0,
            n.T)("h5", (0,
            n.T)("span", {
                id: "summary-credits-amount"
            })), (0,
            n.T)("span", {
                id: "summary-credits-value",
                className: "bold"
            }, "x")) : "", (0,
            n.T)("div", {
                id: "summary-balance",
                className: "summary-group"
            }, (0,
            n.T)("h5", (0,
            i.A)("balanceCreditUpgrade")), (0,
            n.T)("span", {
                id: "summary-balance-value",
                className: "bold"
            }, "x")), (0,
            n.T)("div", {
                id: "summary-promo",
                className: "summary-group"
            }, (0,
            n.T)("div", {
                className: "desc"
            }, (0,
            n.T)("h5", (0,
            i.A)("promoCode")), (0,
            n.T)("span", {
                id: "summary-promo-remarks",
                className: "color-g25 fw-4 fs-14"
            }, "x")), (0,
            n.T)("span", {
                id: "summary-promo-value"
            }, "x")), (0,
            n.T)("div", {
                id: "summary-seats",
                className: "summary-group"
            }, (0,
            n.T)("div", {
                className: "desc"
            }, (0,
            n.T)("h5", (0,
            i.A)("additionalSeats")), (0,
            n.T)("span", {
                id: "summary-seats-count",
                className: "color-g25 fw-4 fs-14"
            }, "x5 seats")), (0,
            n.T)("span", {
                id: "summary-seats-value"
            }, "x")), (0,
            n.T)("div", {
                id: "summary-tax",
                className: "summary-group"
            }, (0,
            n.T)("h5", "GST 9%"), (0,
            n.T)("span", {
                id: "summary-tax-value"
            }, "x")), (0,
            n.T)("div", {
                id: "summary-trial",
                className: "summary-group"
            }, (0,
            n.T)("div", {
                className: "desc"
            }, (0,
            n.T)("h5", `${(0,
            i.A)("free7DayTrial")}`), (0,
            n.T)("span", {
                id: "summary-trial-note",
                className: "color-g25 fw-4 fs-14"
            })), (0,
            n.T)("span", "0.00")), (0,
            n.T)("div", {
                id: "summary-upsell",
                className: "summary-group"
            }, (0,
            n.T)("div", {
                className: "desc"
            }, (0,
            n.T)("h5", `${(0,
            i.A)("limitedTimeDiscount")}`), (0,
            n.T)("span", {
                id: "summary-upsell-note",
                className: "color-g25 fw-4 fs-14"
            })), (0,
            n.T)("span", {
                id: "summary-upsell-discount"
            }, "10%")), (0,
            n.T)("div", {
                id: "summary-skip-trial",
                className: "summary-group",
                style: "align-items: center; justify-content:flex-start; margin-top: 4px"
            }, (0,
            n.T)("input", {
                id: "summary-skip-trial-checkbox",
                type: "checkbox",
                style: "width: 15px; height: 15px; visibility: visible;"
            }), (0,
            n.T)("label", {
                id: "summary-skip-trial-label",
                style: "margin:0 4px;"
            }, "Skip free trial"))), (0,
            n.T)("hr"), (0,
            n.T)("div", {
                id: "summary-total",
                className: "summary-group inc"
            }, (0,
            n.T)("div", {
                className: "desc"
            }, (0,
            n.T)("h5", (0,
            i.A)("checkout-totalDue"), " (", (0,
            n.T)("span", {
                className: "currency"
            }, "USD"), ")"), (0,
            n.T)("span", {
                id: "summary-total-tax",
                className: "color-g25 fw-4 fs-14",
                style: "display: none;"
            }, "(incl. GST)")), (0,
            n.T)("span", {
                className: "total-price bold"
            }, "x")), (0,
            n.T)("button", {
                id: "proceed-payment",
                disabled: !0
            }, (0,
            i.A)("payNow")));
            var m = a(78508)
              , u = a(98244);
            var h = a(79453)
              , p = a(72284)
              , y = a(3514)
              , g = a(44190);
            class f extends p.A {
                constructor(e, t={}) {
                    var s;
                    if (super(!0),
                    this.checkoutOptions = {
                        checkoutMode: "checkout"
                    },
                    this.currency = "USD",
                    this.currencySymbol = "$",
                    this.freeTrial = !1,
                    this.skipFreeTrial = !1,
                    this.upsellDiscount = !1,
                    this.paymentData = {
                        currency: "USD",
                        checkoutMethod: this.checkoutOptions.checkoutMode,
                        billingAddress: {}
                    },
                    this.balanceCredit = 0,
                    this.selectedPayment = "credit",
                    this.tax = {
                        status: !1
                    },
                    this.genCredits = 0,
                    this.encryptedCardData = {
                        isValid: !1,
                        paymentMethod: {}
                    },
                    this.loadSeatsUI = () => {
                        this.optionUI.append(d()),
                        this.optionUI.append(o()),
                        this.optionUI.append(l()),
                        this.summaryUI.append(c(this.checkoutType, this.productName)),
                        (0,
                        n.Ay)("paypal-payment-option") && ((0,
                        n.Ay)("paypal-payment-option").style.display = "none"),
                        this.loadAdyen(),
                        this.loadEventListener()
                    }
                    ,
                    this.loadCreditsUI = () => {
                        this.optionUI.append((0,
                        n.T)("details", {
                            open: !0,
                            id: "wrapper-credit-option",
                            className: "kort"
                        }, (0,
                        n.T)("summary", {
                            style: "display: flex; align-items: center;"
                        }, (0,
                        n.T)("img", {
                            src: "/images/checkout/icon/credits.svg",
                            width: 24,
                            height: 24,
                            style: "margin-right: 8px;"
                        }), (0,
                        n.T)("span", {
                            className: "fs-16 fw-7"
                        }, (0,
                        i.A)("generativeCredits")), (0,
                        n.T)("img", {
                            src: "/images/icon/up.svg",
                            style: "margin-left: auto"
                        })), (0,
                        n.T)("div", {
                            style: "display: flex; flex-direction: column; row-gap: 16px"
                        }, (0,
                        n.T)("h6", (0,
                        i.A)("chooseAmount")), (0,
                        n.T)("div", {
                            className: "credit-select",
                            style: "display: flex; flex-wrap: wrap; column-gap: 10px; row-gap: 8px"
                        }, (0,
                        n.T)("span", {
                            className: "credit-option",
                            dataset: {
                                value: "200"
                            }
                        }, "200"), (0,
                        n.T)("span", {
                            className: "credit-option",
                            dataset: {
                                value: "500"
                            }
                        }, "500", (0,
                        n.T)("em", {}, "33%")), (0,
                        n.T)("span", {
                            className: "credit-option",
                            dataset: {
                                value: "1000"
                            }
                        }, "1000", (0,
                        n.T)("em", {}, "46%")), (0,
                        n.T)("span", {
                            className: "credit-option",
                            dataset: {
                                value: "2000"
                            }
                        }, "2000", (0,
                        n.T)("em", {}, "56%")), (0,
                        n.T)("span", {
                            className: "credit-option",
                            dataset: {
                                value: "5000"
                            }
                        }, "5000", (0,
                        n.T)("em", {}, "66%")))))),
                        this.optionUI.append(o()),
                        this.optionUI.append(l()),
                        this.summaryUI.append(c(this.checkoutType, this.productName)),
                        this.loadAdyen(),
                        this.loadEventListener()
                    }
                    ,
                    this.loadGiftCardUI = () => {
                        Promise.all([m.XC()]).then(( ([e]) => {
                            var t, a;
                            if (!e.status)
                                throw new Error("Failed to get gift details");
                            this.selectedGiftCard = e.data.find((e => e.code === this.checkoutOptions.giftcard)),
                            this.productName = this.selectedGiftCard.product,
                            this.optionUI.append(o()),
                            this.optionUI.append(l()),
                            this.summaryUI.append(c(this.checkoutType, this.productName)),
                            (0,
                            n.Ay)("summary-giftcard-value").innerText = this.selectedGiftCard.amount.toFixed(2),
                            null === (t = (0,
                            n.Ay)("summary-giftcard")) || void 0 === t || t.classList.add("inc"),
                            (0,
                            n.Ay)("summary-giftcard-to").innerText = (null === (a = this.checkoutOptions.isAGift) || void 0 === a ? void 0 : a.to) ? (0,
                            i.A)("someoneElse") : (0,
                            i.A)("myself"),
                            this.loadAdyen(),
                            this.loadEventListener()
                        }
                        ))
                    }
                    ,
                    this.loadEventListener = () => {
                        var e, t, a, i, s, r;
                        null === (e = (0,
                        n.Ay)("back-chckout")) || void 0 === e || e.addEventListener("click", this.backPreviousPopup),
                        document.querySelectorAll('input[name="payment"][type="radio"]').forEach((e => {
                            e.addEventListener("change", ( () => this.setPaymentMethod(e)))
                        }
                        )),
                        document.querySelectorAll(".plan-options").forEach((e => {
                            e.addEventListener("click", ( () => this.setPlan(e)))
                        }
                        )),
                        null === (t = (0,
                        n.Ay)("promocode-submit")) || void 0 === t || t.addEventListener("click", ( () => this.applyPromoCode())),
                        null === (a = (0,
                        n.Ay)("promocode-input")) || void 0 === a || a.addEventListener("input", this.promoCodeOnInput),
                        document.querySelectorAll(".seat-option").forEach((e => {
                            e.addEventListener("click", ( () => this.selectSeats(e))),
                            e.querySelector("input") && e.querySelector("input").addEventListener("keyup", ( () => this.selectSeats(e)))
                        }
                        )),
                        document.querySelectorAll(".credit-option").forEach((e => {
                            e.addEventListener("click", ( () => this.selectCredit(e)))
                        }
                        )),
                        document.querySelectorAll("#billing-form input").forEach((e => {
                            e.addEventListener("keyup", ( () => {
                                this.paymentData.billingAddress[e.id] = e.value,
                                this.isReadyToPay()
                            }
                            ))
                        }
                        )),
                        null === (i = (0,
                        n.Ay)("country")) || void 0 === i || i.addEventListener("change", this.updateCountry),
                        this.populateCountry(),
                        null === (s = (0,
                        n.Ay)("proceed-payment")) || void 0 === s || s.addEventListener("click", ( () => this.proceedPayment())),
                        null === (r = (0,
                        n.Ay)("summary-skip-trial-checkbox")) || void 0 === r || r.addEventListener("change", this.skipFreeTrialHandler)
                    }
                    ,
                    this.selectCredit = e => {
                        document.querySelectorAll(".credit-option").forEach((t => {
                            t !== e && t.classList.remove("active")
                        }
                        )),
                        e.classList.toggle("active"),
                        e.classList.contains("active") && e.dataset.value ? this.genCredits = Number(e.dataset.value) : this.genCredits = 0,
                        this.updatePrice()
                    }
                    ,
                    this.selectSeats = e => {
                        const t = document.querySelectorAll(".seat-option")
                          , a = (0,
                        n.Ay)("proceed-payment");
                        if (this.isReadyToPay(),
                        t.forEach((t => {
                            t !== e && t.classList.remove("active")
                        }
                        )),
                        e.classList.add("active"),
                        e.classList.contains("active"))
                            if (e.classList.contains("seat-option-custom")) {
                                const t = e.getElementsByTagName("input")[0];
                                "" === t.value || 0 === Number(t.value) ? (a.disabled = !0,
                                this.extraSeats = 0) : this.extraSeats = Number(t.value)
                            } else
                                e.dataset.value ? this.extraSeats = Number(e.dataset.value) : this.extraSeats = 0;
                        else
                            this.extraSeats = 0;
                        this.updatePrice()
                    }
                    ,
                    this.populateCountry = async () => {
                        const {data: e} = await m.X6();
                        this.countryList = e;
                        const t = (0,
                        n.lR)("country", "") || (null === h.N || void 0 === h.N ? void 0 : h.N.country)
                          , a = (0,
                        n.Ay)("country");
                        for (const i in e.country) {
                            const s = (0,
                            n.T)("option", {
                                value: e.country[i]
                            }, e.country[i]);
                            t === i && (s.selected = !0,
                            this.paymentData.billingAddress.country = e.country[i]),
                            a.append(s)
                        }
                        this.updateCountry()
                    }
                    ,
                    this.updateCountry = () => {
                        const e = (0,
                        n.Ay)("country").value
                          , t = Object.keys(this.countryList.country).find((t => this.countryList.country[t] === e));
                        this.paymentData.billingAddress.country = e,
                        this.tax.status = !1,
                        this.countryList.countryEU.some((e => e === t)) ? (this.currency = "EUR",
                        this.currencySymbol = "€") : (this.currency = "USD",
                        this.currencySymbol = "$"),
                        document.querySelectorAll(".currency").forEach((e => e.innerHTML = this.currency)),
                        document.querySelectorAll(".currency-symbol").forEach((e => e.innerHTML = this.currencySymbol)),
                        this.updatePrice()
                    }
                    ,
                    this.applyPromoCode = async () => {
                        var e;
                        const t = (0,
                        n.Ay)("promocode-submit");
                        if ("true" === t.dataset.applied)
                            return void this.removePromoCode();
                        const a = (0,
                        n.Ay)("promocode-input");
                        let i = (null === (e = this.checkoutOptions) || void 0 === e ? void 0 : e.code) ? this.checkoutOptions.code : a.value.toUpperCase().trim();
                        try {
                            if (!this.upsellDiscount && ["UPSELL30", "UPSELL10"].includes(i))
                                throw new Error("Invalid promocode!");
                            const e = await m.Pe(i, this.productName, this.splanId);
                            if (!e.status)
                                throw new Error("Invalid promocode!");
                            this.appliedPromo = e.promo,
                            a.readOnly = !0,
                            t.innerText = "Remove",
                            t.dataset.applied = "true",
                            this.updatePrice()
                        } catch ({response: s, message: r}) {
                            this.removePromoCode(),
                            (0,
                            n.Ay)("promocode-error").style.display = "block",
                            setTimeout(( () => {
                                (0,
                                n.Ay)("promocode-error").style.display = "none"
                            }
                            ), 1500)
                        }
                    }
                    ,
                    this.applyUpsellPromoCode = async () => {
                        let e = this.checkoutOptions.code;
                        try {
                            const t = await m.Pe(e, this.productName, this.splanId);
                            if (!t.status)
                                throw new Error("Invalid upsell promocode!");
                            this.appliedPromo = t.promo
                        } catch ({response: t, message: a}) {
                            this.appliedPromo = void 0
                        } finally {
                            this.updatePrice()
                        }
                    }
                    ,
                    this.removePromoCode = () => {
                        const e = (0,
                        n.Ay)("promocode-submit")
                          , t = (0,
                        n.Ay)("promocode-input");
                        e.innerText = "Apply",
                        delete e.dataset.applied,
                        this.appliedPromo = void 0,
                        this.updatePrice(),
                        t.readOnly = !1,
                        t.value = ""
                    }
                    ,
                    this.promoCodeOnInput = e => {
                        const t = e.target;
                        t.value = t.value.toUpperCase()
                    }
                    ,
                    this.updatePrice = () => {
                        var e, t;
                        let a;
                        "subscription" === this.checkoutType ? a = this.selectedPlan.pricing.USD.amount : "giftcard" === this.checkoutType ? a = this.selectedGiftCard.amount : ("seats" === this.checkoutType || "credits" === this.checkoutType) && (a = 0);
                        let s = a
                          , r = 0
                          , o = 0
                          , l = 0;
                        if ("subscription" === this.checkoutType ? ((0,
                        n.Ay)("summary-base-value").innerText = a.toFixed(2),
                        (0,
                        n.Ay)("summary-base-credits").innerText = (0,
                        i.A)("creditForAIGeneration", this.getCreditsByPlan()),
                        this.freeTrial && ((0,
                        n.Ay)("summary-base-credits-free-trial").innerText = (0,
                        i.A)("creditForAIGenerationDuringTrial", 250),
                        (0,
                        n.Ay)("summary-base-credits-free-trial").style.display = "list-item")) : "credits" === this.checkoutType && (s = a = this.getCreditsByPrice(this.genCredits),
                        (0,
                        n.Ay)("summary-credits-amount").innerText = (0,
                        i.A)("totalGenerativeCredits", this.genCredits.toFixed()),
                        (0,
                        n.Ay)("summary-credits-value").innerText = a.toFixed(2),
                        (0,
                        n.Ay)("summary-credits").classList.add("inc")),
                        this.appliedPromo && !["UPSELL30", "UPSELL10"].includes(null === (e = this.appliedPromo) || void 0 === e ? void 0 : e.code)) {
                            const {productCode: e, productName: t, percentage: s, amount: o} = this.appliedPromo;
                            (0,
                            n.Ay)("summary-promo-remarks").innerText = s ? (0,
                            i.A)("discountPercentageOffFirstPayingMonth").replace("{discountAmount}", `${s}%`) : (0,
                            i.A)("discountAmountOnlyFirstPayingMonth").replace("{discountAmount", o.toFixed(2));
                            t.includes(this.productName) && e.includes(this.splanId) && (s ? r = a * s / 100 : o && (r = o),
                            (0,
                            n.Ay)("summary-promo-value").innerText = `- ${r.toFixed(2)}`,
                            (0,
                            n.Ay)("summary-promo").classList.add("inc"))
                        } else
                            (0,
                            n.Ay)("summary-promo").classList.remove("inc");
                        if ("Pixlr Team" !== this.productName && "seats" !== this.checkoutType || !this.extraSeats)
                            (0,
                            n.Ay)("summary-seats").classList.remove("inc");
                        else {
                            const e = this.getSingleSeatPrice();
                            o = this.extraSeats * e,
                            (0,
                            n.Ay)("summary-seats-count").innerText = `x${this.extraSeats} seats`,
                            (0,
                            n.Ay)("summary-seats-value").innerText = o.toFixed(2),
                            (0,
                            n.Ay)("summary-seats").classList.add("inc")
                        }
                        if (this.tax.status ? (l = (a - r - this.balanceCredit + o) * (this.tax.percentage / 100),
                        (0,
                        n.Ay)("summary-tax-value").innerHTML = l.toFixed(2),
                        (0,
                        n.Ay)("summary-total-tax").style.display = "block",
                        (0,
                        n.Ay)("summary-tax").classList.add("inc")) : ((0,
                        n.Ay)("summary-tax").classList.remove("inc"),
                        (0,
                        n.Ay)("summary-total-tax").style.display = "none"),
                        s = a - r - this.balanceCredit + o + l,
                        ["UPSELL30", "UPSELL10"].includes(null === (t = this.appliedPromo) || void 0 === t ? void 0 : t.code) && this.upsellDiscount) {
                            const e = this.checkoutOptions.plan.includes("plus") ? 10 : 30
                              , t = s * (1 - e / 100)
                              , a = (s - t).toFixed(2);
                            s = t,
                            (0,
                            n.Ay)("summary-upsell-discount").innerText = `-${a}`,
                            (0,
                            n.Ay)("summary-upsell-note").innerText = `${(0,
                            i.A)("limitedTimeDiscountDesc").replace("{discount}", "" + e).replace("{plan}", this.selectedPlan.code.includes("monthly") ? "monthly" : "yearly")} ${this.freeTrial && !this.skipFreeTrial ? (0,
                            i.A)("youWillBeChargedDiscounted") : ""}`,
                            (0,
                            n.Ay)("summary-upsell").classList.add("inc")
                        } else
                            (0,
                            n.Ay)("summary-upsell").classList.remove("inc");
                        if (this.freeTrial ? (0,
                        n.Ay)("summary-skip-trial").classList.add("inc") : (0,
                        n.Ay)("summary-skip-trial").classList.remove("inc"),
                        this.freeTrial && !this.skipFreeTrial) {
                            let e = s;
                            s = 0;
                            const t = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                              , a = new Date;
                            a.setDate(a.getDate() + 7);
                            const r = `${a.getDate()} ${t[a.getMonth()]} ${a.getFullYear()}`;
                            (0,
                            n.Ay)("proceed-payment").innerText = (0,
                            i.A)("startTrial"),
                            (0,
                            n.Ay)("summary-trial-note").innerText = (0,
                            i.A)("cancelAnytimeOrAutoRenewalForAmount", r, `${this.currencySymbol}${e.toFixed(2)}`),
                            (0,
                            n.Ay)("summary-trial").classList.add("inc")
                        } else
                            (0,
                            n.Ay)("summary-trial").classList.remove("inc");
                        document.querySelectorAll(".total-price").forEach((e => e.innerHTML = s.toFixed(2)))
                    }
                    ,
                    this.skipFreeTrialHandler = e => {
                        e.target.checked ? ((0,
                        n.Ay)("summary-trial").classList.remove("inc"),
                        (0,
                        n.Ay)("proceed-payment").innerText = (0,
                        i.A)("payNow"),
                        this.skipFreeTrial = !0,
                        this.updatePrice()) : ((0,
                        n.Ay)("summary-trial").classList.add("inc"),
                        (0,
                        n.Ay)("proceed-payment").innerText = (0,
                        i.A)("startTrial"),
                        this.skipFreeTrial = !1,
                        this.updatePrice())
                    }
                    ,
                    this.setPaymentMethod = e => {
                        let t = e.value;
                        switch ("saved-card" === e.dataset.value && (t = "saved-card"),
                        t) {
                        case "paypal":
                            this.selectedPayment = "paypal",
                            (0,
                            n.Ay)("wrapper-billing-option").style.display = "none",
                            (0,
                            n.Ay)("component-container").classList.add("blocked"),
                            (0,
                            n.Ay)("saved-cards").classList.add("blocked"),
                            this.isReadyToPay();
                            break;
                        case "saved-card":
                            if (this.selectedPayment = "saved-card",
                            this.selectedSavedCard = e.id,
                            (0,
                            n.Ay)("wrapper-billing-option").style.display = "inline-flex",
                            (0,
                            n.Ay)("component-container").classList.add("blocked"),
                            (0,
                            n.Ay)("saved-cards").classList.remove("blocked"),
                            e.className.includes("selected"))
                                return e.classList.remove("selected"),
                                void this.setPaymentMethod((0,
                                n.Ay)("adyen-radio-option"));
                            document.querySelectorAll(".saved-card-item").forEach((e => {
                                e.classList.remove("selected"),
                                e.classList.add("blocked")
                            }
                            )),
                            e.classList.add("selected"),
                            e.classList.remove("blocked"),
                            this.isReadyToPay();
                            break;
                        default:
                            this.selectedPayment = "credit",
                            (0,
                            n.Ay)("wrapper-billing-option").style.display = "inline-flex",
                            (0,
                            n.Ay)("component-container").classList.remove("blocked"),
                            (0,
                            n.Ay)("saved-cards").classList.remove("blocked"),
                            this.isReadyToPay()
                        }
                    }
                    ,
                    this.setPlan = e => {
                        this.splanId = e.dataset.plan,
                        this.selectedPlan = this.setPlanDetails(this.splanId),
                        document.querySelector(".plan-options.selected").classList.remove("selected"),
                        e.classList.add("selected"),
                        this.updatePrice()
                    }
                    ,
                    this.setPlanDetails = e => this.subscriptionPlans.filter((t => t.code === e))[0],
                    this.proceedPayment = async () => {
                        var e, t, a;
                        if ("paypal" === this.selectedPayment)
                            return this.loadPaypal();
                        const i = (0,
                        n.Ay)("proceed-payment");
                        if (i.disabled)
                            return;
                        i.disabled = !0,
                        i.style.cursor = "wait";
                        const s = `/checkout/payments/${this.checkoutType}?platform=${this.checkoutOptions.platform}`
                          , r = this.getCheckoutData();
                        r.utm = this.getUtmParams();
                        try {
                            const n = await m.In(s, "POST", r);
                            if (!0 === n.status) {
                                const {paymentResponse: a, affiliate: i} = n.data;
                                i && this.affiliate(null === (e = n.data) || void 0 === e ? void 0 : e.affiliate),
                                (null == a ? void 0 : a.action) && (null === (t = null == a ? void 0 : a.action) || void 0 === t ? void 0 : t.type) === g.CheckoutThreeDS2Action.TypeEnum.ThreeDs2 ? this.load3DSForm(a) : (this.paymentResult(n.status, n.data.settings),
                                "web" === this.checkoutOptions.platform ? setTimeout(( () => {
                                    "seats" === this.checkoutType ? window.location.href = "/myaccount/?tab=team" : "giftcard" === this.checkoutType ? window.location.href = "/myaccount/?tab=redeem" : window.location.href = "/myaccount/?tab=subscription"
                                }
                                ), 1500) : setTimeout(( () => {
                                    null == this || this.cleanUp()
                                }
                                ), 2500))
                            } else
                                this.paymentResult(!1, {
                                    message: null !== (a = n.message) && void 0 !== a ? a : ""
                                })
                        } catch (o) {
                            console.error(o),
                            this.paymentResult(!1, {})
                        }
                    }
                    ,
                    this.paymentResult = (e, t) => {
                        var a, s;
                        this.optionUI.style.display = "none",
                        this.summaryUI.style.display = "none",
                        null === (a = (0,
                        n.Ay)("chckout-result")) || void 0 === a || a.remove(),
                        !1 === e ? this.setContent((0,
                        n.T)("div", {
                            id: "chckout-result"
                        }, (0,
                        n.T)("img", {
                            src: "/images/icon/red-cross.png",
                            width: 100,
                            style: "margin-bottom: 20px"
                        }), (0,
                        n.T)("h2", {
                            style: "margin-bottom: 10px"
                        }, (0,
                        i.A)("paymentFailed")), (0,
                        n.T)("p", (0,
                        i.A)("paymentUnsuccessful")), (0,
                        n.T)("p", {
                            style: "margin-top: 60px; color: #535353; font-style: italic"
                        }, null !== (s = t.message) && void 0 !== s ? s : ""))) : "processing" === e ? (this.setContent((0,
                        n.T)("div", {
                            id: "chckout-result"
                        }, (0,
                        n.T)("img", {
                            src: "/images/myaccount/black-loading.gif",
                            width: 150
                        }), (0,
                        n.T)("h2", {
                            style: "margin-bottom: 10px"
                        }, (0,
                        i.A)("pleaseCompleteYourPaymentAtPaypal")), (0,
                        n.T)("p", {
                            style: "margin-bottom: 10px"
                        }, (0,
                        i.A)("pleaseDoNotRefreshOrCloseThisPageWhilePaymentIsProcessing")), (0,
                        n.T)("p", (0,
                        i.A)("youWillAutomaticallyBeRedirectedToMyAccount")))),
                        t && Object.assign(h.N, t)) : (this.setContent((0,
                        n.T)("div", {
                            id: "chckout-result"
                        }, (0,
                        n.T)("img", {
                            src: "/images/icon/green-tick.png",
                            width: 100,
                            style: "margin-bottom: 20px"
                        }), (0,
                        n.T)("h2", {
                            style: "margin-bottom: 10px"
                        }, (0,
                        i.A)("paymentSuccessful")), (0,
                        n.T)("p", (0,
                        i.A)("youWillAutomaticallyBeRedirectedToMyAccount")))),
                        t && Object.assign(h.N, t),
                        this.clearUTMParameters())
                    }
                    ,
                    this.load3DSForm = async e => {
                        const t = this.checkoutType
                          , i = this.getCheckoutData();
                        const s = e => {
                            var t, a;
                            !0 === e.status ? (e.data.affiliate && this.affiliate(null === (t = e.data) || void 0 === t ? void 0 : t.affiliate),
                            this.paymentResult(e.status, e.data.settings),
                            "web" === this.checkoutOptions.platform ? setTimeout(( () => {
                                "seats" === this.checkoutType ? window.location.href = "/myaccount/?tab=team" : "giftcard" === this.checkoutType ? window.location.href = "/myaccount/?tab=redeem" : window.location.href = "/myaccount/?tab=subscription"
                            }
                            ), 1500) : setTimeout(( () => {
                                null == this || this.cleanUp()
                            }
                            ), 2500)) : this.paymentResult(!1, {
                                message: null !== (a = e.message) && void 0 !== a ? a : ""
                            })
                        }
                          , [r] = await Promise.all([a.e(8636).then(a.bind(a, 40430)).then((e => e.default)), a.e(8636).then(a.bind(a, 36971))])
                          , o = {
                            locale: "en_US",
                            environment: "pixlr.com" === window.location.hostname ? "live" : "test",
                            clientKey: this.adyenClientKey,
                            onAdditionalDetails: function(e, a) {
                                !async function(e) {
                                    const a = await m.In("/checkout/payments/details", "POST", Object.assign(Object.assign(Object.assign({}, i), e), {
                                        checkoutType: t
                                    }));
                                    s(a)
                                }(e.data)
                            }
                        };
                        (await r(o)).createFromAction(e.action).mount("#component-3ds-container"),
                        (0,
                        n.Ay)("saved-cards").style.display = "none",
                        (0,
                        n.Ay)("payment-option-radios").style.display = "none",
                        (0,
                        n.Ay)("component-container").style.display = "none",
                        document.querySelectorAll("#chckout-options > details:not(#wrapper-payment-method)").forEach((e => {
                            e.style.display = "none"
                        }
                        ))
                    }
                    ,
                    this.loadAdyen = async () => {
                        var e;
                        const [t] = await Promise.all([a.e(8636).then(a.bind(a, 40430)).then((e => e.default)), a.e(8636).then(a.bind(a, 36971))])
                          , {paymentMethods: i, paymentCards: s, adyenClientKey: r, proRatedSeats: o, affiliate: l} = await m.Wv({
                            splan: "premium-monthly"
                        });
                        this.adyenClientKey = r;
                        const d = {
                            locale: "en_US",
                            environment: "pixlr.com" === window.location.hostname ? "live" : "test",
                            clientKey: this.adyenClientKey,
                            paymentMethodsResponse: i,
                            analytics: {
                                enabled: !1
                            },
                            onChange: this.handleOnChange
                        };
                        (null == i ? void 0 : i.storedPaymentMethods) && s && (( (e, t) => {
                            const a = (0,
                            n.Ay)("saved-cards");
                            a.innerHTML = "",
                            e.forEach((e => {
                                if (!t.includes(e.id))
                                    return;
                                const i = (0,
                                n.T)("div", {
                                    id: e.id,
                                    className: "saved-card-item",
                                    dataset: {
                                        value: "saved-card"
                                    }
                                }, (0,
                                n.T)("object", {
                                    data: `/images/checkout/${e.brand}.png`,
                                    type: "image/png",
                                    style: "margin-left: auto"
                                }, (0,
                                n.T)("img", {
                                    src: `https://checkoutshopper-live.adyen.com/checkoutshopper/images/logos/${e.brand}.svg`,
                                    style: "margin-left: auto"
                                })), (0,
                                n.T)("div", {
                                    style: "display: flex; justify-content: space-between"
                                }, (0,
                                n.T)("span", "****"), (0,
                                n.T)("span", "****"), (0,
                                n.T)("span", "****"), (0,
                                n.T)("span", `${e.lastFour}`)), (0,
                                n.T)("div", (0,
                                n.T)("span", {
                                    style: "font-size: 8px; margin-right: 8px"
                                }, "MM/YY"), (0,
                                n.T)("span", {
                                    style: "font-size: 12px"
                                }, `${e.expiryMonth}/${e.expiryYear.substring(4, 2)}`)));
                                t[0] === e.id ? a.prepend(i) : a.append(i)
                            }
                            ))
                        }
                        )(i.storedPaymentMethods, s),
                        document.querySelectorAll(".saved-card-item").forEach((e => {
                            e.addEventListener("click", ( () => {
                                this.setPaymentMethod(e)
                            }
                            ))
                        }
                        ))),
                        o && console.log("check back here");
                        (await t(d)).create("card", {
                            hasHolderName: !0,
                            holderNameRequired: !0
                        }).mount("#component-container"),
                        null === (e = (0,
                        n.Ay)("chckout-loading")) || void 0 === e || e.remove()
                    }
                    ,
                    this.loadPaypal = async () => {
                        const e = "/paypal/" + ("subscription" === this.checkoutType ? "subscriptions" : "purchase")
                          , t = this.getCheckoutData();
                        try {
                            const a = await fetch(e, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json",
                                    Accept: "application/json"
                                },
                                body: JSON.stringify(t)
                            })
                              , i = await a.json();
                            if (i.status) {
                                const e = 800
                                  , t = 650
                                  , a = (screen.width - e) / 2
                                  , s = (screen.height - t) / 4
                                  , r = window.open(i.redirectUrl, "Paypal Checkout", `resizable=yes,width=800,height=650,top=${s},left=${a}`);
                                this.paymentResult("processing", {});
                                "success" === (await async function(e, t=5e3, a=3e4) {
                                    const n = (new Date).getTime() + a
                                      , i = (a, s) => {
                                        Promise.resolve(e()).then((e => {
                                            console.log(e);
                                            const r = (new Date).getTime();
                                            "success" === e.status ? a(e) : r < n || "pending" === e.status ? setTimeout(i, t, a, s) : s(new Error("AsyncPoller: reached timeout"))
                                        }
                                        )).catch((e => {
                                            s(e)
                                        }
                                        ))
                                    }
                                    ;
                                    return new Promise(i)
                                }((async () => {
                                    try {
                                        const e = await m.sG(i.id, this.checkoutType);
                                        return Promise.resolve(e)
                                    } catch (e) {
                                        return Promise.reject(e)
                                    }
                                }
                                ), 500, 15e3)).status && ((0,
                                n.Ay)("try-premium") && ((0,
                                n.Ay)("try-premium").style.display = "none"),
                                r.close(),
                                this.paymentResult(!0, {}),
                                setTimeout(( () => {
                                    var e;
                                    null == this || this.cleanUp(),
                                    "web" === (null === (e = this.checkoutOptions) || void 0 === e ? void 0 : e.platform) && (window.location.href = "/myaccount/?tab=subscription")
                                }
                                ), 2500))
                            } else
                                this.paymentResult(!1, {})
                        } catch (a) {
                            console.error(a),
                            this.paymentResult(!1, {})
                        }
                    }
                    ,
                    this.handleOnChange = e => {
                        const {data: t, isValid: a} = e
                          , {browserInfo: n, paymentMethod: i} = t;
                        this.encryptedCardData.isValid = a,
                        this.encryptedCardData.paymentMethod = i,
                        this.encryptedCardData.cardHolderName = document.getElementsByClassName("adyen-checkout__input--text")[0].value,
                        this.browserInfo = n,
                        this.isReadyToPay()
                    }
                    ,
                    this.requiredBillingInput = ["firstName", "lastName", "address", "city", "zipCode", "state"],
                    this.isReadyToPay = () => {
                        const {isValid: e, paymentMethod: t} = this.encryptedCardData
                          , a = (0,
                        n.Ay)("proceed-payment");
                        try {
                            if ("paypal" === this.selectedPayment && (a.disabled = !1),
                            "credit" === this.selectedPayment) {
                                if (!e)
                                    throw !1;
                                if (!this.encryptedCardData.cardHolderName.length)
                                    throw !1
                            }
                            const t = Object.values(this.paymentData.billingAddress).filter((e => "" !== e)).length;
                            1 === t && (a.disabled = !1),
                            1 !== t && this.requiredBillingInput.forEach((e => {
                                if (!this.paymentData.billingAddress[e])
                                    throw !1
                            }
                            )),
                            a.disabled = !1
                        } catch (i) {
                            a.disabled = !0
                        }
                    }
                    ,
                    this.backPreviousPopup = () => {
                        if (this.cleanUp(),
                        "premiumbounce" === this.checkoutOptions.bounceSource)
                            new y.A(this.checkoutOptions.bounceType,"premium")
                    }
                    ,
                    this.getCreditsByPrice = e => {
                        if (71 === e)
                            return .01;
                        if (200 === e)
                            return 2.99;
                        if (500 === e)
                            return 4.99;
                        if (1e3 === e)
                            return 7.99;
                        if (2e3 === e)
                            return 12.99;
                        if (5e3 === e)
                            return 24.99;
                        throw new Error("Invalid amount")
                    }
                    ,
                    this.getCreditsByPlan = () => "plus-monthly" === this.splanId ? 80 : "plus-yearly" === this.splanId ? 960 : "premium-monthly" === this.splanId ? 1e3 : "premium-yearly" === this.splanId ? 12e3 : "team-monthly" === this.splanId ? 1e3 : "team-yearly" === this.splanId ? 12e3 : void 0,
                    this.getSingleSeatPrice = () => {
                        var e;
                        if ("seats" === this.checkoutType)
                            return (null === (e = null === h.N || void 0 === h.N ? void 0 : h.N.subscriptionCode) || void 0 === e ? void 0 : e.includes("monthly")) ? 3.99 : 47.88;
                        if ("subscription" === this.checkoutType)
                            return this.splanId.includes("monthly") ? 3.99 : 47.88;
                        throw new Error("Configuration error...")
                    }
                    ,
                    this.getCheckoutData = () => {
                        var e, t, a;
                        const n = {
                            checkoutMethod: "checkout",
                            billingAddress: null !== (t = null === (e = this.paymentData) || void 0 === e ? void 0 : e.billingAddress) && void 0 !== t ? t : {},
                            currency: this.currency,
                            promo: this.appliedPromo ? this.appliedPromo.code : "",
                            captchaToken: "!!"
                        };
                        return "upgrade" === (null === (a = this.checkoutOptions) || void 0 === a ? void 0 : a.checkoutMode) && (n.checkoutMethod = "upgrade"),
                        this.browserInfo && (n.browserInfo = this.browserInfo,
                        n.origin = window.location.origin),
                        "subscription" === this.checkoutType ? (n.splan = this.splanId,
                        n.freeTrial = this.freeTrial && !this.skipFreeTrial,
                        n.upsellDiscount = this.upsellDiscount) : "giftcard" === this.checkoutType ? (n.giftId = this.giftCardId,
                        n.giftDetails = this.checkoutOptions.isAGift) : "credits" === this.checkoutType && (n.credits = this.genCredits),
                        "credit" === this.selectedPayment ? n.paymentMethod = this.encryptedCardData.paymentMethod : "saved-card" === this.selectedPayment && this.selectedSavedCard && (n.paymentCard = this.selectedSavedCard),
                        "Pixlr Team" !== this.productName && "seats" !== this.checkoutType || (n.seatsToAdd = this.extraSeats),
                        n
                    }
                    ,
                    this.loadAwin = () => {
                        this.dialog.append((0,
                        n.T)("script", {
                            src: "https://www.dwin1.com/65758.js",
                            type: "text/javascript",
                            defer: !0
                        }))
                    }
                    ,
                    this.affiliate = e => {
                        const {awin: t} = e;
                        if (t) {
                            const {params: e} = t;
                            if (document.body.append((0,
                            n.T)("img", {
                                src: `https://www.awin1.com/sread.img?tt=ns&tv=2&merchant=65758&amount=${e.amount}&cr=${e.cr}&ref=${e.ref}&parts=DEFAULT:${e.saleAmount}&vc=${e.vc}&ch=${e.ch}&customeracquisition=${e.customeracquisition}`,
                                width: 0,
                                height: 0,
                                style: {
                                    border: "none"
                                }
                            })),
                            void 0 !== a && void 0 !== a.Tracking) {
                                var a = {};
                                a.Tracking.Sale = {},
                                a.Tracking.Sale.amount = e.amount,
                                a.Tracking.Sale.orderRef = e.ref,
                                a.Tracking.Sale.parts = `DEFAULT:${e.amount}`,
                                a.Tracking.Sale.voucher = e.vc,
                                a.Tracking.Sale.currency = e.cr,
                                a.Tracking.Sale.channel = e.ch,
                                a.Tracking.Sale.customerAcquisition = e.customeracquisition,
                                a.Tracking.run()
                            } else {
                                const t = (0,
                                n.T)("script", {
                                    type: "text/javascript"
                                });
                                t.innerHTML = `\n                    //<![CDATA[ /*** Do not change ***/\n                        var AWIN = {};\n                        AWIN.Tracking = {};\n                        AWIN.Tracking.Sale = {};\n                        /*** Set your transaction parameters ***/\n                        AWIN.Tracking.Sale.amount = "${e.amount}";\n                        AWIN.Tracking.Sale.orderRef = "${e.ref}";\n                        AWIN.Tracking.Sale.parts = "DEFAULT:${e.amount}";\n                        AWIN.Tracking.Sale.voucher = "${e.vc}";\n                        AWIN.Tracking.Sale.currency = "${e.cr}";\n                        AWIN.Tracking.Sale.channel = "${e.ch}";\n                        AWIN.Tracking.Sale.customerAcquisition = "${e.customeracquisition}";\n                    //]]>\n                `,
                                document.body.append(t),
                                this.loadAwin()
                            }
                        }
                    }
                    ,
                    this.trackShareASale = e => {
                        const {merchantReference: t, paidAmount: a, currency: n, sscid: i, newCustomer: s=0} = e;
                        if (i) {
                            const e = document.createElement("img");
                            e.id = "_SHRSL_img_1",
                            e.src = `https://www.shareasale.com/sale.cfm?tracking=${t}&amount=${a}&merchantID=94987&transtype=sale&sscidmode=6&sscid=${i}&currency=${n}&newcustomer=${s}`,
                            e.style.width = "1",
                            e.style.height = "1";
                            const r = document.createElement("script");
                            r.src = "https://www.dwin1.com/19038.js",
                            r.type = "text/javascript",
                            r.defer = !0,
                            this.dialog.appendChild(e),
                            this.dialog.appendChild(r)
                        }
                    }
                    ,
                    this.getUtmParams = () => ({
                        utm_source: localStorage.getItem("utm_source"),
                        utm_medium: localStorage.getItem("utm_medium"),
                        utm_campaign: localStorage.getItem("utm_campaign")
                    }),
                    this.clearUTMParameters = () => {
                        localStorage.removeItem("utm_source"),
                        localStorage.removeItem("utm_medium"),
                        localStorage.removeItem("utm_campaign")
                    }
                    ,
                    (0,
                    u.A)("checkout", e),
                    this.checkoutType = e,
                    this.checkoutOptions = Object.assign(Object.assign({}, this.checkoutOptions), t),
                    a.e(7162).then(a.bind(a, 81413)),
                    this.dialog.id = "chckout",
                    this.setContent(`\n            <div id="chckout-loading">${(0,
                    i.A)("pleaseWaitWhileCheckoutLoading")}</div>\n            <div id="chckout-options"></div>\n            <div id="chckout-summary"></div>\n        `),
                    this.optionUI = (0,
                    n.Ay)("chckout-options"),
                    this.summaryUI = (0,
                    n.Ay)("chckout-summary"),
                    this.checkoutOptions.bounceSource && this.optionUI.append((0,
                    n.T)("img", {
                        id: "back-chckout",
                        src: "/img/icon/arrow-left-black.svg"
                    })),
                    "" !== (0,
                    n.lR)("promo-code", "") && (this.checkoutOptions.code = (0,
                    n.lR)("promo-code", "")),
                    "subscription" === this.checkoutType)
                        this.splanId = null !== (s = this.checkoutOptions.plan) && void 0 !== s ? s : "premium-monthly",
                        this.splanId.includes("plus") ? this.productName = "Pixlr Plus" : this.splanId.includes("premium") ? this.productName = "Pixlr Premium" : this.splanId.includes("team") && (this.productName = "Pixlr Team"),
                        this.freeTrial = "checkout" === this.checkoutOptions.checkoutMode && "Pixlr Premium" === this.productName && h.N.eligibleForTrail,
                        this.upsellDiscount = "checkout" === this.checkoutOptions.checkoutMode && ["Pixlr Premium", "Pixlr Plus"].includes(this.productName) && h.N.eligibleForUpsellDiscount,
                        Promise.all([m.gs(), m.Vi(this.splanId)]).then(( ([e,t]) => {
                            var a;
                            if (!e.status)
                                throw new Error("Failed to get plan details");
                            if ("upgrade" === this.checkoutOptions.checkoutMode && t.status && (this.balanceCredit = t.data.balanceCredit),
                            this.subscriptionPlans = e.data,
                            this.selectedPlan = this.setPlanDetails(this.splanId),
                            this.optionUI.append(r(this.splanId, this.productName, this.subscriptionPlans)),
                            "Pixlr Team" === this.productName && this.optionUI.append(d()),
                            this.optionUI.append(o()),
                            this.optionUI.append(l()),
                            this.optionUI.append((0,
                            n.T)("details", {
                                id: "wrapper-promo-option",
                                className: "kort"
                            }, (0,
                            n.T)("summary", {
                                style: "display: flex; align-items: center;"
                            }, (0,
                            n.T)("img", {
                                src: "/images/checkout/icon/percent.svg",
                                width: 24,
                                height: 24,
                                style: "margin-right: 8px;"
                            }), (0,
                            n.T)("span", {
                                className: "fs-16 fw-7"
                            }, (0,
                            i.A)("promoCode")), (0,
                            n.T)("img", {
                                src: "/images/icon/up.svg",
                                style: "margin-left: auto"
                            })), (0,
                            n.T)("div", (0,
                            n.T)("div", {
                                id: "promo-section"
                            }, (0,
                            n.T)("input", {
                                id: "promocode-input",
                                type: "text",
                                placeholder: (0,
                                i.A)("enterPromoCode")
                            }), (0,
                            n.T)("span", {
                                id: "promocode-submit",
                                className: "apply"
                            }, (0,
                            i.A)("apply"))), (0,
                            n.T)("p", {
                                id: "promocode-error"
                            }, (0,
                            i.A)("invalidPromoCode")), (0,
                            n.T)("p", {
                                className: "text-small",
                                style: "margin-top: 8px"
                            }, (0,
                            i.A)("promoCodeValidOneTimeOnly"))))),
                            this.summaryUI.append(c(this.checkoutType, this.productName)),
                            "upgrade" !== this.checkoutOptions.checkoutMode || t.status) {
                                if (("checkout" === this.checkoutOptions.checkoutMode && "Pixlr Plus" === this.productName || "upgrade" === this.checkoutOptions.checkoutMode && "premium-yearly" !== this.splanId || this.upsellDiscount) && (null === (a = (0,
                                n.Ay)("wrapper-promo-option")) || void 0 === a || a.remove()),
                                "upgrade" === this.checkoutOptions.checkoutMode && t.status) {
                                    document.querySelector("#chckout-planSelection .plan-options").style.display = "none",
                                    (0,
                                    n.Ay)("summary-balance-value").innerText = `- ${t.data.balanceCredit.toFixed(2)}`,
                                    (0,
                                    n.Ay)("summary-balance").classList.add("inc")
                                }
                                (0,
                                n.Ay)("paypal-payment-option") && "Pixlr Team" === this.productName && ((0,
                                n.Ay)("paypal-payment-option").style.display = "none"),
                                this.upsellDiscount ? this.applyUpsellPromoCode() : this.checkoutOptions.code && ((0,
                                n.Ay)("promocode-input") && ((0,
                                n.Ay)("promocode-input").value = this.checkoutOptions.code),
                                this.applyPromoCode(),
                                this.checkoutOptions.code = ""),
                                this.loadAdyen(),
                                this.loadEventListener()
                            } else
                                this.paymentResult(!1, {})
                        }
                        ));
                    else if ("giftcard" === this.checkoutType) {
                        if (this.giftCardId = this.checkoutOptions.giftcard,
                        !this.giftCardId)
                            throw new Error("Missing giftcard details!");
                        this.loadGiftCardUI()
                    } else
                        "seats" === this.checkoutType ? (this.loadSeatsUI(),
                        this.selectSeats(document.querySelector(".seat-option"))) : "credits" === this.checkoutType && (this.loadCreditsUI(),
                        this.selectCredit(document.querySelector(".credit-option")))
                }
            }
        }
        ,
        42268: (e, t, a) => {
            "use strict";
            a.d(t, {
                Ay: () => s,
                Bb: () => m,
                J9: () => c,
                Qo: () => o,
                T: () => r,
                TT: () => h,
                TV: () => d,
                lR: () => l,
                y8: () => u
            });
            var n = a(21742)
              , i = a(41915);
            function s(e) {
                return document.getElementById(e)
            }
            function r(e, ...t) {
                const a = document.createElement(e);
                if (0 === t.length)
                    return a;
                const n = t[0]
                  , i = !("string" == typeof n || n instanceof HTMLElement)
                  , s = i ? t.slice(1) : t;
                if (i && n) {
                    if (n.style) {
                        const e = n.style;
                        delete n.style,
                        "string" == typeof e ? a.setAttribute("style", e) : Object.assign(a.style, e)
                    }
                    if (n.dataset) {
                        const e = n.dataset;
                        delete n.dataset,
                        "object" == typeof e && Object.entries(e).map(( ([e,t]) => a.setAttribute(`data-${e}`, t)))
                    }
                    n.tooltip && a.setAttribute("tooltip", n.tooltip),
                    n.flow && a.setAttribute("flow", n.flow),
                    Object.assign(a, n)
                }
                return a.append(...s.filter((e => null != e))),
                a
            }
            function o() {
                return "loading" !== document.readyState ? Promise.resolve() : new Promise(( (e, t) => {
                    document.addEventListener("DOMContentLoaded", ( () => {
                        e()
                    }
                    ))
                }
                ))
            }
            function l(e, t) {
                const a = document.cookie.split(";").map((e => e.trim().split("="))).find(( ([t,a]) => t === e));
                return a ? a[1] : t
            }
            function d(e, t, a) {
                let n = `${encodeURIComponent(e)}=${encodeURIComponent(t)}`;
                a.path && (n += `; path=${a.path}`),
                a.domain && (n += `; domain=${a.domain}`),
                a.expires && (n += `; expires=${a.expires.toUTCString()}`),
                a.sameSite && (n += `; samesite=${a.sameSite}`),
                document.cookie = n
            }
            function c(e) {
                return new Promise((t => {
                    const a = new IntersectionObserver(( ([e]) => {
                        t(1 === e.intersectionRatio),
                        a.disconnect()
                    }
                    ));
                    a.observe(e)
                }
                ))
            }
            function m(e, t, a, n) {
                e.style.touchAction = "none";
                const s = e => {
                    e.stopPropagation(),
                    e.preventDefault(),
                    a && a(new i.A(e.clientX,e.clientY))
                }
                  , r = t => {
                    t.stopPropagation(),
                    t.preventDefault(),
                    n && n(new i.A(t.clientX,t.clientY)),
                    e.removeEventListener("pointermove", s, !0),
                    e.removeEventListener("pointerup", r, !0),
                    e.releasePointerCapture(t.pointerId)
                }
                ;
                e.addEventListener("pointerdown", (a => {
                    a.preventDefault(),
                    a.button > 0 || (e.addEventListener("pointermove", s, !0),
                    e.addEventListener("pointerup", r, !0),
                    e.setPointerCapture(a.pointerId),
                    t && t(new i.A(a.clientX,a.clientY)))
                }
                ), !0)
            }
            const u = (e="success", t="common-ServerError", a=3, i) => {
                let o = t ? (0,
                n.A)(t) : "danger" == e ? (0,
                n.A)("common-ServerError") : (0,
                n.A)("common-success");
                i && (o = o.replace("{email}", i)),
                document.body.append(r("div", {
                    id: "toast-box",
                    className: `toast ${e}`
                }, r("span", r("img", {
                    src: `/images/icon/${e}_alert.svg`
                })), r("span", {
                    className: "toast-text"
                }, o), r("span", {
                    className: `toast-close ${e}`,
                    style: "line-height: 0;",
                    onclick: () => {
                        var e;
                        return null === (e = s("toast-box")) || void 0 === e ? void 0 : e.remove()
                    }
                }, r("img", {
                    style: "width: 14px;",
                    src: "/images/icon/close.png"
                })))),
                setTimeout(( () => {
                    var e;
                    return null === (e = s("toast-box")) || void 0 === e ? void 0 : e.remove()
                }
                ), 1e3 * a)
            }
            ;
            function h(e, t, a, i=!1) {
                let s = !1;
                if (t || (t = e.value),
                "email" === a)
                    (t = t.trim()).match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/) || i && "" === t ? (e.classList.remove("invalid"),
                    e.nextElementSibling.style.display = "none") : (s = !0,
                    e.classList.add("invalid"),
                    e.nextElementSibling.style.display = "block");
                else if ("password" === a) {
                    const a = e.nextElementSibling;
                    t.length < 8 || t.length > 50 ? (s = !0,
                    e.classList.add("invalid"),
                    a.style.display = "block",
                    t.length < 8 ? a.innerHTML = (0,
                    n.A)("common-MinPassword") : t.length > 50 && (a.innerHTML = (0,
                    n.A)("common-MaxPassword"))) : t.indexOf("'") > -1 || t.indexOf('"') > -1 ? (s = !0,
                    e.classList.add("invalid"),
                    a.style.display = "block",
                    a.innerHTML = (0,
                    n.A)("common-InvalidSpecialChar")) : (e.classList.remove("invalid"),
                    a.style.display = "none")
                } else if ("code" === a) {
                    const a = e.nextElementSibling;
                    6 !== t.length ? (e.classList.add("invalid"),
                    a.style.display = "block",
                    s = !0) : (e.classList.remove("invalid"),
                    a.style.display = "none"),
                    setTimeout(( () => {
                        e.classList.remove("invalid"),
                        a.style.display = "none"
                    }
                    ), 3e3)
                }
                return !s
            }
        }
        ,
        6395: (e, t, a) => {
            "use strict";
            async function n(e, t) {
                return new Promise(( (a, n) => {
                    var i = new XMLHttpRequest
                      , s = !1;
                    i.responseType = "arraybuffer",
                    i.withCredentials = !1,
                    i.open("GET", e, !0),
                    i.onprogress = function(e) {
                        e.lengthComputable ? t && t(e.loaded / e.total * 100) : s || (s = !0,
                        t && t(-1))
                    }
                    ,
                    i.onloadend = function() {
                        i.status.toString().match(/^2/) ? (s || t && t(100),
                        a(new Blob([this.response],{
                            type: i.getResponseHeader("Content-Type")
                        }))) : n(i)
                    }
                    ,
                    i.send()
                }
                ))
            }
            function i(e) {
                return new Promise(( (t, a) => {
                    let n = new Image;
                    n.onload = () => t(n),
                    n.onerror = e => a(e),
                    n.src = e
                }
                ))
            }
            function s(e) {
                return new Promise(( (t, a) => {
                    const n = new FileReader;
                    n.onerror = () => a(n.error),
                    n.onloadend = () => t(n.result),
                    n.readAsArrayBuffer(e)
                }
                ))
            }
            function r(e) {
                return new Promise((async (t, a) => {
                    const n = URL.createObjectURL(e);
                    let i = new Image;
                    i.crossOrigin = "Anonymous",
                    i.onload = () => {
                        URL.revokeObjectURL(n),
                        i.width + i.height == 0 ? a("Could not open file!") : t(i)
                    }
                    ,
                    i.onerror = function() {
                        URL.revokeObjectURL(n),
                        a("Could not open file!")
                    }
                    ,
                    i.name = e instanceof File ? e.name : "",
                    i.src = n
                }
                ))
            }
            a.d(t, {
                CB: () => s,
                Ep: () => r,
                kw: () => i,
                yP: () => n
            })
        }
        ,
        21742: (e, t, a) => {
            "use strict";
            function n(e, ...t) {
                if (!I18N_STRINGS)
                    return e;
                let a = I18N_STRINGS[e];
                if (a || (console.log("No translation for key", e),
                a = e),
                !t || 0 === t.length)
                    return a;
                let n = 0;
                return a.replace(/%(\d+\$)?(s|d|f){1}/gm, ( (e, ...a) => {
                    const [i,s] = a
                      , r = i ? parseInt(i.slice(0, -1), 10) : n++;
                    switch (s) {
                    case "d":
                        const a = t[r];
                        return "number" != typeof a ? "NaN" : a.toFixed(0);
                    case "s":
                        const n = t[r];
                        return n ? n.toString() : e;
                    default:
                        return e
                    }
                }
                ))
            }
            a.d(t, {
                A: () => n
            })
        }
        ,
        21404: (e, t, a) => {
            "use strict";
            a.d(t, {
                A: () => i
            });
            var n = a(41915);
            class i {
                constructor(e=1, t=0, a=0, n=1, s=0, r=0) {
                    this.a = e,
                    this.b = t,
                    this.c = a,
                    this.d = n,
                    this.e = s,
                    this.f = r,
                    this.reset = () => {
                        this.a = this.d = 1,
                        this.b = this.c = this.e = this.f = 0
                    }
                    ,
                    this.translate = e => {
                        this.transform(1, 0, 0, 1, e.x, e.y)
                    }
                    ,
                    this.rotate = e => {
                        let t = Math.cos(e)
                          , a = Math.sin(e);
                        this.transform(t, a, -a, t, 0, 0)
                    }
                    ,
                    this.rotateDegree = function(e) {
                        this.rotate(.017453292519943295 * e)
                    }
                    ,
                    this.transform = (e, t, a, n, i, s) => {
                        const r = this.a
                          , o = this.b
                          , l = this.c
                          , d = this.d
                          , c = this.e
                          , m = this.f;
                        this.a = r * e + l * t,
                        this.b = o * e + d * t,
                        this.c = r * a + l * n,
                        this.d = o * a + d * n,
                        this.e = r * i + l * s + c,
                        this.f = o * i + d * s + m
                    }
                    ,
                    this.invert = () => {
                        let e = this.a
                          , t = this.b
                          , a = this.c
                          , n = this.d
                          , s = this.e
                          , r = this.f
                          , o = (new i,
                        e * n - t * a);
                        this.a = n / o,
                        this.b = -t / o,
                        this.c = -a / o,
                        this.d = e / o,
                        this.e = (a * r - n * s) / o,
                        this.f = -(e * r - t * s) / o
                    }
                }
                transformPoint(e) {
                    return new n.A(e.x * this.a + e.y * this.c + this.e,e.x * this.b + e.y * this.d + this.f)
                }
            }
        }
        ,
        41915: (e, t, a) => {
            "use strict";
            a.d(t, {
                A: () => n
            });
            class n {
                constructor(e=0, t=0) {
                    this.x = e,
                    this.y = t
                }
                distanceTo(e) {
                    return Math.sqrt(Math.pow(this.x - e.x, 2) + Math.pow(this.y - e.y, 2))
                }
                angleTo(e) {
                    let t = -(this.x - e.x)
                      , a = this.y - e.y
                      , n = 360 - Math.atan2(a, t) * (180 / Math.PI);
                    return n < 0 && (n += 360),
                    n > 360 && (n -= 360),
                    n
                }
                dot(e) {
                    return this.x * e.x + this.y * e.y
                }
                lengthSQ() {
                    return this.dot(this)
                }
                length() {
                    return Math.sqrt(this.lengthSQ())
                }
                hypot2() {
                    return this.dot(this)
                }
                hypot() {
                    return Math.hypot(this.x, this.y)
                }
                add(e) {
                    return e ? e instanceof n ? new n(this.x + e.x,this.y + e.y) : new n(this.x + e,this.y + e) : this
                }
                neg(e) {
                    return e instanceof n ? new n(this.x - e.x,this.y - e.y) : new n(this.x - e,this.y - e)
                }
                mul(e) {
                    return e instanceof n ? new n(this.x * e.x,this.y * e.y) : new n(this.x * e,this.y * e)
                }
                rotateAround(e, t) {
                    let a = Math.sin(t)
                      , i = Math.cos(t)
                      , s = this.x - e.x
                      , r = this.y - e.y
                      , o = s * a + r * i;
                    return new n(s * i - r * a + e.x,o + e.y)
                }
                equalTo(e) {
                    return this.x === e.x && this.y === e.y
                }
                clone() {
                    return new n(this.x,this.y)
                }
            }
        }
        ,
        40963: (e, t, a) => {
            "use strict";
            a.d(t, {
                A: () => r
            });
            var n = a(21404)
              , i = a(41915)
              , s = a(53900);
            class r {
                constructor(e=0, t=0, a=0, n=0, i=0) {
                    this.x = e,
                    this.y = t,
                    this.width = a,
                    this.height = n,
                    this.rotation = i
                }
                left() {
                    return this.x
                }
                right() {
                    return this.x + this.width
                }
                top() {
                    return this.y
                }
                bottom() {
                    return this.y + this.height
                }
                size() {
                    return new s.A(this.width,this.height)
                }
                center() {
                    return new i.A(this.x + this.width / 2,this.y + this.height / 2)
                }
                topLeft() {
                    return new i.A(this.x,this.y)
                }
                topRight() {
                    return new i.A(this.right(),this.y)
                }
                bottomLeft() {
                    return new i.A(this.x,this.bottom())
                }
                bottomRight() {
                    return new i.A(this.right(),this.bottom())
                }
                setTop(e) {
                    this.height = this.y + this.height - e,
                    this.y = e
                }
                setLeft(e) {
                    this.width = this.x + this.width - e,
                    this.x = e
                }
                setRight(e) {
                    this.width = Math.round(e - this.x)
                }
                setBottom(e) {
                    this.height = Math.round(e - this.y)
                }
                setCenter(e) {
                    this.x = e.x - .5 * this.width,
                    this.y = e.y - .5 * this.height
                }
                setCenterX(e) {
                    this.x = e - .5 * this.width
                }
                setCenterY(e) {
                    this.y = e - .5 * this.height
                }
                moveRight(e) {
                    this.x = Math.round(e - this.width)
                }
                moveBottom(e) {
                    this.y = Math.round(e - this.height)
                }
                isSet() {
                    return this.x > 0 || this.y > 0 || this.width > 0 || this.height > 0 || this.rotation > 0
                }
                isInside(e) {
                    return e.x >= this.x && e.x < this.x + this.width && e.y >= this.y && e.y < this.y + this.height
                }
                contains(e) {
                    return !!(e && e.x >= this.x && e.y >= this.y && e.bottom() <= this.bottom() && e.right() <= this.right())
                }
                equalTo(e) {
                    return !!e && (this.x === e.x && this.y === e.y && this.width === e.width && this.height === e.height && this.rotation === e.rotation)
                }
                clone() {
                    return new r(this.x,this.y,this.width,this.height,this.rotation)
                }
                scale(e) {
                    return new r(Math.round(this.x * e),Math.round(this.y * e),Math.round(this.width * e),Math.round(this.height * e),this.rotation)
                }
                flipWidthAndHeight() {
                    return new r(this.y,this.x,this.height,this.width)
                }
                union(e) {
                    if (!e)
                        return this;
                    const t = Math.min(this.x, e.x)
                      , a = Math.min(this.y, e.y)
                      , n = Math.max(this.x + this.width, e.x + e.width)
                      , i = Math.max(this.y + this.height, e.y + e.height);
                    return new r(t,a,n - t,i - a)
                }
                intersect(e) {
                    let t = Math.max(this.x, e.x)
                      , a = Math.min(this.x + this.width, e.x + e.width);
                    if (a <= t)
                        return;
                    let n = Math.max(this.y, e.y)
                      , i = Math.min(this.y + this.height, e.y + e.height);
                    return i <= n ? void 0 : new r(t,n,a - t,i - n)
                }
                rebase(e, t) {
                    return new r(Math.round(this.x - e),Math.round(this.y - t),Math.round(this.width),Math.round(this.height))
                }
                gridAlign() {
                    return new r(Math.floor(this.x),Math.floor(this.y),Math.ceil(this.width),Math.ceil(this.height))
                }
                getRotatedBounds() {
                    if (0 === this.rotation)
                        return this;
                    let e = new n.A
                      , t = this.center();
                    e.translate(t),
                    e.rotate(this.rotation * Math.PI / 180),
                    e.invert();
                    const a = e.transformPoint(this.topLeft())
                      , i = e.transformPoint(this.topRight())
                      , s = e.transformPoint(this.bottomLeft())
                      , o = e.transformPoint(this.bottomRight());
                    let l = r.fromPoints([a, i, s, o]);
                    return l.x = Math.round(l.x + t.x),
                    l.y = Math.round(l.y + t.y),
                    l.rotation = this.rotation,
                    l
                }
                rotatedSize(e) {
                    const t = this.width
                      , a = this.height
                      , n = (e, t) => {
                        var a = e[0].x
                          , n = e[0].y
                          , s = e[1].x
                          , r = e[1].y
                          , o = t[0].x
                          , l = t[0].y
                          , d = t[1].x
                          , c = t[1].y;
                        return new i.A(((a * r - n * s) * (o - d) - (a - s) * (o * c - l * d)) / ((a - s) * (l - c) - (n - r) * (o - d)),((a * r - n * s) * (l - c) - (n - r) * (o * c - l * d)) / ((a - s) * (l - c) - (n - r) * (o - d)))
                    }
                    ;
                    let r, o, l, d, c, m, u;
                    var h = e * (Math.PI / 180)
                      , p = [new i.A(0,0), new i.A(t,0), new i.A(t,a), new i.A(0,a)]
                      , y = ( (e, t) => {
                        for (var a = new Array, n = 0; n < e.length; ++n)
                            a.push(new i.A(e[n].x * Math.cos(t) - e[n].y * Math.sin(t),e[n].x * Math.sin(t) + e[n].y * Math.cos(t)));
                        return a
                    }
                    )(p = ( (e, t, a) => {
                        for (var n = new Array, s = 0; s < e.length; ++s)
                            n.push(new i.A(e[s].x + t,e[s].y + a));
                        return n
                    }
                    )(p, -t / 2, -a / 2), h);
                    return e >= 0 ? (r = [new i.A(0,0), new i.A(-t / 2,-a / 2)],
                    l = [y[0], y[3]],
                    m = n(r, l),
                    o = [new i.A(0,0), new i.A(t / 2,-a / 2)],
                    d = [y[0], y[1]],
                    u = n(o, d)) : (r = [new i.A(0,0), new i.A(t / 2,-a / 2)],
                    l = [y[1], y[2]],
                    u = n(r, l),
                    o = [new i.A(0,0), new i.A(-t / 2,-a / 2)],
                    d = [y[0], y[1]],
                    m = n(o, d)),
                    c = new i.A(Math.max(m.x, -u.x),Math.max(m.y, u.y)),
                    new s.A(Math.round(-c.x - c.x),Math.round(-c.y - c.y))
                }
                pad(e) {
                    return new r(this.x - e,this.y - e,this.width + 2 * e,this.height + 2 * e)
                }
                getAspect() {
                    return this.width / this.height
                }
                getComparedScale(e) {
                    if (e)
                        return new s.A(this.width / e.width,this.height / e.height)
                }
                static calculate(e, t, a=0) {
                    if (!e || !t)
                        return;
                    let n = new r;
                    return n.x = Math.round(e.x < t.x ? e.x : t.x),
                    n.y = Math.round(e.y < t.y ? e.y : t.y),
                    n.width = Math.round(e.x < t.x ? t.x - n.x : e.x - n.x),
                    n.height = 0 !== a ? Math.round(n.width / a) : Math.round(e.y < t.y ? t.y - n.y : e.y - n.y),
                    n
                }
                static merge(e, t) {
                    if (!e && !t)
                        return;
                    if (e && !t)
                        return e;
                    if (!e && t)
                        return t;
                    const a = Math.round(Math.min(e.x, t.x))
                      , n = Math.round(Math.min(e.y, t.y))
                      , i = Math.round(Math.max(e.x + e.width, t.x + t.width))
                      , s = Math.round(Math.max(e.y + e.height, t.y + t.height));
                    return new r(a,n,i - a,s - n)
                }
                static fillFit(e, t, a, n, i=!1) {
                    let s = 1;
                    return s = e / t < a / n ? a / e : n / t,
                    i && s > 1 && (s = 1),
                    new r(Math.round((a - e * s) / 2),Math.round((n - t * s) / 2),Math.round(e * s),Math.round(t * s))
                }
                static bestFit(e, t, a, n, i=!1) {
                    let s = 1;
                    return s = e / t > a / n ? a / e : n / t,
                    s > 1 && !i && (s = 1),
                    new r(Math.round((a - e * s) / 2),Math.round((n - t * s) / 2),Math.round(e * s),Math.round(t * s))
                }
                static fromPoints(e) {
                    let t = e[0].x
                      , a = e[0].x
                      , n = e[0].y
                      , i = e[0].y;
                    return e.forEach((e => {
                        t = Math.min(e.x, t),
                        a = Math.max(e.x, a),
                        n = Math.min(e.y, n),
                        i = Math.max(e.y, i)
                    }
                    )),
                    new r(Math.round(t),Math.round(n),Math.round(a - t),Math.round(i - n))
                }
                static fromPointRects(e, t, a) {
                    let n = e[0].x
                      , i = e[0].x + t
                      , s = e[0].y
                      , o = e[0].y + a;
                    return e.forEach((e => {
                        n = Math.min(e.x, n),
                        i = Math.max(e.x + t, i),
                        s = Math.min(e.y, s),
                        o = Math.max(e.y + a, o)
                    }
                    )),
                    new r(n,s,i - n,o - s)
                }
            }
        }
        ,
        53900: (e, t, a) => {
            "use strict";
            a.d(t, {
                A: () => n
            });
            class n {
                constructor(e=0, t=0) {
                    this.width = e,
                    this.height = t
                }
            }
        }
        ,
        29755: (e, t, a) => {
            "use strict";
            a.d(t, {
                Ay: () => m,
                P2: () => l,
                ZC: () => r,
                pp: () => o
            });
            var n = a(42268)
              , i = a(98244)
              , s = a(41915);
            function r(e, t) {
                (0,
                i.A)("setting-" + e, t.toString());
                const a = window.localStorage.getItem("user-settings")
                  , n = JSON.parse(a || "{}");
                c[e] = n[e] = t,
                window.localStorage.setItem("user-settings", JSON.stringify(n)),
                document.dispatchEvent(new CustomEvent("user-setting-updated",{
                    detail: e
                }))
            }
            function o() {
                let e = 1
                  , t = d();
                c.ddid && "" !== c.ddid && -1 !== c.ddid.indexOf(":") && Number(c.ddid.split(":")[0]) === t && (e = Number(c.ddid.split(":")[1]) + 1),
                r("ddid", t + ":" + e),
                (0,
                i.A)("daily-saves", e.toString())
            }
            function l() {
                return function() {
                    if (c.ddid && "" !== c.ddid && -1 !== c.ddid.indexOf(":") && Number(c.ddid.split(":")[0]) === d()) {
                        let e = Number(c.ddid.split(":")[1]);
                        return e <= 0 && (e = 666),
                        e
                    }
                    return 0
                }() >= 3
            }
            function d() {
                let e = new Date;
                return (Date.UTC(e.getFullYear(), e.getMonth(), e.getDate()) - Date.UTC(e.getFullYear(), 0, 0)) / 24 / 60 / 60 / 1e3
            }
            const c = function() {
                const e = {
                    product: "web",
                    debug: "",
                    cdnUrl: "",
                    isIOS: !1,
                    isHDPI: !1,
                    isSafari: !1,
                    canTouch: !1,
                    accent: "default",
                    workspace: "default",
                    disabledTools: [],
                    allTooltip: !1,
                    autoSelect: !0,
                    showGuides: !0,
                    snapToGuides: !0,
                    smoothScaling: !0,
                    askToPreResize: !0,
                    useLegacySave: !1,
                    performanceMode: !1,
                    scrollMode: "zoom",
                    maxHistoryUndos: 25,
                    boxBarXState: "maximized",
                    panelFloating: !1,
                    panelNavigator: !0,
                    panelLayer: !0,
                    panelHistory: !0,
                    barQuicklink: !0,
                    mainColor: "#ffffff",
                    altColor: "#000000",
                    oldColor: ["#A8534B", "#EC9D75", "#F9D697", "#DCE6A7", "#9ADFB0", "#57CBAB", "#38A793", "#5A5E5A"],
                    gradients: [],
                    dialogPos: new s.A(0,0),
                    adyenClientKey: "",
                    lastNewsCheck: "1970-01-01T00:00:00Z",
                    ddid: ""
                };
                return Object.assign(e, ( () => {
                    const e = window.localStorage.getItem("user-settings");
                    return JSON.parse(e || "{}")
                }
                )()),
                Object.assign(e, ( () => {
                    const e = new URL(window.location.href)
                      , t = {};
                    return e.searchParams.forEach(( (e, a) => {
                        t[a] = e
                    }
                    )),
                    t
                }
                )()),
                Object.assign(e, ( () => {
                    const e = (0,
                    n.Ay)("config_data");
                    if (e && e.innerText) {
                        let e = JSON.parse((0,
                        n.Ay)("config_data").innerText);
                        return (0,
                        n.Ay)("config_data").remove(),
                        e
                    }
                    return {}
                }
                )()),
                e
            }()
              , m = c
        }
        ,
        72284: (e, t, a) => {
            "use strict";
            a.d(t, {
                A: () => s
            });
            var n = a(42268)
              , i = a(54738);
            class s {
                constructor(e=!0) {
                    this.scopedId = e => `${this.mid}-${e}`,
                    this.setContent = (...e) => {
                        e[0]instanceof HTMLElement ? this.content.append(...e) : this.content.innerHTML += e[0]
                    }
                    ,
                    this.keyDown = e => {
                        "Escape" !== e.key && "Esc" !== e.key || this.cleanUp()
                    }
                    ,
                    this.cleanUp = () => {
                        document.removeEventListener("keydown", this.keyDown, !1),
                        this.dialog.classList.remove("ani"),
                        this.modal.classList.remove("dim"),
                        setTimeout(( () => {
                            this.dialog.remove(),
                            this.dialog = null,
                            this.modal.remove(),
                            this.modal = null
                        }
                        ), 200)
                    }
                    ,
                    this.mid = i.r0(),
                    this.modal = (0,
                    n.T)("div", {
                        id: "modal-" + this.mid,
                        className: "modal"
                    }),
                    document.body.appendChild(this.modal),
                    this.dialog = (0,
                    n.T)("div", {
                        className: "announce"
                    }),
                    this.modal.appendChild(this.dialog),
                    this.content = (0,
                    n.T)("div", {
                        className: "content"
                    }),
                    this.dialog.append((0,
                    n.T)("div", {
                        id: "announce-close" + this.mid,
                        className: "announce-close",
                        onclick: () => this.cleanUp()
                    }, (0,
                    n.T)("img", {
                        src: "/img/icon/close.svg"
                    })), this.content),
                    document.addEventListener("keydown", this.keyDown, !1),
                    setTimeout(( () => this.dialog.classList.add("ani")), 5),
                    e && setTimeout(( () => this.modal.classList.add("dim")), 5)
                }
            }
        }
        ,
        50295: (e, t, a) => {
            "use strict";
            a.d(t, {
                A: () => r
            });
            var n = a(42268)
              , i = a(72284)
              , s = a(11839);
            class r extends i.A {
                constructor(e={}) {
                    super(!0),
                    this.setContent('\n            <div id="entry-pop-right" class="half">\n                <h1 class="large center top-20"><strong>Hi there!</strong></h1>\n                <h3 class="center top-10">Welcome to Pixlr, so happy to see you!</h3>\n                <div id="entry-auth-holder" class="top-20"></div>\n            </div>\n            ');
                    let t = (0,
                    n.T)("div", {
                        id: "entry-pop-left",
                        className: "hero"
                    });
                    this.dialog.insertBefore(t, this.content),
                    this.auth = new s.Ay(Object.assign({
                        view: "chooser",
                        holder: (0,
                        n.Ay)("entry-auth-holder")
                    }, e))
                }
            }
        }
        ,
        3514: (e, t, a) => {
            "use strict";
            a.d(t, {
                A: () => m
            });
            var n = a(42268)
              , i = a(21742)
              , s = a(50295)
              , r = a(72284)
              , o = a(98244)
              , l = a(29755)
              , d = a(79453)
              , c = a(96703);
            class m extends r.A {
                constructor(e, t) {
                    super(!0),
                    (0,
                    o.A)("bounce", e),
                    this.content.id = "bounce-content",
                    this.content.style.flexDirection = "column";
                    const a = !(!d.N || "plus" !== d.N.subscriptionAccess);
                    "save" === t ? this.setContent(`\n                <div id="bounce-top">\n                    <h1 class="top-20">${(0,
                    i.A)("bounceSnap")}</h1>\n                    <p class="top-20">${(0,
                    i.A)("bounceLowPrice", "0.99")}</p>\n\n                    <p id="do-login" style="display:none">${(0,
                    i.A)("common-alreadyMember")} <a id="login-link">${(0,
                    i.A)("common-loginHere")}</a></p>\n                </div>\n            `) : this.setContent(`\n                <div id="bounce-top">\n                    <h1 class="top-20">${(0,
                    i.A)("bounceTitle")}</h1>\n                    <p class="top-20">${(0,
                    i.A)("bounceFeaturePitch")}</p>\n                </div>\n            `),
                    this.setContent(`\n\n            <div class="paywal-plan">\n\n                <div id="subscribe-plus" class="plan subscription-plan">\n                    <div class="plan-details">\n                        <h2><img src="/img/misc/plus-icon.svg" alt="plus icon" style="width: 24px;">Plus</h2>\n\n                        <p>${(0,
                    i.A)("bouncePlusDesc")}</p>\n                        <ul class="top-10">\n                            <li>${(0,
                    i.A)("bounceAdFree")}</li>\n                            <li>${(0,
                    i.A)("bounceUnlimitedSaves")}</li>\n                            <li>${(0,
                    i.A)("bounceCreditsIncluded").replace("{number}", "80")}</li> \n                        </ul>\n\n                        ${(null === d.N || void 0 === d.N ? void 0 : d.N.eligibleForUpsellDiscount) ? `\n                            <div class="offer-box top-40">\n                                <svg class="halftone-svg" viewBox="-312 -312 624 624" aria-hidden="true" stroke="#919EAB"> \n                                    <circle r="10" stroke-width="22em"/>\n                                    <circle r="40" stroke-width="20em"/>\n                                    <circle r="70" stroke-width="18em"/>\n                                    <circle r="100" stroke-width="16em"/>\n                                    <circle r="130" stroke-width="14em"/>\n                                    <circle r="160" stroke-width="12em"/>\n                                    <circle r="190" stroke-width="10em"/>\n                                    <circle r="220" stroke-width="8em"/>\n                                    <circle r="250" stroke-width="6em"/>\n                                    <circle r="280" stroke-width="4em"/>\n                                    <circle r="310" stroke-width="2em"/>\n                                </svg>\n                                <h4 class="row-title discount-title try-premium" style="letter-spacing: 1px;">LIMITED TIME</h4>\n                                <h2 class="row-title discount-title try-premium" style="letter-spacing: 3px;line-height: 80%;">OFFER!</h2>\n                                <img class="" src="/img/misc/scribbly-line.svg" style="width: 70%;margin:8px 0;"></img>\n                                <span class="offer-discount-badge row-title">\n                                    ${(0,
                    i.A)("pricingSaveDiscount").replace("{dsc}", "10")} More!*\n                                </span>\n                            </div>` : ""}\n\n                        <div class="price top-30" style="display:flex;flex-direction:column;align-items:center;position:relative;z-index:3;">\n                            ${(null === d.N || void 0 === d.N ? void 0 : d.N.eligibleForUpsellDiscount) ? '<span class="amonth">Total discounted price</span>\n                                 <span id="premium-yearly" class="amount" aria-valuemax=0.89>$ 0.89</span>' : '<span id="premium-yearly" class="amount" style="color:#000" aria-valuemax=0.99>$ 0.99</span>'}\n                            \n                            <span class="amonth">${(0,
                    i.A)("pricingEachMonth")}</span>\n                            ${(null === d.N || void 0 === d.N ? void 0 : d.N.eligibleForUpsellDiscount) ? '<div class="discounted top-20"><span class="amount-strike">Was $ 1.99</span></div>' : ""}\n                        </div>\n\n                        ${a ? `<div class="button large disabled w-100 rounded top-30" style="cursor: not-allowed !important;">${(0,
                    i.A)("currentPlan")}</div>` : `<div class="button large white w-100 rounded top-30">${(0,
                    i.A)("subscribeNow")}</div>`}\n                    </div>\n                </div>\n\n                <div id="subscribe-premium" class="plan popular subscription-plan">\n                    <div class="plan-header">\n                        ${(0,
                    i.A)("mostPopular")}\n                    </div>\n                    <div class="plan-details">\n                        <h2><img src="/img/misc/premium-icon.svg" alt="premium icon" style="width: 24px;">Premium</h2>\n\n                        <p>${(0,
                    i.A)("bouncePremiumDesc")}</p>\n                        <ul class="top-10">\n                            <li>${(0,
                    i.A)("bounceAdFree")}</li>\n                            <li>${(0,
                    i.A)("bounceUnlimitedSaves")}</li>\n                            <li>${(0,
                    i.A)("bounceCreditsIncluded").replace("{number}", "1000")}</li> \n                            <li>${(0,
                    i.A)("bouncePrivateMode")}</li>\n                            <li>${(0,
                    i.A)("bounceBigLibrary")}</li>\n                        </ul>\n\n                        ${(null === d.N || void 0 === d.N ? void 0 : d.N.eligibleForUpsellDiscount) ? `\n                            <div class="offer-box top-40">\n                                <svg class="halftone-svg" viewBox="-312 -312 624 624" aria-hidden="true" stroke="#919EAB"> \n                                    <circle r="10" stroke-width="22em"/>\n                                    <circle r="40" stroke-width="20em"/>\n                                    <circle r="70" stroke-width="18em"/>\n                                    <circle r="100" stroke-width="16em"/>\n                                    <circle r="130" stroke-width="14em"/>\n                                    <circle r="160" stroke-width="12em"/>\n                                    <circle r="190" stroke-width="10em"/>\n                                    <circle r="220" stroke-width="8em"/>\n                                    <circle r="250" stroke-width="6em"/>\n                                    <circle r="280" stroke-width="4em"/>\n                                    <circle r="310" stroke-width="2em"/>\n                                </svg>\n                                <h4 class="row-title discount-title try-premium" style="letter-spacing: 1px;">LIMITED TIME</h4>\n                                <h2 class="row-title discount-title try-premium" style="letter-spacing: 3px;line-height: 80%;">OFFER!</h2>\n                                <img class="" src="/img/misc/scribbly-line.svg" style="width: 70%;margin:8px 0;"></img>\n                                <span class="offer-discount-badge row-title">\n                                    ${(0,
                    i.A)("pricingSaveDiscount").replace("{dsc}", "30")} More!*\n                                </span>\n                            </div>` : ""}\n\n                        <div class="price top-30" style="display:flex;flex-direction:column;align-items:center;position:relative;z-index: 3;">\n                            ${(null === d.N || void 0 === d.N ? void 0 : d.N.eligibleForUpsellDiscount) ? '<span class="amonth">Total discounted price</span>\n                                 <span id="premium-yearly" class="amount" aria-valuemax=3.44>$ 3.44</span>' : '<span id="premium-yearly" class="amount" style="color:#000" aria-valuemax=4.90>$ 4.90</span>'}\n                            \n                            <span class="amonth">${(0,
                    i.A)("pricingEachMonth")}</span>\n                            ${(null === d.N || void 0 === d.N ? void 0 : d.N.eligibleForUpsellDiscount) ? '<div class="discounted top-20"><span class="amount-strike">Was $ 7.99</span></div>' : ""}\n                        </div>\n\n                        <div class="button w-100 large rounded top-30" style="background:#111;">\n                        ${a ? (0,
                    i.A)("upgradeNow") : !d.N || d.N.eligibleForTrail ? (0,
                    i.A)("try30DaysFree") : (0,
                    i.A)("subscribeNow")}\n                        </div>\n                    </div>\n                </div>\n\n                <div id="subscribe-team" class="plan subscription-plan">\n                    <div class="plan-details">\n                        <h2><img src="/img/misc/team-icon.svg" alt="team icon">Team</h2>\n\n                        <p>${(0,
                    i.A)("bounceTeamDesc")}</p>\n                        <ul class="top-10">\n                            <li>${(0,
                    i.A)("bounceAdFree")}</li>\n                            <li>${(0,
                    i.A)("bounceUnlimitedSaves")}</li>\n                            <li>${(0,
                    i.A)("pricingFiveSeats")}</li>\n                            <li>${(0,
                    i.A)("pricingCreditsMemberIncluded").replace("{number}", "1000")}</li> \n                        </ul>\n\n                        <div class="price top-30" style="display:flex;flex-direction:column;align-items:center;">\n                            <span id="premium-yearly" class="amount" style="color:#000" aria-valuemax=9.91>$ 9.91</span>\n                            <span class="amonth">${(0,
                    i.A)("pricingEachMonth")}</span>\n                        </div>\n\n                        <div class="button large white rounded w-100 top-30">${a ? (0,
                    i.A)("upgradeNow") : (0,
                    i.A)("subscribeNow")}</div>\n                    </div>\n                </div>\n            </div>\n\n            <p class="center pad-15">${(0,
                    i.A)("unsureWhichSubscriptionToGet", `<a href="/pricing" target="_blank">${(0,
                    i.A)("pricingPage")}</a>`)} ${(0,
                    i.A)("freeForEducation", `<a href="/learn/education/" class="anchor" target="_blank">${(0,
                    i.A)("education")}</a>`)}</p>\n            \n        `),
                    "save" !== t || d.N || ((0,
                    n.Ay)("do-login").style.display = "block",
                    (0,
                    n.Ay)("login-link").addEventListener("click", ( () => {
                        this.cleanUp(),
                        new s.A
                    }
                    ))),
                    (0,
                    n.Ay)("subscribe-plus").addEventListener("click", ( () => {
                        a || (this.cleanUp(),
                        d.N ? new c.A("subscription",{
                            platform: l.Ay.product,
                            plan: "plus-monthly",
                            bounceSource: "premiumbounce",
                            code: d.N.eligibleForUpsellDiscount ? "UPSELL10" : ""
                        }) : new s.A)
                    }
                    )),
                    (0,
                    n.Ay)("subscribe-premium").addEventListener("click", ( () => {
                        this.cleanUp(),
                        d.N ? new c.A("subscription",{
                            platform: l.Ay.product,
                            plan: "premium-monthly",
                            bounceSource: "premiumbounce",
                            code: d.N.eligibleForUpsellDiscount ? "UPSELL30" : ""
                        }) : new s.A
                    }
                    )),
                    (0,
                    n.Ay)("subscribe-team").addEventListener("click", ( () => {
                        this.cleanUp(),
                        d.N ? new c.A("subscription",{
                            platform: l.Ay.product,
                            plan: "team-monthly",
                            bounceSource: "premiumbounce"
                        }) : new s.A
                    }
                    ))
                }
            }
        }
        ,
        79453: (e, t, a) => {
            "use strict";
            a.d(t, {
                N: () => i
            });
            var n = a(42268);
            const i = function() {
                let e;
                const t = (0,
                n.Ay)("current_user");
                if (t && "null" !== t.innerText)
                    try {
                        e = JSON.parse(t.innerText)
                    } catch (i) {
                        console.error("Could not read user data json")
                    }
                const a = new URL(location.href);
                return e && "pixlr.com" !== a.hostname && "true" === a.searchParams.get("premium") && (e.subscription = !0,
                e.subscriptionAccess = "premium"),
                e
            }()
        }
        ,
        54738: (e, t, a) => {
            "use strict";
            a.d(t, {
                $e: () => m,
                $f: () => I,
                B3: () => y,
                BB: () => P,
                Dk: () => O,
                H5: () => f,
                NL: () => H,
                Nw: () => d,
                Os: () => L,
                Ov: () => A,
                PG: () => u,
                SE: () => w,
                TL: () => D,
                VI: () => l,
                XP: () => E,
                bK: () => _,
                dM: () => F,
                eD: () => Y,
                k8: () => p,
                lz: () => c,
                oM: () => M,
                oR: () => C,
                oc: () => T,
                p: () => b,
                qE: () => N,
                r0: () => S,
                tN: () => h,
                tm: () => g,
                wc: () => R,
                y2: () => v,
                yu: () => o,
                yz: () => k,
                zR: () => x
            });
            var n = a(21742)
              , i = a(40963)
              , s = a(41915)
              , r = a(6395);
            function o(e, t, a, n, i=!0) {
                let s;
                return s = e / t > a / n ? a / e : n / t,
                i && s > 1 ? 1 : s
            }
            function l(e, t) {
                e < 0 && (e = 1),
                t < 0 && (t = 1);
                let a = document.createElement("canvas");
                return a.width = e,
                a.height = t,
                a
            }
            function d(e, t) {
                e < 0 && (e = 1),
                t < 0 && (t = 1);
                let a = document.createElement("canvas");
                return a.width = e,
                a.height = t,
                a
            }
            async function c(e) {
                if (!e)
                    return;
                const t = URL.createObjectURL(e)
                  , a = await m(t);
                return URL.revokeObjectURL(t),
                a
            }
            function m(e, t=!1) {
                if (void 0 !== e)
                    return new Promise(( (a, n) => {
                        if (!e)
                            return console.log("Invalid URL in dataURLToCanvas"),
                            void a(void 0);
                        const i = t ? l(100, 100) : d(100, 100)
                          , s = i.getContext("2d")
                          , r = new Image;
                        r.onerror = e => n(e),
                        r.onload = () => {
                            i.width = r.width,
                            i.height = r.height,
                            s.drawImage(r, 0, 0),
                            a(i)
                        }
                        ,
                        r.src = e
                    }
                    ))
            }
            function u(e, t) {
                if (!e)
                    return;
                const a = (null == t ? void 0 : t.rect) || new i.A(0,0,e.width,e.height)
                  , n = d(a.width, a.height);
                return n.getContext("2d").drawImage(e, -a.x, -a.y),
                new Promise(( (e, a) => n.toBlob(e, null == t ? void 0 : t.type, null == t ? void 0 : t.quality)))
            }
            function h(e, t, a) {
                if (!e || !t)
                    return;
                let n = e.getContext("2d");
                n.save(),
                n.globalCompositeOperation = "copy",
                n.drawImage(t, a.x, a.y),
                n.restore(),
                n = void 0
            }
            function p(e, t, a=0, n=!1) {
                let s = n ? l(e.width, e.height) : d(e.width, e.height)
                  , r = s.getContext("2d");
                if (r.drawImage(e, 0, 0, e.width, e.height),
                r = void 0,
                s.width > t || s.height > t) {
                    let a = i.A.bestFit(e.width, e.height, t, t);
                    s = g(s, a.width, a.height)
                }
                return 0 !== a && (s = w(s, a)),
                s
            }
            function y(e, t, a) {
                if (!e)
                    return;
                let n = d(t, a);
                var i = e.getContext("2d").getImageData(0, 0, e.width, e.height)
                  , s = new Int32Array(i.data.buffer)
                  , r = e.width
                  , o = e.height
                  , l = n.width
                  , c = n.height;
                let m = n.getContext("2d");
                var u = m.getImageData(0, 0, n.width, n.height)
                  , h = new Int32Array(u.data.buffer);
                const p = l / r
                  , y = c / o;
                for (let d = 0; d < c; ) {
                    const e = r * ~~(d / y)
                      , t = l * d++;
                    for (let a = 0; a < l; )
                        h[t + a++] = s[e + ~~(a / p)]
                }
                return m.putImageData(u, 0, 0),
                n
            }
            function g(e, t, a) {
                if (!e)
                    return;
                if (t > e.width || a > e.width)
                    return f(e, t, a);
                if (t < 4096 && a < 4096 && (e.width > 4096 || e.height > 4096)) {
                    let t = i.A.bestFit(e.width, e.height, 4096, 4096);
                    e = f(e, t.width, t.height)
                }
                let n = d(t, a);
                var s = e.getContext("2d", {
                    willReadFrequently: !0
                }).getImageData(0, 0, e.width, e.height).data
                  , r = e.width
                  , o = e.height
                  , l = n.width
                  , c = n.height;
                let m = n.getContext("2d");
                for (var u = m.getImageData(0, 0, n.width, n.height), h = u.data, p = r / l, y = o / c, g = Math.ceil(p / 2), _ = Math.ceil(y / 2), b = 0; b < c; b++)
                    for (var v = 0; v < l; v++) {
                        for (var M = 4 * (v + b * l), w = 0, T = 0, k = 0, D = 0, x = 0, A = 0, L = (b + .5) * y, S = Math.floor(b * y); S < (b + 1) * y; S++)
                            for (var N = Math.abs(L - (S + .5)) / _, P = (v + .5) * p, Y = N * N, E = Math.floor(v * p); E < (v + 1) * p; E++) {
                                var C = Math.abs(P - (E + .5)) / g
                                  , R = Math.sqrt(Y + C * C);
                                R >= -1 && R <= 1 && (w = 2 * R * R * R - 3 * R * R + 1) > 0 && (k += w * s[C = 4 * (E + S * r)],
                                D += w * s[C + 1],
                                x += w * s[C + 2],
                                A += w * s[C + 3],
                                T += w)
                            }
                        h[M] = k / T,
                        h[M + 1] = D / T,
                        h[M + 2] = x / T,
                        h[M + 3] = A / T
                    }
                return m.putImageData(u, 0, 0),
                n
            }
            function f(e, t, a, n=!0, i) {
                if (!e)
                    return;
                t < 1 && (t = 1),
                a < 1 && (a = 1);
                let s = null != i ? i : d(t, a);
                var r = s.getContext("2d");
                return r.imageSmoothingQuality = "high",
                r.imageSmoothingEnabled = n,
                r.drawImage(e, 0, 0, s.width, s.height),
                r = void 0,
                s
            }
            function _(e, t) {
                let a = d(t.width, t.height)
                  , n = a.getContext("2d");
                return n.drawImage(e, -t.x, -t.y),
                n = void 0,
                a
            }
            function b(e, t, a) {
                let n = d(a.width, a.height)
                  , i = n.getContext("2d");
                return i.imageSmoothingQuality = "high",
                i.imageSmoothingEnabled = !0,
                i.drawImage(e, t.x - a.x, t.y - a.y, t.width, t.height),
                i = void 0,
                n
            }
            function v(e, t) {
                if (e) {
                    var a = d(t.width, t.height)
                      , n = a.getContext("2d");
                    return n.drawImage(e, -t.x, -t.y),
                    n = void 0,
                    a
                }
            }
            function M(e, t=!1) {
                if (e) {
                    var a = t || e instanceof HTMLCanvasElement ? l(e.width, e.height) : d(e.width, e.height)
                      , n = a.getContext("2d");
                    return n.drawImage(e, 0, 0),
                    n = void 0,
                    a
                }
            }
            function w(e, t) {
                if (e) {
                    var a = d(e.width, e.height)
                      , n = a.getContext("2d");
                    return 180 !== t && (a.width = e.height,
                    a.height = e.width),
                    n.translate(a.width / 2, a.height / 2),
                    n.rotate(t * Math.PI / 180),
                    n.drawImage(e, -e.width / 2, -e.height / 2),
                    n.setTransform(1, 0, 0, 1, 0, 0),
                    n = void 0,
                    a
                }
            }
            function T(e, t, a) {
                let n = d(a.width, a.height)
                  , i = n.getContext("2d");
                return i.save(),
                i.translate(a.width / 2, a.height / 2),
                i.rotate(t * Math.PI / 180),
                i.drawImage(e, -e.width / 2, -e.height / 2),
                i.restore(),
                i = null,
                n
            }
            function k(e, t) {
                if (e) {
                    var a = d(e.width, e.height)
                      , n = a.getContext("2d");
                    return n.save(),
                    t ? (n.scale(1, -1),
                    n.drawImage(e, 0, -e.height, e.width, e.height)) : (n.scale(-1, 1),
                    n.drawImage(e, -e.width, 0, e.width, e.height)),
                    n.restore(),
                    n = void 0,
                    a
                }
            }
            function D(e) {
                if (!e)
                    return;
                const t = e.width
                  , a = e.height;
                return x(e.getContext("2d", {
                    willReadFrequently: !0
                }).getImageData(0, 0, t, a))
            }
            function x(e) {
                if (!e)
                    return;
                const t = e.width
                  , a = e.height;
                let n, s, r = new Uint32Array(e.data.buffer), o = -1, l = -1, d = -1, c = -1;
                for (s = 0; s < a; ++s) {
                    for (n = 0; n < t; ++n)
                        if (r[n + s * t] > 0) {
                            l = s;
                            break
                        }
                    if (-1 !== l)
                        break
                }
                if (-1 !== l) {
                    for (s = a - 1; s >= l; --s) {
                        for (n = 0; n < t; ++n)
                            if (r[n + s * t] > 0) {
                                c = s + 1;
                                break
                            }
                        if (-1 !== c)
                            break
                    }
                    for (n = 0; n < t; ++n) {
                        for (s = l; s <= c; ++s)
                            if (r[n + s * t] > 0) {
                                o = n;
                                break
                            }
                        if (-1 !== o)
                            break
                    }
                    for (n = t - 1; n >= o; --n) {
                        for (s = l; s <= c; ++s)
                            if (r[n + s * t] > 0) {
                                d = n + 1;
                                break
                            }
                        if (-1 !== d)
                            break
                    }
                    return new i.A(o,l,d - o,c - l)
                }
            }
            function A(e) {
                let t = e / 1024;
                return t > 1024 ? (t / 1024).toFixed(1) + "mb" : t > 100 ? Math.round(t) + "kb" : Math.round(10 * t) / 10 + "kb"
            }
            function L() {
                return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(e) {
                    var t = 16 * Math.random() | 0;
                    return ("x" == e ? t : 3 & t | 8).toString(16)
                }
                ))
            }
            function S() {
                return "xxxxyxxx4xxx".replace(/[xy]/g, (function(e) {
                    var t = 16 * Math.random() | 0;
                    return ("x" == e ? t : 3 & t | 8).toString(16)
                }
                ))
            }
            function N(e, t, a) {
                return isNaN(e) ? t : Math.min(Math.max(e, t), a)
            }
            function P(e) {
                if (0 === e.length)
                    return;
                return e[Math.round(Math.random() * (e.length - 1))]
            }
            const Y = (e, t) => {
                let a;
                return (...n) => {
                    clearTimeout(a),
                    a = window.setTimeout(( () => t(...n)), e)
                }
            }
            ;
            function E(e) {
                const t = ((new Date).getTime() - e.getTime()) / 1e3;
                if (t < 0)
                    return "It's the future man";
                const a = Math.floor(t / 86400);
                if (a >= 1)
                    return a > 1 ? (0,
                    n.A)("sinceDays", a) : (0,
                    n.A)("sinceDay");
                const i = Math.floor(t / 3600);
                if (i >= 1)
                    return i > 1 ? (0,
                    n.A)("sinceHours", i) : (0,
                    n.A)("sinceHour");
                const s = Math.floor(t / 60);
                return s >= 1 ? s > 1 ? (0,
                n.A)("sinceMinutes", s) : (0,
                n.A)("sinceMinute") : (0,
                n.A)("sinceNow")
            }
            function C(e) {
                let t = new s.A(e.offsetLeft,e.offsetTop);
                for (; e.offsetParent && (t.x = t.x + e.offsetParent.offsetLeft,
                t.y = t.y + e.offsetParent.offsetTop,
                e != document.getElementsByTagName("body")[0]); )
                    e = e.offsetParent;
                return t
            }
            class R {
                constructor() {
                    this.promise = new Promise(( (e, t) => {
                        this.resolve = e,
                        this.reject = t
                    }
                    ))
                }
                then(e, t) {
                    return this.promise.then(e, t)
                }
                catch(e) {
                    return this.promise.catch(e)
                }
                finally(e) {
                    return this.promise.finally(e)
                }
            }
            Symbol.toStringTag;
            Error;
            const I = e => {
                switch (e) {
                case "jpeg":
                case "jpg":
                    return {
                        mimeType: "image/jpg",
                        fileDesc: "JPG image"
                    };
                case "png":
                    return {
                        mimeType: "image/png",
                        fileDesc: "PNG image"
                    };
                case "webp":
                    return {
                        mimeType: "image/webp",
                        fileDesc: "WebP image"
                    };
                case "zip":
                    return {
                        mimeType: "application/zip",
                        fileDesc: "Zip archive"
                    };
                case "pdf":
                    return {
                        mimeType: "application/pdf",
                        fileDesc: "PDF document"
                    };
                default:
                    throw new Error("Incorrect file extension")
                }
            }
              , O = e => e.substring(0, e.lastIndexOf(".")) || e
              , H = e => e.split(".").slice(-1)[0]
              , F = async e => {
                const t = await (0,
                r.Ep)(e);
                return t.width <= 4096 && t.height <= 4096
            }
        }
        ,
        73939: (e, t, a) => {
            "use strict";
            a.d(t, {
                MyAccount: () => T
            });
            var n = a(21742)
              , i = a(79453)
              , s = a(42268)
              , r = a(72284)
              , o = a(78508);
            class l extends r.A {
                constructor() {
                    super(!0),
                    this.onSubmitRequest = async e => {
                        e.preventDefault(),
                        this.email = (0,
                        s.Ay)(this.inputId).value;
                        const t = await (0,
                        o.In)("/auth/changeemail/request", "POST", {
                            newEmail: this.email
                        });
                        if (!0 !== t.status)
                            return void (0,
                            s.y8)("danger", t.message);
                        (0,
                        s.y8)("success", (0,
                        n.A)("common-SuccessSendCodeEmail").replace("{email}", this.email));
                        const a = this.scopedId("form");
                        this.content.innerHTML = "",
                        this.setContent(`\n            <form id="${a}" class="pad-40">\n                <h1>${(0,
                        n.A)("common-verifyAcc")}</h1>\n                <p>${(0,
                        n.A)("common-sentCodeDesc").replace("[EMAIL]", this.email)}</p>\n                <div class="input-group top-40">\n                    <label for="${this.inputId}">${(0,
                        n.A)("common-code")}</label>\n                    <input id="${this.inputId}" type="text" />\n                </div>                \n                <button class="button full top-40">${(0,
                        n.A)("common-verify")}</button>\n            </form>\n        `),
                        (0,
                        s.Ay)(a).addEventListener("submit", this.onSubmitVerify)
                    }
                    ,
                    this.onSubmitVerify = async e => {
                        e.preventDefault();
                        const t = (0,
                        s.Ay)(this.inputId).value
                          , a = await (0,
                        o.In)("/auth/changeemail/verify", "POST", {
                            newEmail: this.email,
                            code: t
                        });
                        !0 === a.status ? ((0,
                        s.y8)("success", (0,
                        n.A)("common-EmailUpdated")),
                        this.cleanUp(),
                        setTimeout(( () => {
                            window.document.location.reload()
                        }
                        ), 2e3)) : (0,
                        s.y8)("danger", a.message)
                    }
                    ,
                    this.dialog.style.width = "500px",
                    this.content.style.width = "100%";
                    const e = this.scopedId("form");
                    this.inputId = this.scopedId("input"),
                    this.setContent(`\n            <form id="${e}" class="pad-40">\n                <h2 class="headline">${(0,
                    n.A)("changeEmail")}</h2>\n                <div class="input-group top-40">\n                    <label for="${this.inputId}">${(0,
                    n.A)("newEmail")}</label>\n                    <input id="${this.inputId}" type="text" />\n                </div>                \n                <button class="button full top-40">${(0,
                    n.A)("update")}</button>\n            </form>\n        `),
                    (0,
                    s.Ay)(e).addEventListener("submit", this.onSubmitRequest)
                }
            }
            class d extends r.A {
                constructor() {
                    super(!0),
                    this.onSubmit = async e => {
                        e.preventDefault();
                        const t = (0,
                        s.Ay)(this.oldId).value
                          , a = (0,
                        s.Ay)(this.newId).value
                          , i = await (0,
                        o.In)("/auth/changepassword", "PUT", {
                            newPassword: a,
                            oldPassword: t
                        });
                        !0 === i.status ? ((0,
                        s.y8)("success", (0,
                        n.A)("common-SuccessUpdatePassword")),
                        this.cleanUp()) : (0,
                        s.y8)("danger", i.message)
                    }
                    ,
                    this.dialog.style.width = "500px",
                    this.content.style.width = "100%";
                    const e = this.scopedId("form");
                    this.oldId = this.scopedId("old"),
                    this.newId = this.scopedId("new"),
                    this.setContent(`\n            <form id="${e}" class="pad-40">\n                <h2 class="headline">${(0,
                    n.A)("changePassword")}</h2>\n                <div class="input-group top-40">\n                    <label for="${this.oldId}">${(0,
                    n.A)("oldPass")}</label>\n                    <input id="${this.oldId}" type="password" type="text" />                    \n                </div>                \n                <div class="input-group top-20">\n                    <label for="${this.newId}">${(0,
                    n.A)("newPass")}</label>\n                    <input id="${this.newId}" type="password" type="text" />\n                </div>\n                <button class="button full top-40">${(0,
                    n.A)("updatePass")}</button>\n            </form>\n        `),
                    (0,
                    s.Ay)(e).addEventListener("submit", this.onSubmit)
                }
            }
            class c extends r.A {
                constructor() {
                    super(!0),
                    this.onSubmit = async e => {
                        e.preventDefault();
                        const t = (0,
                        s.Ay)(this.inputId).value
                          , a = await (0,
                        o.In)("/myaccount/api/profile", "PUT", {
                            name: t
                        });
                        !0 === a.status ? ((0,
                        s.y8)("success", (0,
                        n.A)("SuccessfullyUpdateUserProfile")),
                        this.cleanUp(),
                        setTimeout(( () => {
                            window.document.location.reload()
                        }
                        ), 2e3)) : (0,
                        s.y8)("danger", a.message)
                    }
                    ,
                    this.dialog.style.width = "500px",
                    this.content.style.width = "100%";
                    const e = this.scopedId("form");
                    this.inputId = this.scopedId("input"),
                    this.setContent(`\n            <form id="${e}" class="pad-40">\n                <h2 class="headline">${(0,
                    n.A)("changeName")}</h2>\n                <div class="input-group top-40 w-100">\n                    <label for="${this.inputId}">${(0,
                    n.A)("newName")}</label>\n                    <input id="${this.inputId}" type="text" />\n                </div>\n                <div class="buttons">                \n                    <button class="button full top-40">${(0,
                    n.A)("update")}</button>\n                </buttons>\n            </form>\n        `),
                    (0,
                    s.Ay)(e).addEventListener("submit", this.onSubmit)
                }
            }
            class m extends r.A {
                constructor() {
                    super(!0),
                    this.onSubmit = async e => {
                        e.preventDefault();
                        const t = (0,
                        s.Ay)(this.inputId).value
                          , a = await (0,
                        o.In)("/api/myaccount/profile", "DELETE", {
                            reason: t
                        }, !0);
                        if (!0 !== a.status)
                            return (0,
                            s.y8)("danger", a.message);
                        window.location.href = "/logout/"
                    }
                    ,
                    this.dialog.style.width = "500px",
                    this.content.style.width = "100%";
                    const e = this.scopedId("form");
                    this.inputId = this.scopedId("input"),
                    this.setContent(`\n            <form id="${e}" class="pad-40">\n                <h2 class="headline">${(0,
                    n.A)("common-deleteMyAccount")}</h2>\n                <p style="font-size: 13px">${(0,
                    n.A)("common-deleteAccountHeadsUpMessage")}</p>\n                <div class="input-group top-20">\n                    <label for="${this.inputId}">${(0,
                    n.A)("common-leavingBecause")}</label>\n                    <select id="${this.inputId}">\n                        <option value="leavingReasonDefault" disabled selected>${(0,
                    n.A)("common-leavingReasonDefault")}</option>\n                        <option value="leavingReasons1">${(0,
                    n.A)("common-leavingReasons1")}</option>\n                        <option value="leavingReasons2">${(0,
                    n.A)("common-leavingReasons2")}</option>\n                        <option value="leavingReasons3">${(0,
                    n.A)("common-leavingReasons3")}</option>\n                        <option value="leavingReasons4">${(0,
                    n.A)("common-leavingReasons4")}</option>\n                        <option value="leavingReasons5">${(0,
                    n.A)("common-leavingReasons5")}</option>\n                    <select>\n                </div>\n                <button class="button btn-danger full top-40">${(0,
                    n.A)("deleteForever")}</button>\n            </form>\n        `),
                    (0,
                    s.Ay)(e).addEventListener("submit", this.onSubmit)
                }
            }
            class u extends r.A {
                constructor() {
                    super(!0),
                    this.sendCode = async e => {
                        e.preventDefault();
                        const t = new FormData(e.target);
                        if (console.log(t),
                        t.get("password") !== t.get("password2"))
                            return void (0,
                            s.y8)("danger", " Passwords did not macth");
                        this.password = t.get("password");
                        const a = await (0,
                        o.In)("/auth/request/code", "POST", {
                            email: i.N.email
                        });
                        if (!0 !== a.status)
                            return void (0,
                            s.y8)("danger", a.message);
                        (0,
                        s.y8)("success", "Code sent!");
                        const n = this.scopedId("form");
                        this.content.innerHTML = "",
                        this.setContent(`\n            <form id="${n}" class="pad-40">\n                <h1>Reset password</h1>\n\n                <p>\n                    Verify the code you've received in the email.\n                </p>\n\n                <div class="input-group">\n                    <label>Code</label>\n                    <input name="code" />\n                </div>\n\n                <button class="button full top-40">Set password</button>                 \n            </form>                \n        `),
                        (0,
                        s.Ay)(n).addEventListener("submit", this.verifyCode)
                    }
                    ,
                    this.verifyCode = async e => {
                        e.preventDefault();
                        const t = new FormData(e.target)
                          , a = await (0,
                        o.In)("/auth/reset", "POST", {
                            email: i.N.email,
                            password: this.password,
                            code: t.get("code")
                        });
                        !0 === a.status ? ((0,
                        s.y8)("success", "Password updated!"),
                        this.cleanUp()) : (0,
                        s.y8)("danger", a.message)
                    }
                    ,
                    this.dialog.style.width = "500px",
                    this.content.style.width = "100%";
                    const e = this.scopedId("form");
                    this.setContent(`\n            <form id="${e}" class="pad-40">\n                <h2 class="headline">Reset password</h2>\n\n                <p>\n                    First choose your new password, then an email will be sent to ${i.N.email}\n                    with a security code to finalize the change.\n                </p>\n\n                <div class="input-group">\n                    <label>New password</label>\n                    <input type="password" name="password" />\n                </div>\n            \n                <div class="input-group top-20">\n                    <label>Retype password</label>\n                    <input type="password" name="password2" />\n                </div>\n\n                <button class="button full top-40">Set password</button>                 \n            </form>                \n        `),
                    (0,
                    s.Ay)(e).addEventListener("submit", this.sendCode)
                }
            }
            class h extends r.A {
                constructor(e, t={}) {
                    var i;
                    if (super(!0),
                    this.metadata = {},
                    this.encryptedCardData = {
                        isValid: !1,
                        paymentMethod: {}
                    },
                    this.loadAdyenCheckout = async () => {
                        const [e] = await Promise.all([a.e(8636).then(a.bind(a, 40430)).then((e => e.default)), a.e(8636).then(a.bind(a, 36971))])
                          , {paymentMethods: t, adyenClientKey: n} = await o.Wv()
                          , i = {
                            locale: "en_US",
                            environment: "pixlr.com" === window.location.hostname ? "live" : "test",
                            clientKey: n,
                            paymentMethodsResponse: t,
                            onChange: this.handleOnChange
                        };
                        (await e(i)).create("card", {
                            hasHolderName: !0,
                            holderNameRequired: !0
                        }).mount("#component-container")
                    }
                    ,
                    this.handleOnChange = e => {
                        const {data: {paymentMethod: t}, isValid: a} = e;
                        this.encryptedCardData.isValid = a,
                        this.encryptedCardData.paymentMethod = t,
                        this.encryptedCardData.cardHolderName = document.getElementsByClassName("adyen-checkout__input--text")[0].value
                    }
                    ,
                    this.cleanUp = () => {
                        this.dialog.remove(),
                        this.dialog = null,
                        this.modal.remove(),
                        this.modal = null
                    }
                    ,
                    this.submit = async () => {
                        let e, t;
                        if ("create" === this.action)
                            e = "/myaccount/payments/new",
                            t = "POST";
                        else {
                            if ("edit" !== this.action)
                                throw new Error("Wrong action");
                            e = `/myaccount/payments/${this.metadata.cardId}/update`,
                            t = "PUT"
                        }
                        const a = await fetch(e, {
                            method: t,
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({
                                zeroDollarAuth: !0,
                                paymentMethod: this.encryptedCardData.paymentMethod
                            })
                        })
                          , i = await a.json();
                        this.dialog.style.width = "620px",
                        this.content.innerHTML = "",
                        this.setContent(`\n            <div class="w-100" style="text-align: center;">\n                ${i.status ? `\n                    <img src="/images/icon/green-tick.png" class="checkmark" alt="green tick icon" style="width: 50px; height: 50px">\n                    <h2 class="heavy top-20">${"create" === this.action ? (0,
                        n.A)("paymentAddSuccessful") : (0,
                        n.A)("paymentUpdatedSuccessful")}</h2>\n                ` : `\n                    <img src="/images/icon/red-cross.png" class="checkmark" alt="fail" style="width: 50px; height: 50px">\n                    <h2 class="heavy top-20">${"create" === this.action ? (0,
                        n.A)("failedToAddPayment") : (0,
                        n.A)("failedToUpdatePayment")}</h2>   \n                `} \n            </div>\n        `),
                        setTimeout(( () => {
                            null == this || this.cleanUp(),
                            window.location.replace("/myaccount/?tab=subscription")
                        }
                        ), 2e3)
                    }
                    ,
                    this.reassign = async () => {
                        const e = await fetch(`/myaccount/payments/${this.metadata.cardId}/primary`, {
                            method: "PUT",
                            headers: {
                                "Content-Type": "application/json"
                            }
                        })
                          , t = await e.json();
                        this.dialog.style.width = "620px",
                        this.content.innerHTML = "",
                        this.setContent(`\n            <div class="w-100" style="text-align: center;">\n                ${t.status ? `\n                    <img src="/images/icon/green-tick.png" class="checkmark" alt="green tick icon" style="width: 50px; height: 50px">\n                    <h2 class="heavy top-20">${(0,
                        n.A)("updatePrimaryCardSuccessful")}</h2>\n                ` : `\n                    <img src="/images/icon/red-cross.png" class="checkmark" alt="fail" style="width: 50px; height: 50px">\n                    <h2 class="heavy top-20">${(0,
                        n.A)("updatePrimaryCardFailed")}</h2>   \n                `} \n            </div>\n        `),
                        setTimeout(( () => {
                            null == this || this.cleanUp(),
                            window.location.replace("/myaccount/?tab=subscription")
                        }
                        ), 2e3)
                    }
                    ,
                    this.remove = async () => {
                        const e = await fetch(`/myaccount/payments/${this.metadata.cardId}/delete`, {
                            method: "DELETE",
                            headers: {
                                "Content-Type": "application/json"
                            }
                        })
                          , t = await e.json();
                        this.dialog.style.width = "620px",
                        this.content.innerHTML = "",
                        this.setContent(`\n            <div class="w-100" style="text-align: center;">\n                ${t.status ? `\n                    <img src="/images/icon/green-tick.png" class="checkmark" alt="green tick icon" style="width: 50px; height: 50px">\n                    <h2 class="heavy top-20">${(0,
                        n.A)("cardRemovedSuccessfully")}</h2>\n                ` : `\n                    <img src="/images/icon/red-cross.png" class="checkmark" alt="fail" style="width: 50px; height: 50px">\n                    <h2 class="heavy top-20">${(0,
                        n.A)("cardRemovedFailed")}</h2>   \n                `} \n            </div>\n        `),
                        setTimeout(( () => {
                            null == this || this.cleanUp(),
                            window.location.replace("/myaccount/?tab=subscription")
                        }
                        ), 2e3)
                    }
                    ,
                    this.action = e,
                    this.metadata = t,
                    this.content.id = "payment-card",
                    this.content.style.width = "100%",
                    this.content.style.padding = "35px",
                    a.e(7162).then(a.bind(a, 81413)),
                    "create" !== e && !t.cardId)
                        throw new Error("Missing cardId");
                    "create" !== e && "edit" !== e || (this.dialog.style.setProperty("width", "480px", "important"),
                    this.setContent(`\n                <h2 class="heavy">${"create" === e ? (0,
                    n.A)("addPaymentMethod") : (0,
                    n.A)("updatePaymentMethod")}</h2>\n                <div id="component-container" style="padding: 35px 0 15px"></div>\n                <button id="submit-payment" class="button positive w-100 top-20" style="height: unset; padding: 10px 0;">${"create" === e ? (0,
                    n.A)("add") : (0,
                    n.A)("update")}</button>\n            `),
                    this.loadAdyenCheckout(),
                    (0,
                    s.Ay)("submit-payment").addEventListener("click", ( () => this.submit())),
                    this.metadata.disableSkip && (document.removeEventListener("keydown", this.keyDown, !1),
                    document.addEventListener("keydown", (e => {
                        "Escape" !== e.key && e.key
                    }
                    ), !1),
                    null === (i = (0,
                    s.Ay)(`announce-close${this.mid}`)) || void 0 === i || i.remove()))
                }
            }
            var p = a(3514)
              , y = a(96703);
            var g = a(54738)
              , f = a(50295);
            function _(e, t="DD/MM/YYYY") {
                let a = "";
                const n = new Date(e);
                switch (t) {
                case "MMMM Do YYYY":
                    a = `${["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"][n.getMonth() + 1]} ${i = n.getDate(),
                    i + (i > 0 ? ["th", "st", "nd", "rd"][i > 3 && i < 21 || i % 10 > 3 ? 0 : i % 10] : "")} ${n.getFullYear()}`;
                    break;
                case "MM/DD/YYYY":
                    a = `${n.getMonth() + 1}/${n.getDate()}/${n.getFullYear()}`;
                    break;
                default:
                    a = `${n.getDate()}/${n.getMonth() + 1}/${n.getFullYear()}`
                }
                var i;
                return a
            }
            class b {
                constructor() {
                    var e, t, a, i, l;
                    this.user = (0,
                    s.Ay)("my-email").innerText,
                    this.team = JSON.parse((0,
                    s.Ay)("team-details").innerText),
                    this.isAdmin = (0,
                    s.Ay)("my-email").innerText === this.team.admin.email,
                    this.selectedMembers = [],
                    this.selectedSeats = 0,
                    this.getAllMembers = () => this.team.members,
                    this.getSelectedMembers = () => this.selectedMembers,
                    this.getMemberDetails = e => this.team.members.find((t => t.user.email === e)),
                    this.selectAll = () => {
                        const e = (0,
                        s.Ay)("team-checkbox-all").checked;
                        document.querySelectorAll('input[name="members[]"]').forEach((t => t.checked = e)),
                        document.querySelectorAll('input[name="seats[]"]').forEach((t => t.checked = e)),
                        this.selectedMembers = Array.from(document.querySelectorAll('input[name="members[]"]:checked')).map((e => e.value)),
                        this.selectedSeats = document.querySelectorAll('input[name="seats[]"]:checked').length,
                        this.actionMenu(e)
                    }
                    ,
                    this.updateSelectedSeats = (e=!1) => {
                        this.selectedSeats = document.querySelectorAll('input[name="seats[]"]:checked').length,
                        this.selectedSeats + this.selectedMembers.length ? this.actionMenu(!0) : this.actionMenu(!1)
                    }
                    ,
                    this.updateSelectedMembers = (e=!1) => {
                        this.selectedMembers = Array.from(document.querySelectorAll('input[name="members[]"]:checked')).map((e => e.value)),
                        this.selectedMembers.length + this.selectedSeats ? this.actionMenu(!0) : this.actionMenu(!1)
                    }
                    ,
                    this.resendInvitation = async e => {
                        const t = await (0,
                        o.In)("/team/invite", "POST", {
                            emails: [e],
                            resend: !0
                        });
                        t.status ? (0,
                        s.y8)("success", (0,
                        n.A)("invitationSent"), 3) : (0,
                        s.y8)("danger", t.message, 3)
                    }
                    ,
                    this.actionMenu = (e=!1, t="") => {
                        const a = (0,
                        s.Ay)("team-action-menu");
                        e ? (a.style.display = "flex",
                        a.innerHTML = "",
                        t ? a.append((0,
                        s.T)("span", t), (0,
                        s.T)("img", {
                            className: "pointer",
                            src: "/img/icon/close-dark.svg",
                            onclick: () => this.actionMenu(!1)
                        })) : a.append((0,
                        s.T)("span", (0,
                        s.T)("strong", (0,
                        n.A)("numberOfUser", this.selectedMembers.length)), " selected:"), (0,
                        s.T)("span", {
                            className: "pointer text-red",
                            onclick: () => this.removeMember()
                        }, (0,
                        n.A)("removeUsers")), (0,
                        s.T)("span", {
                            className: "pointer text-red",
                            onclick: () => this.removeSeat()
                        }, (0,
                        n.A)("removeSeats")), (0,
                        s.T)("img", {
                            className: "pointer",
                            src: "/img/icon/close-dark.svg",
                            onclick: () => this.actionMenu(!1)
                        }))) : a.style.display = "none"
                    }
                    ,
                    this.inviteMember = () => {
                        var e, t, a, i;
                        const o = new r.A;
                        o.setContent(`\n            <div style="margin-right: 40px;">\n                <h2 class="heavy">${(0,
                        n.A)("whoOnYourTeam")}</h2>\n                <p>${(0,
                        n.A)("youAreNowOwnerInviteSomeFriends", "<br>")}</p>\n\n                <p class="bold">${(0,
                        n.A)("shareLinkToInviteUsers")}</p>\n                <div class="top-0" style="display: flex; align-items: center">\n                    <input type="text" value="https://pixlr.com/team/${this.team._id}/invite/link/" style="border: 1px solid #A2A2A4; border-radius: 6px; padding: 10px 6px; width: 65%; font-size: 16px; color: #3F4246">\n                    <button id="copy-invite-link" class="button" style="min-width: 30%; padding: 0; margin-left: 20px;">${(0,
                        n.A)("copy")}</button>\n                </div>\n\n                <hr class="top-30" style="width: 100%; margin-bottom: 1px solid black">\n\n                <p class="heavy top-10">${(0,
                        n.A)("inviceUsers")}</p>\n                <form id="invite-member-form">\n                    ${`<div class="input-group top-0">\n                            <input type="email" name="invitee[]" placeholder="Email" autocomplete="off">\n                            <p class="error-msg">${(0,
                        n.A)("common-enterValidEmail")}</p>\n                        </div>`.repeat(this.team.availableSeats > 4 ? 4 : this.team.availableSeats)}\n                </form>\n                <a id="add-more-seats-modal" class="link bold pointer" style="margin-bottom: 15px;">${(0,
                        n.A)("addMoreSeats")}</a>\n\n                <div class="button-wrapper">\n                    <button class="button" id="invite-member-btn">${(0,
                        n.A)("inviteNow")}</button>\n                    <button class="button white" id="invite-member-cancel">${(0,
                        n.A)("illDoItLater")}</button>\n                </div>\n            </div>\n            <img src="/images/myaccount/invite-member-splash.png" alt="invite member splash" style="width: unset; height: unset">\n            \n        `),
                        o.content.classList.add("popup-content"),
                        o.content.style.padding = "25px",
                        o.content.style.maxWidth = "unset",
                        o.dialog.style.width = "fit-content",
                        o.dialog.id = "invite-member-popup",
                        o.dialog.style.maxWidth = "unset",
                        null === (e = (0,
                        s.Ay)("invite-member-cancel")) || void 0 === e || e.addEventListener("click", ( () => o.cleanUp())),
                        null === (t = (0,
                        s.Ay)("invite-member-btn")) || void 0 === t || t.addEventListener("click", ( () => {
                            let e = [];
                            document.querySelectorAll('input[name="invitee[]"]').forEach((t => {
                                e.push((0,
                                s.TT)(t, "", "email", !0))
                            }
                            )),
                            e.includes(!1) || this.submitHandler("invite")
                        }
                        )),
                        null === (a = (0,
                        s.Ay)("add-more-seats-modal")) || void 0 === a || a.addEventListener("click", ( () => {
                            o.cleanUp(),
                            new y.A("seats",{
                                platform: "web"
                            })
                        }
                        )),
                        null === (i = (0,
                        s.Ay)("copy-invite-link")) || void 0 === i || i.addEventListener("click", ( () => {
                            navigator.clipboard.writeText(`https://pixlr.com/team/${this.team._id}/invite/link/`)
                        }
                        ))
                    }
                    ,
                    this.removeSeat = async (e=0, t=[]) => {
                        var a, i;
                        if (!this.team.seatRemovable)
                            return this.actionMenu(!0, (0,
                            n.A)("cantRemoveSeatsMinimum5"));
                        if (!this.team.additionalSeats)
                            return this.actionMenu(!0, (0,
                            n.A)("noAdditionalSeatsToRemove"));
                        e || (e = this.getSelectedMembers().length + this.selectedSeats);
                        let l = t.length ? t : this.getSelectedMembers();
                        const d = new r.A;
                        d.setContent(`\n            <div>\n                <h3 class="bold" style="word-wrap: anywhere">\n                    ${l.length ? (0,
                        n.A)("areYouSureToRemoveNumberSeatsAndUsers", e, l.length) : (0,
                        n.A)("areYouSureToRemoveNumberSeats", e)}\n                </h3>\n\n                <p class="top-30">\n                    ${l.length ? (0,
                        n.A)("theseSeatsAndUserWillBeRemoveAndNotRenewed", e, l.length, _(this.team.subscription.dateEnd, "MMMM Do YYYY")) : (0,
                        n.A)("theseSeatsWillBeRemoveAndNotRenewed", _(this.team.subscription.dateEnd, "MMMM Do YYYY"))}\n                </p>\n\n                <div class="button-wrapper">\n                    <button id="remove-seat-cancel" class="button w-wrapped white text-black">${(0,
                        n.A)("cancel")}</button>\n                    <button id="remove-seat-confirm" class="button w-wrapped red">${(0,
                        n.A)("remove")}</button>\n                </div>\n            </div>\n        `),
                        d.content.classList.add("popup-content"),
                        d.content.style.paddingBottom = "20px",
                        d.dialog.id = "remove-seat-popup",
                        d.dialog.style.width = "fit-content",
                        null === (a = (0,
                        s.Ay)("remove-seat-cancel")) || void 0 === a || a.addEventListener("click", ( () => d.cleanUp())),
                        null === (i = (0,
                        s.Ay)("remove-seat-confirm")) || void 0 === i || i.addEventListener("click", (async () => {
                            const t = await (0,
                            o.In)(`/team/${this.team._id}/seats/removal`, "POST", {
                                members: l,
                                count: e
                            });
                            d.cleanUp(),
                            t.status ? window.location.replace("/myaccount?tab=team") : this.actionMenu(!0, (0,
                            n.A)("failedToRemoveSeats"))
                        }
                        ))
                    }
                    ,
                    this.recoverSeat = async (e=1) => {
                        const t = await (0,
                        o.In)(`/team/${this.team._id}/seats/recover`, "POST", {
                            count: e
                        });
                        t.status ? window.location.replace("/myaccount?tab=team") : this.actionMenu(!0, t.message)
                    }
                    ,
                    this.removeInvite = async e => {
                        const t = await (0,
                        o.In)(`/team/${this.team._id}/remove`, "POST", {
                            emails: e
                        });
                        t.status ? window.location.replace("/myaccount?tab=team") : this.actionMenu(!0, t.message)
                    }
                    ,
                    this.removeMember = (e=[]) => {
                        var t, a;
                        if (e.length || (e = this.getSelectedMembers()),
                        !e.length)
                            return this.actionMenu(!0, (0,
                            n.A)("noUserSelected"));
                        if (!e.some((e => this.getMemberDetails(e))))
                            return void this.removeInvite(e);
                        const i = new r.A;
                        i.setContent(`\n        <div>\n            <h3 class="heavy" style="word-wrap: anywhere">${(0,
                        n.A)("sureToRemoveNumberOfMemberFromYourTeam", e.length > 2 ? `${e.length} ${(0,
                        n.A)("users")}` : e.map((e => e.split("@")[0])).join(", "))}</h3>\n\n            <p class="text-gray small top-20">${(0,
                        n.A)("userSubscriptionWillRemovedImmediatelyAndNoPremiumAccess")}</p>\n\n            <div class="button-wrapper">\n                <button id="remove-member-stay" class="button w-wrapped white text-black">${(0,
                        n.A)("cancel")}</button>\n                <button id="remove-member-confirm" class="button w-wrapped red">${(0,
                        n.A)("remove")}</button>\n            </div>\n        </div>\n        `),
                        i.content.classList.add("popup-content"),
                        i.content.style.paddingBottom = "20px",
                        i.dialog.style.width = "fit-content",
                        i.dialog.id = "remove-member-popup",
                        i.dialog.style.width = "fit-content",
                        null === (t = (0,
                        s.Ay)("remove-member-stay")) || void 0 === t || t.addEventListener("click", ( () => i.cleanUp())),
                        null === (a = (0,
                        s.Ay)("remove-member-confirm")) || void 0 === a || a.addEventListener("click", (async () => {
                            const t = await (0,
                            o.In)(`/team/${this.team._id}/remove`, "POST", {
                                emails: e
                            });
                            i.cleanUp(),
                            t.status ? window.location.replace("/myaccount?tab=team") : this.actionMenu(!0, t.message)
                        }
                        ))
                    }
                    ,
                    this.transferOwner = e => {
                        var t;
                        const a = new r.A;
                        a.setContent(`\n        <div>\n            <h3 class="heavy">${(0,
                        n.A)("areYouSureToTransfer", e.user.name)}</h3>\n\n            <p class="small margin-0 top-20">${(0,
                        n.A)("byTransferringOwnershipYouWillLoseRightsTo")}</p>\n            <ul style="list-style-type: disc; margin-left: 20px; font-size: 14px">\n                <li>${(0,
                        n.A)("addOrRemoveUsers")}</li>\n                <li>${(0,
                        n.A)("addOrRemoveSeats")}</li>\n                <li>${(0,
                        n.A)("viewInvoiceAndPurchaseHistory")}</li>\n                <li>${(0,
                        n.A)("enableOrDisableRenewalStatusOfSubscription")}</li>\n            </ul>\n\n            <p class="top-20 small">${(0,
                        n.A)("theNewOwnerNeedToAcceptInvitationToCompleteTransfer")}</p>\n            <p class="margin-0 small">${(0,
                        n.A)("yourSubscriptionWillBeConvertedNonAdminSubscription")}</p>\n\n            <div class="button-wrapper">\n                <button id="cancel-transfer" class="button w-wrapped white text-black">${(0,
                        n.A)("cancel")}</button>\n                <button id="confirm-transfer" class="button w-wrapped red">${(0,
                        n.A)("transfer")}</button>\n            </div>\n        </div>\n        `),
                        a.content.classList.add("popup-content"),
                        a.content.style.paddingBottom = "20px",
                        a.dialog.id = "transfer-owner-popup",
                        a.dialog.style.width = "fit-content",
                        null === (t = (0,
                        s.Ay)("cancel-transfer")) || void 0 === t || t.addEventListener("click", ( () => a.cleanUp())),
                        (0,
                        s.Ay)("confirm-transfer").addEventListener("click", (async () => {
                            if (!(await (0,
                            o.In)(`/team/${this.team._id}/transfer/invite`, "POST", {
                                id: e.user._id
                            })).status)
                                return void (0,
                                s.y8)("danger", (0,
                                n.A)("failedToTransferOwnership"), 3);
                            a.cleanUp();
                            const t = new r.A;
                            t.setContent(`\n            <div class="text-center">\n                <img src="/images/icon/green-tick.png" alt="green tick icon" class="icon" style="width: 50px; align-self: center">\n                <h3 style="padding-top: 15px" class="bold">${(0,
                            n.A)("ownerTransferInvitationSent")}</h3>\n                <p>${(0,
                            n.A)("pleaseContactNewOwnerToAccept").replace("{newOwnerName}", e.user.name)}</p>\n            </div>\n            `),
                            t.content.classList.add("popup-content"),
                            t.dialog.id = "transfer-owner-popup",
                            t.dialog.style.width = "fit-content",
                            setTimeout(( () => window.location.replace("/myaccount/?tab=team")), 1500)
                        }
                        ))
                    }
                    ,
                    this.renderTable = (e=[], t=[], a=!1) => {
                        if (!this.isAdmin)
                            return;
                        e.length || a || (e = this.getAllMembers()),
                        t.length || a || (t = this.team.invitation);
                        const i = (0,
                        s.Ay)("team-members-table");
                        if (i.innerText = "",
                        !a || e.length || t.length) {
                            if (e.forEach(( (e, t) => {
                                const a = (0,
                                s.T)("tr");
                                if (a.append((0,
                                s.T)("td", {
                                    style: "text-align: center"
                                }, this.team.admin._id === e.user._id ? "" : (0,
                                s.T)("div", (0,
                                s.T)("input", {
                                    type: "checkbox",
                                    id: `cb-${e.user.email}`,
                                    name: "members[]",
                                    value: e.user.email,
                                    style: "display: none;",
                                    onchange: () => this.updateSelectedMembers()
                                }), (0,
                                s.T)("label", {
                                    className: "custom-checkbox",
                                    htmlFor: `cb-${e.user.email}`
                                }, ""))), (0,
                                s.T)("td", e.user.name), (0,
                                s.T)("td", {
                                    title: e.user.email
                                }, e.user.email.length > 25 ? `${e.user.email.substring(0, 24)}...` : e.user.email), this.team.admin.email === e.user.email ? (0,
                                s.T)("td", (0,
                                n.A)("owner")) : (0,
                                s.T)("td", (0,
                                n.A)("activated"))),
                                this.isAdmin && this.team.admin._id !== e.user._id) {
                                    const t = (0,
                                    s.T)("td");
                                    t.innerHTML = `\n                    <span style="position: relative;">\n                        <img class="ellipses" src="/images/myaccount/triple-dot.svg" alt="3 ellipses icon">\n                        <div class="ellipses-menu" style="top: 22px; right: -59px;">\n                            <a class="make-owner" data-email="${e.user.email}" >${(0,
                                    n.A)("makeOwner")}</a>\n                            <a class="remove-user" data-email="${e.user.email}" data-name="${e.user.name}">${(0,
                                    n.A)("removeUser")}</a>\n                            ${this.team.additionalSeats && this.team.seatRemovable ? `<a class="remove-seat" data-email=${e.user.email}>${(0,
                                    n.A)("removeSeat")}</a>` : ""}\n                        </div>\n                    </span>   \n                `,
                                    a.append(t)
                                } else
                                    a.append((0,
                                    s.T)("td"));
                                i.append(a)
                            }
                            )),
                            t.forEach((e => {
                                const t = (0,
                                s.T)("tr");
                                t.append((0,
                                s.T)("td", {
                                    style: "text-align: center"
                                }, (0,
                                s.T)("div", (0,
                                s.T)("input", {
                                    type: "checkbox",
                                    id: `cb-${e}`,
                                    name: "members[]",
                                    value: e,
                                    style: "display: none;",
                                    onchange: () => this.updateSelectedMembers()
                                }), (0,
                                s.T)("label", {
                                    className: "custom-checkbox",
                                    htmlFor: `cb-${e}`
                                }, ""))), (0,
                                s.T)("td", e.split("@")[0]), (0,
                                s.T)("td", {
                                    title: e
                                }, e.length > 25 ? `${e.substring(0, 24)}...` : e), (0,
                                s.T)("td", {
                                    className: "text-blue"
                                }, (0,
                                n.A)("pendingInvite")));
                                const a = (0,
                                s.T)("td");
                                a.innerHTML = `\n                <span style="position: relative;">\n                    <img class="ellipses" src="/images/myaccount/triple-dot.svg" alt="3 ellipses icon">\n                    <div class="ellipses-menu" style="top: 22px; right: -59px;">\n                        <a class="resend-link" data-email="${e}">${(0,
                                n.A)("resendLink")}</a>\n                        <a class="remove-invite" data-email="${e}" data-name="${e.split("@")[0]}">${(0,
                                n.A)("removeInvite")}</a>\n                        ${this.team.additionalSeats && this.team.seatRemovable ? `<a class="remove-seat" data-email=${e}>${(0,
                                n.A)("removeSeat")}</a>` : ""}\n                    </div>\n                </span>   \n            `,
                                t.append(a),
                                i.append(t)
                            }
                            )),
                            !a && this.team.currentSeats !== this.team.maxSeats) {
                                let e = this.team.availableSeats
                                  , t = this.team.renewal.seatDeduction;
                                for (; e > 0; ) {
                                    let a = (0,
                                    g.r0)();
                                    i.append((0,
                                    s.T)("tr", {
                                        className: t ? "removal" : "pending"
                                    }, (0,
                                    s.T)("td", {
                                        style: "text-align: center"
                                    }, t ? (0,
                                    s.T)("div") : (0,
                                    s.T)("div", (0,
                                    s.T)("input", {
                                        type: "checkbox",
                                        id: `cb-${a}`,
                                        name: "seats[]",
                                        value: a,
                                        style: "display: none;",
                                        onchange: () => this.updateSelectedSeats()
                                    }), (0,
                                    s.T)("label", {
                                        className: "custom-checkbox",
                                        htmlFor: `cb-${a}`
                                    }, ""))), (0,
                                    s.T)("td", (0,
                                    s.T)("a", {
                                        className: "link",
                                        onclick: () => this.inviteMember()
                                    }, `+ ${(0,
                                    n.A)("invite")}`)), (0,
                                    s.T)("td", {
                                        className: "text-capitalize"
                                    }, (0,
                                    n.A)("common-email")), (0,
                                    s.T)("td", {
                                        className: "text-capitalize"
                                    }, t ? (0,
                                    n.A)("pendingRemoval") : "-"), (0,
                                    s.T)("td", (0,
                                    s.T)("span", {
                                        style: "position: relative"
                                    }, (0,
                                    s.T)("img", {
                                        className: "ellipses",
                                        src: "/images/myaccount/triple-dot.svg",
                                        alt: "3 ellipses icon"
                                    }), t ? (0,
                                    s.T)("div", {
                                        className: "ellipses-menu",
                                        style: "top: 22px; right: -59px"
                                    }, (0,
                                    s.T)("a", {
                                        className: "recover-seat"
                                    }, (0,
                                    n.A)("recoverSeat"))) : "")))),
                                    t && --t,
                                    --e
                                }
                            }
                        } else
                            i.append((0,
                            s.T)("tr", (0,
                            s.T)("td", {
                                colSpan: 5
                            }, (0,
                            n.A)("noMembersFound"))))
                    }
                    ,
                    this.sortTable = () => {
                        const e = (0,
                        s.Ay)("sort-team-table");
                        if (e.classList.contains("desc"))
                            e.classList.remove("desc"),
                            this.renderTable();
                        else {
                            e.classList.add("desc");
                            const t = [...this.getAllMembers()].sort(( (e, t) => e.user.name.toLowerCase() < t.user.name.toLowerCase() ? -1 : e.user.name.toLowerCase() > t.user.name.toLowerCase() ? 1 : 0))
                              , a = this.team.invitation.sort(( (e, t) => e.toLowerCase() < t.toLowerCase() ? -1 : e.toLowerCase() > t.toLowerCase() ? 1 : void 0));
                            this.renderTable(t, a, !1)
                        }
                    }
                    ,
                    this.filterTable = () => {
                        const e = (0,
                        s.Ay)("filter-team").value;
                        if (e) {
                            const t = this.team.members.filter((t => {
                                if ("owner" === e.toLowerCase() && t.user._id === this.team.admin._id || t.user.email.includes(e) || t.user.name.includes(e) || "activated" === e.toLowerCase())
                                    return t
                            }
                            ))
                              , a = this.team.invitation.filter((t => {
                                if ("pending" === e.toLowerCase() || t.includes(e))
                                    return t
                            }
                            ));
                            this.renderTable(t, a, !0)
                        } else
                            this.renderTable()
                    }
                    ,
                    this.submitHandler = async e => {
                        var t;
                        if ("invite" === e) {
                            const e = {
                                emails: [],
                                resend: !1
                            }
                              , a = document.querySelectorAll("#invite-member-form input");
                            if (e.emails = Array.from(a).filter((e => "" !== e.value)).map((e => e.value)),
                            !e.emails.length)
                                return;
                            const n = await (0,
                            o.In)("/team/invite", "POST", e);
                            if (!n.status)
                                return null === (t = document.getElementById("close-invite-member-popup")) || void 0 === t || t.click(),
                                void (0,
                                s.y8)("danger", n.message, 3);
                            window.location.replace("/myaccount?tab=team")
                        }
                    }
                    ,
                    this.team.currentSeats = this.team.members.length + this.team.invitation.length,
                    this.team.maxSeats = this.team.maxSeats + this.team.additionalSeats,
                    this.team.availableSeats = this.team.maxSeats - this.team.currentSeats,
                    this.team.seatRemovable = !(this.team.maxSeats - ((null === (e = this.team.renewal) || void 0 === e ? void 0 : e.seatDeduction) || 0) <= 5),
                    this.isAdmin && ((0,
                    s.Ay)("manage-seat").innerHTML = `<span class="bold">${this.team.currentSeats}/${this.team.maxSeats}</span> ${(0,
                    n.A)("seatsUsed")}`,
                    (null === (t = this.team.renewal) || void 0 === t ? void 0 : t.seatDeduction) && ((0,
                    s.Ay)("seat-deducted").innerHTML = (0,
                    n.A)("numberOfSeatsWillBeRemoved", this.team.renewal.seatDeduction)),
                    (0,
                    s.Ay)("team-checkbox-all").addEventListener("change", ( () => this.selectAll()))),
                    this.renderTable(),
                    null === (a = (0,
                    s.Ay)("sort-team-table")) || void 0 === a || a.addEventListener("click", ( () => this.sortTable())),
                    null === (i = (0,
                    s.Ay)("filter-team")) || void 0 === i || i.addEventListener("input", ( () => this.filterTable())),
                    null === (l = (0,
                    s.Ay)("add-more-seats")) || void 0 === l || l.addEventListener("click", ( () => new y.A("seats",{
                        platform: "web"
                    }))),
                    document.querySelectorAll(".resend-link").forEach((e => {
                        e.addEventListener("click", ( () => this.resendInvitation(e.dataset.email)))
                    }
                    )),
                    document.querySelectorAll(".remove-user").forEach((e => {
                        e.addEventListener("click", ( () => {
                            this.removeMember([e.dataset.email])
                        }
                        ))
                    }
                    )),
                    document.querySelectorAll(".remove-invite").forEach((e => {
                        e.addEventListener("click", ( () => {
                            this.removeInvite([e.dataset.email])
                        }
                        ))
                    }
                    )),
                    document.querySelectorAll(".make-owner").forEach((e => {
                        e.addEventListener("click", (async () => {
                            if ((0,
                            s.Ay)("set-password"))
                                return (0,
                                s.y8)("danger", (0,
                                n.A)("setPasswordToTransferOwnership"), 3);
                            const t = new f.A({
                                view: "additionalVerification"
                            });
                            t.auth.getAdditionalVerificationstatus().addEventListener("submit", (async () => {
                                await t.auth.additionalVerificationHandler() && (t.cleanUp(),
                                this.transferOwner(this.getMemberDetails(e.dataset.email)))
                            }
                            ))
                        }
                        ))
                    }
                    )),
                    document.querySelectorAll(".remove-seat").forEach((e => {
                        e.addEventListener("click", (async () => this.removeSeat(1, [e.dataset.email])))
                    }
                    )),
                    document.querySelectorAll(".recover-seat").forEach((e => {
                        e.addEventListener("click", (async () => this.recoverSeat()))
                    }
                    ))
                }
            }
            var v = a(95093)
              , M = a.n(v);
            class w {
                constructor(e, t, a) {
                    var l, d, c, m, u;
                    this.periods = "",
                    this.checkUpgradeStatus = async () => {
                        var e;
                        const t = await (0,
                        o.Ue)();
                        if (t.status && t.data.length && ("paid" === this.subscription.type && !this.subscription.provider || "licensed" === this.subscription.type && !this.subscription.subscriptionPlan.code.includes("lifetime"))) {
                            const a = t.data.map((e => `\n                    <a\n                        style="text-transform: capitalize"\n                        class="link text-blue upgrade-plan"\n                        data-plan="${e}"\n                        href="#"\n                    >${e.split("-")[0]}</a>\n                `))
                              , i = (0,
                            s.T)("div", {
                                className: "bubble sub-card"
                            });
                            i.innerHTML = `\n                <div class="sub-card-content w-100">\n                    <img src="/images/myaccount/pencil.png" alt="pencil mask" style="position: absolute;top: -15px; right: 0;">\n\n                    <div style="width: 60%; display: flex; flex-direction: column; justify-content: space-between;">\n                        <span class="heavy top-30" style="font-size: 18px;">${(0,
                            n.A)("upgradeToYearly")}</span>\n\n                        <div style="display: flex; gap: 10px 20px; flex-wrap: wrap; padding-top: 20px">\n                            ${a.map((e => `<span>${e}</span>`)).join(" ")}\n                        </div>\n                    </div>\n                </div>\n            `,
                            null === (e = (0,
                            s.Ay)(this.holder)) || void 0 === e || e.append(i),
                            document.querySelectorAll(".upgrade-plan").forEach((e => {
                                e.addEventListener("click", ( () => this.upgradePlan(e.dataset.plan)))
                            }
                            ))
                        }
                    }
                    ,
                    this.upgradePlan = async e => {
                        new y.A("subscription",{
                            platform: "web",
                            checkoutMode: "upgrade",
                            plan: e
                        })
                    }
                    ,
                    this.generate = () => {
                        var e, t, a, r, o;
                        let l = ""
                          , d = this.subscription.product
                          , c = this.periods ? `(${this.periods})` : ""
                          , m = `\n            <p class="margin-0">${this.subscription.currency} ${this.subscription.amount}</p>\n            <p class="margin-0">${(0,
                        n.A)("validUntilDate", M()(this.subscription.dateEnd).format("MMMM Do YYYY"))}</p>\n        `
                          , u = ""
                          , h = ""
                          , p = this.subscription.credits ? this.subscription.credits.subscription : 0;
                        if (this.subscription.freeTrial || (null === (e = this.latest_invoice) || void 0 === e ? void 0 : e.freeTrial)) {
                            const e = (null === (a = null === (t = this.subscription.nextRenewal) || void 0 === t ? void 0 : t.price) || void 0 === a ? void 0 : a.toFixed(2)) || this.subscription.amount;
                            m = `\n                <p class="margin-0">${this.subscription.currency} ${e}</p>\n                <p class="margin-0">${(0,
                            n.A)("freeTrialEndsOn")} <b>${M()(this.subscription.dateEnd).format("MMMM Do YYYY")}</b></p>\n            `
                        }
                        "licensed" === this.subscription.type ? l = "active" : "Pixlr Team" === this.subscription.product && this.subscription.userId !== i.N.id ? (m = `<p class="margin-0">${(0,
                        n.A)("activeSinceDate", M()(this.subscription.dateStart).format("MMMM Do YYYY"))}</p>`,
                        u = `<span class="link text-red top-30" id="leave-team">${(0,
                        n.A)("removeTeamSubscription")}</span>`) : "Pixlr Enterprise" === this.subscription.product ? (m = `<p class="margin-0">${(0,
                        n.A)("activeSinceDate", M()(this.subscription.dateStart).format("MMMM Do YYYY"))}</p>`,
                        l = "active") : "paypal" === this.subscription.provider ? ("ACTIVE" === this.subscription.providerStatus && (u = `<span class="link text-grey" id="cancel-renewal">${(0,
                        n.A)("cancelSubscription")}</span>`),
                        h = `<a href="https://www.paypal.com/myaccount/autopay/connect/${null !== (r = this.subscription.providerProductId) && void 0 !== r ? r : ""}" target="_blank" class="italic" style="line-height: 25px" title="${(0,
                        n.A)("visitProviderPlatformToManageSubscription")}">${(0,
                        n.A)("subscriptionManagedByPaypal")}</a>`) : "google" === this.subscription.provider ? h = `\n                <p class="italic margin-0" title="${(0,
                        n.A)("visitProviderPlatformToManageSubscription")}">${(0,
                        n.A)("subscriptionManagedByGooglePlay")}</p>\n                <a class="link text-blue"\n                    target="_blank"\n                    href="https://play.google.com/store/account/subscriptions?sku=${this.subscription.subscriptionPlan.code}&package=${this.subscription.providerRequest.packageName}"\n                >${(0,
                        n.A)("clickToManage")}</a>\n            ` : "apple" === this.subscription.provider ? h = `<p class="italic margin-0" title="${(0,
                        n.A)("visitProviderPlatformToManageSubscription")}">${(0,
                        n.A)("subscriptionManagedByAppleStore")}</p>` : "paid" !== this.subscription.type || this.subscription.provider || (this.subscription.autoRenew ? (m += `<p class="margin-0">${(0,
                        n.A)("nextBilledDateOn")} <b>${M()(this.subscription.dateEnd).subtract(this.subscription.freeTrial ? 1 : 3, "days").format("MMMM Do YYYY")}</b></p>`,
                        u = `<span class="link text-grey" id="${this.subscription.freeTrial ? "cancel-trial" : "cancel-renewal"}">${(0,
                        n.A)("cancelSubscription")}</span>`,
                        l = "active",
                        this.subscription.nextRenewal && ((null === (o = this.subscription.nextRenewal) || void 0 === o ? void 0 : o.promoCode) ? m += `\n                            <div class="top-20">\n                                <p>${(0,
                        n.A)("yourNextRenewalWithPromo", `<b>${this.subscription.nextRenewal.plan.product}</b>`, `<b>${this.subscription.nextRenewal.promoCode.code}</b>`)}</p>\n                            </div>\n                        ` : m += `\n                            <div class="top-20">\n                                <p>${(0,
                        n.A)("yourNextRenewal", `<b>${this.subscription.nextRenewal.plan.product}</b>`)}</p>\n                            </div>\n                        `)) : (u = `<button class="button top-10" style="min-width: 150px" id="reactivate-renewal">${(0,
                        n.A)("reactivate")}</button>`,
                        l = "cancelled")),
                        m += `<p class="margin-0">${(0,
                        n.A)("generativeCredits")} : ${p}</p>`;
                        const y = (0,
                        s.T)("div", {
                            id: `sub-card-${this.subscription._id}`,
                            className: "bubble sub-card "
                        });
                        return y.innerHTML = `\n            \n            \n            <div class="sub-card-content w-100">\n                <img class="sub-card-badge" src="/img/misc/${this.type}-icon.svg" alt="${this.type} icon" />\n\n                <div style="width: 100%">\n                    <h3 class="text-default">${d} ${c}</h5>\n                    <div class="top-20">${m}</div>\n                    ${u ? `<div class="top-20">${u}</div>` : ""}\n                    ${h ? `<div class="top-10">${h}</div>` : ""}\n                </div>\n            </div>\n        `,
                        y
                    }
                    ,
                    this.cancelTrial = () => {
                        const {dateEnd: e, _id: t} = this.subscription
                          , a = new r.A;
                        a.setContent(`\n            <div style="margin-right: 40px; width: 450px;">\n                <h2>${(0,
                        n.A)("wantToCancelYourSubscription")}?</h2>\n                <p>${(0,
                        n.A)("yourPixlrWillEnd")} <b>${M()(e).format("MMMM Do YYYY")}</b>.</p>\n                <p><b>${(0,
                        n.A)("butWaitPremium")}:</b></p>\n                <ul class="icon">\n                    <li>\n                        <img src="/images/myaccount/blue-tick.svg" alt="blue tick">\n                        <span>${(0,
                        n.A)("aiToolsFeatures")}</span>\n                    </li>\n                    <li>\n                        <img src="/images/myaccount/blue-tick.svg" alt="blue tick">\n                        <span>${(0,
                        n.A)("growingLibrary")}</span>\n                    </li>\n                    <li>\n                        <img src="/images/myaccount/blue-tick.svg" alt="blue tick">\n                        <span>${(0,
                        n.A)("exclusiveFonts")}</span>\n                    </li>\n                </ul>\n  \n                <button class="button w-100 top-20" id="submit-cancel-trial-50">${(0,
                        n.A)("50OffYearlyPlan")}</button>\n                <button class="button white w-100 top-20" id="submit-cancel-trial-30">${(0,
                        n.A)("30OffMonthlyPlan")}</button>\n                <button class="button white borderless w-100 top-20" id="submit-cancel-trial">${(0,
                        n.A)("cancelAnyway")}</button>\n            </div>\n            <img src="/images/myaccount/cancel-trial.jpg" alt="cancel subs">\n        `),
                        a.content.classList.add("popup-content"),
                        a.content.style.maxWidth = "unset",
                        a.content.style.padding = "25px",
                        a.dialog.id = "cancel-trial-popup",
                        a.dialog.style.maxWidth = "fit-content",
                        (0,
                        s.Ay)("submit-cancel-trial-30").addEventListener("click", (async () => {
                            const e = await fetch("/myaccount/subscription/", {
                                method: "PUT",
                                headers: {
                                    "Content-Type": "application/json"
                                },
                                body: JSON.stringify({
                                    splan: "premium-monthly",
                                    type: "free-trial"
                                })
                            });
                            await e.json();
                            a.cleanUp()
                        }
                        )),
                        (0,
                        s.Ay)("submit-cancel-trial-50").addEventListener("click", (async () => {
                            const e = await fetch("/myaccount/subscription/", {
                                method: "PUT",
                                headers: {
                                    "Content-Type": "application/json"
                                },
                                body: JSON.stringify({
                                    splan: "premium-yearly",
                                    type: "free-trial"
                                })
                            });
                            await e.json();
                            a.cleanUp()
                        }
                        )),
                        (0,
                        s.Ay)("submit-cancel-trial").addEventListener("click", (async () => {
                            const e = await fetch("/myaccount/unsubscribe/free-trial", {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json"
                                }
                            });
                            (await e.json()).status ? window.location.reload() : alert("Failed to cancel free trial")
                        }
                        ))
                    }
                    ,
                    this.cancelRenewal = () => {
                        var e, t;
                        const {_id: a, subscriptionPlan: {code: i, monthDuration: o}, dateEnd: l, provider: d} = this.subscription
                          , c = a
                          , m = "paypal" === d ? this.subscription.providerProductId : null
                          , u = i.split("-")[0]
                          , h = i.split("-")[1]
                          , p = new r.A;
                        p.setContent(`\n            <div style="width: 929px;display: flex;gap: 25px;">\n                <h2 class="heavy">${(0,
                        n.A)("cancelSubscription")}?</h2>\n                <div class="small" >\n                    <span>${(0,
                        n.A)("yourPlanToPixlrWillEndOn").replace("{plan}", `Pixlr ${u} ${h}`)}</span>\n                    <span class="heavy">${M()(l).format("MMMM Do YYYY")}</span>\n                </div>\n\n                <div class="heavy">${(0,
                        n.A)("butWaitHeresWhatYouWillGetWithPixlrPremium")}</div>\n\n                <ul style="font-size: 14px;">\n                    <li style="display: flex;gap: 10px;margin:0 0 16px 0;">\n                        <img src="/images/myaccount/green-tick.svg" alt="green tick">\n                        ${(0,
                        n.A)("aiToolsAICutoutGlitchFocusDispersionStudio")}\n                    </li>\n                    <li style="display: flex;gap: 10px;margin:0 0 16px 0;">\n                        <img src="/images/myaccount/green-tick.svg" alt="green tick">\n                        ${(0,
                        n.A)("growingLibraryOfTemplates")}\n                    </li>\n                    <li style="display: flex;gap: 10px;margin:0 0 16px 0;">\n                        <img src="/images/myaccount/green-tick.svg" alt="green tick">\n                        ${(0,
                        n.A)("hundredsOfExclusiveFonts")}\n                    </li>\n                </ul>\n\n                ${m ? "" : -1 != ["plus-monthly", "plus-yearly-2023", "plus-yearly", "premium-monthly"].indexOf(i) ? `<button class="button" style="width: 100%; " id="upgrade-to-premium">${(0,
                        n.A)("upgradeToPixlrPremium")}</button>` : -1 != ["premium-yearly", "team-monthly"].indexOf(i) ? `<button class="button" style="width: 100%;" id="upgrade-to-team">${(0,
                        n.A)("upgradeToPixlrTeams")}</button>` : ""}\n                <button class="button white" style="width: 100%;text-align:center; cursor:pointer;" id="submit-cancel-renewal">\n                    ${(0,
                        n.A)("cancelAnyway")}\n                </button>\n            </div>\n            <img src="/images/myaccount/cancel.jpg" alt="cancel subs" style="width:362px;height:418px">\n        `),
                        p.content.classList.add("popup-content"),
                        p.content.style.maxWidth = "800px",
                        p.content.style.padding = "25px",
                        p.content.style.gap = "30px",
                        p.dialog.id = "cancel-subscription-popup",
                        p.dialog.style.width = "fit-content";
                        m && (0,
                        s.Ay)("upgrade-to-team") && ((0,
                        s.Ay)("upgrade-to-team").style.display = "none"),
                        (0,
                        s.Ay)("submit-cancel-renewal").addEventListener("click", (async () => {
                            const e = m ? `/paypal/subscriptions/${m}/cancel` : `/myaccount/unsubscribe/${c}`
                              , t = await fetch(e, {
                                method: "POST"
                            });
                            (await t.json()).status ? window.location.replace("/myaccount/?tab=subscription") : alert((0,
                            n.A)("failedToCancelRenewal"))
                        }
                        )),
                        null === (e = (0,
                        s.Ay)("upgrade-to-premium")) || void 0 === e || e.addEventListener("click", (e => {
                            p.cleanUp(),
                            this.upgradePlan("premium-yearly")
                        }
                        )),
                        null === (t = (0,
                        s.Ay)("upgrade-to-team")) || void 0 === t || t.addEventListener("click", (e => {
                            p.cleanUp(),
                            this.upgradePlan("team-yearly")
                        }
                        ))
                    }
                    ,
                    this.reactivateRenewal = async () => {
                        const e = this.subscription._id
                          , t = await fetch(`/myaccount/reactivate/${e}`, {
                            method: "POST",
                            credentials: "same-origin"
                        })
                          , a = await t.json();
                        a.status ? a.newCard ? new h("create",{
                            disableSkip: !0
                        }) : window.location.reload() : alert("Failed to enable renewal")
                    }
                    ,
                    this.leaveTeam = async () => {
                        var e, t;
                        const a = new r.A;
                        a.content.innerHTML = "",
                        a.setContent(`\n          <div>\n              <h3 class="heavy">${(0,
                        n.A)("areYouSureWantToLeaveTeamSub", this.team.name)}</h3>\n              <p class="top-20">${(0,
                        n.A)("yourAccessToPremiumAssetWillEndNow")}</p>\n  \n              <div class="button-wrapper">\n                  <button id="leave-team-cancel" class="button transparent text-black">${(0,
                        n.A)("cancel")}</button>\n                  <button id="leave-team-confirm" class="button red">${(0,
                        n.A)("leave")}</button>\n              </div>\n          </div>\n      `),
                        a.content.style.padding = "30px",
                        a.content.classList.add("popup-content"),
                        a.dialog.id = "leave-team-popup",
                        a.dialog.style.width = "fit-content",
                        null === (e = (0,
                        s.Ay)("leave-team-cancel")) || void 0 === e || e.addEventListener("click", ( () => a.cleanUp())),
                        null === (t = (0,
                        s.Ay)("leave-team-confirm")) || void 0 === t || t.addEventListener("click", (async () => {
                            const e = await (0,
                            o.In)(`/team/${this.team.id}/leave`, "POST", {});
                            e.status ? window.location.replace("/myaccount?tab=subscription") : (0,
                            s.y8)("danger", e.message, 3)
                        }
                        ))
                    }
                    ,
                    this.aiCreditsAddOn = () => {
                        var e, t, a, r;
                        0 === i.N.credits ? null === (e = (0,
                        s.Ay)(this.holder)) || void 0 === e || e.append((0,
                        s.T)("div", {
                            className: "bubble sub-card"
                        }, (0,
                        s.T)("div", {
                            className: "sub-card-content w-100"
                        }, (0,
                        s.T)("img", {
                            className: "sub-card-badge",
                            src: "/images/checkout/icon/credits.svg"
                        }), (0,
                        s.T)("div", {
                            style: "width: 100%; display: flex; flex-direction: column"
                        }, (0,
                        s.T)("h3", {
                            className: "text-default"
                        }, (0,
                        n.A)("AICreditAddOneTitle")), (0,
                        s.T)("div", {
                            className: "top-20"
                        }, (0,
                        n.A)("getAICreditToGenerateImageAndUseAIAcrossProducts")), (0,
                        s.T)("a", {
                            className: "link text-blue",
                            style: "display: inline-flex; margin-top: auto",
                            onclick: () => new y.A("credits",{
                                platform: "web"
                            })
                        }, (0,
                        n.A)("buyAddOns")))))) : null === (t = (0,
                        s.Ay)(this.holder)) || void 0 === t || t.append((0,
                        s.T)("div", {
                            className: "bubble sub-card"
                        }, (0,
                        s.T)("div", {
                            className: "sub-card-content w-100"
                        }, (0,
                        s.T)("img", {
                            className: "sub-card-badge",
                            src: "/images/checkout/icon/credits.svg"
                        }), (0,
                        s.T)("div", {
                            style: "width: 100%; display: flex; flex-direction: column"
                        }, (0,
                        s.T)("h3", {
                            className: "text-default"
                        }, (0,
                        n.A)("AICreditAddOneTitle")), (0,
                        s.T)("div", {
                            className: "top-20"
                        }, (0,
                        n.A)("balanceCredit", null !== (r = null === (a = this.subscription.credits) || void 0 === a ? void 0 : a.credits) && void 0 !== r ? r : "-")), (0,
                        s.T)("div", (0,
                        n.A)("addOnAICreditsDoNotExpire")), (0,
                        s.T)("a", {
                            className: "link text-blue",
                            style: "display: inline-flex; margin-top: auto",
                            onclick: () => new y.A("credits",{
                                platform: "web"
                            })
                        }, (0,
                        n.A)("buyAddOns")), (0,
                        s.T)("img", {
                            src: "/images/myaccount/coins.png",
                            width: 165,
                            style: "position: absolute; top: 5px; right: -55px"
                        })))))
                    }
                    ,
                    (0,
                    s.Ay)(t) && (this.holder = t,
                    this.subscription = e,
                    this.team = a,
                    this.type = e.subscriptionPlan.product.toLowerCase().replace(/^pixlr\s/, ""),
                    this.latest_invoice = null === (l = e.transId) || void 0 === l ? void 0 : l.pop(),
                    "licensed" !== e.type && (1 === e.subscriptionPlan.monthDuration ? this.periods = (0,
                    n.A)("monthly") : 3 === e.subscriptionPlan.monthDuration ? this.periods = (0,
                    n.A)("quarterly") : 12 === e.subscriptionPlan.monthDuration ? this.periods = (0,
                    n.A)("yearly") : e.subscriptionPlan.monthDuration > 50 && (this.periods = (0,
                    n.A)("lifetime"))),
                    (0,
                    s.Ay)(t).innerHTML = this.generate().outerHTML,
                    null === (d = (0,
                    s.Ay)("cancel-trial")) || void 0 === d || d.addEventListener("click", ( () => this.cancelTrial())),
                    null === (c = (0,
                    s.Ay)("cancel-renewal")) || void 0 === c || c.addEventListener("click", ( () => this.cancelRenewal())),
                    null === (m = (0,
                    s.Ay)("reactivate-renewal")) || void 0 === m || m.addEventListener("click", ( () => this.reactivateRenewal())),
                    null === (u = (0,
                    s.Ay)("leave-team")) || void 0 === u || u.addEventListener("click", ( () => this.leaveTeam())),
                    this.checkUpgradeStatus(),
                    this.aiCreditsAddOn())
                }
            }
            class T {
                constructor() {
                    var e, t, a, g, f, _;
                    if (this.setActiveTab = e => {
                        ["profile", "subscription", "download", "developer", "team", "redeem"].forEach((t => {
                            var a, n, i, r;
                            t === e ? (null === (a = document.getElementsByClassName(t)[0]) || void 0 === a || a.classList.add("active"),
                            null === (n = (0,
                            s.Ay)(t)) || void 0 === n || n.classList.add("active")) : (null === (i = document.getElementsByClassName(t)[0]) || void 0 === i || i.classList.remove("active"),
                            null === (r = (0,
                            s.Ay)(t)) || void 0 === r || r.classList.remove("active"))
                        }
                        ))
                    }
                    ,
                    this.updateApiKeysCount = e => {
                        const t = 0 === e
                          , a = e >= 3;
                        (0,
                        s.Ay)("developer-add-key").classList.toggle("disabled", a),
                        (0,
                        s.Ay)("developer-keys").style.display = t ? "none" : "table",
                        (0,
                        s.Ay)("developer-add-key").innerHTML = a ? (0,
                        n.A)("developerMaxKeys", e, 3) : (0,
                        n.A)("developerAddKey")
                    }
                    ,
                    this.loadApiKeys = async () => {
                        const e = (0,
                        s.Ay)("developer-keys")
                          , t = await fetch("/api/myaccount/developer/list")
                          , a = await t.json();
                        e.querySelectorAll(".access").forEach((e => {
                            e.remove()
                        }
                        ));
                        for (const n of a.data) {
                            const t = this.createApiKeyRow(n);
                            e.append(t)
                        }
                        this.updateApiKeysCount(a.data.length)
                    }
                    ,
                    this.changePassword = () => {
                        new d
                    }
                    ,
                    this.changeEmail = () => {
                        if ("true" !== (0,
                        s.Ay)("change-email").dataset.allowed)
                            return (0,
                            s.y8)("danger", (0,
                            n.A)("setPasswordToChangeEmail"), 3);
                        new l
                    }
                    ,
                    this.changeUsername = () => {
                        new c
                    }
                    ,
                    this.setPassword = () => {
                        new u
                    }
                    ,
                    this.deleteAccount = () => "true" === (0,
                    s.Ay)("delete-account").dataset.teammember ? (0,
                    s.y8)("danger", (0,
                    n.A)("pleaseRemoveTeamSubscriptionBeforeDeleteAccount"), 3) : "true" === (0,
                    s.Ay)("delete-account").dataset.teamadmin ? (setTimeout(( () => {
                        window.location.href = "/myaccount/?tab=team"
                    }
                    ), 3e3),
                    (0,
                    s.y8)("danger", (0,
                    n.A)("transferYourTeamOwnershipBeforeDeleteAccount"), 3)) : void new m,
                    this.updateNewsletter = async e => {
                        const t = (0,
                        s.Ay)("change-name").dataset.name
                          , a = await (0,
                        o.In)("/myaccount/api/profile", "PUT", {
                            newsletter: e.checked,
                            name: t
                        }, !0);
                        return a.status,
                        (0,
                        s.y8)("success", a.message, .6)
                    }
                    ,
                    this.loadSubscription = async () => {
                        const e = await (0,
                        o.c_)()
                          , t = await (0,
                        o.vN)();
                        if (!1 === e.status && !1 === t.status)
                            return (0,
                            s.Ay)("user-subscription").innerHTML = `\n                <section class="w-100">\n                    <div class="content banner" style="max-width: 100%">\n                        <div class="info">\n                            <h2> <img class="plan-icon" src="/img/misc/premium-icon.svg" alt="premium icon">\n                            ${i.N.eligibleForTrail ? `${(0,
                            n.A)("tryPremiumForFree").replace("{number}", "7")}` : `<h5 class="text-default">${(0,
                            n.A)("likedTrial")}</h5>`}\n                            </h2>\n                            <ul class="top-30">\n                                <li class="iconed">${(0,
                            n.A)("pricingAdFree")}</li>\n                                <li class="iconed">${(0,
                            n.A)("pricingUnlimitedSaves")}</li>\n                                <li class="iconed">${(0,
                            n.A)("pricingCreditsIncluded").replace("{number}", "1000")}</li>\n                                <li class="iconed">${(0,
                            n.A)("pricingPrivateMode")}</li>\n                                <li class="iconed">${(0,
                            n.A)("pricingBigLibrary")}</li>\n                            </ul>\n                            <button class="button med top-30" id="subscribe-now">\n                                ${i.N.eligibleForTrail ? (0,
                            n.A)("indexPremiumSubscriptionLink") : (0,
                            n.A)("upgradeToPremium")}\n                            </button>\n                        </div>\n                    </div>\n                </section>\n            `,
                            void (0,
                            s.Ay)("subscribe-now").addEventListener("click", ( () => {
                                new p.A("myAccount","premium")
                            }
                            ));
                        if (e.status) {
                            const t = e.data;
                            new w(t,"user-subscription")
                        } else if (t.status && t.data.subscription) {
                            const {subscription: e, team: a} = t.data;
                            new w(e,"user-subscription",a)
                        }
                    }
                    ,
                    this.openUpgradeSubscriptionStatusModal = e => {
                        const t = new r.A;
                        t.setContent(`\n    ${e ? `\n            <img src="/images/icon/green-tick.png" alt="green tick icon" class="icon" style="width:50px; height:50px; margin: 20px auto 0">\n            <h3 class="top-20">${(0,
                        n.A)("thankYouExclamation")}</h3>\n            <p style="margin:0">${(0,
                        n.A)("yourConfirmationHasBeenSent")}</p>\n        ` : `\n            <img src="/images/icon/red-cross.png" alt="red cross icon" class="icon" style="width:50px; height:50px">\n            <h3 class="top-20">${(0,
                        n.A)("failedToUpdateSubscription")}</h3>\n            <a class="button" id="btn-failed" aria-label="Try Again" onclick="window.location.reload()">${(0,
                        n.A)("tryAgain")}</a>\n        `}\n    `),
                        t.content.classList.add("popup-content"),
                        t.content.style.flexDirection = "column",
                        t.content.style.textAlign = "center",
                        t.dialog.id = "upgrade-subscription-status"
                    }
                    ,
                    this.openDownloadedTemplateModal = e => {
                        const t = new r.A;
                        t.setContent(`\n        <div class="row" style="padding: 10px 0">\n            <h2>${(0,
                        n.A)("editTemplate")}</h2>\n            <p>${(0,
                        n.A)("myaccountModalDes")}</p>\n\n            <a style="align-self: center;" href="/designer/?template=${e}" class="button top-10">${(0,
                        n.A)("editOn")} Designer</a>\n        </div>\n    `),
                        t.content.classList.add("popup-content", "text-center"),
                        t.dialog.id = "downloaded-template-modal",
                        t.dialog.style.maxWidth = "max-content"
                    }
                    ,
                    this.loadTeams = () => {
                        new b,
                        (0,
                        s.Ay)("transfer-ownership-welcome-prompt") && this.transferOwnershipWelcomePrompt()
                    }
                    ,
                    this.transferOwnershipWelcomePrompt = () => {
                        var e;
                        const t = new r.A;
                        t.setContent(`\n          <div>\n              <h3 class="heavy">${(0,
                        n.A)("completeTheOwnerTransfer")}</h3>\n\n              <p class="top-20">${(0,
                        n.A)("youAreTheNewOwnerPleaseAddPaymentToComplete", (0,
                        s.Ay)("my-name").innerText)}</p>\n\n\n              <button id="admin-add-payment-card" class="button top-20 w-wrapped">${(0,
                        n.A)("addPaymentMethod")}</button>\n          </div>\n          `),
                        t.dialog.id = "transfer-ownership-welcome-prompt-modal",
                        t.dialog.style.width = "fit-content",
                        t.content.classList.add("popup-content"),
                        null === (e = (0,
                        s.Ay)("admin-add-payment-card")) || void 0 === e || e.addEventListener("click", (async () => {
                            t.cleanUp(),
                            new h("create")
                        }
                        ))
                    }
                    ,
                    document.querySelectorAll(".tabs").forEach((e => {
                        e.addEventListener("click", ( () => {
                            e.classList.contains("active") || (e.classList.contains("profile") && this.setActiveTab("profile"),
                            e.classList.contains("subscription") && this.setActiveTab("subscription"),
                            e.classList.contains("download") && this.setActiveTab("download"),
                            e.classList.contains("team") && this.setActiveTab("team"),
                            e.classList.contains("developer") && (this.setActiveTab("developer"),
                            this.loadApiKeys()),
                            e.classList.contains("redeem") && this.setActiveTab("redeem"))
                        }
                        ))
                    }
                    )),
                    "#addPayment" === window.location.hash)
                        new h("create");
                    if (null === (e = (0,
                    s.Ay)("change-password")) || void 0 === e || e.addEventListener("click", this.changePassword),
                    null === (t = (0,
                    s.Ay)("set-password")) || void 0 === t || t.addEventListener("click", this.setPassword),
                    null === (a = (0,
                    s.Ay)("change-name")) || void 0 === a || a.addEventListener("click", this.changeUsername),
                    null === (g = (0,
                    s.Ay)("change-email")) || void 0 === g || g.addEventListener("click", this.changeEmail),
                    null === (f = (0,
                    s.Ay)("delete-account")) || void 0 === f || f.addEventListener("click", this.deleteAccount),
                    null === (_ = (0,
                    s.Ay)("update-newsletter")) || void 0 === _ || _.addEventListener("change", (e => this.updateNewsletter(e.target))),
                    this.loadSubscription(),
                    document.querySelectorAll("[data-toggle='new-payment']").forEach((e => {
                        e.addEventListener("click", (async function(e) {
                            e.preventDefault(),
                            new h("create")
                        }
                        ))
                    }
                    )),
                    document.querySelectorAll("[data-toggle='update-payment']").forEach((e => {
                        e.addEventListener("click", (async function(t) {
                            t.preventDefault(),
                            new h("edit",{
                                cardId: e.dataset.card
                            })
                        }
                        ))
                    }
                    )),
                    document.querySelectorAll("[data-toggle='assign-payment']").forEach((e => {
                        e.addEventListener("click", (async t => {
                            t.preventDefault(),
                            new h("assign",{
                                cardId: e.dataset.card
                            }).reassign()
                        }
                        ))
                    }
                    )),
                    document.querySelectorAll("[data-toggle='remove-payment']").forEach((e => {
                        e.addEventListener("click", (async function(t) {
                            t.preventDefault();
                            const a = new r.A;
                            a.setContent(`\n                    <div>\n                        <h3 class="heavy">${(0,
                            n.A)("removePaymentMethod")}</h3>\n\n                        <p>${(0,
                            n.A)("thisCardWillBeDeletedAreYouSure")}</p>\n\n                        <div class="button-wrapper">\n                            <button id="cancel-remove-payment" class="button w-wrapped white text-black">${(0,
                            n.A)("cancel")}</button>\n                            <button id="remove-payment" class="button w-wrapped red">${(0,
                            n.A)("remove")}</button>\n                        </div>\n                    </div>\n                `),
                            a.content.classList.add("popup-content"),
                            a.content.style.minHeight = "unset",
                            a.dialog.id = "remove-card-payment",
                            a.dialog.style.maxWidth = "fit-content",
                            (0,
                            s.Ay)("cancel-remove-payment").addEventListener("click", ( () => a.cleanUp())),
                            (0,
                            s.Ay)("remove-payment").addEventListener("click", ( () => {
                                a.cleanUp(),
                                new h("assign",{
                                    cardId: e.dataset.card
                                }).remove()
                            }
                            ))
                        }
                        ))
                    }
                    )),
                    document.querySelectorAll(".open-downloaded").forEach((e => {
                        e.addEventListener("click", ( () => {
                            this.openDownloadedTemplateModal(e.dataset.template)
                        }
                        ))
                    }
                    )),
                    (0,
                    s.Ay)("team"))
                        this.loadTeams();
                    else {
                        "team" === new URLSearchParams(window.location.search).get("tab") && window.location.replace("/myaccount")
                    }
                    ( () => {
                        var e;
                        document.querySelectorAll('input[type="radio"][name="refer"]').forEach((e => {
                            e.addEventListener("change", ( () => (0,
                            s.Ay)("gift-details").style.display = 2 === Number(e.value) ? "block" : "none"))
                        }
                        )),
                        null === (e = (0,
                        s.Ay)("redeem-gift")) || void 0 === e || e.addEventListener("click", ( () => {
                            const e = document.querySelector('input[type="radio"][name="gift-card"]:checked').value
                              , t = {
                                to: "",
                                message: ""
                            };
                            if (2 === Number(document.querySelector('input[type="radio"][name="refer"]:checked').value) && (t.to = document.querySelector('form#gift-details input[name="email"]').value.trim(),
                            t.message = document.querySelector('form#gift-details textarea[name="message"]').value.trim(),
                            !(0,
                            s.TT)(document.querySelector('form#gift-details input[name="email"]'), t.to, "email")))
                                throw new Error("Missing recipient email!");
                            new y.A("giftcard",{
                                platform: "web",
                                giftcard: e,
                                isAGift: t
                            })
                        }
                        ))
                    }
                    )(),
                    (0,
                    s.Ay)("developer-add-key").addEventListener("click", (async e => {
                        const t = await fetch("/api/myaccount/developer/add_product", {
                            method: "post"
                        })
                          , a = await t.json()
                          , n = (0,
                        s.Ay)("developer-keys");
                        if (!0 === a.status) {
                            n.append(this.createApiKeyRow(a.data));
                            const e = n.querySelectorAll("& > tr").length;
                            this.updateApiKeysCount(e)
                        } else
                            (0,
                            s.y8)("danger", a.message || "Something went wrong")
                    }
                    ))
                }
                createApiKeyRow(e) {
                    return (0,
                    s.T)("tr", {
                        className: "access"
                    }, (0,
                    s.T)("td", e._id), (0,
                    s.T)("td", e.secret), (0,
                    s.T)("td", {
                        style: "text-align: right"
                    }, `${e.monthlyCount} / ${e.requestLimit}`), (0,
                    s.T)("td", {
                        style: "text-align: right"
                    }, (0,
                    s.T)("button", {
                        className: "button small",
                        onclick: async () => {
                            confirm("Are you sure, this is irreversable") && (await fetch(`/api/myaccount/developer/${e._id}`, {
                                method: "delete"
                            }),
                            this.loadApiKeys())
                        }
                    }, (0,
                    n.A)("remove"))))
                }
            }
        }
    }, d = {};
    function c(e) {
        var t = d[e];
        if (void 0 !== t)
            return t.exports;
        var a = d[e] = {
            id: e,
            loaded: !1,
            exports: {}
        };
        return l[e].call(a.exports, a, a.exports, c),
        a.loaded = !0,
        a.exports
    }
    c.m = l,
    c.amdO = {},
    e = "function" == typeof Symbol ? Symbol("webpack queues") : "__webpack_queues__",
    t = "function" == typeof Symbol ? Symbol("webpack exports") : "__webpack_exports__",
    a = "function" == typeof Symbol ? Symbol("webpack error") : "__webpack_error__",
    n = e => {
        e && e.d < 1 && (e.d = 1,
        e.forEach((e => e.r--)),
        e.forEach((e => e.r-- ? e.r++ : e())))
    }
    ,
    c.a = (i, s, r) => {
        var o;
        r && ((o = []).d = -1);
        var l, d, c, m = new Set, u = i.exports, h = new Promise(( (e, t) => {
            c = t,
            d = e
        }
        ));
        h[t] = u,
        h[e] = e => (o && e(o),
        m.forEach(e),
        h.catch((e => {}
        ))),
        i.exports = h,
        s((i => {
            var s;
            l = (i => i.map((i => {
                if (null !== i && "object" == typeof i) {
                    if (i[e])
                        return i;
                    if (i.then) {
                        var s = [];
                        s.d = 0,
                        i.then((e => {
                            r[t] = e,
                            n(s)
                        }
                        ), (e => {
                            r[a] = e,
                            n(s)
                        }
                        ));
                        var r = {};
                        return r[e] = e => e(s),
                        r
                    }
                }
                var o = {};
                return o[e] = e => {}
                ,
                o[t] = i,
                o
            }
            )))(i);
            var r = () => l.map((e => {
                if (e[a])
                    throw e[a];
                return e[t]
            }
            ))
              , d = new Promise((t => {
                (s = () => t(r)).r = 0;
                var a = e => e !== o && !m.has(e) && (m.add(e),
                e && !e.d && (s.r++,
                e.push(s)));
                l.map((t => t[e](a)))
            }
            ));
            return s.r ? d : r()
        }
        ), (e => (e ? c(h[a] = e) : d(u),
        n(o)))),
        o && o.d < 0 && (o.d = 0)
    }
    ,
    c.n = e => {
        var t = e && e.__esModule ? () => e.default : () => e;
        return c.d(t, {
            a: t
        }),
        t
    }
    ,
    s = Object.getPrototypeOf ? e => Object.getPrototypeOf(e) : e => e.__proto__,
    c.t = function(e, t) {
        if (1 & t && (e = this(e)),
        8 & t)
            return e;
        if ("object" == typeof e && e) {
            if (4 & t && e.__esModule)
                return e;
            if (16 & t && "function" == typeof e.then)
                return e
        }
        var a = Object.create(null);
        c.r(a);
        var n = {};
        i = i || [null, s({}), s([]), s(s)];
        for (var r = 2 & t && e; "object" == typeof r && !~i.indexOf(r); r = s(r))
            Object.getOwnPropertyNames(r).forEach((t => n[t] = () => e[t]));
        return n.default = () => e,
        c.d(a, n),
        a
    }
    ,
    c.d = (e, t) => {
        for (var a in t)
            c.o(t, a) && !c.o(e, a) && Object.defineProperty(e, a, {
                enumerable: !0,
                get: t[a]
            })
    }
    ,
    c.f = {},
    c.e = e => Promise.all(Object.keys(c.f).reduce(( (t, a) => (c.f[a](e, t),
    t)), [])),
    c.u = e => (({
        885: "pdf-lib",
        1161: "infill",
        2335: "lottie-web",
        2904: "ffmpeg",
        4990: "tiff",
        5395: "gif",
        7162: "checkout.modal",
        8636: "adyen",
        9262: "native"
    }[e] || e) + "." + {
        28: "ea3fd724f09b59590ff6",
        76: "6509cfad6f2ceceedff0",
        106: "242f45cc653c6cca19e2",
        443: "566018ed91309f4b6914",
        885: "d589491252fda68f1004",
        936: "a6c93d0ece60c78db9c7",
        1161: "2df05d9bb84d7b5e60b4",
        1455: "0808759e76afb8735bfd",
        1810: "f5b90b1d34d6de354e54",
        1983: "f53e661ae4a0145651a2",
        1993: "1208e31fc2db871d8276",
        2016: "a374dee38fd6ba9ebdc6",
        2335: "50d6b29795744f01a3e9",
        2355: "980b5eb359b58998ea34",
        2724: "88f1101e56301d681b09",
        2904: "f17c774ac9d2ff5f2d9d",
        3220: "87d0ff94cb0bb3cd3a21",
        3329: "598634a11d6076a5fe7f",
        3846: "f55eab25bca4ee25c082",
        4224: "9e322f8023933d8ff603",
        4990: "d4b34fae8a5ce656b0d9",
        5234: "57eddbd9a64a79aa6757",
        5395: "7274e09f5595bdb7686d",
        5404: "a76867933231aae626f0",
        5480: "ef1ca9252466d65b6dd8",
        5746: "b31419c32b7bb3f75be1",
        5778: "f55074ce9e4cf39b3362",
        5884: "ca834db976a2d5d1f4a1",
        5896: "c57e3b25d6a3202ac8bd",
        6825: "9da1249fbcd48f1796ad",
        7162: "3bb08e0f7f58ded8f9b1",
        7687: "5a10e50c42e7dd6df9d0",
        7796: "0fedd84147c566b39bf2",
        8090: "fc53f1cf6118af96ab75",
        8636: "b2fe87481fe44fc81995",
        8746: "1aeeee9656f345eb4bb4",
        8876: "b2bde52d10b8a93fe3d7",
        9262: "036b05aad1321d32d44e"
    }[e] + ".js"),
    c.miniCssF = e => {}
    ,
    c.g = function() {
        if ("object" == typeof globalThis)
            return globalThis;
        try {
            return this || new Function("return this")()
        } catch (e) {
            if ("object" == typeof window)
                return window
        }
    }(),
    c.hmd = e => ((e = Object.create(e)).children || (e.children = []),
    Object.defineProperty(e, "exports", {
        enumerable: !0,
        set: () => {
            throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: " + e.id)
        }
    }),
    e),
    c.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t),
    r = {},
    o = "pixlr:",
    c.l = (e, t, a, n) => {
        if (r[e])
            r[e].push(t);
        else {
            var i, s;
            if (void 0 !== a)
                for (var l = document.getElementsByTagName("script"), d = 0; d < l.length; d++) {
                    var m = l[d];
                    if (m.getAttribute("src") == e || m.getAttribute("data-webpack") == o + a) {
                        i = m;
                        break
                    }
                }
            i || (s = !0,
            (i = document.createElement("script")).charset = "utf-8",
            i.timeout = 120,
            c.nc && i.setAttribute("nonce", c.nc),
            i.setAttribute("data-webpack", o + a),
            i.src = e),
            r[e] = [t];
            var u = (t, a) => {
                i.onerror = i.onload = null,
                clearTimeout(h);
                var n = r[e];
                if (delete r[e],
                i.parentNode && i.parentNode.removeChild(i),
                n && n.forEach((e => e(a))),
                t)
                    return t(a)
            }
              , h = setTimeout(u.bind(null, void 0, {
                type: "timeout",
                target: i
            }), 12e4);
            i.onerror = u.bind(null, i.onerror),
            i.onload = u.bind(null, i.onload),
            s && document.head.appendChild(i)
        }
    }
    ,
    c.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }
    ,
    c.nmd = e => (e.paths = [],
    e.children || (e.children = []),
    e),
    c.v = (e, t, a, n) => {
        var i = fetch(c.p + "" + a + ".module.wasm")
          , s = () => i.then((e => e.arrayBuffer())).then((e => WebAssembly.instantiate(e, n))).then((t => Object.assign(e, t.instance.exports)));
        return i.then((t => "function" == typeof WebAssembly.instantiateStreaming ? WebAssembly.instantiateStreaming(t, n).then((t => Object.assign(e, t.instance.exports)), (e => {
            if ("application/wasm" !== t.headers.get("Content-Type"))
                return console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", e),
                s();
            throw e
        }
        )) : s()))
    }
    ,
    c.p = "/dist/",
    ( () => {
        c.b = document.baseURI || self.location.href;
        var e = {
            5651: 0,
            930: 0
        };
        c.f.j = (t, a) => {
            var n = c.o(e, t) ? e[t] : void 0;
            if (0 !== n)
                if (n)
                    a.push(n[2]);
                else {
                    var i = new Promise(( (a, i) => n = e[t] = [a, i]));
                    a.push(n[2] = i);
                    var s = c.p + c.u(t)
                      , r = new Error;
                    c.l(s, (a => {
                        if (c.o(e, t) && (0 !== (n = e[t]) && (e[t] = void 0),
                        n)) {
                            var i = a && ("load" === a.type ? "missing" : a.type)
                              , s = a && a.target && a.target.src;
                            r.message = "Loading chunk " + t + " failed.\n(" + i + ": " + s + ")",
                            r.name = "ChunkLoadError",
                            r.type = i,
                            r.request = s,
                            n[1](r)
                        }
                    }
                    ), "chunk-" + t, t)
                }
        }
        ;
        var t = (t, a) => {
            var n, i, [s,r,o] = a, l = 0;
            if (s.some((t => 0 !== e[t]))) {
                for (n in r)
                    c.o(r, n) && (c.m[n] = r[n]);
                if (o)
                    o(c)
            }
            for (t && t(a); l < s.length; l++)
                i = s[l],
                c.o(e, i) && e[i] && e[i][0](),
                e[i] = 0
        }
          , a = self.webpackChunkpixlr = self.webpackChunkpixlr || [];
        a.forEach(t.bind(null, 0)),
        a.push = t.bind(null, a.push.bind(a))
    }
    )(),
    c.nc = void 0;
    var m = {};
    ( () => {
        "use strict";
        c.r(m),
        c.d(m, {
            Collage: () => Xe,
            Education: () => b,
            EducationApplicationFiles: () => T,
            EducationApplicationForm: () => k,
            FileConverter: () => ct,
            GRect: () => Ke,
            Generator: () => et,
            ImageItem: () => Je,
            Index: () => gt,
            License: () => h,
            MyAccount: () => mt.MyAccount,
            Pricing: () => p,
            RemoveBackground: () => f,
            Suite: () => a,
            Swapper: () => We,
            Upsell: () => l,
            freeTrialPage: () => ft
        });
        var e = c(29755)
          , t = c(42268);
        class a {
            constructor() {
                var a;
                if (this.connected = e => {
                    (0,
                    t.Ay)("remove-background").classList.toggle("disabled", !e),
                    (0,
                    t.Ay)("suite-online").style.display = e ? "flex" : "none",
                    (0,
                    t.Ay)("suite-offline").style.display = e ? "none" : "inline-flex"
                }
                ,
                this.init = async () => {
                    await (0,
                    t.Qo)();
                    const e = (0,
                    t.lR)("lang", "en-US").split("-")[1].toLowerCase();
                    this.connected(navigator.onLine);
                    const a = await navigator.serviceWorker.ready
                      , i = await n(a.active, {
                        type: "OFFLINE_READY",
                        lang: e
                    })
                      , s = (0,
                    t.Ay)("make-offline");
                    s.checked = i,
                    s.addEventListener("change", (async () => {
                        await n(a.active, {
                            type: "OFFLINE_TOGGLE",
                            value: s.checked,
                            lang: e
                        })
                    }
                    ))
                }
                ,
                e.Ay.product = "suite",
                document.documentElement.classList.add(e.Ay.workspace, e.Ay.accent),
                (window.matchMedia("(display-mode: standalone)").matches || document.referrer.includes("android-app://")) && (document.documentElement.classList.add("standalone"),
                null === (a = (0,
                t.Ay)("logo")) || void 0 === a || a.setAttribute("href", "/suite/"),
                document.title = "Home"),
                window.addEventListener("online", ( () => this.connected(!0))),
                window.addEventListener("offline", ( () => this.connected(!1))),
                e.Ay.api) {
                    let e = (0,
                    t.Ay)("suite").getElementsByTagName("a");
                    for (var i = 0; i < e.length; i++)
                        e[i].href += location.search
                }
                this.init()
            }
        }
        function n(e, t) {
            return new Promise(( (a, n) => {
                const i = new MessageChannel;
                i.port1.onmessage = e => {
                    e.data instanceof Error ? n(e.data) : a(e.data),
                    i.port1.close()
                }
                ,
                e.postMessage(t, [i.port2])
            }
            ))
        }
        var i = c(79453)
          , s = c(98244)
          , r = c(50295)
          , o = c(96703);
        class l {
            constructor(e) {
                this.setDiscount = () => {
                    const e = (0,
                    t.Ay)("upsell-plus-monthly")
                      , a = (0,
                    t.Ay)("upsell-premium-monthly")
                      , n = (0,
                    t.Ay)("upsell-discount-plus-monthly")
                      , i = (0,
                    t.Ay)("upsell-discount-premium-monthly")
                      , s = document.querySelectorAll(".pricing-plans .offer-box")
                      , r = document.querySelectorAll("[data-toggle='checkout']");
                    n.style.display = "flex",
                    i.style.display = "flex",
                    s && s.forEach((e => e.style.display = "flex")),
                    r && r.forEach((e => {
                        e.style.order = "1",
                        e.classList.replace("top-50", "top-30")
                    }
                    ));
                    const o = +e.ariaValueMax
                      , l = +a.ariaValueMax;
                    e.innerHTML = "$ " + Math.round(90 * o) / 100,
                    a.innerHTML = "$ " + Math.round(70 * l) / 100
                }
                ,
                this.showCheckout = e => {
                    var t;
                    const a = e.currentTarget
                      , n = a.dataset.plan;
                    let l = null !== (t = a.dataset.promocode) && void 0 !== t ? t : "";
                    i.N.eligibleForUpsellDiscount && (l = "plus" === n ? "UPSELL10" : "UPSELL30");
                    const d = (null != n ? n : "premium") + "-monthly";
                    return i.N ? i.N.subscription ? window.location.replace("/myaccount/?tab=subscription") : ((0,
                    s.A)("upsell", n),
                    (0,
                    s.A)("upsell", "checkout"),
                    a.blur(),
                    new o.A("subscription",{
                        platform: "web",
                        plan: d,
                        code: l
                    })) : new r.A
                }
                ,
                this.next = e || "/",
                this.checkUserEligibility() && (this.configure(),
                (0,
                s.A)("upsell", "view"))
            }
            checkUserEligibility() {
                return void 0 === i.N ? (window.location.replace("/"),
                !1) : "education" === i.N.type ? (window.location.replace(this.next),
                !1) : i.N.subscription ? (window.location.replace("/pricing"),
                !1) : (i.N.eligibleForUpsellDiscount && this.setDiscount(),
                !0)
            }
            configure() {
                document.querySelectorAll("[data-toggle='checkout']").forEach((e => e.addEventListener("click", this.showCheckout, !1))),
                document.getElementById("upsell-section").style.display = "block",
                document.getElementById("upsell-skip").addEventListener("click", ( () => (0,
                s.A)("upsell", "skip")))
            }
        }
        var d = c(21742)
          , u = c(72284);
        class h {
            constructor() {
                const e = (0,
                t.Ay)("redeem-input")
                  , a = (0,
                t.Ay)("redeem-submit")
                  , n = document.querySelector('[data-error="redeem-input"]');
                let s = !1;
                if (null === i.N || void 0 === i.N ? void 0 : i.N.subscription)
                    return e.readOnly = !0,
                    e.style.cursor = "not-allowed",
                    void (e.title = "Cannot claim gift card while having active subscription");
                null == e || e.addEventListener("input", ( () => {
                    e.value.length > 29 && (e.value = e.value.substring(0, 29))
                }
                )),
                null == a || a.addEventListener("click", (async () => {
                    if (s)
                        return;
                    if (s = !0,
                    !e.value || 29 !== e.value.length)
                        return n.innerText = e.value ? "Invalid license key!" : "Cannot leave input blank!",
                        n.style.display = "flex",
                        void setTimeout(( () => n.style.display = "none"), 2e3);
                    const t = await fetch("/api/license/claim", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            Accept: "application/json"
                        },
                        body: JSON.stringify({
                            key: e.value
                        })
                    })
                      , a = await t.json();
                    if (!a.status)
                        return s = !1,
                        n.innerText = a.message || "Invalid license key!",
                        n.style.display = "flex",
                        void setTimeout(( () => n.style.display = "none"), 2e3);
                    (new u.A).setContent(`\n            <div style="padding: 10px 0; display: flex; flex-direction: row;">\n                <div style="padding: 20px">\n                    <h2 class="bold top-0" style="line-height: 40px">${(0,
                    d.A)("successfullyRedeemedWelcomePixlrPremium")}</h2>\n                    <p>${(0,
                    d.A)("congratsYouNowHaveFullAccess")}</p>\n\n                    <h5 class="heavy top-20">${(0,
                    d.A)("pricingPremiumDesc")}</h5>\n                    <ul>\n                        <li class="small">${(0,
                    d.A)("pricingAdFree")}</li>\n                        <li class="small">${(0,
                    d.A)("pricingUnlimitedSaves")}</li>\n                        <li class="small">${(0,
                    d.A)("pricingCreditsIncluded").replace("{number}", "1000")}</li>\n                        <li class="small">${(0,
                    d.A)("pricingPrivateMode")}</li>\n                        <li class="small">${(0,
                    d.A)("pricingBigLibrary")}</li>\n                    </ul>\n\n                    <h5 class="heavy top-20">${(0,
                    d.A)("pixlrMobileApps")}</h5>\n                    <span class="small">BG Remove / Pixlr FX / Stories by Pixlr</span>\n\n                    <h5 class="heavy top-20">${(0,
                    d.A)("exclusiveVideoTutorials")}</h5>\n\n                    <a class="button top-20" href="/editor/" style="width: 254px;">${(0,
                    d.A)("startEditing")}</a>\n                </div>\n\n                <img src="/images/license/pixlr-redeem-success.png" class="default" alt="pixlr redeem license success">\n            </div>\n        `)
                }
                ))
            }
        }
        class p {
            constructor() {
                this.PRICING = (0,
                t.Ay)("config_pricing") && "" !== (0,
                t.Ay)("config_pricing").innerHTML ? JSON.parse((0,
                t.Ay)("config_pricing").innerHTML) : "",
                this.eligibleForTrail = void 0 === i.N || i.N.eligibleForTrail,
                this.toggleInterval = () => {
                    const e = (0,
                    t.Ay)("payment-interval").checked;
                    (0,
                    t.Ay)("pricing-plans").classList.toggle("monthley", e),
                    (0,
                    t.Ay)("pricing-plans").classList.toggle("yearly", !e),
                    i.N && i.N.eligibleForUpsellDiscount && this.setDiscount(e ? "monthly" : "yearly")
                }
                ,
                this.setDiscount = e => {
                    const a = (0,
                    t.Ay)(`plus-${e}`)
                      , n = (0,
                    t.Ay)(`premium-${e}`)
                      , i = (0,
                    t.Ay)("discount-plus-monthly")
                      , s = (0,
                    t.Ay)("discount-premium-monthly")
                      , r = document.querySelectorAll(".pricing-plans .offer-box")
                      , o = document.querySelectorAll("[data-toggle='checkout']")
                      , l = document.querySelector(".pricing-plan.team");
                    i && (i.style.display = "flex"),
                    s && (s.style.display = "flex"),
                    r && r.forEach((e => e.style.display = "flex")),
                    o && o.forEach((e => {
                        e.style.order = "1",
                        e.classList.replace("top-50", "top-30")
                    }
                    )),
                    l.classList.add("discounted");
                    const d = +a.ariaValueMax
                      , c = +n.ariaValueMax;
                    a.innerHTML = "$ " + Math.round(90 * d) / 100,
                    n.innerHTML = "$ " + Math.round(70 * c) / 100
                }
                ,
                this.showCheckout = e => {
                    var a;
                    const n = e.currentTarget
                      , s = n.dataset.plan
                      , l = (0,
                    t.Ay)("payment-interval").checked;
                    let d = null !== (a = n.dataset.promocode) && void 0 !== a ? a : "";
                    i.N && i.N.eligibleForUpsellDiscount && (d = "plus" === s ? "UPSELL10" : "UPSELL30");
                    const c = (null != s ? s : "premium") + "-" + (l ? "monthly" : "yearly");
                    if (i.N) {
                        if (i.N.subscription)
                            return window.location.replace("/myaccount/?tab=subscription");
                        new o.A("subscription",{
                            platform: "web",
                            plan: c,
                            code: d
                        })
                    } else
                        new r.A
                }
                ,
                (0,
                t.Ay)("payment-interval").addEventListener("change", ( () => this.toggleInterval()));
                document.querySelectorAll("[data-toggle='checkout']").forEach((e => e.addEventListener("click", this.showCheckout, !1))),
                (0,
                t.Ay)("pricing-checkout-credits").addEventListener("click", ( () => {
                    i.N ? new o.A("credits",{
                        platform: "web"
                    }) : new r.A
                }
                )),
                (0,
                t.Ay)("pricing-checkout-giftcard").addEventListener("click", ( () => {
                    i.N ? new o.A("giftcard",{
                        giftcard: "premium-yearly",
                        isAGift: {
                            to: "",
                            message: ""
                        }
                    }) : new r.A
                }
                )),
                i.N && i.N.eligibleForUpsellDiscount && this.setDiscount("monthly")
            }
        }
        var y = c(54738);
        class g {
            constructor(e, a=!1) {
                if (this.numSections = 0,
                this.outerWidth = 0,
                this.contentWidth = 0,
                this.infiniteScroll = !1,
                this.bind = y.eD(50, ( () => {
                    if (this.outerWidth = this.outer.clientWidth,
                    this.contentWidth = this.content.scrollWidth,
                    this.contentWidth > this.outerWidth && (this.forward.style.display = "block"),
                    this.numSections = Math.floor(this.contentWidth / this.outerWidth),
                    this.indicator.innerHTML = "",
                    this.numSections > 0)
                        for (let e = 0; e < this.numSections; e++) {
                            const a = (0,
                            t.T)("li");
                            a.setAttribute("data", e.toString()),
                            a.addEventListener("click", this.sectionClick),
                            0 === e && a.classList.add("active"),
                            this.indicator.append(a)
                        }
                    this.scoll()
                }
                )),
                this.sectionClick = e => {
                    const t = Number(e.currentTarget.getAttribute("data"));
                    this.outer.scrollTo(this.outerWidth * t, 0)
                }
                ,
                this.forwardClick = () => {
                    if (this.infiniteScroll && this.outer.scrollLeft === this.outerWidth * (this.numItems() - 1))
                        return this.outer.scrollTo(0, 0);
                    this.outer.scrollBy(this.outerWidth, 0)
                }
                ,
                this.backClick = () => {
                    if (this.infiniteScroll && 0 === this.outer.scrollLeft)
                        return this.outer.scrollBy(this.outerWidth * (this.numItems() - 1), 0);
                    this.outer.scrollBy(-this.outerWidth, 0)
                }
                ,
                this.scoll = y.eD(50, ( () => {
                    var e, t;
                    const a = Math.ceil(this.outer.scrollLeft / this.outerWidth);
                    if (this.infiniteScroll || (this.forward.style.display = a === this.numSections ? "none" : "block",
                    this.back.style.display = this.outer.scrollLeft > 0 ? "block" : "none"),
                    this.numSections > 0)
                        for (let n = 0; n <= this.numSections; n++)
                            n === a ? null === (e = this.indicator.children[n]) || void 0 === e || e.classList.add("active") : null === (t = this.indicator.children[n]) || void 0 === t || t.classList.remove("active")
                }
                )),
                this.numItems = () => this.content.children.length,
                this.addItem = e => {
                    this.content.appendChild(e)
                }
                ,
                this.clearItem = () => {
                    this.content.innerHTML = ""
                }
                ,
                this.infiniteScroll = a,
                this.container = (0,
                t.Ay)(e),
                this.container.classList.add("carousel"),
                this.content = (0,
                t.T)("div", {
                    id: e + "-content",
                    className: "content"
                }),
                this.container.hasChildNodes())
                    for (; this.container.firstChild; )
                        this.content.appendChild(this.container.firstChild);
                this.outer = (0,
                t.T)("div", {
                    id: e + "-outer",
                    className: "outer"
                }, this.content),
                this.indicator = (0,
                t.T)("ul", {
                    id: e + "-indicator"
                }),
                this.back = (0,
                t.T)("div", {
                    id: e + "-back",
                    className: "back ic"
                }),
                this.forward = (0,
                t.T)("div", {
                    id: e + "-forward",
                    className: "forward ic"
                }),
                this.container.append(this.outer, this.indicator, this.back, this.forward),
                this.forward.addEventListener("click", this.forwardClick, !0),
                this.back.addEventListener("click", this.backClick, !0),
                this.outer.addEventListener("scroll", this.scoll, !0),
                this.forward.style.display = "none",
                this.back.style.display = "none",
                new ResizeObserver(this.bind).observe(this.content)
            }
        }
        class f {
            constructor() {
                this.setCarousel = async () => {
                    const e = [{
                        src: "/images/mobile/remove-background/demo/phone-action-1.webp",
                        id: "phone-action-1",
                        title: (0,
                        d.A)("sharpCleanCutouts"),
                        desc: (0,
                        d.A)("sharpCleanCutoutsDesc")
                    }, {
                        src: "/images/mobile/remove-background/demo/phone-action-2.webp",
                        id: "phone-action-2",
                        title: (0,
                        d.A)("instantBatchRemove"),
                        desc: (0,
                        d.A)("instantBatchRemoveDesc")
                    }, {
                        src: "/images/mobile/remove-background/demo/phone-action-3.webp",
                        id: "phone-action-3",
                        title: (0,
                        d.A)("worksOnlineOffline"),
                        desc: (0,
                        d.A)("worksOnlineOfflineDesc")
                    }, {
                        src: "/images/mobile/remove-background/demo/phone-action-4.webp",
                        id: "phone-action-4",
                        title: (0,
                        d.A)("unlimitedCutouts"),
                        desc: (0,
                        d.A)("unlimitedCutoutsDesc")
                    }, {
                        src: "/images/mobile/remove-background/demo/phone-action-5.webp",
                        id: "phone-action-5",
                        title: (0,
                        d.A)("easyBackgroundChange"),
                        desc: (0,
                        d.A)("easyBackgroundChangeDesc")
                    }, {
                        src: "/images/mobile/remove-background/demo/phone-action-6.webp",
                        id: "phone-action-6",
                        title: (0,
                        d.A)("safeSecure"),
                        desc: (0,
                        d.A)("safeSecureDesc")
                    }];
                    if ((0,
                    t.Ay)("demo-carousel") && !this.demoCarousel) {
                        this.demoCarousel = new g("demo-carousel");
                        for (let t = 0; t < e.length; t++)
                            this.demoCarousel.addItem(this.createActionCarousel(e[t]))
                    }
                }
                ,
                this.createActionCarousel = e => {
                    const a = (0,
                    t.T)("div", {
                        id: "demo-carousel-content",
                        className: "content"
                    })
                      , n = (0,
                    t.T)("div", {
                        id: e.id,
                        title: e.id,
                        className: "demo-screen"
                    }, a)
                      , i = (0,
                    t.T)("div", {
                        className: "action"
                    });
                    return i.append((0,
                    t.T)("h4", {}, e.title)),
                    i.append((0,
                    t.T)("span", {}, e.desc)),
                    n.append((0,
                    t.T)("img", {
                        className: ` ${e.id} selected`,
                        src: e.src
                    })),
                    n.append(i),
                    n
                }
                ;
                const e = [...Array.from(document.getElementsByClassName("demo-action")[0].children), ...Array.from(document.getElementsByClassName("demo-action")[1].children)]
                  , a = Array.from(document.getElementsByClassName("demo-screen")[0].children);
                e.forEach((t => {
                    const n = t.classList[0].replace("action-", "");
                    t.children[0].addEventListener("click", ( () => {
                        a.forEach((e => e.classList.remove("selected"))),
                        e.forEach((e => e.classList.remove("selected"))),
                        document.querySelector(`#demo > .demo-action > .action-${n}`).classList.add("selected"),
                        document.querySelector(`#demo > .demo-screen > .phone-action-${n}`).classList.add("selected")
                    }
                    ))
                }
                )),
                (0,
                t.Ay)("removebg-video-container").addEventListener("mouseover", ( () => {
                    (0,
                    t.Ay)("toggle-mute-btn").style.visibility = "visible"
                }
                )),
                (0,
                t.Ay)("removebg-video-container").addEventListener("mouseout", ( () => {
                    (0,
                    t.Ay)("toggle-mute-btn").style.visibility = "hidden"
                }
                )),
                (0,
                t.Ay)("toggle-mute-btn").addEventListener("click", ( () => {
                    const e = (0,
                    t.Ay)("mute-btn-img").src;
                    (0,
                    t.Ay)("mute-btn-img").src = e.includes("/img/icon/volume.svg") ? "/img/icon/volume-mute.svg" : "/img/icon/volume.svg",
                    (0,
                    t.Ay)("removebg-video").muted = !(0,
                    t.Ay)("removebg-video").muted
                }
                )),
                this.setCarousel()
            }
        }
        const _ = ["edu-description", "edu-free", "edu-upgrade", "edu-steps-go-get-free", "edu-note", "edu-featured-school", "edu-reviews", "edu-join-us"];
        class b {
            constructor() {
                this.switchToMain = () => {
                    this.toggleTemplate(!0)
                }
                ,
                this.switchToFaq = () => {
                    this.toggleTemplate(!1)
                }
                ,
                this.toggleTemplate = e => {
                    var a, n, i, s;
                    _.forEach((a => {
                        var n;
                        null === (n = (0,
                        t.Ay)(a)) || void 0 === n || n.classList.toggle("hidden", !e)
                    }
                    )),
                    null === (a = (0,
                    t.Ay)("edu-faq")) || void 0 === a || a.classList.toggle("hidden", e),
                    null === (n = (0,
                    t.Ay)("edu-switch-to-faq")) || void 0 === n || n.classList.toggle("active", !e),
                    null === (i = (0,
                    t.Ay)("edu-switch-to-main")) || void 0 === i || i.classList.toggle("active", e),
                    null === (s = (0,
                    t.Ay)("edu-title")) || void 0 === s || s.classList.toggle("faq-template", !e)
                }
                ,
                new g("review-carousel",!0),
                (0,
                t.Ay)("edu-switch-to-main").addEventListener("click", this.switchToMain),
                (0,
                t.Ay)("edu-switch-to-faq").addEventListener("click", this.switchToFaq)
            }
        }
        class v {
            constructor() {
                this.inputs = document.querySelectorAll("input, select"),
                this.setValidators()
            }
            setValidators() {
                this.inputs.forEach((e => {
                    e.addEventListener("invalid", (t => this.setInvalid(t, e))),
                    ["input", "change", "focus"].forEach((t => {
                        e.addEventListener(t, (t => this.setValid(t, e)))
                    }
                    ))
                }
                ))
            }
            setInvalid(e, t) {
                var a;
                e.preventDefault(),
                null === (a = t.closest("[data-invalid-class-locator]")) || void 0 === a || a.classList.add("invalid")
            }
            setValid(e, t) {
                var a;
                e.preventDefault(),
                null === (a = t.closest("[data-invalid-class-locator]")) || void 0 === a || a.classList.remove("invalid")
            }
            isFormInvalid(e) {
                let t = !1;
                const a = [];
                return e.forEach((e => {
                    e.checkValidity() || (t = !0,
                    a.push(e))
                }
                )),
                t ? a : null
            }
        }
        var M = function(e, t) {
            var a = {};
            for (var n in e)
                Object.prototype.hasOwnProperty.call(e, n) && t.indexOf(n) < 0 && (a[n] = e[n]);
            if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                var i = 0;
                for (n = Object.getOwnPropertySymbols(e); i < n.length; i++)
                    t.indexOf(n[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (a[n[i]] = e[n[i]])
            }
            return a
        };
        const w = ["jpg", "jpeg", "png", "pdf", "doc", "docx", "zip"];
        class T extends v {
            constructor() {
                super(),
                this.filesMap = new Map,
                this.params = new URLSearchParams(window.location.search),
                this.urlPopulatedData = Object.fromEntries(this.params.entries()),
                this.form = (0,
                t.Ay)("education-application-files"),
                this.termsAndConditions = (0,
                t.Ay)("terms-conditions"),
                this.fileValidationMessages = (0,
                t.Ay)("fileValidationMessages"),
                this.fileInput = (0,
                t.Ay)("file-upload"),
                this.uploadArea = (0,
                t.Ay)("upload-area"),
                this.uploadProgressContainer = (0,
                t.Ay)("upload-progress"),
                this.goBackButton = (0,
                t.Ay)("go-back-button"),
                this.secText = (0,
                d.A)("eduApplFilesSec"),
                this.minText = (0,
                d.A)("eduApplFilesMin"),
                this.remainingText = (0,
                d.A)("eduApplFilesRemaining"),
                this.setEventListeners()
            }
            setEventListeners() {
                this.fileInput.setAttribute("accept", w.map((e => ` .${e} `)).join(",")),
                this.dragClassHandler = this.dragClassHandler.bind(this),
                this.uploadFile = this.uploadFile.bind(this),
                this.uploadArea.addEventListener("dragenter", (e => this.dragClassHandler(e, !0))),
                this.uploadArea.addEventListener("dragover", (e => this.dragClassHandler(e, !0))),
                this.uploadArea.addEventListener("dragleave", (e => this.dragClassHandler(e, !1))),
                this.uploadArea.addEventListener("drop", (e => {
                    var t;
                    this.dragClassHandler(e, !1);
                    const a = null === (t = e.dataTransfer) || void 0 === t ? void 0 : t.files[0];
                    a && this.uploadFile(a)
                }
                )),
                this.fileInput.addEventListener("change", (async () => {
                    const e = this.fileInput.files[0];
                    e && await this.uploadFile(e)
                }
                )),
                this.goBackButton.addEventListener("click", ( () => this.goBack())),
                this.form.addEventListener("submit", this.handleFormSubmit.bind(this))
            }
            dragClassHandler(e, t) {
                e.preventDefault(),
                this.hideFileValidationMessages(),
                t ? this.uploadArea.classList.add("dragover") : this.uploadArea.classList.remove("dragover")
            }
            stopEvent(e) {
                e.preventDefault(),
                e.stopPropagation()
            }
            setInvalid(e, t) {
                var a;
                this.stopEvent(e),
                null === (a = t.closest("[data-invalid-class-locator]")) || void 0 === a || a.classList.add("invalid")
            }
            setValid(e, t) {
                var a;
                this.stopEvent(e),
                null === (a = t.closest("[data-invalid-class-locator]")) || void 0 === a || a.classList.remove("invalid")
            }
            hideFileValidationMessages() {
                this.fileValidationMessages.style.opacity = "0"
            }
            showFileValidationMessages() {
                this.fileValidationMessages.style.opacity = "1",
                setTimeout(( () => this.hideFileValidationMessages()), 3e3)
            }
            showProgress(e, t=0, a=0) {
                const n = e.querySelector(".file-item-progress")
                  , i = e.querySelector(".file-item-cancel img");
                if (!n || !i)
                    return;
                100 === t && (n.classList.add("completed"),
                i.src = "/images/education/application/remove.svg");
                const s = e.querySelector(".progress-bar-fill")
                  , r = e.querySelector(".progress-percent")
                  , o = e.querySelector(".time-remaining-divider")
                  , l = e.querySelector(".time-remaining")
                  , d = a ? (a / 1e3).toFixed(0) : ""
                  , c = a ? (parseInt(d) < 60 ? `${d} ${this.secText}` : `${Math.ceil(parseInt(d) / 60)} ${this.minText}`) + ` ${this.remainingText}` : "";
                s.style.width = `${t}%`,
                r.textContent = `${t}%`,
                o.innerHTML = c ? "&centerdot;" : "",
                l.textContent = c
            }
            removeFileItem(e) {
                var t;
                this.filesMap.delete(e),
                null === (t = document.getElementById(e)) || void 0 === t || t.remove(),
                this.fileInput.value = "",
                0 === this.filesMap.size && (this.uploadArea.style.display = "")
            }
            addRowUploadFile(e, t) {
                var a, n;
                const i = null === crypto || void 0 === crypto ? void 0 : crypto.randomUUID();
                this.filesMap.set(i, {
                    file: e,
                    response: null
                });
                const s = e.name
                  , r = e.size
                  , o = r < 1024 ? `${(r / 1024).toFixed(2)} KB` : `${(r / 1048576).toFixed(2)} MB`
                  , l = `/images/education/application/${w.find((e => s.endsWith(`.${e}`))) || "doc"}.svg`
                  , d = null === (n = null === (a = this.uploadProgressContainer) || void 0 === a ? void 0 : a.firstElementChild) || void 0 === n ? void 0 : n.cloneNode(!0)
                  , c = null == d ? void 0 : d.querySelector(".file-item-logo")
                  , m = null == d ? void 0 : d.querySelector(".file-item-name")
                  , u = null == d ? void 0 : d.querySelector(".file-item-size")
                  , h = null == d ? void 0 : d.querySelector(".file-item-cancel");
                if (!(d && c && m && u && h))
                    throw new Error("File item template not found or invalid.");
                return d.id = i,
                c.setAttribute("src", l),
                m.textContent = s,
                u.textContent = o,
                h.addEventListener("click", ( () => {
                    t.abort(),
                    this.removeFileItem(i)
                }
                )),
                this.showProgress(d),
                d.style.display = "",
                this.uploadProgressContainer.appendChild(d),
                {
                    fileItemHtmlContainer: d,
                    fileId: i
                }
            }
            async uploadFile(e) {
                if (e.size > 5242880 || !w.some((t => e.name.endsWith(`.${t}`))))
                    return void this.showFileValidationMessages();
                this.uploadArea.style.display = "none";
                const t = new XMLHttpRequest;
                return new Promise((a => {
                    const {fileItemHtmlContainer: n, fileId: i} = this.addRowUploadFile(e, t)
                      , s = Date.now();
                    let r = Date.now()
                      , o = 10;
                    t.upload.addEventListener("progress", (e => {
                        if (!e.lengthComputable)
                            return;
                        const t = parseFloat((e.loaded / e.total * 100).toFixed(2))
                          , a = Date.now()
                          , i = a - s;
                        if (i < 2e3)
                            this.showProgress(n, t);
                        else {
                            if (a - r >= 2e3) {
                                r = a;
                                const e = 100 * i / t;
                                o = Math.ceil(e - i)
                            }
                            this.showProgress(n, t, o)
                        }
                    }
                    )),
                    t.addEventListener("loadend", ( () => {
                        if (4 === t.readyState && 200 === t.status) {
                            this.showProgress(n, 100);
                            const e = JSON.parse(t.response)
                              , s = this.filesMap.get(i);
                            s && this.filesMap.set(i, Object.assign(Object.assign({}, s), {
                                response: e
                            })),
                            a(e)
                        } else
                            this.removeFileItem(i),
                            a(null)
                    }
                    ));
                    const l = new FormData;
                    l.append("file", e, e.name),
                    t.open("PUT", "/education/application", !0),
                    t.send(l)
                }
                ))
            }
            goBack() {
                window.location.href = window.location.href.replace(/\/files\//, "/")
            }
            isBodyValid(e) {
                const t = ["email", "organization", "firstName", "lastName", "occupation", "institutionEmail", "country", "responsibilities", "institutionType", "institutionDomain", "institutionUrl", "source", "fileKey"]
                  , a = Object.keys(e);
                return a.length === t.length && a.every((a => t.includes(a) && e[a]))
            }
            async handleFormSubmit(e) {
                var t, a;
                e.preventDefault();
                if (!this.form.checkValidity())
                    return void this.form.reportValidity();
                const n = null === (a = null === (t = this.filesMap.values().next()) || void 0 === t ? void 0 : t.value) || void 0 === a ? void 0 : a.response
                  , i = this.urlPopulatedData
                  , {sourceOther: s} = i
                  , r = M(i, ["sourceOther"])
                  , o = Object.assign(Object.assign({}, r), {
                    source: s || this.urlPopulatedData.source,
                    fileKey: n
                });
                if (!this.isBodyValid(o))
                    return void this.goBack();
                const l = await fetch("/education/application", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(o)
                });
                201 !== l.status ? console.error(l) : window.location.href = "/education/application/success"
            }
        }
        class k extends v {
            constructor() {
                super(),
                this.form = (0,
                t.Ay)("education-application-form"),
                this.radioGroup = (0,
                t.Ay)("source"),
                this.sourceTextInputOther = (0,
                t.Ay)("sourceOther"),
                this.radioSource = this.radioGroup.querySelectorAll("input[type='radio']"),
                this.params = new URLSearchParams(window.location.search),
                this.setEventListeners()
            }
            setEventListeners() {
                document.addEventListener("DOMContentLoaded", ( () => {
                    const e = Object.fromEntries(this.params.entries());
                    this.repopulateForm(e)
                }
                )),
                this.radioSource.forEach((e => {
                    e.addEventListener("change", (t => this.handleRadioSourceChanges(e, t)))
                }
                )),
                this.form.addEventListener("submit", (e => this.handleFormSubmit(e)))
            }
            handleRadioSourceChanges(e, t) {
                this.sourceTextInputOther.value = "",
                "Other" === e.value ? (this.sourceTextInputOther.disabled = !1,
                this.sourceTextInputOther.focus()) : (this.setValid(t, this.sourceTextInputOther),
                this.sourceTextInputOther.disabled = !0)
            }
            async handleFormSubmit(e) {
                var t, a;
                const n = this.isFormInvalid(this.inputs);
                n && (null === (a = null === (t = n[0]) || void 0 === t ? void 0 : t.parentElement) || void 0 === a || a.scrollIntoView({
                    behavior: "smooth"
                }),
                e.preventDefault())
            }
            repopulateForm(e) {
                for (const t in e) {
                    const a = this.form.querySelector(`[name="${t}"], [id="${t}"]`);
                    if (a)
                        if (a.hasAttribute("data-radio-input")) {
                            const n = a.querySelector(`[name="${t}"][value="${e[t]}"]`);
                            n && (n.checked = !0)
                        } else
                            a.value = e[t]
                }
            }
        }
        var D = c(40963);
        class x {
            constructor() {
                this.notification = e => {
                    var a;
                    const n = null !== (a = (0,
                    t.Ay)("notification")) && void 0 !== a ? a : this.addNotif();
                    this.notiId && (clearTimeout(this.notiId),
                    n.innerHTML = "",
                    n.style.display = "none"),
                    requestAnimationFrame(( () => {
                        n.style.display = "block",
                        n.innerHTML = '<div class="message">' + e.detail + "</div>",
                        this.position(n)
                    }
                    )),
                    this.notiId = setTimeout((function() {
                        n.innerHTML = "",
                        n.style.top = "-999px",
                        n.style.left = "-999px",
                        n.style.display = "none"
                    }
                    ), 1500)
                }
                ,
                this.legend = e => {
                    var a;
                    const n = null !== (a = (0,
                    t.Ay)("notification")) && void 0 !== a ? a : this.addNotif();
                    if ("stop" === e.detail)
                        return n.innerHTML = "",
                        n.style.top = "-999px",
                        n.style.left = "-999px",
                        void (n.style.display = "none");
                    n.style.display = "block",
                    "" === n.innerHTML ? n.innerHTML = '<div id="legend" class="legend">' + e.detail + "</div>" : (0,
                    t.Ay)("legend") && ((0,
                    t.Ay)("legend").innerText = e.detail),
                    this.position(n)
                }
                ,
                this.loading = e => {
                    var a;
                    const n = null !== (a = (0,
                    t.Ay)("notification")) && void 0 !== a ? a : this.addNotif();
                    "stop" !== e.detail ? (this.notiId && (clearTimeout(this.notiId),
                    n.innerHTML = "",
                    n.style.display = "none"),
                    this.notiId = setTimeout(( () => {
                        this.keepLoading ? this.keepLoading = !1 : (n.innerHTML = "",
                        n.style.top = "-999px",
                        n.style.left = "-999px",
                        n.style.display = "none")
                    }
                    ), 400),
                    n.style.display = "block",
                    n.innerHTML = `\n            <div class="spinner">\n                <label class="working">${"start" === e.detail ? "Loading" : e.detail}</label>\n            </div>\n        `,
                    this.keepLoading = !0,
                    this.position(n)) : this.keepLoading ? this.keepLoading = !1 : (n.innerHTML = "",
                    n.style.display = "none")
                }
                ,
                this.addNotif = () => {
                    const e = (0,
                    t.T)("div", {
                        id: "notification"
                    });
                    return document.body.append(e),
                    e
                }
                ,
                this.position = e => {
                    let a = 0 !== document.getElementsByClassName("modal").length
                      , n = (0,
                    t.Ay)("splash") && "none" !== (0,
                    t.Ay)("splash").style.display
                      , i = 0 !== document.getElementsByClassName("canvas").length;
                    if (a || n || !i)
                        e.style.top = Math.round(document.documentElement.scrollTop + window.innerHeight / 2 - e.clientHeight / 2) + "px",
                        e.style.left = Math.round(document.body.clientWidth / 2 - e.clientWidth / 2) + "px";
                    else {
                        const t = document.querySelector(".canvas").getBoundingClientRect();
                        e.style.top = Math.round(t.height / 2 + t.top - e.clientHeight / 2) / 1.5 + "px",
                        e.style.left = Math.round(t.width / 2 + t.left - e.clientWidth / 2) + "px"
                    }
                }
                ,
                document.addEventListener("legend", (e => this.legend(e)), !0),
                document.addEventListener("loading", (e => this.loading(e)), !0),
                document.addEventListener("notification", (e => this.notification(e)), !0)
            }
        }
        var A = c(41915);
        class L {
            constructor(a, n=!0, i=!1) {
                this.setContent = (...e) => {
                    e[0]instanceof HTMLElement ? this.content.append(...e) : this.content.innerHTML += e[0],
                    this.position()
                }
                ,
                this.disableApply = () => {
                    const e = (0,
                    t.Ay)("dialog-apply" + this.mid);
                    e.classList.add("disabled"),
                    e.onclick = void 0
                }
                ,
                this.enableApply = () => {
                    const e = (0,
                    t.Ay)("dialog-apply" + this.mid);
                    e.classList.remove("disabled"),
                    e.onclick = () => this.apply()
                }
                ,
                this.disableCancel = () => {
                    const e = (0,
                    t.Ay)("dialog-cancel" + this.mid);
                    e.classList.add("disabled"),
                    e.onclick = void 0
                }
                ,
                this.enableCancel = () => {
                    const e = (0,
                    t.Ay)("dialog-cancel" + this.mid);
                    e.classList.remove("disabled"),
                    e.onclick = () => this.cancel()
                }
                ,
                this.position = () => {
                    this.dialog.style.left = Math.round((this.modal.offsetWidth - this.dialog.offsetWidth) / 2 + e.Ay.dialogPos.x) + "px",
                    this.dialog.style.top = Math.round((this.modal.offsetHeight - this.dialog.offsetHeight) / 2 + e.Ay.dialogPos.y) + "px";
                    let t = this.dialog.getBoundingClientRect()
                      , a = this.modal.getBoundingClientRect();
                    t.bottom > a.bottom && (this.dialog.style.top = a.height - t.height < 0 ? "0px" : a.height - t.height + "px"),
                    t.right > a.right && (this.dialog.style.left = a.width - t.width < 0 ? "0px" : a.width - t.width + "px"),
                    this.dialog.offsetTop < 0 && (this.dialog.style.top = "0px"),
                    this.dialog.offsetLeft < 0 && (this.dialog.style.left = "0px")
                }
                ,
                this.dragStart = e => {
                    this.p = e,
                    this.d = new A.A(this.dialog.offsetLeft,this.dialog.offsetTop)
                }
                ,
                this.dragMove = e => {
                    this.dialog.style.left = Math.round(this.d.x + (e.x - this.p.x)) + "px",
                    this.dialog.style.top = Math.round(this.d.y + (e.y - this.p.y)) + "px"
                }
                ,
                this.dragEnd = t => {
                    e.Ay.dialogPos.x = Math.round(this.dialog.offsetLeft - (this.modal.offsetWidth - this.dialog.offsetWidth) / 2),
                    e.Ay.dialogPos.y = Math.round(this.dialog.offsetTop - (this.modal.offsetHeight - this.dialog.offsetHeight) / 2)
                }
                ,
                this.resizeStart = e => {
                    this.d = new A.A(this.dialog.clientHeight,e.y)
                }
                ,
                this.resizeMove = e => {
                    const t = this.d.x + (e.y - this.d.y);
                    this.dialog.style.height = (t < 320 ? 320 : t) + "px"
                }
                ,
                this.keyDown = e => {
                    27 != e.keyCode || "none" === (0,
                    t.Ay)("dialog-cancel" + this.mid).style.display ? 13 != e.keyCode || "none" === (0,
                    t.Ay)("dialog-apply" + this.mid).style.display || e.shiftKey || (0,
                    t.Ay)("dialog-apply" + this.mid).classList.contains("disabled") || this.apply() : this.cancel()
                }
                ,
                this.condition = () => {
                    this.cleanUp()
                }
                ,
                this.cancel = () => {
                    this.cleanUp()
                }
                ,
                this.apply = () => {
                    this.cleanUp()
                }
                ,
                this.mid = y.r0(),
                this.modal = (0,
                t.T)("div", {
                    id: "modal-" + this.mid,
                    className: "modal"
                }),
                n && this.modal.classList.add("dim"),
                document.body.appendChild(this.modal),
                this.dialog = (0,
                t.T)("div", {
                    className: "dialog"
                }),
                this.modal.appendChild(this.dialog),
                this.content = (0,
                t.T)("div", {
                    className: "content"
                });
                const s = (0,
                t.T)("div", {
                    id: "dialog-title" + this.mid,
                    className: "title"
                }, a);
                if (document.body.clientWidth >= 650 && (0,
                t.Bb)(s, this.dragStart, this.dragMove, this.dragEnd),
                this.dialog.append(s, (0,
                t.T)("img", {
                    id: "dialog-close" + this.mid,
                    className: "close ic",
                    src: "/img/icon/close.svg",
                    onclick: () => this.cancel()
                }), (0,
                t.T)("div", {
                    id: "dialog-splitter" + this.mid,
                    className: "splitter"
                }), this.content, (0,
                t.T)("div", {
                    className: "buttons",
                    id: "dialog-buttons" + this.mid
                }, (0,
                t.T)("a", {
                    id: "dialog-cancel" + this.mid,
                    className: "button negative",
                    onclick: () => this.cancel()
                }, (0,
                d.A)("cancel")), (0,
                t.T)("a", {
                    id: "dialog-apply" + this.mid,
                    className: "button positive",
                    onclick: () => this.apply()
                }, (0,
                d.A)("apply")))),
                i) {
                    const e = (0,
                    t.T)("img", {
                        id: "resize-" + this.mid,
                        src: "/img/icon/three-dot.svg",
                        className: "resize ic"
                    });
                    (0,
                    t.Bb)(e, this.resizeStart, this.resizeMove),
                    this.dialog.append(e)
                }
                document.addEventListener("keydown", this.keyDown, !1)
            }
            cleanUp() {
                document.removeEventListener("keydown", this.keyDown, !1),
                this.dialog.remove(),
                this.dialog = null,
                this.modal.remove(),
                this.modal = null
            }
        }
        var S = c(6395);
        class N extends L {
            constructor(e={}) {
                super((0,
                d.A)("dialogLoadTitle")),
                this.load = async e => {
                    (0,
                    s.A)("load-url");
                    const a = (0,
                    t.Ay)("load-message");
                    try {
                        this.cancel = () => {
                            throw N.CANCEL
                        }
                        ;
                        const n = this.settings.title || (0,
                        d.A)("image")
                          , i = this.settings.referrer || (0,
                        d.A)("source");
                        a.innerText = (0,
                        d.A)("dialogLoadLoadingFrom", n.toLowerCase(), i.toLowerCase());
                        const s = await (0,
                        S.yP)(e, (e => {
                            const a = (0,
                            t.Ay)("load-progress");
                            -1 == e ? a.removeAttribute("value") : a.value = e
                        }
                        ))
                          , r = new File([s],this.settings.title || e.substring(e.lastIndexOf("/") + 1),{
                            type: s.type
                        });
                        return this.cleanUp(),
                        r
                    } catch (n) {
                        if (n === N.CANCEL)
                            return void this.cleanUp();
                        (0,
                        t.Ay)("load-progress") && (a.innerText = (0,
                        d.A)("dialogLoadError"),
                        (0,
                        t.Ay)("load-progress").style.display = "none",
                        this.cancel = () => {
                            this.cleanUp()
                        }
                        )
                    }
                }
                ,
                this.settings = e,
                this.setContent('\n            <p id="load-message"></p><br />\n\n            <progress id="load-progress" value="0" max="100" style="width: 100%;"></progress>\n            <br><br>\n        '),
                (0,
                t.Ay)("dialog-apply" + this.mid).style.display = "none";
                (0,
                t.Ay)("load-message").innerText = (0,
                d.A)("dialogLoadPrepare")
            }
        }
        N.CANCEL = new Error("CANCEL");
        const P = N;
        var Y, E = c(78508);
        class C {
            constructor(e, t, a) {
                this.h = e,
                this.s = t,
                this.b = a
            }
            toColor() {
                let e, t, a, n, i, s, r, o;
                if (0 == this.b)
                    e = 0,
                    t = 0,
                    a = 0;
                else if (0 == this.s)
                    e = t = a = this.b;
                else
                    switch (n = this.h / 60,
                    i = n - Math.floor(n),
                    s = this.b * (1 - this.s),
                    o = this.b * (1 - this.s * i),
                    r = this.b * (1 - this.s * (1 - i)),
                    Math.floor(n)) {
                    case 0:
                    case 6:
                        e = this.b,
                        t = r,
                        a = s;
                        break;
                    case 1:
                        e = o,
                        t = this.b,
                        a = s;
                        break;
                    case 2:
                        e = s,
                        t = this.b,
                        a = r;
                        break;
                    case 3:
                        e = s,
                        t = o,
                        a = this.b;
                        break;
                    case 4:
                        e = r,
                        t = s,
                        a = this.b;
                        break;
                    case 5:
                        e = this.b,
                        t = s,
                        a = o
                    }
                return new R(Math.round(255 * e),Math.round(255 * t),Math.round(255 * a))
            }
            toHEX() {
                const e = this.toColor()
                  , t = e => {
                    const t = e.toString(16);
                    return 1 === t.length ? "0" + t : t
                }
                ;
                return `#${t(e.r)}${t(e.g)}${t(e.b)}`
            }
        }
        class R {
            constructor(e=255, t=255, a=255, n=255) {
                this.isEqual = e => !!e && (this.r === e.r && this.g === e.g && this.b === e.b && this.a === e.a),
                this.toHEX = () => {
                    const e = e => {
                        const t = e.toString(16);
                        return 1 === t.length ? "0" + t : t
                    }
                    ;
                    return `#${e(this.r)}${e(this.g)}${e(this.b)}`
                }
                ,
                this.toHEXA = () => {
                    const e = e => {
                        const t = e.toString(16);
                        return 1 === t.length ? "0" + t : t
                    }
                    ;
                    return `#${e(this.r)}${e(this.g)}${e(this.b)}${e(this.a)}`
                }
                ,
                this.toRGBA = (e=this.a) => `rgba(${this.r},${this.g},${this.b},${e / 255})`,
                this.toHSB = () => {
                    let e, t, a, n = Math.min(this.r, this.g, this.b), i = Math.max(this.r, this.g, this.b);
                    a = i / 255;
                    let s = i - n;
                    return s ? (t = s / i,
                    e = this.r == i ? (this.g - this.b) / s * 60 : this.g == i ? 60 * (2 + (this.b - this.r) / s) : 60 * (4 + (this.r - this.g) / s),
                    e > 360 ? e -= 360 : e < 0 && (e += 360)) : e = t = 0,
                    new C(e,t,a)
                }
                ,
                this.r = y.qE(e, 0, 255),
                this.g = y.qE(t, 0, 255),
                this.b = y.qE(a, 0, 255),
                this.a = y.qE(n, 0, 255)
            }
            rotateHue(e) {
                let t, a, n, i = Math.min(this.r, this.g, this.b), s = Math.max(this.r, this.g, this.b);
                t = s / 255;
                var r = s - i;
                return r ? (a = r / s,
                n = this.r == s ? (this.g - this.b) / r * 60 : this.g == s ? 60 * (2 + (this.b - this.r) / r) : 60 * (4 + (this.r - this.g) / r)) : n = a = 0,
                n += e,
                n > 360 ? n -= 360 : n < 0 && (n += 360),
                360 === n && (n = 0),
                R.fromHSB(n, a, t)
            }
            static fromRGB(e) {
                if (/^#[0-9A-F]{6}$/i.test(e))
                    return R.fromHEX(e);
                let t = e.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
                return !t || t.length < 4 ? new R : new R(Number(t[1]),Number(t[2]),Number(t[3]))
            }
            static fromHEXA(e) {
                let t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
                return !t || t.length < 4 ? new R : new R(parseInt(t[1], 16),parseInt(t[2], 16),parseInt(t[3], 16),parseInt(t[4], 16))
            }
            static fromHEX(e, t=255) {
                let a = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
                return !a || a.length < 3 ? new R : new R(parseInt(a[1], 16),parseInt(a[2], 16),parseInt(a[3], 16),t)
            }
            static fromHSB(e, t, a) {
                let n, i, s, r, o, l, d, c;
                if (0 == a)
                    n = 0,
                    i = 0,
                    s = 0;
                else if (0 == t)
                    n = i = s = a;
                else
                    switch (r = e / 60,
                    o = r - Math.floor(r),
                    l = a * (1 - t),
                    c = a * (1 - t * o),
                    d = a * (1 - t * (1 - o)),
                    Math.floor(r)) {
                    case 0:
                    case 6:
                        n = a,
                        i = d,
                        s = l;
                        break;
                    case 1:
                        n = c,
                        i = a,
                        s = l;
                        break;
                    case 2:
                        n = l,
                        i = a,
                        s = d;
                        break;
                    case 3:
                        n = l,
                        i = c,
                        s = a;
                        break;
                    case 4:
                        n = d,
                        i = l,
                        s = a;
                        break;
                    case 5:
                        n = a,
                        i = l,
                        s = c
                    }
                return new R(Math.round(255 * n),Math.round(255 * i),Math.round(255 * s))
            }
            clone() {
                return new R(this.r,this.g,this.b,this.a)
            }
        }
        class I {
            constructor(e, t, a) {
                this.id = e,
                this.color = t,
                this.position = a
            }
        }
        class O {
            constructor() {
                this.direction = 0,
                this.type = "linear",
                this.addStop = (e, t) => {
                    t = y.qE(t, 0, 1);
                    const a = new I(y.r0(),e,t);
                    return this.stops.push(a),
                    this.sort(),
                    a
                }
                ,
                this.removeStop = e => {
                    const t = this.stops.findIndex((t => t.id === e));
                    return -1 !== t && this.stops.splice(t, 1),
                    this.sort(),
                    this.stops[0].id
                }
                ,
                this.getStop = e => {
                    let t;
                    return this.stops.forEach((a => {
                        a.id === e && (t = a)
                    }
                    )),
                    t
                }
                ,
                this.sort = () => {
                    this.stops.sort(( (e, t) => e.position - t.position))
                }
                ,
                this.toCSS = () => {
                    let e = "linear-gradient(to right";
                    for (let t = 0; t < this.stops.length; ++t)
                        e += ", " + this.stops[t].color.toRGBA() + " " + (100 * this.stops[t].position).toFixed(0) + "%";
                    return e += ")",
                    e
                }
                ,
                this.toJSON = () => JSON.stringify(this.toIGradient()),
                this.toIGradient = () => {
                    let e = new Array;
                    return this.stops.forEach((t => {
                        e.push({
                            id: t.id,
                            color: t.color.toHEXA(),
                            position: t.position
                        })
                    }
                    )),
                    {
                        type: this.type,
                        direction: this.direction,
                        stops: e
                    }
                }
                ,
                this.createCanvasGradient = (e, t=0, a=0) => {
                    let n;
                    if ("linear" === this.type) {
                        const i = (this.direction - 90) * Math.PI / 180
                          , s = e.canvas.width
                          , r = e.canvas.height;
                        if (s < 1 || r < 1)
                            return;
                        const o = Math.sqrt(s * s + r * r) / 2
                          , l = Math.asin(r / 2 / o);
                        let d = (i % (2 * Math.PI) + 4 * Math.PI) % (2 * Math.PI);
                        d > Math.PI && (d -= Math.PI),
                        d > Math.PI / 2 && d <= Math.PI && (d = Math.PI / 2 - (d - Math.PI / 2));
                        let c = Math.PI / 2 - l - Math.abs(d)
                          , m = Math.abs(l - Math.abs(d))
                          , u = Math.max(Math.cos(m) * s, Math.cos(c) * r) / 2
                          , h = Math.cos(i) * u
                          , p = Math.sin(i) * u;
                        n = e.createLinearGradient(s / 2 + h + t, r / 2 + p + a, s / 2 - h + t, r / 2 - p + a)
                    } else {
                        let i = e.canvas.width / 2
                          , s = e.canvas.height / 2
                          , r = Math.max(e.canvas.width, e.canvas.height) / 2;
                        n = e.createRadialGradient(i + t, s + a, 0, i + t, s + a, r)
                    }
                    return this.addStopToCanvasGradient(n),
                    n
                }
                ,
                this.addStopToCanvasGradient = (e, t=!1) => {
                    for (let a = 0; a < this.stops.length; ++a)
                        e.addColorStop(this.stops[a].position, this.stops[a].color.toRGBA(t ? 255 - this.stops[a].color.a : this.stops[a].color.a))
                }
                ,
                this.stops = new Array
            }
            static fromJSON(e) {
                let t = JSON.parse(e);
                return O.fromIGradient(t)
            }
            static fromIGradient(e) {
                const t = new O;
                if (t.type = e.type && "radial" === e.type ? "radial" : "linear",
                t.direction = e.direction,
                e.stops)
                    for (let a = 0; a < e.stops.length; ++a) {
                        let n = "string" == typeof e.stops[a].color ? R.fromHEXA(e.stops[a].color) : new R(e.stops[a].color.r,e.stops[a].color.g,e.stops[a].color.b,e.stops[a].color.a);
                        t.addStop(n, e.stops[a].position)
                    }
                return t
            }
            static fromPreset(e) {
                const t = new O;
                for (let a = 0; a < e.colors.length; ++a)
                    t.addStop(R.fromHEXA(e.colors[a]), e.positions[a]);
                return t.direction = e.direction + 180,
                t.type = e.type,
                t
            }
            static fromColors(e, t) {
                const a = new O;
                return a.addStop(e, 0),
                a.addStop(t, 1),
                a
            }
        }
        class H {
            constructor(e, t=1, a=0) {
                this.svg = e,
                this.scale = t,
                this.direction = a,
                this.createCanvasPattern = e => {
                    let t;
                    if (1 !== this.scale) {
                        let a = y.Nw(Math.round(this.image.width * this.scale), Math.round(this.image.height * this.scale));
                        a.getContext("2d").drawImage(this.image, 0, 0, a.width, a.height),
                        t = e.createPattern(a, "repeat")
                    } else
                        t = e.createPattern(this.image, "repeat");
                    return 0 !== this.direction && t.setTransform((new DOMMatrix).rotate(this.direction)),
                    t
                }
                ,
                this.toCSS = () => "url(data:image/svg+xml;base64," + btoa(this.svg) + ")",
                this.toJSON = () => JSON.stringify(this.toIPattern())
            }
            toIPattern(e=this.svg) {
                return {
                    svg: e,
                    scale: this.scale,
                    direction: this.direction
                }
            }
        }
        Y = H,
        H.fromIPattern = async e => {
            let t = new Y(e.svg,e.scale,e.direction)
              , a = new Blob([t.svg],{
                type: "image/svg+xml"
            });
            return t.image = await (0,
            S.Ep)(a),
            t
        }
        ,
        H.fromJSON = async e => {
            let t = JSON.parse(e);
            return Y.fromIPattern(t)
        }
        ;
        const F = H;
        var j;
        class q {
            constructor(e) {
                this.value = e,
                this.getType = () => this.value instanceof R ? "color" : this.value instanceof O ? "gradient" : this.value instanceof F ? "pattern" : void 0,
                this.getStringValue = () => this.value instanceof R ? this.value.toHEX() : this.value instanceof O || this.value instanceof F ? this.value.toJSON() : void 0,
                this.getCssValue = () => this.value instanceof R ? this.value.toHEX() : this.value instanceof O || this.value instanceof F ? this.value.toCSS() : void 0,
                this.addToCanvasFillStyle = (e, t=0, a=0) => {
                    this.value instanceof R ? e.fillStyle = this.value.toHEX() : this.value instanceof O ? e.fillStyle = this.value.createCanvasGradient(e, t, a) : this.value instanceof F && (e.fillStyle = this.value.createCanvasPattern(e))
                }
                ,
                this.addToCanvasStrokeStyle = (e, t=0, a=0) => {
                    this.value instanceof R ? e.strokeStyle = this.value.toHEX() : this.value instanceof O ? e.strokeStyle = this.value.createCanvasGradient(e, t, a) : this.value instanceof F && (e.strokeStyle = this.value.createCanvasPattern(e))
                }
            }
        }
        j = q,
        q.fromString = async (e, t) => {
            let a;
            return "color" === e && /^#[0-9A-F]{6}$/i.test(t) ? a = new j(R.fromHEX(t)) : "gradient" === e ? a = new j(O.fromJSON(t)) : "pattern" === e && (a = new j(await F.fromJSON(t))),
            a
        }
        ;
        const U = q;
        var W = c(53900);
        class B {
            constructor(e) {
                this.settings = {
                    opacity: 1,
                    blendmode: "",
                    locked: !1,
                    visible: !0,
                    name: "",
                    link: ""
                },
                this.hasLink = () => this.settings.link && "" !== this.settings.link,
                this.rotate = e => {
                    this.canvas && (this.canvas = y.SE(this.canvas, e ? -90 : 90),
                    this.mask && (this.mask = y.SE(this.mask, e ? -90 : 90)),
                    this.rect = this.rect.flipWidthAndHeight())
                }
                ,
                this.flip = e => {
                    this.canvas && (this.canvas = y.yz(this.canvas, e),
                    this.mask && (this.mask = y.yz(this.mask, e)))
                }
                ,
                this.setWidth = (e, t) => {
                    this.rect && (e < 1 && (e = 1),
                    this.rect.width = e,
                    0 !== t && (this.rect.height = Math.round(this.rect.width / t),
                    this.rect.height < 1 && (this.rect.height = 1)))
                }
                ,
                this.setHeight = (e, t) => {
                    this.rect && (e < 1 && (e = 1),
                    this.rect.height = e,
                    0 !== t && (this.rect.width = Math.round(this.rect.height * t),
                    this.rect.width < 1 && (this.rect.width = 1)))
                }
                ,
                this.position = (e, t) => {
                    this.rect && (void 0 !== e && (this.rect.x = e),
                    void 0 !== t && (this.rect.y = t))
                }
                ,
                this.scale = (e, t, a) => {
                    this.rect && (this.rect.x = Math.round(this.rect.x * e),
                    this.rect.y = Math.round(this.rect.y * t),
                    this.rect.width = Math.round(this.rect.width * e),
                    this.rect.height = Math.round(this.rect.height * t),
                    this.rect.width < 0 && (this.rect.width = 1),
                    this.rect.height < 0 && (this.rect.height = 1))
                }
                ,
                this.setRect = e => {
                    this.bect ? this.bect = e : this.rect = e
                }
                ,
                this.getRect = () => this.bect ? this.bect : this.rect,
                this.getCanvas = () => this.transient ? this.transient : this.baked ? this.baked : this.canvas,
                this.setAltCanvas = () => {
                    this.transient = y.oM(this.canvas)
                }
                ,
                this.replaceCanvas = e => {
                    this.canvas ? this.canvas.width === e.width && this.canvas.height === e.height || (this.canvas.width = e.width,
                    this.canvas.height = e.height) : this.canvas = y.Nw(this.rect.width, this.rect.height);
                    const t = this.canvas.getContext("2d");
                    t.save(),
                    t.imageSmoothingEnabled = !1,
                    t.globalCompositeOperation = "copy",
                    t.drawImage(e, 0, 0),
                    t.restore()
                }
                ,
                this.extendCanvas = e => {}
                ,
                this.switchCanvas = (e, t) => {}
                ,
                this.render = (e=!1) => {}
                ,
                this.calculate = (e, t, a) => {}
                ,
                this.rasterize = () => {}
                ,
                this.clone = (e=!1) => {}
                ,
                this.id = y.Os(),
                this.type = e
            }
        }
        B.TYPE_GROUP = "group",
        B.TYPE_SCRATCH = "scratch",
        B.TYPE_ELEMENT = "element",
        B.TYPE_IMAGE = "image",
        B.TYPE_SHAPE = "shape",
        B.TYPE_FRAME = "frame",
        B.TYPE_TEXT = "text";
        const z = B;
        var $;
        async function G() {
            try {
                return await J.open()
            } catch (e) {
                return Promise.resolve(new Z)
            }
        }
        class V {
            constructor(e) {
                this.next = () => this.queue.pop(),
                this.queue = [new y.wc];
                let t = this.queue[0];
                e.onsuccess = () => {
                    const a = e.result;
                    a ? (t.resolve({
                        done: !1,
                        value: a.value
                    }),
                    t = new y.wc,
                    this.queue.unshift(t),
                    a.continue()) : t.resolve({
                        done: !0,
                        value: void 0
                    })
                }
                ,
                e.onerror = () => {
                    t.reject(e.error)
                }
            }
            [Symbol.asyncIterator]() {
                return this
            }
        }
        class K {
            constructor(e) {
                this.inner = e
            }
            static bound(e, t, a=!1, n=!1) {
                return new K(IDBKeyRange.bound(e, t, a, n))
            }
            static lowerBound(e, t) {
                return new K(IDBKeyRange.lowerBound(e, t))
            }
            static upperBound(e, t) {
                return new K(IDBKeyRange.upperBound(e, t))
            }
            static only(e) {
                return new K(IDBKeyRange.only(e))
            }
            static unwrap(e) {
                return e instanceof K ? e.inner : e
            }
        }
        class J {
            constructor(e) {
                this.underlying = e
            }
            static availiable() {
                return !navigator.userAgent.includes("Edge") && !!window.indexedDB
            }
            transaction(e, ...t) {
                const a = this.underlying.transaction(t, e);
                return t.map((e => new X(a.objectStore(e))))
            }
        }
        $ = J,
        J.open = async () => $.availiable() ? new Promise(( (e, t) => {
            const a = window.indexedDB.open("pixlr", 2);
            a.onupgradeneeded = e => {
                const t = a.result;
                0 === e.oldVersion ? (t.createObjectStore("blobs"),
                t.createObjectStore("fonts"),
                t.createObjectStore("document-meta", {
                    keyPath: "id"
                }),
                t.createObjectStore("document-selection"),
                t.createObjectStore("document-thumbnail"),
                t.createObjectStore("layer-meta", {
                    keyPath: "id"
                }).createIndex("document", "document"),
                t.createObjectStore("layer-mask"),
                t.createObjectStore("layer-bitmap")) : t.deleteObjectStore("history")
            }
            ,
            a.onerror = e => t(a.error),
            a.onsuccess = () => e(new $(a.result))
        }
        )) : Promise.reject(new Error("Browser does not support indexedDB"));
        class X {
            constructor(e) {
                this.underlying = e
            }
            get(e) {
                return new Promise(( (t, a) => {
                    const n = this.underlying.get(e);
                    n.onsuccess = () => t(n.result),
                    n.onerror = () => a(n.error)
                }
                ))
            }
            getAll(e, t) {
                return new Promise(( (a, n) => {
                    const i = this.underlying.getAll(K.unwrap(e), t);
                    i.onsuccess = () => a(i.result),
                    i.onerror = () => n(i.error)
                }
                ))
            }
            iterate(e, t) {
                const a = this.underlying.openCursor(K.unwrap(e), t);
                return new V(a)
            }
            index(e) {
                const t = this.underlying.index(e);
                return new Q(t)
            }
            cursor(e, t, a) {
                return new Promise(( (n, i) => {
                    const s = this.underlying.openCursor(K.unwrap(t), a);
                    s.onsuccess = () => {
                        const t = s.result;
                        if (t) {
                            const a = e(t.value, t);
                            "number" == typeof a ? t.advance(a) : !1 !== a ? t.continue() : n()
                        } else
                            n()
                    }
                    ,
                    s.onerror = () => i(s.error)
                }
                ))
            }
            put(e, t) {
                return new Promise(( (a, n) => {
                    const i = this.underlying.put(e, t);
                    i.onsuccess = () => {
                        a()
                    }
                    ,
                    i.onerror = () => {
                        n(i.error)
                    }
                }
                ))
            }
            add(e, t) {
                return new Promise(( (a, n) => {
                    const i = this.underlying.add(e, t);
                    i.onsuccess = () => {
                        a()
                    }
                    ,
                    i.onerror = () => {
                        n(i.error)
                    }
                }
                ))
            }
            clear() {
                return new Promise(( (e, t) => {
                    let a = this.underlying.clear();
                    a.onsuccess = () => e(),
                    a.onerror = () => t(a.error)
                }
                ))
            }
            count(e) {
                return new Promise(( (t, a) => {
                    let n;
                    n = void 0 === e ? this.underlying.count() : this.underlying.count(K.unwrap(e)),
                    n.onsuccess = () => t(n.result),
                    n.onerror = () => a(n.error)
                }
                ))
            }
            delete(e) {
                return new Promise(( (t, a) => {
                    const n = this.underlying.delete(K.unwrap(e));
                    n.onsuccess = () => t(),
                    n.onerror = () => a(n.error)
                }
                ))
            }
        }
        class Q {
            constructor(e) {
                this.underlying = e,
                this.name = e.name,
                this.keyPath = e.keyPath,
                this.multiEntry = e.multiEntry,
                this.unique = e.unique
            }
            get(e) {
                return new Promise(( (t, a) => {
                    const n = this.underlying.get(e);
                    n.onsuccess = () => t(n.result),
                    n.onerror = () => a(n.error)
                }
                ))
            }
            getAll(e, t) {
                return new Promise(( (a, n) => {
                    const i = this.underlying.getAll(K.unwrap(e), t);
                    i.onsuccess = () => a(i.result),
                    i.onerror = () => n(i.error)
                }
                ))
            }
            count(e) {
                return new Promise(( (t, a) => {
                    let n;
                    n = void 0 === e ? this.underlying.count() : this.underlying.count(K.unwrap(e)),
                    n.onsuccess = () => t(n.result),
                    n.onerror = () => a(n.error)
                }
                ))
            }
            cursor(e, t, a) {
                return new Promise(( (n, i) => {
                    const s = this.underlying.openCursor(K.unwrap(t), a);
                    s.onsuccess = () => {
                        const t = s.result;
                        t ? (e(t.value, t),
                        t.continue()) : n()
                    }
                    ,
                    s.onerror = () => i(s.error)
                }
                ))
            }
            iterate(e, t) {
                const a = this.underlying.openCursor(K.unwrap(e), t);
                return new V(a)
            }
            getAllKeys(e, t) {
                return new Promise(( (a, n) => {
                    const i = this.underlying.getAllKeys(K.unwrap(e), t);
                    i.onsuccess = () => a(i.result),
                    i.onerror = () => n(i.error)
                }
                ))
            }
        }
        class Z {
            transaction(e, ...t) {
                return t.map((e => new ee(e)))
            }
        }
        class ee {
            constructor(e) {
                this.name = e
            }
            index(e) {
                return this
            }
            put(e, t) {}
            add(e, t) {}
            clear() {}
            delete(e) {}
            async get(e) {}
            async getAll(e, t) {
                return []
            }
            async count(e) {
                return 0
            }
            async cursor(e, t, a) {}
            iterate(e, t) {
                return {
                    next: () => Promise.resolve({
                        done: !0,
                        value: void 0
                    }),
                    [Symbol.asyncIterator]() {
                        return this
                    }
                }
            }
        }
        class te {
            constructor(e, t, a=!0) {
                this.lineSpace = 0,
                this.letterSpace = 0,
                this.bold = !1,
                this.italic = !1,
                this.uppercase = !1,
                this.underline = !1,
                this.align = "center",
                this.curve = !1,
                this.curveAmount = 0,
                this.curveType = "arc",
                this.curveFlip = !1,
                this.curveSpread = !1,
                this.warp = !1,
                this.warpEdgeSize = 0,
                this.warpCenterSize = 0,
                this.warpHorizontalOffset = 0,
                this.warpVerticalOffset = 0,
                this.warpType = te.WARP_CIRCULAR,
                this.warpMode = te.WARP_UPPER,
                this.background = !1,
                this.backgroundOffset = 0,
                this.backgroundPunch = !1,
                this.backgroundColor = "#555555",
                this.backgroundType = te.BACKGROUND_FULL,
                this.outline = !1,
                this.outlinePunch = !1,
                this.outlineColor = "#555555",
                this.outlineSize = .3,
                this.outlineDistance = 0,
                this.outlineDirection = 305,
                this.shadow = !1,
                this.shadowBlur = .3,
                this.shadowColor = "#000000",
                this.shadowAlpha = .6,
                this.shadowDistance = .3,
                this.shadowDirection = 160,
                this.font = e,
                this.size = t,
                a && this.measureText()
            }
            setSize(e) {
                this.size = e,
                this.measureText()
            }
            setFont(e) {
                this.font = e,
                this.measureText()
            }
            measureText() {
                if (this.size < 1)
                    return;
                var e = document.createElement("canvas");
                e.width = 20 * this.size,
                e.height = Math.round(2 * this.size);
                const t = e.getContext("2d", {
                    willReadFrequently: !0
                });
                t.textBaseline = "top",
                t.fillStyle = "white",
                t.font = this.getCssFont(),
                t.fillText("SfTgMjkHpqLRnliIFIABCDEFGIJKNOPQSUVXYZabcdeghmnorstuvxyz", 0, Math.round(.5 * this.size));
                const a = y.zR(t.getImageData(0, 0, e.width, e.height));
                if (a) {
                    this.ascent = a.y - Math.round(.5 * this.size),
                    this.height = a.height,
                    t.clearRect(0, 0, e.width, e.height),
                    t.fillText("SMOP", 0, Math.round(.5 * this.size));
                    const n = y.zR(t.getImageData(0, 0, e.width, e.height));
                    this.baseline = n.height
                }
                this.height <= 0 && this.measureTextFallback(),
                this.padding = Math.round(.2 * this.height)
            }
            measureTextFallback() {
                var e = document.createElement("span");
                e.innerHTML = "ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz",
                e.style.fontFamily = this.font,
                e.style.fontSize = this.size + "px";
                var a = document.createElement("div");
                a.style.display = "inline-block",
                a.style.width = "1px",
                a.style.height = "0px";
                var n = document.createElement("div");
                n.appendChild(e),
                n.appendChild(a),
                (0,
                t.Ay)("workspace").appendChild(n);
                try {
                    a.style.verticalAlign = "baseline",
                    this.ascent = a.offsetTop - e.offsetTop + 1,
                    a.style.verticalAlign = "bottom",
                    this.height = a.offsetTop - e.offsetTop + 1,
                    this.baseline = this.height
                } finally {
                    n.remove()
                }
            }
            getLineSpacing() {
                var e;
                return Math.ceil(this.height * Number(null !== (e = this.lineSpace) && void 0 !== e ? e : 0))
            }
            getLetterSpacing() {
                var e;
                return Math.ceil(this.height / 2 * Number(null !== (e = this.letterSpace) && void 0 !== e ? e : 0))
            }
            getCssFont(e=this.size) {
                return (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + e + "px " + this.font
            }
            clone() {
                const e = Object.create(te.prototype);
                return Object.assign(e, this)
            }
            equalTo(e) {
                return !!e && (this.font === e.font && this.size === e.size && this.lineSpace === e.lineSpace && this.letterSpace === e.letterSpace && this.bold === e.bold && this.italic === e.italic && this.underline === e.underline && this.uppercase === e.uppercase && this.fillType === e.fillType && this.fillValue === e.fillValue && this.align === e.align && this.curve === e.curve && this.curveAmount === e.curveAmount && this.curveType === e.curveType && this.curveSpread === e.curveSpread && this.curveFlip === e.curveFlip && this.warp === e.curve && this.warpMode === e.warpMode && this.warpType === e.warpType && this.warpEdgeSize === e.warpEdgeSize && this.warpCenterSize === e.warpCenterSize && this.warpHorizontalOffset === e.warpHorizontalOffset && this.warpVerticalOffset === e.warpVerticalOffset && this.background === e.background && this.backgroundPunch === e.backgroundPunch && this.backgroundColor === e.backgroundColor && this.backgroundType === e.backgroundType && this.outline === e.outline && this.outlinePunch === e.outlinePunch && this.outlineSize === e.outlineSize && this.outlineColor === e.outlineColor && this.outlineDistance === e.outlineDistance && this.outlineDirection === e.outlineDirection && this.shadow === e.shadow && this.shadowBlur === e.shadowBlur && this.shadowColor === e.shadowColor && this.shadowAlpha === e.shadowAlpha && this.shadowDistance === e.shadowDistance && this.shadowDirection === e.shadowDirection)
            }
        }
        te.BACKGROUND_FULL = "full",
        te.BACKGROUND_LINE = "line",
        te.BACKGROUND_WORD = "word",
        te.WARP_CIRCULAR = "circular",
        te.WARP_ANGULAR = "angular",
        te.WARP_UPPER = "upper",
        te.WARP_MIDDLE = "middle",
        te.WARP_LOWER = "lower";
        const ae = te;
        class ne {
            constructor(e, t, a=!1, n="woff", i, s) {
                this.name = e,
                this.short = t,
                this.premium = a,
                this.local = !!i,
                this.thumb = s,
                this.font = i,
                this.type = n
            }
            static async save(e) {
                const t = await G()
                  , [a] = t.transaction("readwrite", "fonts");
                await a.put(e, e.name)
            }
            static async delete(e) {
                const t = await G()
                  , [a] = t.transaction("readwrite", "fonts");
                await a.delete(e.name)
            }
        }
        class ie {
            static async loadFontFromTemplate(e, t, a) {
                var n, i;
                let s = null === (n = a.split(".")[0]) || void 0 === n ? void 0 : n.toLowerCase()
                  , r = null === (i = a.split(".")[1]) || void 0 === i ? void 0 : i.toLowerCase();
                return await ie.createLocalFontDesc(e, t, s, r)
            }
            static async loadFontFromUpload(e) {
                var t, a;
                let n = null === (t = e.name.split(".")[0]) || void 0 === t ? void 0 : t.substring(0, 50).replace(/[~`!@#$%^&*()+={}\[\];:\'\"<>.,\/\\\?]/g, "").replace(/-/g, " ").replace(/   /g, " ").replace(/  /g, " ")
                  , i = null === (a = e.name.split(".")[1]) || void 0 === a ? void 0 : a.toLowerCase()
                  , s = n.substring(0, 20).replace(" ", "").toLowerCase();
                if (n = (null == n ? void 0 : n.charAt(0).toUpperCase()) + (null == n ? void 0 : n.slice(1)),
                ie.fontList.find((e => e.name === n)))
                    return void document.dispatchEvent(new CustomEvent("notification",{
                        detail: "Font already exists!"
                    }));
                let r = i;
                switch (i) {
                case "otf":
                    r = "opentype";
                    break;
                case "ttf":
                    r = "truetype"
                }
                const o = new Blob([e],{
                    type: "font/" + r
                });
                let l = await ie.createLocalFontDesc(o, n, s, i);
                return l && document.dispatchEvent(new CustomEvent("notification",{
                    detail: "Font was added!"
                })),
                l
            }
            static async createLocalFontDesc(e, t, a, n) {
                const i = new ne(t,a,!1,n,e);
                try {
                    await ie.addToDOM(i)
                } catch (d) {
                    return console.log(d),
                    void document.dispatchEvent(new CustomEvent("notification",{
                        detail: "Failed to load font!"
                    }))
                }
                let s = new ae(t,56);
                s.height > 72 && s.setSize(Math.floor(72 / s.height * 56));
                const r = y.VI(500, 80)
                  , o = r.getContext("2d");
                o.font = s.getCssFont(),
                o.fillStyle = "#ffffff",
                o.textBaseline = "top",
                o.fillText(t, 0, Math.round((80 - s.height) / 2) - s.ascent);
                var l;
                return i.thumb = await (l = r,
                new Promise(( (e, t) => {
                    l.toBlob((t => {
                        e(t)
                    }
                    ), "image/png")
                }
                ))),
                await ne.save(i),
                ie.fontList.unshift(i),
                i
            }
            static async removeLocalFontDesc(e) {
                let t = ie.getFontDesc(e);
                t && (await ne.delete(t),
                ie.fontList = ie.fontList.filter((e => e !== t)))
            }
            static async addToDOM(e) {
                if (!e)
                    return;
                const t = e.local ? new FontFace(e.name,await (0,
                S.CB)(e.font)) : new FontFace(e.name,`url(/font/${e.short}.woff) format('woff')`);
                if (document.fonts.has(t))
                    return Promise.resolve(t);
                let a = await t.load();
                return document.fonts.add(a),
                a
            }
            static getFontDesc(e) {
                return ie.fontList.find((t => t.name === e))
            }
            static async getFontFile(e) {
                let t = this.getFontDesc(e);
                if (!t)
                    return;
                if (t.local)
                    return new File([t.font],t.name);
                let a = await fetch("/font/" + t.short + ".woff").then((e => e.blob()));
                return a ? new File([a],t.short + ".woff",{
                    type: "font/woff"
                }) : void 0
            }
            static async loadSaved() {
                const e = await G()
                  , [t] = e.transaction("readonly", "fonts");
                return t.iterate()
            }
        }
        ie.fontList = [new ne("Arial","arial"), new ne("Courier New","courier"), new ne("Georgia","georgia"), new ne("Trebuchet MS","trebuchet"), new ne("Verdana","verdana"), new ne("Aberus","aberus"), new ne("Ablation","ablation",!0), new ne("Adeft","adeft"), new ne("Adelya","adelya",!0), new ne("Adios Amigos","adios"), new ne("Adolfine","adolfine"), new ne("Agnostic","agnostic",!0), new ne("Aiden","aiden"), new ne("Amaranth","amaranth"), new ne("Amateur Typewriter","amateur",!0), new ne("Alder","alder",!0), new ne("Almondia","almondia"), new ne("Aloma Island","alomaisland",!0), new ne("Alvida","alvida"), new ne("Amoreiza","amoreiza"), new ne("AmoretteLight","amorette"), new ne("Angeleno Brush Script","angeleno",!0), new ne("Antreas","antreas"), new ne("Arm Race","arm"), new ne("Artick","artick"), new ne("Asap","asap"), new ne("Atomsfer","atomosfer"), new ne("Atthens","atthens"), new ne("Avocado Sans","avocado",!0), new ne("Baangkarr Press","baangkarr",!0), new ne("Badstar","badstar",!0), new ne("Bahram","bahram"), new ne("Baileyns","baileyns"), new ne("Barooduck","barooduck",!0), new ne("Bearley","bearley"), new ne("Beat","beat",!0), new ne("BebasNeue","bebasneue"), new ne("Bellquinas","bellquinas"), new ne("Bengrraas","bengrraas"), new ne("Beornheard","beornheard"), new ne("Berretti","berretti"), new ne("Biker New","biker",!0), new ne("Blossom Berry Script","blossomberry",!0), new ne("Boullervard","boullervard"), new ne("Bondie","bondie",!0), new ne("Bondrians","bondrians",!0), new ne("Braga Deco","braga"), new ne("Brave Hearted","brave"), new ne("Bright Orchid","brightorchid",!0), new ne("Brioche","brioche",!0), new ne("Brocklyn","brocklyn"), new ne("Bronzier","bronzier",!0), new ne("Brooklyn","brooklyn",!0), new ne("Brodetto","brodetto"), new ne("Bronela","bronela",!0), new ne("The Brownies","brownies"), new ne("Bubbble Gum","bubbblegum",!0), new ne("Brushcheetah","brushcheetah"), new ne("Butternut Script","butternut",!0), new ne("Caang","caang"), new ne("Cakehtreuks","cakehtreuks"), new ne("Cannoli Poke","cannoli",!0), new ne("Camille","camille"), new ne("Calamandria","calamandria"), new ne("Caldwell","caldwell",!0), new ne("Carafun","carafun"), new ne("Carnavonts","carnavonts"), new ne("Carvino","carvino"), new ne("Cervantes","cervantes"), new ne("Chaiaathah","chaiaathah",!0), new ne("Chalkyal","chalkyal"), new ne("Chiqarine","chiqarine"), new ne("Chukies","chukies"), new ne("Cincoyo","cincoyo"), new ne("Clockwise","clockwise",!0), new ne("Coast Redwood","coast"), new ne("Colombo","colombo",!0), new ne("College","college",!0), new ne("Companion","companion"), new ne("Corlombus","corlombus"), new ne("Conseration","conseration",!0), new ne("CuprumFFU","cuprum"), new ne("Cupello sons","cupello",!0), new ne("Costa Mala","costamala",!0), new ne("Cozy","cozy",!0), new ne("CreamyMoony","creamy"), new ne("Cross Road","crossroad",!0), new ne("Cross Road Slab","crossroadslab",!0), new ne("Daddy Day","daddy"), new ne("Dankduck","dankduck"), new ne("Darbots","darbots",!0), new ne("Davish","davish",!0), new ne("Davish Rounded","davishround",!0), new ne("Dear Journal","dearjournal",!0), new ne("Delicious","delicious",!0), new ne("Desmodus","desmodus"), new ne("Desmosedici","desmosedici"), new ne("Dhangdose","dhangdose"), new ne("Dingle","dingle",!0), new ne("Djangart Rough","djangart"), new ne("Dolington","dolington",!0), new ne("Doppelganger","doppelganger",!0), new ne("Dorr","dorr",!0), new ne("Dustin","dustin",!0), new ne("Earth And Sky","earth"), new ne("Easterica","easterica"), new ne("Eastone","eastone"), new ne("Eastwood","eastwood",!0), new ne("Echizen","echizen"), new ne("El-Karnito","elkarnito"), new ne("Elliot","elliot"), new ne("Elysian","elysian",!0), new ne("Emery","emery"), new ne("Empire View","empire"), new ne("Eugiene","eugiene"), new ne("Espano","espano",!0), new ne("Erleane","erleane"), new ne("Everleigh","everleigh",!0), new ne("Exquisite","exquisite",!0), new ne("Espano","espano",!0), new ne("Farewell Angelina","angelina",!0), new ne("Father and Son","father"), new ne("Fatherly","fatherly"), new ne("Fenord","fenord",!0), new ne("Finland","finland",!0), new ne("Flamingo","flamingo"), new ne("FoxyMist","foxy"), new ne("Forever Freedom","forever",!0), new ne("Game On","game"), new ne("Gamour","gamour",!0), new ne("Gallerina","gallerina",!0), new ne("Geronide","geronide",!0), new ne("Geronide Stamp","geronidestamp",!0), new ne("Gingle Snowland","ginglesnowland",!0), new ne("Gingerbreads","gingerbreads"), new ne("Gladiolusy","gladiolusy",!0), new ne("Glamper","glamper",!0), new ne("Goldie Dreambox","goldiedreambox",!0), new ne("Gordon","gordon",!0), new ne("Gorgeous","gorgeous",!0), new ne("Gingerly","gingerly",!0), new ne("Goorraatt","goorraatt"), new ne("Grayson","grayson",!0), new ne("Great Again","great"), new ne("Grovana","grovana",!0), new ne("Gustavo","gustavo"), new ne("Haahloddoh","haahloddoh"), new ne("Hadrea","hadrea"), new ne("Hairmusk","hairmusk"), new ne("Hakushou","hakushou"), new ne("Harietta","harietta",!0), new ne("Hattori Hanzo","hattori"), new ne("Haystacks","haystacks",!0), new ne("Heater","heater"), new ne("Hedonist","hedonist",!0), new ne("Hello Alpha","helloa"), new ne("Hello Daddy","hellod",!0), new ne("Hello People","hello"), new ne("Hello Spring","hellospring",!0), new ne("Hellowins","hellowins"), new ne("Heypatricks","heypatricks"), new ne("Highway","highway",!0), new ne("Hippo Letto","hippo"), new ne("Historia","historia",!0), new ne("Hollawind","hollawind"), new ne("Hodor","hodor",!0), new ne("Honey","honey"), new ne("Honeyspice","honeyspice",!0), new ne("Huckleberries","huckleberries"), new ne("Hymned Sans","hymnedsans",!0), new ne("Hymned Script","hymnedscript",!0), new ne("IacottNeue","iacottneue",!0), new ne("Icebold","icebold",!0), new ne("Inder","inder"), new ne("Indigo","indigo",!0), new ne("Irish gold","irishgold"), new ne("Irishgreen","irishgreen"), new ne("Its mine","itsmine"), new ne("Jacinda","jacinda",!0), new ne("Jared","jared"), new ne("Jarots","jarots"), new ne("Jomantara","jomantara"), new ne("Josefin","josefin"), new ne("Juneville","juneville"), new ne("Jura","jura"), new ne("Kajika","kajika"), new ne("Kakamora","kakamora"), new ne("Katey Blue","kateyblue",!0), new ne("Keripik","keripik"), new ne("Ketapang","ketapang"), new ne("Kindel","kindel",!0), new ne("Kingbirds","kingbirds",!0), new ne("Laahleggek","laahleggek"), new ne("Laborations","laborations"), new ne("La Fiesta","lafiesta"), new ne("Landon","landon"), new ne("Landre","landre",!0), new ne("Langley","langley"), new ne("La Vonn","vonn"), new ne("Laudya Bloods","laudya"), new ne("Leaderson","leaderson"), new ne("Leath","leath"), new ne("Legendum","legendum"), new ne("Leobronx","leobronx"), new ne("Little Edelweiss","little"), new ne("Little Girl","littlegirl"), new ne("Lotus Eater","lotuseater",!0), new ne("Lobster","lobster"), new ne("Lovalicious","lovalicious",!0), new ne("Loverstruck","loverstruck"), new ne("MaaLLaangBronks","maallaangbronks"), new ne("Madison","madison"), new ne("Magic Winter","magicwinter"), new ne("Magic Trick","magic"), new ne("Mai Leho Bahhrala","maileho"), new ne("Maldisa","maldisa"), new ne("Malinsha","malinsha",!0), new ne("Maple Leaves","mapleleaves",!0), new ne("Maxton","maxton"), new ne("Market","market"), new ne("Marones","marones",!0), new ne("Me and my dog","meandmydog",!0), new ne("Meidy","meidy"), new ne("Menighampiil","menighampiil"), new ne("Mewton","mewton"), new ne("Merry Merry","merrymerry",!0), new ne("Molot","molot"), new ne("Momday","momday"), new ne("Moms Note","moms"), new ne("Monday Lovers","monday"), new ne("Monetta","monetta"), new ne("Mongli","mongli"), new ne("Montour","montour"), new ne("Morissette Script","morissette"), new ne("Mountain","mountain"), new ne("Mooka","mooka",!0), new ne("More Magic","moremagic",!0), new ne("Morgana Sonz","morgana",!0), new ne("Nature Force","natureforce",!0), new ne("Ms Orange Sky","ms"), new ne("Najova","najova"), new ne("Natarajasana","natarajasana"), new ne("Naville","naville"), new ne("Neorah","neorah"), new ne("New Autumn","new"), new ne("No Siesta","nosiesta"), new ne("Night Jump","nightjump"), new ne("Notes","notes",!0), new ne("NoFire","nofire"), new ne("North Avellion","northavellion",!0), new ne("Northern","northern"), new ne("North High Shadow","northhighsdw",!0), new ne("North High","northhigh",!0), new ne("Novante","novante",!0), new ne("Nunu","nunu"), new ne("Offlander","offlander",!0), new ne("Oliemolly","oliemolly",!0), new ne("Oracles","oracles"), new ne("Ostern","ostern"), new ne("Otakaku","otakaku"), new ne("Out Hill","out"), new ne("Overdose","overdose"), new ne("Paabaalioot","paabaalioot"), new ne("Painted Gallery","paintedgallery",!0), new ne("Pandoura","pandoura"), new ne("PapaRocknRoll","papa"), new ne("Paradise","paradise"), new ne("Patlabour","patlabour",!0), new ne("Peach Market","peachmarket",!0), new ne("Peanut","peanut"), new ne("Peony Rose","peonyrose",!0), new ne("Perfect Thoughts","perfectthoughts",!0), new ne("Pina Colada","pinacolada",!0), new ne("Piqolo","piqolo"), new ne("Pixelo","pixelo"), new ne("Plunge","plunge"), new ne("Pop Fist","pop"), new ne("Ponch","ponch",!0), new ne("Popera","popera"), new ne("Powder","powder",!0), new ne("Practish","practish"), new ne("Print Clearly","print"), new ne("Pulsate","pulsate",!0), new ne("Qlassik","qlassik"), new ne("quatro","quatro",!0), new ne("Quattrocento","quattrocento"), new ne("Queenata","queenata"), new ne("Quella Script","quella"), new ne("Questro","questro"), new ne("Quickie Sweet","quickie"), new ne("Quill & Ink","quillink"), new ne("Quish","quish"), new ne("Ranania","ranania"), new ne("Rankings Caps","rankingscaps",!0), new ne("Raroedette","raroedette"), new ne("Rawwwing","rawwwing"), new ne("Raquella","raquella"), new ne("Reepouh","reepouh"), new ne("Regan Slab","regan"), new ne("Reewoooh","reewoooh",!0), new ne("Reilly","reilly"), new ne("Remembrance","remembrance",!0), new ne("Retrocycles","retrocycles"), new ne("Retros","retros"), new ne("Revans","revans",!0), new ne("Reynolds Square","reynoldssquare",!0), new ne("Rhapsody","rhapsody"), new ne("Riverside","riverside"), new ne("Republiko","republiko",!0), new ne("Rocky","rocky"), new ne("Roars","roars"), new ne("Rockford","rockford",!0), new ne("Rockrace","rockrace",!0), new ne("Romaniesta","romaniesta"), new ne("Romelio","romelio"), new ne("Roossooh","roossooh"), new ne("Ropa","ropa"), new ne("Rolves","rolves",!0), new ne("Roque","roque"), new ne("Rosario","rosario"), new ne("Roundaries","roundaries"), new ne("Rowan","rowan",!0), new ne("Salmonberry","salmonberry",!0), new ne("San Barley","san"), new ne("Saqanone","saqanone"), new ne("Sants","sants"), new ne("Sanur beach","sanur"), new ne("Scriptonesia","scriptonesia",!0), new ne("Secretary Typewriter","secretary",!0), new ne("Sedalia","sedalia",!0), new ne("Search","search",!0), new ne("Searchlight","searchlight",!0), new ne("See De Mayo","see"), new ne("Serenity","serenity"), new ne("The Servant","servant"), new ne("Sheraton","sheraton",!0), new ne("Shoelaces","shoelaces",!0), new ne("Silvertone","silvertone",!0), new ne("Smoother","smoother",!0), new ne("Spring Break","springbreak",!0), new ne("Spotlights Thin","spotlightsthin",!0), new ne("Spotlights Chunky","spotlightschunky",!0), new ne("Squiborn","squiborn",!0), new ne("Staatliches","staatliches"), new ne("Stardust Moonlight","stardust"), new ne("The Stoothgart","stoothgart"), new ne("Summer Coconut","summer"), new ne("Summer Joy","summerjoy"), new ne("Summer Nude","summernude",!0), new ne("Summer Peach","summerpeach"), new ne("Summer Solstice","summersolstice",!0), new ne("Summery","summery"), new ne("Sun Again","sunagain"), new ne("Sun Pepper","sun"), new ne("Sun Streets","sunstreets"), new ne("Sunny Bay","sunnybay",!0), new ne("Sunshine Boy","sunshine"), new ne("Super Slayers","super"), new ne("Surface","surface"), new ne("Sweeneey","sweeneey"), new ne("Teaspoon","teaspoon"), new ne("Tabu","tabu"), new ne("Teodore","teodore",!0), new ne("TeXGyreHeros","texgyreheros"), new ne("The Brocker","brocker"), new ne("The California","thecalifornia"), new ne("The Harison","harison"), new ne("The Love For Money","theloveformoney",!0), new ne("The Mastiff","mastiff"), new ne("The Patriot","patriot"), new ne("The Pinta","pinta"), new ne("The Roxv","roxv"), new ne("The Rogue","rogue"), new ne("The Stegris","thestegris",!0), new ne("The Queen","queen"), new ne("Thirtylane","thirtylane",!0), new ne("Titian","titian"), new ne("Todes","todes",!0), new ne("Tropical Coast","tropicalcoast"), new ne("Torberta","torberta"), new ne("Twigs","twigs"), new ne("Twirly Ballerina","twirly",!0), new ne("Unreal","unreal"), new ne("Vaganza","vaganza"), new ne("Valeria","valeria",!0), new ne("Valery","valery"), new ne("Vignette","vignette"), new ne("Von Everect","von"), new ne("The Voyager","voyager",!0), new ne("Wandering Flowers","wandering",!0), new ne("Wargate","wargate",!0), new ne("Western Shooter","westernshooter",!0), new ne("West Java","westjava",!0), new ne("Winter Sunrise","wintersunrise",!0), new ne("White Wonder","whitewonder",!0), new ne("Yanone Kaffeesatz","kaffeesatz"), new ne("Wonderul Wilderness","wonderulwilderness",!0), new ne("Yoseline","yoseline"), new ne("Zombie Dust","zombie")],
        ie.loadFont = e => {
            let t = ie.fontList.find((t => t.name === e));
            if (t)
                return ie.addToDOM(t)
        }
        ;
        class se {
            constructor(e, t, a, n=0, i=0, s=se.SPEED_NORMAL, r=0, o=0) {
                this.name = e,
                this.motions = t,
                this.option = a,
                this.duration = n,
                this.delay = i,
                this.speed = s,
                this.repeat = r,
                this.gap = o
            }
        }
        se.SPEED_SNAIL = 3,
        se.SPEED_SLOW = 2,
        se.SPEED_NORMAL = 1,
        se.SPEED_FAST = .5,
        se.SPEED_FLASH = .25;
        const re = se;
        class oe {
            constructor(e, t="top") {
                this.duration = e,
                this.metod = t
            }
        }
        oe.getOffset = (e, t, a) => {
            let n = 0;
            if (void 0 === a || 0 === a.duration || !e.rect)
                return n;
            switch (a.metod) {
            case "top":
                n = e.getRect().y / t.height;
                break;
            case "bottom":
                n = 1 - e.getRect().y / t.height;
                break;
            case "left":
                n = e.getRect().x / t.width;
                break;
            case "right":
                n = 1 - e.getRect().x / t.width;
                break;
            case "back":
                n = t.layerNr(e.id) / t.layers.length;
                break;
            case "front":
                n = 1 - t.layerNr(e.id) / t.layers.length;
                break;
            case "center":
                n = new A.A(t.width / 2,t.height / 2).distanceTo(e.getRect().center()) / Math.sqrt(t.width * t.width + t.height * t.height) / 2;
                break;
            case "bounds":
                n = 1 - new A.A(t.width / 2,t.height / 2).distanceTo(e.getRect().center()) / Math.sqrt(t.width * t.width + t.height * t.height) / 2
            }
            return Math.round((0,
            y.qE)(n * a.duration, 0, a.duration))
        }
        ;
        const le = oe;
        class de {
            constructor(e=!1, t=void 0, a=void 0, n=void 0, i=void 0) {
                this.block = e,
                this.enter = t,
                this.scene = a,
                this.exit = n,
                this.stagger = i
            }
        }
        de.fromInjection = (e, t) => {
            let a = t ? de.clone(t) : new de;
            if (a.block = !1,
            !e)
                return a;
            if (e.enter && (a.enter && (e.enter.delay = a.enter.delay,
            e.enter.speed = a.enter.speed),
            a.enter = e.enter,
            a.enter.duration = a.enter.duration ? a.enter.duration : de.getMotionsDuration(a.enter.motions)),
            e.scene && (a.scene && (e.scene.delay = a.scene.delay,
            e.scene.speed = a.scene.speed,
            e.scene.repeat = a.scene.repeat,
            e.scene.gap = a.scene.gap),
            a.scene = e.scene,
            a.scene.motions)) {
                let e = de.getMotionsDuration(a.scene.motions);
                a.scene.duration = e + a.scene.repeat * (e + a.scene.gap)
            }
            return e.exit && (a.exit && (e.exit.delay = a.exit.delay,
            e.exit.speed = a.exit.speed),
            a.exit = e.exit,
            a.exit.duration = de.getMotionsDuration(a.exit.motions)),
            e.stagger && (a.stagger = e.stagger),
            a
        }
        ,
        de.getSegment = (e, t) => {
            if (t)
                switch (e) {
                case "enter":
                    return t.enter;
                case "scene":
                    return t.scene;
                case "exit":
                    return t.exit
                }
        }
        ,
        de.setSegmentSpeed = (e, t) => {
            if (!e)
                return;
            e.speed = t;
            let a = de.getMotionsDuration(e.motions, e.speed);
            e.duration = a + e.repeat * (a + e.gap)
        }
        ,
        de.setSegmentRepeat = (e, t) => {
            if (!e)
                return;
            let a = de.getMotionsDuration(e.motions, e.speed);
            e.repeat = t,
            e.duration = a + t * (a + e.gap)
        }
        ,
        de.setSegmentGap = (e, t) => {
            if (!e)
                return;
            let a = de.getMotionsDuration(e.motions, e.speed);
            e.gap = t,
            e.duration = a + e.repeat * (a + e.gap)
        }
        ,
        de.getAnimationSegment = (e, t) => {
            if (!t)
                return;
            const a = new de(t.block);
            return "enter" === e && (a.enter = new re(t.enter.name,[...t.enter.motions],t.enter.option,t.enter.duration,t.enter.delay,t.enter.speed,t.enter.repeat,t.enter.gap)),
            "scene" === e && (a.scene = new re(t.scene.name,[...t.scene.motions],t.scene.option,t.scene.duration,t.scene.delay,t.scene.speed,t.scene.repeat,t.scene.gap)),
            "exit" === e && (a.exit = new re(t.exit.name,[...t.exit.motions],t.exit.option,t.exit.duration,t.exit.delay,t.exit.speed,t.exit.repeat,t.exit.gap)),
            a
        }
        ,
        de.getMotionsDuration = (e, t=1) => {
            if (!e || 0 === e.length)
                return 0;
            let a = 0;
            for (const n of e)
                a = Math.max(a, Math.round((n.delay + n.duration) * t));
            return a
        }
        ,
        de.clone = e => {
            if (!e)
                return;
            const t = new de(e.block);
            return e.enter && (t.enter = new re(e.enter.name,[...e.enter.motions],e.enter.option,e.enter.duration,e.enter.delay,e.enter.speed,e.enter.repeat,e.enter.gap)),
            e.scene && (t.scene = new re(e.scene.name,[...e.scene.motions],e.scene.option,e.scene.duration,e.scene.delay,e.scene.speed,e.scene.repeat,e.scene.gap)),
            e.exit && (t.exit = new re(e.exit.name,[...e.exit.motions],e.exit.option,e.exit.duration,e.exit.delay,e.exit.speed,e.exit.repeat,e.exit.gap)),
            e.stagger && (t.stagger = new le(e.stagger.duration,e.stagger.metod)),
            t
        }
        ;
        const ce = de;
        class me extends z {
            constructor(e=y.Os(), t, a, n, i=!1) {
                super(z.TYPE_IMAGE),
                this.id = e,
                this.calculate = (e, t, a) => {
                    this.canvas && (this.rect.x = Math.round(e.x),
                    this.rect.y = Math.round(e.y),
                    this.rect.width = Math.round(t.x - e.x),
                    this.rect.width < 10 && (this.rect.width = 10),
                    0 !== a ? this.rect.height = Math.round(this.rect.width / a) : (this.rect.height = Math.round(t.y - e.y),
                    this.rect.height < 10 && (this.rect.height = 10)))
                }
                ,
                this.scale = (e, t, a) => {
                    this.rect && (this.rect.x = Math.round(this.rect.x * e),
                    this.rect.y = Math.round(this.rect.y * t),
                    this.rect.width = Math.round(this.rect.width * e),
                    this.rect.height = Math.round(this.rect.height * t),
                    this.applyTransform(a))
                }
                ,
                this.wouldApplyTransform = () => !(!this.canvas || !this.rect) && (0 !== this.rect.rotation || this.rect.width !== this.canvas.width || this.rect.height !== this.canvas.height),
                this.applyStraighten = e => {
                    this.canvas = y.oc(this.canvas, this.rect.rotation, e),
                    this.mask && (this.mask = y.oc(this.mask, this.rect.rotation, e)),
                    this.rect = e,
                    this.render()
                }
                ,
                this.applyTransform = (e=!0) => {
                    if (!this.wouldApplyTransform())
                        return !1;
                    if (this.rect.width === this.canvas.width && this.rect.height === this.canvas.height || (this.canvas = e ? y.tm(this.canvas, this.rect.width, this.rect.height) : y.B3(this.canvas, this.rect.width, this.rect.height),
                    this.mask && (this.mask = y.tm(this.mask, this.rect.width, this.rect.height))),
                    0 !== this.rect.rotation) {
                        this.rect = this.rect.getRotatedBounds(),
                        this.canvas = y.oc(this.canvas, this.rect.rotation, this.rect),
                        this.mask && (this.mask = y.oc(this.mask, this.rect.rotation, this.rect));
                        let e = y.TL(this.canvas);
                        e.equalTo(new D.A(0,0,this.canvas.width,this.canvas.height)) || (this.canvas = y.bK(this.canvas, e),
                        this.mask && (this.mask = y.bK(this.mask, e)),
                        this.rect.width = e.width,
                        this.rect.height = e.height,
                        this.rect.x += e.x,
                        this.rect.y += e.y),
                        this.rect.rotation = 0
                    }
                    return this.render(),
                    !0
                }
                ,
                this.switchCanvas = (e, t) => {
                    this.mask && !this.rect.equalTo(t) && (this.mask = y.p(this.mask, this.rect, t)),
                    this.canvas = e,
                    this.rect = t.clone()
                }
                ,
                this.extendCanvas = e => {
                    if (!this.canvas)
                        return this.rect = e,
                        void (this.canvas = y.Nw(e.width, e.height));
                    let t = this.rect.union(e);
                    this.rect.equalTo(t) || (this.canvas = y.p(this.canvas, this.rect, t),
                    this.mask && (this.mask = y.p(this.mask, this.rect, t)),
                    this.rect = t)
                }
                ,
                this.hasMask = () => !!this.mask,
                this.addMask = (e="clear") => {
                    if (this.mask = y.Nw(this.canvas.width, this.canvas.height),
                    "fill" === e) {
                        this.mask.getContext("2d").fillRect(0, 0, this.mask.width, this.mask.height)
                    }
                }
                ,
                this.invertMask = () => {
                    if (this.mask) {
                        let e = y.Nw(this.mask.width, this.mask.height)
                          , t = e.getContext("2d");
                        t.save(),
                        t.fillRect(0, 0, e.width, e.height),
                        t.globalCompositeOperation = "xor",
                        t.drawImage(this.mask, 0, 0),
                        t.restore(),
                        this.mask = e
                    }
                }
                ,
                this.removeMask = () => {
                    this.mask = void 0,
                    this.baked = void 0
                }
                ,
                this.render = () => {
                    if (this.mask) {
                        if (!this.canvas)
                            return;
                        this.baked && this.baked.width === this.canvas.width && this.baked.height === this.canvas.height || (this.baked = y.Nw(this.canvas.width, this.canvas.height));
                        var e = this.baked.getContext("2d");
                        e.save(),
                        e.globalCompositeOperation = "copy",
                        e.drawImage(this.canvas, 0, 0),
                        e.globalCompositeOperation = "destination-in",
                        e.drawImage(this.mask, 0, 0),
                        e.restore(),
                        e = void 0
                    }
                }
                ,
                this.shrinkWrap = () => {
                    const e = y.TL(this.canvas);
                    if (!e)
                        return this.canvas = void 0,
                        this.mask = void 0,
                        this.baked = void 0,
                        this.rect = void 0,
                        !0;
                    if (!e.equalTo(this.rect)) {
                        const t = y.Nw(e.width, e.height);
                        return t.getContext("2d").drawImage(this.canvas, -e.x, -e.y),
                        this.canvas = t,
                        this.rect = e.rebase(-this.rect.x, -this.rect.y),
                        this.mask && (this.mask = y.y2(this.mask, e)),
                        !0
                    }
                    return !1
                }
                ,
                this.rasterize = () => this.clone(),
                this.clone = (e=!1) => {
                    var t;
                    let a = new me(e ? this.id : y.Os(),this.settings.name,y.oM(this.canvas),null === (t = this.rect) || void 0 === t ? void 0 : t.clone(),!1);
                    return a.settings = Object.assign({}, this.settings),
                    e || (a.settings.locked = !1),
                    a.animation = ce.clone(this.animation),
                    this.baked && (a.baked = y.oM(this.baked)),
                    this.hasMask() && (a.mask = y.oM(this.mask)),
                    a
                }
                ,
                this.canvas = a,
                this.rect = n,
                this.settings.name = t,
                this.settings.locked = i
            }
        }
        class ue extends z {
            constructor(e=y.Os(), t, a, n) {
                super(z.TYPE_TEXT),
                this.id = e,
                this.prepare = async (e=!1) => {
                    this.fill && !e || (this.fill = await U.fromString(this.textSettings.fillType, this.textSettings.fillValue),
                    document.dispatchEvent(new CustomEvent("layer-select"))),
                    this.setText()
                }
                ,
                this.setText = (e=this.text) => {
                    this.text = e,
                    this.settings.name = e.substring(0, 25) + "..",
                    this.textSettings.uppercase ? this.words = this.text.replace(/[\n]/g, " §§§ ").toUpperCase().split(" ") : this.words = this.text.replace(/[\n]/g, " §§§ ").split(" "),
                    this.render()
                }
                ,
                this.setTextSize = e => {
                    this.textSettings.setSize(e),
                    this.render()
                }
                ,
                this.setLineSpace = e => {
                    this.textSettings.lineSpace = e,
                    this.render()
                }
                ,
                this.setLetterSpace = e => {
                    this.textSettings.letterSpace = e,
                    this.render()
                }
                ,
                this.setTextFill = (e, t=!1) => {
                    this.fill = e,
                    t || (this.textSettings.fillType = e.getType(),
                    this.textSettings.fillValue = e.getStringValue()),
                    this.render()
                }
                ,
                this.setTextFont = (e, t=!1) => {
                    this.textSettings.setFont(e),
                    this.render(t)
                }
                ,
                this.setTextUpperCase = e => {
                    this.textSettings.uppercase = e,
                    this.setText(this.text)
                }
                ,
                this.setTextItalic = e => {
                    this.textSettings.italic = e,
                    this.setText(this.text)
                }
                ,
                this.setTextBold = e => {
                    this.textSettings.bold = e,
                    this.setText(this.text)
                }
                ,
                this.setTextUnderline = e => {
                    this.textSettings.underline = e,
                    this.setText(this.text)
                }
                ,
                this.setTextAlign = e => {
                    this.textSettings.align = e,
                    this.render()
                }
                ,
                this.setCurve = (e, t, a, n, i) => {
                    this.textSettings.curve = e,
                    this.textSettings.curveType = t,
                    this.textSettings.curveAmount = a,
                    this.textSettings.curveSpread = n,
                    this.textSettings.curveFlip = i,
                    this.render()
                }
                ,
                this.setWarp = (e, t, a, n, i, s, r) => {
                    this.textSettings.warp = e,
                    this.textSettings.warpType = t,
                    this.textSettings.warpMode = a,
                    this.textSettings.warpEdgeSize = n,
                    this.textSettings.warpCenterSize = i,
                    this.textSettings.warpHorizontalOffset = s,
                    this.textSettings.warpVerticalOffset = r,
                    this.render()
                }
                ,
                this.setBackground = (e, t, a, n, i) => {
                    this.textSettings.background = e,
                    this.textSettings.backgroundType = t,
                    this.textSettings.backgroundColor = a,
                    this.textSettings.backgroundPunch = n,
                    this.textSettings.backgroundOffset = i,
                    this.render()
                }
                ,
                this.setOutline = (e, t, a, n, i, s) => {
                    this.textSettings.outline = e,
                    this.textSettings.outlineSize = t,
                    this.textSettings.outlineColor = a,
                    this.textSettings.outlinePunch = n,
                    this.textSettings.outlineDistance = i,
                    this.textSettings.outlineDirection = s,
                    this.render()
                }
                ,
                this.setShadow = (e, t, a, n, i, s) => {
                    this.textSettings.shadow = e,
                    this.textSettings.shadowBlur = t,
                    this.textSettings.shadowAlpha = a,
                    this.textSettings.shadowColor = n,
                    this.textSettings.shadowDistance = i,
                    this.textSettings.shadowDirection = s,
                    this.render()
                }
                ,
                this.setTextSettings = e => {
                    this.textSettings = e,
                    this.render()
                }
                ,
                this.setCanvasStyle = () => {
                    var e;
                    this.ctx.textBaseline = "top",
                    this.ctx.font = this.textSettings.getCssFont(),
                    this.ctx.strokeStyle = this.textSettings.outlineColor,
                    this.ctx.lineWidth = Math.round(this.textSettings.outlineSize * this.textSettings.padding),
                    this.ctx.lineJoin = "miter",
                    this.ctx.miterLimit = 2,
                    null === (e = this.fill) || void 0 === e || e.addToCanvasFillStyle(this.ctx)
                }
                ,
                this.isPunchOut = !1,
                this.isWordBackground = !1,
                this.render = (e=!1) => {
                    this.isPunchOut = void 0 === this.fill || this.textSettings.background && this.textSettings.backgroundPunch || this.textSettings.outline && this.textSettings.outlinePunch,
                    this.isWordBackground = this.textSettings.background && this.textSettings.backgroundType === ae.BACKGROUND_WORD;
                    let t = this.textSettings.padding;
                    this.canvas || (this.canvas = y.Nw(50, 50)),
                    this.ctx || (this.ctx = this.canvas.getContext("2d")),
                    this.setCanvasStyle();
                    const a = new A.A;
                    if (this.textSettings.outline && this.textSettings.outlineDistance > 0) {
                        const e = (this.textSettings.outlineDirection - 90) * Math.PI / 180;
                        a.x = Math.cos(e) * this.textSettings.outlineDistance * t,
                        a.y = Math.sin(e) * this.textSettings.outlineDistance * t
                    }
                    const n = this.textSettings.getLineSpacing();
                    let i = this.textSettings.height + t + n
                      , s = this.textSettings.background ? Math.round(this.textSettings.backgroundOffset * t) : 0;
                    this.textSettings.background && this.textSettings.backgroundType !== ae.BACKGROUND_FULL && (i += 2 * t);
                    let r = this.splitTextIntoLines(i);
                    this.setCanvasSize(r.length, n),
                    this.setCanvasStyle();
                    let o = !1;
                    if (this.textSettings.curve && "arc" === this.textSettings.curveType) {
                        if (o = !0,
                        0 !== this.textSettings.curveAmount) {
                            const e = this.textSettings.getLetterSpacing();
                            let[t,a] = this.calculateArcRadius()
                              , n = (t - this.textSettings.height / 2) * Math.PI * 2;
                            o = (this.ctx.measureText(" ").width + e) / n * Math.PI * 2 < 5e-4
                        }
                        this.textSettings.curveAmount <= 0 && !o && (r = r.reverse())
                    }
                    for (let m = 0; m < r.length; m++) {
                        if ("" === r[m])
                            continue;
                        const e = this.lineWidth(r[m]);
                        this.textSettings.curve && !o ? this.drawCurveLine(r[m], t + m * i, e, s, a) : this.drawLine(r[m], t + m * i, e, s, a, o)
                    }
                    if (this.textSettings.warp) {
                        this.transient = y.oM(this.canvas),
                        this.ctx.imageSmoothingEnabled = !0,
                        this.ctx.imageSmoothingQuality = "high";
                        let e = this.textSettings.warpMode
                          , a = "angular" === this.textSettings.warpType
                          , n = this.textSettings.background || this.textSettings.outline ? 0 : t
                          , i = this.transient.width
                          , s = this.transient.height - 2 * n
                          , r = s + s * this.textSettings.warpEdgeSize
                          , o = s + s * this.textSettings.warpCenterSize
                          , l = i * (.5 + .5 * this.textSettings.warpHorizontalOffset)
                          , d = i * (1 - (.5 + .5 * this.textSettings.warpHorizontalOffset))
                          , c = 180 / (2 * l)
                          , m = 180 / (2 * d)
                          , u = 0
                          , h = s * this.textSettings.warpVerticalOffset;
                        if ("upper" === e)
                            h < 0 ? (this.rect.height = Math.max(Math.abs(h) + r, o),
                            u -= h) : this.rect.height = Math.max(h + o, r);
                        else if ("lower" === e)
                            h *= -1,
                            u = Math.max(r, o - h) - s,
                            this.rect.height = h <= 0 ? Math.max(Math.abs(h) + o, r) : Math.max(h + r, o);
                        else if ("middle" === e) {
                            h *= .75,
                            u = .5 * (Math.max(r, o) - s);
                            let e = .5 * (r - o)
                              , t = Math.max(o, r);
                            if (h < 0) {
                                let e = .5 * (r - o)
                                  , t = Math.max(o, r);
                                e + o + Math.abs(h) > t ? (this.rect.height = e + o + Math.abs(h),
                                u -= e + h,
                                e < 0 && (u += e)) : (this.rect.height = t,
                                o > r && (u -= h))
                            } else
                                e + o + h > t ? (this.rect.height = e + o + h,
                                e < 0 && (u += e)) : (this.rect.height = t,
                                o > r && (u -= h))
                        }
                        for (this.rect.height += 2 * n,
                        this.canvas.width = this.rect.width,
                        this.canvas.height = this.rect.height; i--; ) {
                            let t = 0;
                            t = i > l ? a ? 1 - (i - l) / d : Math.sin((d - (i - l)) * m * Math.PI / 180) : a ? 1 - (l - i) / l : Math.sin(i * c * Math.PI / 180);
                            let p = (1 - t) * r + o * t
                              , y = t * h
                              , g = "upper" === e ? 0 : "lower" === e ? s - p : .5 * (s - p);
                            this.ctx.drawImage(this.transient, i, n, 1, s, i, n + y + g + u, 1, p)
                        }
                        this.transient = void 0
                    }
                    if (this.textSettings.shadow && !e) {
                        this.baked || (this.baked = y.Nw(100, 100));
                        let e = this.baked.getContext("2d");
                        if (this.bect = new D.A(this.rect.x - 4 * t,this.rect.y - 4 * t,this.rect.width + 8 * t,this.rect.height + 8 * t,this.rect.rotation),
                        this.baked.width = this.bect.width,
                        this.baked.height = this.bect.height,
                        this.textSettings.shadow) {
                            e.save();
                            var l = (this.textSettings.shadowDirection - 90) * Math.PI / 180
                              , d = Math.cos(l) * this.textSettings.shadowDistance
                              , c = Math.sin(l) * this.textSettings.shadowDistance;
                            e.shadowBlur = this.textSettings.shadowBlur * this.textSettings.padding * 2,
                            e.shadowOffsetX = d * this.textSettings.padding * 2,
                            e.shadowOffsetY = c * this.textSettings.padding * 2,
                            e.shadowColor = R.fromHEX(this.textSettings.shadowColor, Math.round(255 * this.textSettings.shadowAlpha)).toRGBA(),
                            e.drawImage(this.canvas, 4 * t, 4 * t),
                            e.restore()
                        }
                    } else
                        this.baked = void 0,
                        this.bect = void 0
                }
                ,
                this.scaleBect = e => {
                    if (this.bect) {
                        const t = 4 * this.textSettings.padding * e;
                        this.bect = new D.A(this.rect.x - t,this.rect.y - t,this.rect.width + 2 * t,this.rect.height + 2 * t,this.rect.rotation),
                        this.bect.width < 1 && (this.bect.width = 1),
                        this.bect.height < 1 && (this.bect.height = 1)
                    }
                }
                ,
                this.setCanvasSize = (e, t) => {
                    if (this.textSettings.background && this.textSettings.backgroundType !== ae.BACKGROUND_FULL ? this.rect.height = (this.textSettings.height + 3 * this.textSettings.padding) * e + t * (e - 1) - this.textSettings.padding : this.rect.height = (this.textSettings.height + this.textSettings.padding) * e + t * (e - 1) + this.textSettings.padding,
                    this.textSettings.curve)
                        switch (this.textSettings.curveType) {
                        case "arc":
                            let e = this.calculateArcHeight();
                            this.rect.height += e;
                            break;
                        case "circle":
                            this.rect.height = this.rect.width;
                            break;
                        case "half":
                            this.rect.height = Math.round(this.rect.width / 2)
                        }
                    this.canvas.width = this.rect.width,
                    this.canvas.height = this.rect.height,
                    this.textSettings.background && this.textSettings.backgroundType === ae.BACKGROUND_FULL && (this.ctx.fillStyle = this.textSettings.backgroundColor,
                    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height))
                }
                ,
                this.splitTextIntoLines = e => {
                    let t = ""
                      , a = new Array
                      , n = this.textSettings.curve ? this.curveMaxWidth(0, e) : this.rect.width;
                    for (var i = 0; i < this.words.length; i++) {
                        let s = "" !== t ? t + " " + this.words[i] : this.words[i];
                        if ("§§§" === this.words[i] || this.lineWidth(s) > n && s !== this.words[i]) {
                            if (a.push(t),
                            t = "§§§" === this.words[i] ? "" : this.words[i],
                            this.textSettings.curve && (n = this.curveMaxWidth(a.length, e),
                            n < 0))
                                return a
                        } else
                            t = s
                    }
                    return a.push(t),
                    a
                }
                ,
                this.lineWidth = e => {
                    let t = 0
                      , a = this.textSettings.getLineSpacing()
                      , n = this.textSettings.getLetterSpacing();
                    if (this.isWordBackground) {
                        let i = e.split(" ").filter((e => e));
                        for (let e = 0; e < i.length; e++)
                            t += this.measureTextWidth(i[e], n, !0) + 2 * this.textSettings.padding,
                            t += this.textSettings.padding + a;
                        this.textSettings.curve && "circle" === this.textSettings.curveType || (t -= this.textSettings.padding + a)
                    } else
                        this.textSettings.curve && "circle" === this.textSettings.curveType ? (t = this.measureTextWidth(e, n, !1),
                        t += this.measureTextWidth(" ", n, !1)) : (t = this.measureTextWidth(e, n, !0),
                        t += 2 * this.textSettings.padding);
                    return t
                }
                ,
                this.curveMaxWidth = (e, t) => {
                    if ("arc" === this.textSettings.curveType) {
                        if (0 === this.textSettings.curveAmount)
                            return this.rect.width;
                        let[e,a] = this.calculateArcRadius();
                        return this.textSettings.curveAmount < 0 && (a += -t / 4),
                        a
                    }
                    if ("circle" === this.textSettings.curveType) {
                        let a = this.rect.width / 2 - this.textSettings.padding - e * t;
                        return a < t ? -1 : a * Math.PI * 2
                    }
                    {
                        let a = this.rect.width / 2 - e * t - (this.textSettings.background ? this.textSettings.padding : 0);
                        return a < t ? -1 : a * Math.PI
                    }
                }
                ,
                this.calculateArcHeight = () => Math.round(this.rect.width / 5 * Math.abs(this.textSettings.curveAmount)),
                this.calculateArcRadius = () => {
                    let e = this.calculateArcHeight()
                      , t = new A.A(0,e)
                      , a = new A.A(this.rect.width / 2,0)
                      , n = new A.A(this.rect.width,e)
                      , i = (a.y - t.y) / (a.x - t.x)
                      , s = (n.y - a.y) / (n.x - a.x)
                      , r = -1 * ((i * s * (t.y - n.y) + s * (t.x + a.x) - i * (a.x + n.x)) / (2 * (s - i)) - (t.x + a.x) / 2) / i + (t.y + a.y) / 2;
                    return [r, Math.atan2(this.rect.width / 2, r - e) * r * 2]
                }
                ,
                this.drawHalfLine = (e, t, a, n, i) => {
                    var s;
                    const r = this.textSettings.curveFlip
                      , o = this.textSettings.curveSpread
                      , l = this.textSettings.getLineSpacing()
                      , d = this.textSettings.getLetterSpacing();
                    let c = !1
                      , m = this.rect.width / 2 - t
                      , u = m * Math.PI * 2;
                    if (this.textSettings.background)
                        if (this.textSettings.backgroundType === ae.BACKGROUND_LINE) {
                            let e = m - this.textSettings.height / 2;
                            e > 0 && (this.ctx.save(),
                            this.ctx.strokeStyle = this.textSettings.backgroundColor,
                            this.ctx.lineWidth = this.textSettings.height + 2 * this.textSettings.padding,
                            this.ctx.beginPath(),
                            this.ctx.ellipse(this.rect.width / 2, r ? 0 : this.rect.width / 2, e, e, 0, Math.PI, 0, r),
                            this.ctx.stroke(),
                            this.ctx.restore())
                        } else if (this.textSettings.backgroundType === ae.BACKGROUND_WORD) {
                            let t = o ? -u / 4 : -a / 2
                              , i = (u / 2 - a) / e.replace(/\s/g, "").length;
                            this.ctx.save(),
                            this.ctx.strokeStyle = this.textSettings.backgroundColor,
                            this.ctx.lineWidth = this.textSettings.height + 2 * this.textSettings.padding;
                            let s = e.split(" ").filter((e => e));
                            for (var h = 0; h < s.length; h++) {
                                let e = this.measureTextWidth(s[h], d, !0);
                                o && (e += i * s[h].length);
                                let a = m - this.textSettings.height / 2;
                                if (a < this.textSettings.height)
                                    continue;
                                let c = (e + 2 * this.textSettings.padding) / u * 360 * (Math.PI / 180)
                                  , p = t / u * 360 * (Math.PI / 180)
                                  , y = r ? 90 : 270
                                  , g = y * (Math.PI / 180) + (r ? -p : p)
                                  , f = y * (Math.PI / 180) + (r ? -(c + p) : c + p);
                                if (this.ctx.beginPath(),
                                this.ctx.arc(this.rect.width / 2, r ? 0 : this.rect.width / 2, a, g, f, r),
                                this.ctx.stroke(),
                                this.textSettings.underline) {
                                    const i = Math.ceil(.06 * this.textSettings.height)
                                      , s = Math.round(this.textSettings.padding + d);
                                    this.fill.addToCanvasStrokeStyle(this.ctx),
                                    this.ctx.lineWidth = i,
                                    p = (t + s) / u * 360 * (Math.PI / 180),
                                    c = (e - 2 * d) / u * 360 * (Math.PI / 180),
                                    g = y * (Math.PI / 180) + (r ? -p : p),
                                    f = y * (Math.PI / 180) + (r ? -(c + p) : c + p);
                                    const o = Math.round(.5 * (this.textSettings.baseline + i) + n);
                                    this.isPunchOut && (this.ctx.globalCompositeOperation = "destination-out"),
                                    this.ctx.beginPath(),
                                    this.ctx.arc(this.rect.width / 2, r ? 0 : this.rect.width / 2, a + (r ? o : -o), g, f, r),
                                    this.ctx.stroke(),
                                    this.ctx.globalCompositeOperation = "source-over",
                                    this.ctx.strokeStyle = this.textSettings.backgroundColor,
                                    this.ctx.lineWidth = this.textSettings.height + 2 * this.textSettings.padding
                                }
                                t += Math.round(e + 3 * this.textSettings.padding + l)
                            }
                            this.ctx.restore(),
                            c = !0
                        }
                    let p = 0;
                    if (o) {
                        p = (u / 2 - a) / (c ? e.replace(/\s/g, "").length : e.length + 1) / 2,
                        a = c ? u / 2 : u / 2 - 2 * p
                    }
                    if (this.textSettings.underline && !this.isWordBackground) {
                        let e = m - this.textSettings.height / 2;
                        if (e < this.textSettings.height) {
                            const t = Math.ceil(.06 * this.textSettings.height);
                            let i = (a - 2 * Math.round(this.textSettings.padding + d)) / (m * Math.PI * 2) * 360 * (Math.PI / 180 / 2)
                              , s = r ? 90 : 270
                              , o = s * (Math.PI / 180) - i
                              , l = s * (Math.PI / 180) + i;
                            const c = Math.round(.5 * (this.textSettings.baseline + t) + n);
                            this.ctx.save(),
                            this.isPunchOut && (this.ctx.globalCompositeOperation = "destination-out"),
                            this.fill.addToCanvasStrokeStyle(this.ctx),
                            this.ctx.lineWidth = t,
                            this.ctx.beginPath(),
                            r ? this.ctx.arc(this.rect.width / 2, 0, e + c, o, l) : this.ctx.arc(this.rect.width / 2, this.rect.width / 2, e - c, o, l),
                            this.ctx.stroke(),
                            this.ctx.restore()
                        }
                    }
                    if (this.ctx.save(),
                    e.length > 0) {
                        const t = .5 * this.rect.width
                          , o = r ? 0 : .5 * this.rect.width;
                        null === (s = this.fill) || void 0 === s || s.addToCanvasFillStyle(this.ctx, -t, -o),
                        this.ctx.translate(t, o);
                        let h = r ? m - this.textSettings.height - this.textSettings.ascent : -m - this.textSettings.ascent;
                        this.ctx.textAlign = "center";
                        let g = r ? -1 : 1
                          , f = c ? 2 * d + 2 * this.textSettings.padding : 2 * this.textSettings.padding + 2 * d;
                        this.ctx.rotate((a - f) / u * Math.PI * -g),
                        this.ctx.textAlign = "center";
                        for (var y = 0; y < e.length; y++) {
                            if (c && " " === e[y]) {
                                if (y > 0 && " " === e[y - 1])
                                    continue;
                                this.ctx.rotate((3 * this.textSettings.padding + l + d) / u * (2 * Math.PI) * g);
                                continue
                            }
                            let t = this.ctx.measureText(e[y]).width / 2;
                            this.ctx.rotate((t + p) / u * Math.PI * 2 * g),
                            this.drawChar(e[y], 0, h + n, i),
                            this.ctx.rotate((t + d + p) / u * Math.PI * 2 * g)
                        }
                    }
                    this.ctx.restore()
                }
                ,
                this.drawCircleLine = (e, t, a, n, i) => {
                    var s;
                    const r = this.textSettings.curveFlip
                      , o = this.textSettings.curveSpread
                      , l = this.textSettings.getLineSpacing()
                      , d = this.textSettings.getLetterSpacing();
                    let c = !1
                      , m = this.rect.width / 2 - t
                      , u = m * Math.PI * 2;
                    if (this.textSettings.background)
                        if (this.textSettings.backgroundType === ae.BACKGROUND_LINE) {
                            let e = m - this.textSettings.height / 2;
                            e > this.textSettings.height && (this.ctx.save(),
                            this.ctx.strokeStyle = this.textSettings.backgroundColor,
                            this.ctx.lineWidth = this.textSettings.height + 2 * this.textSettings.padding,
                            this.ctx.beginPath(),
                            this.ctx.ellipse(this.rect.width / 2, this.rect.width / 2, e, e, 0, 0, 2 * Math.PI),
                            this.ctx.stroke(),
                            this.ctx.restore())
                        } else if (this.textSettings.backgroundType === ae.BACKGROUND_WORD) {
                            let t = o ? this.textSettings.padding / 2 + l / 2 - u / 2 : this.textSettings.padding / 2 + l / 2 - a / 2
                              , i = (u - a) / e.replace(/\s/g, "").length;
                            this.ctx.save(),
                            this.ctx.strokeStyle = this.textSettings.backgroundColor,
                            this.ctx.lineWidth = this.textSettings.height + 2 * this.textSettings.padding;
                            let s = e.split(" ").filter((e => e));
                            for (var h = 0; h < s.length; h++) {
                                let e = this.measureTextWidth(s[h], d, !0);
                                o && (e += i * s[h].length);
                                let a = m - this.textSettings.height / 2;
                                if (a < this.textSettings.height)
                                    continue;
                                let c = (e + 2 * this.textSettings.padding) / u * 360 * (Math.PI / 180)
                                  , p = t / u * 360 * (Math.PI / 180)
                                  , y = r ? 90 : 270
                                  , g = y * (Math.PI / 180) + (r ? -p : p)
                                  , f = y * (Math.PI / 180) + (r ? -(c + p) : c + p);
                                if (this.ctx.beginPath(),
                                this.ctx.arc(this.rect.width / 2, this.rect.width / 2, a, g, f, r),
                                this.ctx.stroke(),
                                this.textSettings.underline) {
                                    const i = Math.ceil(.06 * this.textSettings.height)
                                      , s = Math.round(this.textSettings.padding + d);
                                    this.fill.addToCanvasStrokeStyle(this.ctx),
                                    this.ctx.lineWidth = i,
                                    p = (t + s) / u * 360 * (Math.PI / 180),
                                    c = (e - 2 * d) / u * 360 * (Math.PI / 180),
                                    g = y * (Math.PI / 180) + (r ? -p : p),
                                    f = y * (Math.PI / 180) + (r ? -(c + p) : c + p);
                                    const o = Math.round(.5 * (this.textSettings.baseline + i) + n);
                                    this.isPunchOut && (this.ctx.globalCompositeOperation = "destination-out"),
                                    this.ctx.beginPath(),
                                    this.ctx.arc(this.rect.width / 2, this.rect.width / 2, a + (r ? o : -o), g, f, r),
                                    this.ctx.stroke(),
                                    this.ctx.globalCompositeOperation = "source-over",
                                    this.ctx.strokeStyle = this.textSettings.backgroundColor,
                                    this.ctx.lineWidth = this.textSettings.height + 2 * this.textSettings.padding
                                }
                                t += Math.round(e + 3 * this.textSettings.padding + l)
                            }
                            this.ctx.restore(),
                            c = !0
                        }
                    let p = 0;
                    if (o) {
                        p = (u - a) / (c ? e.replace(/\s/g, "").length : e.length + 1) / 2,
                        a = c ? u : u - 2 * p
                    }
                    if (this.textSettings.underline && !this.isWordBackground) {
                        let e = m - this.textSettings.height / 2;
                        if (e > this.textSettings.height) {
                            const t = Math.ceil(.06 * this.textSettings.height);
                            let i = (a - 2 * Math.round(this.textSettings.padding + d)) / (m * Math.PI * 2) * 360 * (Math.PI / 180 / 2)
                              , s = r ? 90 : 270
                              , o = s * (Math.PI / 180) - i
                              , l = s * (Math.PI / 180) + i;
                            const c = Math.round(.5 * (this.textSettings.baseline + t) + n);
                            this.ctx.save(),
                            this.isPunchOut && (this.ctx.globalCompositeOperation = "destination-out"),
                            this.fill.addToCanvasStrokeStyle(this.ctx),
                            this.ctx.lineWidth = t,
                            this.ctx.beginPath(),
                            r ? this.ctx.arc(this.rect.width / 2, this.rect.width / 2, e + c, o, l) : this.ctx.arc(this.rect.width / 2, this.rect.width / 2, e - c, o, l),
                            this.ctx.stroke(),
                            this.ctx.restore()
                        }
                    }
                    if (this.ctx.save(),
                    e.length > 0) {
                        const t = .5 * this.rect.width
                          , o = .5 * this.rect.height;
                        null === (s = this.fill) || void 0 === s || s.addToCanvasFillStyle(this.ctx, -t, -o),
                        this.ctx.translate(t, o);
                        let h = r ? m - this.textSettings.height - this.textSettings.ascent : -m - this.textSettings.ascent
                          , g = r ? -1 : 1
                          , f = c ? 2 * d + 3 * this.textSettings.padding + l : this.measureTextWidth(" ", d, !0);
                        this.ctx.rotate((a - f) / u * Math.PI * -g),
                        this.ctx.textAlign = "center";
                        for (var y = 0; y < e.length; y++) {
                            if (c && " " === e[y]) {
                                if (y > 0 && " " === e[y - 1])
                                    continue;
                                this.ctx.rotate((3 * this.textSettings.padding + l + d) / u * (2 * Math.PI) * g);
                                continue
                            }
                            let t = this.ctx.measureText(e[y]).width / 2;
                            this.ctx.rotate((t + p) / u * Math.PI * 2 * g),
                            this.drawChar(e[y], 0, h + n, i),
                            this.ctx.rotate((t + d + p) / u * Math.PI * 2 * g)
                        }
                    }
                    this.ctx.restore()
                }
                ,
                this.drawArcLine = (e, t, a, n, i) => {
                    var s;
                    const r = this.textSettings.getLineSpacing()
                      , o = this.textSettings.getLetterSpacing();
                    let[l,d] = this.calculateArcRadius()
                      , c = l - t
                      , m = c * Math.PI * 2
                      , u = this.textSettings.curveAmount < 0
                      , h = !1;
                    if (this.textSettings.background)
                        if (this.textSettings.backgroundType === ae.BACKGROUND_WORD) {
                            let t = -a / 2;
                            this.ctx.save(),
                            this.ctx.strokeStyle = this.textSettings.backgroundColor,
                            this.ctx.lineWidth = this.textSettings.height + 2 * this.textSettings.padding;
                            let i = e.split(" ").filter((e => e));
                            for (var p = 0; p < i.length; p++) {
                                let e = this.measureTextWidth(i[p], o, !0)
                                  , a = c - this.textSettings.height / 2;
                                if (a < this.textSettings.height)
                                    continue;
                                let s = (e + 2 * this.textSettings.padding) / m * 360 * (Math.PI / 180)
                                  , d = t / m * 360 * (Math.PI / 180)
                                  , h = u ? this.canvas.height - l : l
                                  , y = u ? 90 : 270
                                  , g = y * (Math.PI / 180) + (u ? -d : d)
                                  , f = y * (Math.PI / 180) + (u ? -(s + d) : s + d);
                                if (this.ctx.beginPath(),
                                u ? this.ctx.arc(this.rect.width / 2, h, a, f, g) : this.ctx.arc(this.rect.width / 2, h, a, g, f),
                                this.ctx.stroke(),
                                this.textSettings.underline) {
                                    const i = Math.ceil(.06 * this.textSettings.height)
                                      , r = Math.round(this.textSettings.padding + o);
                                    this.fill.addToCanvasStrokeStyle(this.ctx),
                                    this.ctx.lineWidth = i,
                                    d = (t + r) / m * 360 * (Math.PI / 180),
                                    s = (e - 2 * o) / m * 360 * (Math.PI / 180),
                                    g = y * (Math.PI / 180) + (u ? -d : d),
                                    f = y * (Math.PI / 180) + (u ? -(s + d) : s + d);
                                    const l = Math.round(.5 * (this.textSettings.baseline + i) + n);
                                    this.ctx.beginPath(),
                                    this.isPunchOut && (this.ctx.globalCompositeOperation = "destination-out"),
                                    u ? this.ctx.arc(this.rect.width / 2, h, a + l, f, g) : this.ctx.arc(this.rect.width / 2, h, a - l, g, f),
                                    this.ctx.stroke(),
                                    this.ctx.globalCompositeOperation = "source-over",
                                    this.ctx.strokeStyle = this.textSettings.backgroundColor,
                                    this.ctx.lineWidth = this.textSettings.height + 2 * this.textSettings.padding
                                }
                                t += Math.round(e + 3 * this.textSettings.padding + r)
                            }
                            this.ctx.restore(),
                            h = !0
                        } else if (this.textSettings.backgroundType === ae.BACKGROUND_LINE) {
                            let e = c - this.textSettings.height / 2;
                            if (e > this.textSettings.height) {
                                let t = a / (c * Math.PI * 2) * 360 * (Math.PI / 180 / 2)
                                  , n = u ? this.canvas.height - l : l
                                  , i = u ? 90 : 270
                                  , s = i * (Math.PI / 180) - t
                                  , r = i * (Math.PI / 180) + t;
                                this.ctx.save(),
                                this.isPunchOut && (this.ctx.globalCompositeOperation = "destination-out"),
                                this.ctx.strokeStyle = this.textSettings.backgroundColor,
                                this.ctx.lineWidth = this.textSettings.height + 2 * this.textSettings.padding,
                                this.ctx.beginPath(),
                                this.ctx.arc(this.rect.width / 2, n, e, s, r),
                                this.ctx.stroke(),
                                this.ctx.restore()
                            }
                        }
                    if (this.textSettings.underline && !this.isWordBackground) {
                        let e = c - this.textSettings.height / 2;
                        if (e > this.textSettings.height) {
                            const t = Math.ceil(.06 * this.textSettings.height);
                            let i = (a - 2 * Math.round(this.textSettings.padding + o)) / (c * Math.PI * 2) * 360 * (Math.PI / 180 / 2)
                              , s = u ? this.canvas.height - l : l
                              , r = u ? 90 : 270
                              , d = r * (Math.PI / 180) - i
                              , m = r * (Math.PI / 180) + i;
                            const h = Math.round(.5 * (this.textSettings.baseline + t) + n);
                            this.ctx.save(),
                            this.isPunchOut && (this.ctx.globalCompositeOperation = "destination-out"),
                            this.fill.addToCanvasStrokeStyle(this.ctx),
                            this.ctx.lineWidth = t,
                            this.ctx.beginPath(),
                            u ? this.ctx.arc(this.rect.width / 2, s, e + h, d, m) : this.ctx.arc(this.rect.width / 2, s, e - h, d, m),
                            this.ctx.stroke(),
                            this.ctx.restore()
                        }
                    }
                    if (this.ctx.save(),
                    e.length > 0) {
                        let t = u ? -1 : 1
                          , d = u ? c - this.textSettings.height - this.textSettings.ascent : -c - this.textSettings.ascent;
                        this.ctx.textAlign = "center";
                        const p = .5 * this.ctx.canvas.width
                          , g = u ? this.canvas.height - l : l;
                        this.ctx.translate(p, g),
                        null === (s = this.fill) || void 0 === s || s.addToCanvasFillStyle(this.ctx, -p, -g),
                        this.ctx.rotate((a - 2 * o - 2 * this.textSettings.padding) / m * Math.PI * -t);
                        for (var y = 0; y < e.length; y++) {
                            if (h && " " === e[y]) {
                                if (y > 0 && " " === e[y - 1])
                                    continue;
                                this.ctx.rotate((3 * this.textSettings.padding + r + o) / m * (2 * Math.PI) * t);
                                continue
                            }
                            let a = this.ctx.measureText(e[y]).width;
                            a / m * Math.PI * 2 > 5e-4 ? (this.ctx.rotate(a / 2 / m * Math.PI * 2 * t),
                            this.drawChar(e[y], 0, d + n, i),
                            this.ctx.rotate((a / 2 + o) / m * Math.PI * 2 * t)) : (this.drawChar(e[y], a / 2, d + n, i),
                            this.ctx.rotate((a + o) / m * Math.PI * 2 * t))
                        }
                    }
                    this.ctx.restore()
                }
                ,
                this.drawLine = (e, t, a, n, i, s=!1) => {
                    var r, o;
                    let l = 0
                      , d = 0;
                    const c = this.textSettings.getLineSpacing()
                      , m = this.textSettings.getLetterSpacing()
                      , u = Math.ceil(.06 * this.textSettings.height)
                      , h = Math.round(this.textSettings.padding + m)
                      , p = e.split(" ");
                    if ("center" == this.textSettings.align ? l = Math.round((this.rect.width - a) / 2) : "right" == this.textSettings.align ? l = Math.round(this.rect.width - a) : "justify" == this.textSettings.align && p.length > 1 && a / this.rect.width > .7 && (d = this.isWordBackground ? (this.rect.width - a) / (e.split(" ").filter((e => e)).length - 1) : (this.rect.width - a) / (p.length - 1),
                    a = this.rect.width),
                    this.textSettings.background && this.textSettings.backgroundType === ae.BACKGROUND_LINE && (this.ctx.fillStyle = this.textSettings.backgroundColor,
                    this.ctx.fillRect(l, t - this.textSettings.padding, Math.round(a), this.textSettings.height + 2 * this.textSettings.padding),
                    null === (r = this.fill) || void 0 === r || r.addToCanvasFillStyle(this.ctx)),
                    this.textSettings.underline && !this.isWordBackground) {
                        const e = Math.ceil(.06 * this.textSettings.height)
                          , i = Math.round(this.textSettings.padding + m);
                        this.isPunchOut && (this.ctx.globalCompositeOperation = "destination-out"),
                        this.ctx.fillRect(l + i, t + this.textSettings.baseline + e + n, a - 2 * i, e),
                        this.ctx.globalCompositeOperation = "source-over"
                    }
                    if (0 !== d || this.isWordBackground) {
                        let e = this.ctx.measureText(" ").width;
                        for (let a = 0; a < p.length; a++) {
                            const s = this.measureTextWidth(p[a], m, !0);
                            if (this.isWordBackground) {
                                if (!p[a])
                                    continue;
                                this.ctx.fillStyle = this.textSettings.backgroundColor,
                                this.ctx.fillRect(l, t - this.textSettings.padding, Math.round(s + 2 * this.textSettings.padding), this.textSettings.height + 2 * this.textSettings.padding),
                                null === (o = this.fill) || void 0 === o || o.addToCanvasFillStyle(this.ctx),
                                e = 3 * this.textSettings.padding + c,
                                this.textSettings.underline && (this.isPunchOut && (this.ctx.globalCompositeOperation = "destination-out"),
                                this.ctx.fillRect(l + h, t + this.textSettings.baseline + u + n, Math.round(s + 2 * this.textSettings.padding) - 2 * h, u),
                                this.ctx.globalCompositeOperation = "source-over")
                            }
                            0 === m ? this.drawText(p[a], l + this.textSettings.padding + m, t - this.textSettings.ascent + n, i) : this.drawSpacedText(p[a], l + this.textSettings.padding + m, t - this.textSettings.ascent + n, m, i),
                            l += Math.round(s + e + d)
                        }
                    } else
                        0 !== m || s ? this.drawSpacedText(e, l + this.textSettings.padding + m, t - this.textSettings.ascent + n, m, i) : this.drawText(e, l + this.textSettings.padding + m, t - this.textSettings.ascent + n, i)
                }
                ,
                this.drawSpacedText = (e, t, a, n, i) => {
                    let s = 0
                      , r = "";
                    for (; s < e.length; )
                        r = e[s++],
                        this.drawChar(r, t, a, i),
                        t += this.ctx.measureText(r).width + n
                }
                ,
                this.drawText = (e, t, a, n) => {
                    this.textSettings.outline && 0 === n.x && 0 === n.y && this.ctx.strokeText(e, t, a),
                    this.isPunchOut && (this.ctx.globalCompositeOperation = "destination-out"),
                    this.ctx.fillText(e, t, a),
                    this.ctx.globalCompositeOperation = "source-over",
                    !this.textSettings.outline || 0 === n.x && 0 === n.y || this.ctx.strokeText(e, t + n.x, a + n.y)
                }
                ,
                this.drawChar = (e, t, a, n) => {
                    this.textSettings.outline && 0 === n.x && 0 === n.y && this.ctx.strokeText(e, t, a),
                    this.isPunchOut && (this.ctx.globalCompositeOperation = "destination-out"),
                    this.ctx.fillText(e, t, a),
                    this.ctx.globalCompositeOperation = "source-over",
                    !this.textSettings.outline || 0 === n.x && 0 === n.y || this.ctx.strokeText(e, t + n.x, a + n.y)
                }
                ,
                this.measureTextWidth = (e, t, a) => {
                    if (!e)
                        return 0;
                    let n = 0;
                    if (0 !== t) {
                        for (let t = 0; t < e.length; t++)
                            n += this.ctx.measureText(e[t]).width;
                        n += e.length * t
                    } else
                        n = this.ctx.measureText(e).width;
                    return a && (n += t),
                    n
                }
                ,
                this.position = (e, t) => {
                    this.rect && (void 0 !== e && (this.rect.x = e),
                    void 0 !== t && (this.rect.y = t),
                    this.bect && (this.bect.x = this.rect.x - 4 * this.textSettings.padding,
                    this.bect.y = this.rect.y - 4 * this.textSettings.padding))
                }
                ,
                this.scale = (e, t) => {
                    this.textSettings.setSize(Math.round(this.textSettings.size * t)),
                    this.rect.x = Math.round(this.rect.x * e),
                    this.rect.y = Math.round(this.rect.y * t),
                    this.rect.width = Math.round(this.rect.width * e),
                    this.render()
                }
                ,
                this.calculate = (e, t) => {
                    this.rect.x = Math.round(e.x),
                    this.rect.width = Math.round(t.x - e.x),
                    this.rect.width < 20 && (this.rect.width = 20),
                    this.render()
                }
                ,
                this.setWidth = e => {
                    this.rect.width = Math.round(e),
                    this.rect.width < 20 && (this.rect.width = 20),
                    this.render()
                }
                ,
                this.getHeight = () => this.textSettings.height,
                this.setHeightScale = e => {
                    let t = Math.round(this.textSettings.size * e);
                    this.setTextSize(t > 1e3 ? 1e3 : t)
                }
                ,
                this.rotate = e => {
                    this.rect.rotation += e ? -90 : 90
                }
                ,
                this.rasterize = () => {
                    let e = this.baked ? this.baked : this.canvas
                      , t = this.bect ? this.bect.clone() : this.rect.clone();
                    const a = new me(y.Os(),this.settings.name,e,t,this.settings.locked);
                    return a.settings = Object.assign({}, this.settings),
                    a.applyTransform(),
                    a
                }
                ,
                this.clone = (e=!1) => {
                    let t = new ue(e ? this.id : y.Os(),this.text,this.rect.clone(),this.textSettings.clone());
                    return t.settings = Object.assign({}, this.settings),
                    t.animation = ce.clone(this.animation),
                    t.rect = this.rect.clone(),
                    t.canvas = y.oM(this.canvas),
                    t.prepare(),
                    t
                }
                ,
                this.textSettings = n,
                this.text = t,
                this.rect = a
            }
            drawCurveLine(e, t, a, n, i) {
                switch (this.textSettings.curveType) {
                case "arc":
                    this.drawArcLine(e, t, a, n, i);
                    break;
                case "circle":
                    this.drawCircleLine(e, t, a, n, i);
                    break;
                case "half":
                    this.drawHalfLine(e, t, a, n, i)
                }
            }
        }
        class he {
            static roundRect(e, t, a, n, i, s=0) {
                const r = Math.min(n / 2, i / 2, s);
                e instanceof Path2D || e.beginPath(),
                e.moveTo(t + r, a),
                e.lineTo(t + n - r, a),
                e.quadraticCurveTo(t + n, a, t + n, a + r),
                e.lineTo(t + n, a + i - r),
                e.quadraticCurveTo(t + n, a + i, t + n - r, a + i),
                e.lineTo(t + r, a + i),
                e.quadraticCurveTo(t, a + i, t, a + i - r),
                e.lineTo(t, a + r),
                e.quadraticCurveTo(t, a, t + r, a),
                e.closePath()
            }
            static cutRect(e, t, a, n, i, s=0) {
                const r = Math.min(n / 2, i / 2, s);
                e.beginPath(),
                e.moveTo(t + r, a),
                e.lineTo(t + n - r, a),
                e.lineTo(t + n, a + r),
                e.lineTo(t + n, a + i - r),
                e.lineTo(t + n - r, a + i),
                e.lineTo(t + r, a + i),
                e.lineTo(t, a + i - r),
                e.lineTo(t, a + r),
                e.lineTo(t + r, a),
                e.closePath()
            }
        }
        he.ellipse = (e, t, a) => {
            let n = .5 * (a.x - t.x)
              , i = .5 * (a.y - t.y)
              , s = t.x + n
              , r = t.y + i
              , o = .01
              , l = o
              , d = 2 * Math.PI - o;
            for (e.beginPath(),
            e.moveTo(s + n * Math.cos(0), r + i * Math.sin(0)); l < d; l += o)
                e.lineTo(s + n * Math.cos(l), r + i * Math.sin(l));
            e.closePath()
        }
        ,
        he.triangle = (e, t, a) => {
            e.beginPath(),
            e.moveTo(t.x, t.y),
            e.lineTo(a.x, a.y),
            e.lineTo(t.x - (a.x - t.x), a.y),
            e.lineTo(t.x, t.y),
            e.closePath()
        }
        ,
        he.star = (e, t, a) => {
            let n = Math.sqrt(Math.pow(a.x - t.x, 2) + Math.pow(a.y - t.y, 2));
            e.beginPath(),
            e.translate(t.x, t.y),
            e.moveTo(0, 0 - n);
            for (var i = 0; i < 5; i++)
                e.rotate(Math.PI / 5),
                e.lineTo(0, 0 - .5 * n),
                e.rotate(Math.PI / 5),
                e.lineTo(0, 0 - n);
            e.translate(-t.x, -t.y)
        }
        ,
        he.heart = (e, t, a) => {
            let n = Math.sqrt(Math.pow(a.x - t.x, 2) + Math.pow(a.y - t.y, 2))
              , i = .8 * n;
            e.save(),
            e.translate(t.x, t.y - n / 2),
            e.rotate(45 * Math.PI / 180),
            e.beginPath(),
            e.moveTo(0, 0),
            e.bezierCurveTo(-i, 0, -i, n, 0, n),
            e.lineTo(n, n),
            e.lineTo(n, 0),
            e.bezierCurveTo(n, -i, 0, -i, 0, 0),
            e.closePath(),
            e.restore()
        }
        ,
        he.rectangle = (e, t, a, n, i) => {
            e.beginPath(),
            e.moveTo(t, a),
            e.lineTo(t + n, a),
            e.lineTo(t + n, a + i),
            e.lineTo(t, a + i),
            e.lineTo(t, a),
            e.closePath()
        }
        ,
        he.line = (e, t, a) => {
            e.beginPath(),
            e.moveTo(t.x, t.y),
            e.lineTo(a.x, a.y)
        }
        ,
        he.bezier = (e, t, a, n) => {
            e.beginPath(),
            e.moveTo(t.x, t.y),
            e.quadraticCurveTo(n.x, n.y, a.x, a.y)
        }
        ,
        he.arc = (e, t, a) => {
            e.beginPath(),
            e.arc(t.x, t.y, a, 0, 2 * Math.PI)
        }
        ,
        he.fill = (e, t, a, n, i) => {
            switch (t) {
            case "rectangle":
                e.fillRect(a.x, a.y, n.x - a.x, n.y - a.y);
                break;
            case "rounded":
                const t = D.A.fromPoints([a, n]);
                he.roundRect(e, t.x, t.y, t.width, t.height, i),
                e.fill();
                break;
            case "ellipse":
                he.ellipse(e, a, n),
                e.fill();
                break;
            case "triangle":
                he.triangle(e, a, n),
                e.fill();
                break;
            case "star":
                he.star(e, a, n),
                e.fill();
                break;
            case "heart":
                he.heart(e, a, n),
                e.fill();
                break;
            case "line":
                he.line(e, a, n),
                e.stroke()
            }
        }
        ,
        he.stroke = (e, t, a, n, i) => {
            switch (t) {
            case "rectangle":
                e.strokeRect(a.x, a.y, n.x - a.x, n.y - a.y);
                break;
            case "rounded":
                const t = D.A.fromPoints([a, n]);
                he.roundRect(e, t.x, t.y, t.width, t.height, i),
                e.stroke();
                break;
            case "ellipse":
                he.ellipse(e, a, n),
                e.stroke();
                break;
            case "triangle":
                he.triangle(e, a, n),
                e.stroke();
                break;
            case "star":
                he.star(e, a, n),
                e.stroke();
                break;
            case "heart":
                he.heart(e, a, n),
                e.stroke();
                break;
            case "line":
                he.line(e, a, n),
                e.stroke()
            }
        }
        ;
        const pe = he;
        class ye {
            constructor(e) {
                this.id = e,
                this.texture = null
            }
            createTexture(e, t, a) {
                this.texture = e.createTexture(),
                this.width = t,
                this.height = a
            }
            uploadData(e, t, a=e.NEAREST) {
                e.bindTexture(e.TEXTURE_2D, this.texture),
                e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, 4),
                e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
                e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE),
                e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, a),
                e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, a),
                e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, e.RGBA, e.UNSIGNED_BYTE, t)
            }
            setTexture(e) {
                this.texture = e
            }
            destroy(e) {
                e.deleteTexture(this.texture)
            }
        }
        class ge {
            constructor(e, t, a) {
                this.uniform = {},
                this.attribute = {},
                this.texture = new Map,
                this.program = e.createProgram(),
                e.attachShader(this.program, this.compile(e, t, e.VERTEX_SHADER)),
                e.attachShader(this.program, this.compile(e, a, e.FRAGMENT_SHADER)),
                e.linkProgram(this.program),
                e.useProgram(this.program),
                e.getProgramParameter(this.program, e.LINK_STATUS) || console.log(e.getProgramInfoLog(this.program));
                const n = this.collect(t, "attribute");
                for (const [l,d] of n)
                    this.attribute[l] = e.getAttribLocation(this.program, l);
                let i = [];
                const s = this.collect(t, "uniform");
                for (const [l,d] of s)
                    this.uniform[l] = e.getUniformLocation(this.program, l);
                const r = this.collect(a, "uniform");
                for (const [l,d] of r)
                    this.uniform[l] = e.getUniformLocation(this.program, l),
                    "sampler2D" === d && i.push(l);
                for (var o in i) {
                    let t = i[o]
                      , a = e.getUniformLocation(this.program, t);
                    "texture" === t ? (e.uniform1i(a, 0),
                    this.texture.set(0, new ye(t))) : (e.uniform1i(a, 1),
                    this.texture.set(1, new ye(t)))
                }
            }
            collect(e, t) {
                const a = []
                  , n = new RegExp("\\b" + t + " (\\w+) (\\w+)","ig");
                return e.replace(n, (function(e, t, n) {
                    return a.push([n, t]),
                    e
                }
                )),
                a
            }
            compile(e, t, a) {
                var n = e.createShader(a);
                return e.shaderSource(n, t),
                e.compileShader(n),
                e.getShaderParameter(n, e.COMPILE_STATUS) ? n : (console.log(e.getShaderInfoLog(n)),
                console.log(t),
                null)
            }
            getTextureById(e) {
                let t = null;
                return this.texture.forEach((function(a) {
                    a.id !== e || (t = a)
                }
                )),
                t || (console.error("Having no texture that is named `%s`.", e),
                null)
            }
            destroy(e) {
                e.deleteProgram(this.program),
                this.texture.forEach((function(t) {
                    t.destroy(e)
                }
                )),
                this.texture.clear()
            }
        }
        class fe {
            constructor(e, t, a) {
                this.color = e,
                this.blend = t,
                this.amount = a
            }
        }
        class _e {
            constructor(e, t, a) {
                this.framebuffer = e,
                this.renderbuffer = t,
                this.texture = a
            }
            destroy(e) {
                e.deleteFramebuffer(this.framebuffer),
                e.deleteRenderbuffer(this.renderbuffer),
                e.deleteTexture(this.texture)
            }
        }
        class be {
            constructor(e, t, a, n=1) {
                this.highlight = e,
                this.midtone = t,
                this.shadow = a,
                this.amount = n
            }
            static fillPaletteMap(e, t) {
                if (e.midtone) {
                    for (let a = 0; a < 128; a++) {
                        let n = a / 127;
                        t.data[4 * a] = Math.round(e.midtone.r * n + e.shadow.r * (1 - n)),
                        t.data[4 * a + 1] = Math.round(e.midtone.g * n + e.shadow.g * (1 - n)),
                        t.data[4 * a + 2] = Math.round(e.midtone.b * n + e.shadow.b * (1 - n))
                    }
                    for (let a = 128; a < 256; a++) {
                        let n = (a - 127) / 128;
                        t.data[4 * a] = Math.round(e.highlight.r * n + e.midtone.r * (1 - n)),
                        t.data[4 * a + 1] = Math.round(e.highlight.g * n + e.midtone.g * (1 - n)),
                        t.data[4 * a + 2] = Math.round(e.highlight.b * n + e.midtone.b * (1 - n))
                    }
                } else
                    for (let a = 0; a < 256; ++a) {
                        let n = a / 255;
                        t.data[4 * a] = Math.round(e.highlight.r * n + e.shadow.r * (1 - n)),
                        t.data[4 * a + 1] = Math.round(e.highlight.g * n + e.shadow.g * (1 - n)),
                        t.data[4 * a + 2] = Math.round(e.highlight.b * n + e.shadow.b * (1 - n))
                    }
            }
        }
        class ve {
            constructor(e, t) {
                this.name = e,
                this.value = t
            }
        }
        class Me {
            constructor(e=0, t=255, a=0, n=255, i=1, s=.5) {
                this.minin = e,
                this.maxin = t,
                this.minout = a,
                this.maxout = n,
                this.midin = i,
                this.mid = s,
                this.map = e => (e = (e - this.minin) / (this.maxin - this.minin),
                e = Math.pow(e, this.midin),
                (e = this.minout + e * (this.maxout - this.minout)) > this.maxout ? e = this.maxout : e < this.minout && (e = this.minout),
                Math.round(e))
            }
            reset() {
                this.minout = 0,
                this.maxout = 255,
                this.midin = 1,
                this.minin = 0,
                this.maxin = 255,
                this.mid = .5
            }
            isFlat() {
                return Boolean(0 == this.minout && 255 == this.maxout && .5 == this.mid && 0 == this.minin && 255 == this.maxin)
            }
            setMid(e) {
                this.mid = (e - this.minin) / (this.maxin - this.minin),
                this.midin = this.midToIn(this.mid)
            }
            midToIn(e) {
                return Math.min(Math.max(Math.pow(9.99, 2 * e - 1), .1), 9.99)
            }
            static fillPaletteMap(e, t) {
                for (let a = 0; a < 256; ++a) {
                    let n = e.map(a);
                    t.data[4 * a] = n,
                    t.data[4 * a + 1] = n,
                    t.data[4 * a + 2] = n
                }
            }
            static fillRGBPaletteMap(e, t, a, n) {
                for (let i = 0; i < 256; ++i)
                    n.data[4 * i] = e ? e.map(i) : i,
                    n.data[4 * i + 1] = t ? t.map(i) : i,
                    n.data[4 * i + 2] = a ? a.map(i) : i
            }
        }
        class we {
            constructor(e, t) {
                var a, n, i, s, r, o, l, d, c, m, u, h, p;
                if (null != e && null != t) {
                    for (d = e.length - 1,
                    s = [],
                    u = [],
                    l = [],
                    m = [],
                    h = [],
                    n = [],
                    a = [],
                    i = [],
                    o = [],
                    c = [],
                    r = 0; 0 <= d ? r < d : r > d; 0 <= d ? r += 1 : r -= 1)
                        s[r] = e[r + 1] - e[r],
                        o[r] = t[r + 1] - t[r],
                        c[r] = o[r] / s[r];
                    for (r = 1; 1 <= d ? r < d : r > d; 1 <= d ? r += 1 : r -= 1)
                        u[r] = 3 / s[r] * (t[r + 1] - t[r]) - 3 / s[r - 1] * (t[r] - t[r - 1]);
                    for (l[0] = 1,
                    m[0] = 0,
                    h[0] = 0,
                    r = 1; 1 <= d ? r < d : r > d; 1 <= d ? r += 1 : r -= 1)
                        l[r] = 2 * (e[r + 1] - e[r - 1]) - s[r - 1] * m[r - 1],
                        m[r] = s[r] / l[r],
                        h[r] = (u[r] - s[r - 1] * h[r - 1]) / l[r];
                    for (l[d] = 1,
                    h[d] = 0,
                    n[d] = 0,
                    r = p = d - 1; p <= 0 ? r <= 0 : r >= 0; p <= 0 ? r += 1 : r -= 1)
                        n[r] = h[r] - m[r] * n[r + 1],
                        a[r] = (t[r + 1] - t[r]) / s[r] - s[r] * (n[r + 1] + 2 * n[r]) / 3,
                        i[r] = (n[r + 1] - n[r]) / (3 * s[r]);
                    this.x = e.slice(0, d + 1),
                    this.a = t.slice(0, d),
                    this.b = a,
                    this.c = n.slice(0, d),
                    this.d = i
                }
            }
            interpolate(e) {
                var t, a, n;
                for (a = n = this.x.length - 1; (n <= 0 ? a <= 0 : a >= 0) && !(this.x[a] <= e); n <= 0 ? a += 1 : a -= 1)
                    ;
                return t = e - this.x[a],
                this.a[a] + this.b[a] * t + this.c[a] * Math.pow(t, 2) + this.d[a] * Math.pow(t, 3)
            }
        }
        class Te {
            constructor(e) {
                this.preset = e
            }
            static createCurveSet(e) {
                const t = new Array
                  , a = new Array
                  , n = new Array
                  , i = new Array;
                for (let s = 0; s < e.preset[0].length; s += 2)
                    t.push(new A.A(e.preset[0][s],e.preset[0][s + 1]));
                for (let s = 0; s < e.preset[1].length; s += 2)
                    a.push(new A.A(e.preset[1][s],e.preset[1][s + 1]));
                for (let s = 0; s < e.preset[2].length; s += 2)
                    n.push(new A.A(e.preset[2][s],e.preset[2][s + 1]));
                for (let s = 0; s < e.preset[3].length; s += 2)
                    i.push(new A.A(e.preset[3][s],e.preset[3][s + 1]));
                return new ke(1,t,a,n,i)
            }
        }
        class ke {
            constructor(e=255, t=[], a=[], n=[], i=[]) {
                this.scale = e,
                this.rgb = t,
                this.red = a,
                this.green = n,
                this.blue = i,
                this.percent = 1
            }
            static getInterpolation(e, t) {
                let a = []
                  , n = []
                  , i = new Float32Array(256);
                for (var s = 0; s < t.length; s++)
                    a.push(t[s].x * e),
                    n.push(t[s].y * e);
                let r = new we(a,n);
                for (var o = 0; o < Math.ceil(a[0]); o++)
                    i[o] = n[0];
                for (o = Math.ceil(a[0]); o < Math.ceil(a[a.length - 1]); o++)
                    i[o] = r.interpolate(o);
                for (o = Math.ceil(a[a.length - 1]); o < 256; o++)
                    i[o] = n[n.length - 1];
                return i
            }
            static fillPaletteMap(e, t) {
                let a = ke.getInterpolation(e.scale, e.rgb)
                  , n = ke.getInterpolation(e.scale, e.red)
                  , i = ke.getInterpolation(e.scale, e.green)
                  , s = ke.getInterpolation(e.scale, e.blue);
                for (let r = 0; r < 256; ++r) {
                    let o = r - a[r];
                    t.data[4 * r] = r - Math.round((r - (n[r] - o)) * e.percent),
                    t.data[4 * r + 1] = r - Math.round((r - (i[r] - o)) * e.percent),
                    t.data[4 * r + 2] = r - Math.round((r - (s[r] - o)) * e.percent)
                }
            }
        }
        class De {
            static init() {
                De.presets || (De.grouping = {
                    "b-w": ["agnes", "conny", "gordon", "harrison", "henry", "logan", "olay", "porter", "sampi", "tom", "vinny"],
                    friends: ["aladin", "alex", "amber", "anne", "antonio", "bob", "greg", "hagrid", "harry", "ivan", "jean", "josh", "karen", "lucas", "melissa", "peter", "salomon", "sara", "sophia", "tony"],
                    instage: ["borg", "carl", "coco", "doris", "doug", "earl", "sun", "blues", "country", "lemonpell", "tiny dc", "minker"],
                    retro: ["vib", "ranguit", "rangeen", "creamlow", "sven", "yenely", "ragwarm", "greered", "danligter", "garage"],
                    tuning: ["punch", "bright", "contrast", "vivid", "clairify"],
                    portrait: ["matte", "deep", "film", "sunny", "gritty"],
                    food: ["berry", "ensalat", "morning", "corn", "sharp"],
                    urban: ["cement", "style", "mold", "shimmer", "stalker", "sham"],
                    nature: ["beach", "flower", "forest"],
                    colors: ["strawberry", "clementine", "pear", "apple", "blueberry", "grapes", "dragon", "superone", "tonola", "reddish", "fellowing", "grassland", "springs", "justblues", "bluesteel", "flowerpot", "stinker", "violiin", "blupur", "beyllo", "wifortress"],
                    artzy: ["poster", "glitch", "mozak", "frank", "pinvet", "night vision", "darkstreet", "blomberg", "lolita", "atonic"]
                },
                De.presets = {
                    flower: [new ve("vibrance",.2), new ve("saturation",.1), new ve("temperature",.1)],
                    forest: [new ve("saturation",-.2), new ve("vibrance",1), new ve("clarity",.2), new ve("temperature",.16), new ve("tint",.2), new ve("curves",new Te([[0, 0, 65, 52, 173, 190, 236, 255], [0, 0, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255]]))],
                    beach: [new ve("saturation",.2), new ve("vibrance",.2), new ve("curves",new Te([[0, 0, 68, 56, 199, 208, 255, 255], [0, 0, 255, 255], [0, 0, 98, 97, 196, 201, 255, 255], [0, 0, 87, 85, 201, 182, 255, 255]])), new ve("temperature",.1)],
                    sham: [new ve("saturation",-.3), new ve("fill",new fe(new R(153,221,255),"overlay",.3)), new ve("curves",new Te([[60, 31, 191, 217], [0, 0, 120, 134, 255, 255], [0, 0, 255, 255], [0, 0, 120, 144, 255, 255]]))],
                    stalker: [new ve("curves",new Te([[62, 64, 190, 191], [0, 0, 133, 125, 255, 255], [0, 0, 54, 65, 209, 208, 255, 255], [60, 62, 96, 99, 240, 230, 255, 255]])), new ve("contrast",.1), new ve("saturation",-.2)],
                    shimmer: [new ve("temperature",-.2), new ve("tint",-.12), new ve("fill",new fe(new R(190,11,255),"screen",.12)), new ve("curves",new Te([[8, 23, 244, 227], [0, 0, 255, 255], [0, 0, 131, 124, 255, 255], [0, 0, 149, 112, 255, 255]]))],
                    mold: [new ve("curves",new Te([[65, 64, 233, 233], [0, 0, 138, 121, 255, 255], [0, 0, 60, 75, 184, 184, 255, 255], [0, 0, 64, 75, 181, 176, 255, 255]])), new ve("contrast",.1), new ve("saturation",-.12)],
                    style: [new ve("curves",new Te([[0, 0, 73, 74, 191, 177, 235, 221, 255, 255], [0, 26, 89, 64, 121, 126, 180, 213, 255, 255], [0, 0, 71, 50, 190, 210, 255, 255], [61, 64, 112, 97, 199, 198, 255, 255]])), new ve("vibrance",-.1), new ve("saturation",-.4), new ve("temperature",.1)],
                    cement: [new ve("curves",new Te([[0, 0, 73, 74, 191, 177, 235, 221, 255, 255], [0, 0, 255, 255], [0, 0, 60, 54, 198, 210, 255, 255], [0, 0, 73, 37, 150, 149, 199, 198, 255, 255]])), new ve("vibrance",-.1), new ve("saturation",-.1)],
                    sharp: [new ve("curves",new Te([[0, 0, 42, 20, 199, 218, 224, 246, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255]])), new ve("vibrance",.1), new ve("sharpen",.1), new ve("clarity",.1)],
                    corn: [new ve("temperature",.1), new ve("vibrance",.3), new ve("contrast",.1), new ve("curves",new Te([[0, 0, 66, 78, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255]]))],
                    morning: [new ve("tint",.18), new ve("temperature",.1), new ve("highlights",.08), new ve("levels",new Me(0,245,0,255)), new ve("curves",new Te([[64, 64, 150, 181, 254, 255], [0, 0, 122, 138, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255]])), new ve("fill",new fe(new R(194,120,41),"overlay",.2))],
                    ensalat: [new ve("highlights",.2), new ve("shadows",-.2), new ve("brightness",.1), new ve("levels",new Me(10,245,0,255)), new ve("curves",new Te([[0, 0, 135, 119, 191, 193, 255, 255], [0, 0, 255, 255], [0, 0, 129, 121, 255, 255], [0, 0, 255, 255]])), new ve("clarity",.2), new ve("sharpen",.15)],
                    berry: [new ve("vibrance",.44), new ve("curves",new Te([[0, 0, 62, 66, 121, 135, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255]])), new ve("contrast",.2), new ve("highlights",.4), new ve("shadows",-.2), new ve("levels",new Me(20,255,0,255))],
                    gritty: [new ve("saturation",-.4), new ve("levels",new Me(20,255,0,255)), new ve("curves",new Te([[0, 0, 50, 33, 128, 112, 190, 215, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255]])), new ve("clarity",1), new ve("grain",.3)],
                    sunny: [new ve("fill",new fe(new R(255,194,96),"overlay",.2)), new ve("temperature",.1), new ve("glamour",.4), new ve("clarity",.3)],
                    film: [new ve("sharpen",.2), new ve("glamour",.5), new ve("grain",.5), new ve("highlights",-.2), new ve("shadows",-.2), new ve("saturation",-.2)],
                    matte: [new ve("curves",new Te([[0, 50, 38, 56, 79, 82, 152, 153, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255]])), new ve("contrast",.12), new ve("saturation",-.1)],
                    deep: [new ve("curves",new Te([[0, 0, 117, 99, 191, 198, 255, 255], [0, 0, 71, 38, 177, 209, 255, 255], [0, 0, 236, 255], [0, 28, 75, 101, 190, 171, 254, 233]])), new ve("saturation",-.3)],
                    aladin: [new ve("curves",new Te([[0, 0, 255, 255], [0, 52, 87, 99, 255, 255], [0, 0, 106, 107, 194, 190, 254, 212], [0, 0, 166, 129, 254, 142]]))],
                    amber: [new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 98, 150, 255, 255], [0, 0, 138, 117, 255, 255], [0, 128, 254, 129]])), new ve("saturation",-.3), new ve("levels",new Me(20,235,0,255))],
                    anne: [new ve("contrast",.25), new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 78, 66, 135, 171, 255, 255], [0, 0, 99, 87, 180, 208, 255, 255], [0, 0, 94, 93, 171, 161, 255, 255]]))],
                    antonio: [new ve("glamour",.8)],
                    alex: [new ve("glamour",.6)],
                    bob: [new ve("saturation",-.6), new ve("highlights",.5)],
                    greg: [new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 74, 50, 181, 198, 255, 255], [0, 0, 61, 41, 108, 170, 158, 207, 254, 208], [0, 0, 83, 56, 168, 204, 255, 255]]))],
                    hagrid: [new ve("vibrance",.9), new ve("saturation",.1), new ve("clarity",.5), new ve("shadows",-.3)],
                    harry: [new ve("fill",new fe(new R(214,178,119),"overlay",.7)), new ve("grain",.5)],
                    ivan: [new ve("fill",new fe(new R(255,0,68),"overlay",.4)), new ve("shadows",.15), new ve("levels",new Me(6,255,0,255))],
                    jean: [new ve("levels",new Me(56,233,0,255)), new ve("saturation",-1), new ve("tint",.1), new ve("exposure",.78), new ve("bloom",.1)],
                    josh: [new ve("curves",new Te([[0, 0, 78, 52, 175, 207, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255], [0, 64, 87, 129, 254, 193]]))],
                    karen: [new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 89, 144, 255, 255], [0, 0, 138, 112, 255, 255], [0, 0, 162, 88, 255, 255]]))],
                    lucas: [new ve("tint",1), new ve("saturation",-.85), new ve("contrast",.4), new ve("shadows",1), new ve("temperature",.1)],
                    melissa: [new ve("curves",new Te([[0, 0, 255, 255], [0, 62, 255, 255], [0, 0, 255, 255], [0, 61, 254, 193]]))],
                    peter: [new ve("curves",new Te([[0, 0, 255, 255], [0, 6, 31, 20, 65, 26, 87, 51, 195, 190, 254, 230], [0, 11, 24, 27, 102, 131, 189, 195, 255, 255], [0, 40, 126, 148, 254, 177]]))],
                    salomon: [new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 83, 50, 177, 213, 255, 255], [0, 0, 69, 55, 186, 205, 255, 255], [11, 56, 254, 212]])), new ve("contrast",-.2)],
                    sara: [new ve("vibrance",1), new ve("contrast",.1), new ve("highlights",.3)],
                    sophia: [new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 140, 116, 222, 254], [0, 0, 70, 59, 182, 201, 255, 255], [0, 29, 252, 227]])), new ve("saturation",.3)],
                    tony: [new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 92, 42, 218, 252], [0, 0, 73, 75, 157, 194, 255, 255], [0, 27, 254, 227]]))],
                    agnes: [new ve("desaturate",1), new ve("contrast",.4)],
                    conny: [new ve("saturation",-.55), new ve("temperature",.25), new ve("brightness",-.25), new ve("levels",new Me(14,233,0,255)), new ve("exposure",.35), new ve("highlights",-.9)],
                    gordon: [new ve("desaturate",1), new ve("temperature",.7), new ve("tint",.3), new ve("saturation",-.2)],
                    harrison: [new ve("toning",new be(new R(255,240,215),void 0,new R(48,26,24),1)), new ve("grain",.2)],
                    henry: [new ve("toning",new be(new R(255,240,215),void 0,new R(48,26,24),1)), new ve("saturation",-.5)],
                    logan: [new ve("glamour",.5), new ve("tint",.4), new ve("saturation",-.35), new ve("toning",new be(new R(255,240,215),void 0,new R(48,26,24),.8))],
                    olay: [new ve("saturation",-1), new ve("grain",.5), new ve("vignette",.5)],
                    porter: [new ve("saturation",-1), new ve("vignette",.4), new ve("levels",new Me(50,205))],
                    tom: [new ve("desaturate",1)],
                    sampi: [new ve("toning",new be(new R(255,228,196),void 0,new R(0,0,0),1)), new ve("levels",new Me(0,217,0,255)), new ve("temperature",.3)],
                    vinny: [new ve("curves",new Te([[0, 0, 133, 111, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255], [0, 0, 133, 138, 255, 255]])), new ve("vibrance",-1), new ve("saturation",1), new ve("temperature",.8), new ve("contrast",-.1), new ve("highlights",.1)],
                    borg: [new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 94, 66, 227, 255], [0, 0, 93, 94, 179, 198, 255, 255], [0, 19, 254, 228]])), new ve("fill",new fe(new R(204,255,0),"",.1))],
                    carl: [new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 93, 64, 227, 255], [0, 0, 93, 94, 181, 189, 255, 255], [0, 19, 254, 228]])), new ve("vignette",.3), new ve("contrast",.15), new ve("saturation",-.3)],
                    coco: [new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 64, 97, 255, 255], [0, 0, 142, 122, 255, 255], [0, 0, 144, 112, 255, 255]]))],
                    doris: [new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 78, 48, 177, 209, 255, 255], [0, 0, 92, 94, 179, 208, 255, 255], [0, 52, 254, 215]])), new ve("saturation",-.2)],
                    doug: [new ve("curves",new Te([[0, 0, 255, 255], [0, 64, 255, 255], [0, 0, 255, 255], [1, 64, 252, 193]])), new ve("highlights",.5), new ve("shadows",-.3)],
                    earl: [new ve("vignette",.4), new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 222, 254], [0, 47, 223, 254], [0, 129, 222, 255]])), new ve("fill",new fe(new R(247,218,174),"multiply",.8))],
                    sun: [new ve("fill",new fe(new R(251,242,163),"multiply",.8)), new ve("vignette",-.25)],
                    blues: [new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 77, 54, 181, 207, 255, 255], [0, 0, 73, 51, 180, 209, 255, 255], [0, 0, 54, 75, 201, 185, 255, 255]]))],
                    country: [new ve("curves",new Te([[0, 0, 84, 74, 115, 105, 255, 255], [0, 0, 73, 80, 93, 124, 255, 255], [0, 0, 50, 34, 93, 105, 119, 142, 255, 255], [0, 0, 85, 85, 125, 112, 255, 255]]))],
                    lemonpell: [new ve("curves",new Te([[0, 36, 80, 84, 156, 190, 255, 255], [0, 0, 255, 255], [0, 0, 103, 105, 158, 176, 255, 255], [0, 19, 107, 83, 198, 196, 255, 255]]))],
                    "tiny dc": [new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 79, 46, 199, 217, 255, 255], [9, 1, 110, 126, 254, 232], [0, 46, 92, 103, 191, 158, 254, 205]])), new ve("grain",.3)],
                    minker: [new ve("toning",new be(new R(255,216,153),void 0,new R(26,0,77),.8)), new ve("levels",new Me(0,247,8,255)), new ve("brightness",.14), new ve("contrast",.4), new ve("vibrance",.5)],
                    superone: [new ve("toning",new be(new R(255,216,153),void 0,new R(77,0,51),.8)), new ve("levels",new Me(50,175,0,255))],
                    tonola: [new ve("toning",new be(new R(221,255,153),void 0,new R(77,0,51),.8)), new ve("levels",new Me(26,213,0,255)), new ve("saturation",.36), new ve("temperature",.22)],
                    reddish: [new ve("toning",new be(new R(255,214,147),void 0,new R(110,37,0),.8)), new ve("contrast",.3), new ve("highlights",1)],
                    fellowing: [new ve("toning",new be(new R(255,216,153),void 0,new R(77,47,0),.8)), new ve("levels",new Me(24,203,0,255)), new ve("contrast",.14), new ve("saturation",.3), new ve("temperature",.18)],
                    grassland: [new ve("toning",new be(new R(221,255,153),void 0,new R(0,77,25),.7)), new ve("levels",new Me(18,227,0,255)), new ve("contrast",.16)],
                    springs: [new ve("toning",new be(new R(221,255,153),void 0,new R(0,26,38),1)), new ve("highlights",1), new ve("levels",new Me(40,155,0,255)), new ve("shadows",1)],
                    justblues: [new ve("toning",new be(new R(198,236,255),void 0,new R(26,0,77),.79)), new ve("levels",new Me(16,189,0,255)), new ve("saturation",.2), new ve("contrast",.2)],
                    bluesteel: [new ve("toning",new be(new R(255,216,153),void 0,new R(26,0,77),.8)), new ve("levels",new Me(0,215,12,255))],
                    flowerpot: [new ve("toning",new be(new R(255,153,221),void 0,new R(51,77,0),.8)), new ve("levels",new Me(22,215,0,255)), new ve("vignette",-.2)],
                    stinker: [new ve("toning",new be(new R(255,216,153),void 0,new R(26,0,77),.8)), new ve("levels",new Me(0,247,8,255)), new ve("brightness",.14), new ve("contrast",.4)],
                    violiin: [new ve("contrast",.32), new ve("toning",new be(new R(195,166,255),void 0,new R(33,0,0),1)), new ve("levels",new Me(22,223,0,255)), new ve("exposure",.22), new ve("brightness",.12)],
                    blupur: [new ve("toning",new be(new R(255,153,221),void 0,new R(7,68,97),.8)), new ve("vibrance",.7), new ve("contrast",.3)],
                    beyllo: [new ve("vibrance",1), new ve("saturation",1), new ve("temperature",-.55), new ve("tint",.1), new ve("levels",new Me(0,255,24,249)), new ve("toning",new be(new R(255,213,0),void 0,new R(125,3,84),.76)), new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 131, 115, 255, 255], [0, 0, 136, 128, 255, 255], [0, 0, 122, 145, 255, 255]])), new ve("vignette",.28)],
                    wifortress: [new ve("toning",new be(new R(108,206,255),void 0,new R(0,26,38),1)), new ve("highlights",1), new ve("levels",new Me(40,155,0,255)), new ve("shadows",1)],
                    vib: [new ve("vibrance",.1), new ve("saturation",.5), new ve("brightness",.1), new ve("temperature",.5), new ve("levels",new Me(12,253,0,255)), new ve("highlights",.2), new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 70, 80, 198, 181, 255, 255], [0, 0, 140, 135, 255, 255], [0, 0, 74, 96, 200, 172, 255, 255]])), new ve("toning",new be(new R(255,238,210),void 0,new R(54,6,6),.07)), new ve("contrast",-.1)],
                    ranguit: [new ve("saturation",.22), new ve("temperature",.96), new ve("tint",-.28), new ve("contrast",.14), new ve("brightness",-.2), new ve("levels",new Me(0,237,56,255)), new ve("toning",new be(new R(221,255,153),void 0,new R(41,35,33),.26))],
                    rangeen: [new ve("vibrance",1), new ve("saturation",.46), new ve("temperature",.36), new ve("levels",new Me(0,251,14,255)), new ve("shadows",.34), new ve("highlights",.12), new ve("toning",new be(new R(121,255,224),void 0,new R(245,22,107),.12)), new ve("contrast",-.1), new ve("curves",new Te([[0, 0, 144, 152, 255, 255], [0, 0, 136, 107, 255, 255], [0, 0, 115, 102, 255, 255], [0, 0, 106, 91, 255, 255]]))],
                    creamlow: [new ve("vibrance",.82), new ve("saturation",-.24), new ve("temperature",1), new ve("tint",.78), new ve("contrast",-.3), new ve("levels",new Me(40,247,0,255)), new ve("highlights",.64), new ve("toning",new be(new R(221,255,153),void 0,new R(145,39,9),.29)), new ve("curves",new Te([[0, 0, 5, 13, 78, 83, 172, 162, 255, 255], [0, 0, 255, 255], [0, 0, 131, 120, 255, 255], [0, 0, 68, 61, 175, 184, 255, 255]]))],
                    sven: [new ve("vibrance",.7), new ve("temperature",.5), new ve("tint",.3), new ve("exposure",.2), new ve("contrast",-.2), new ve("levels",new Me(4,255,0,235)), new ve("highlights",-.3), new ve("shadows",.3), new ve("grain",.3), new ve("vignette",.45)],
                    yenely: [new ve("tint",.5), new ve("levels",new Me(0,235,20,255)), new ve("saturation",-.62), new ve("contrast",-.3), new ve("shadows",-.6), new ve("curves",new Te([[0, 0, 148, 105, 255, 255], [0, 0, 92, 79, 128, 227, 255, 255], [0, 0, 74, 103, 119, 172, 255, 255], [0, 0, 111, 148, 255, 255]])), new ve("highlights",1), new ve("brightness",.14), new ve("temperature",.3), new ve("vibrance",1), new ve("exposure",-.1)],
                    ragwarm: [new ve("temperature",.62), new ve("levels",new Me(32,255,0,243)), new ve("highlights",-.14), new ve("vignette",.28), new ve("toning",new be(new R(153,255,187),void 0,new R(21,55,143),.07)), new ve("curves",new Te([[0, 0, 126, 125, 255, 255], [0, 0, 255, 255], [0, 0, 130, 121, 255, 255], [0, 0, 138, 124, 255, 255]]))],
                    greered: [new ve("vibrance",.32), new ve("temperature",.4), new ve("tint",-.5), new ve("brightness",.24), new ve("contrast",-.1), new ve("vignette",.31), new ve("shadows",.38)],
                    danligter: [new ve("saturation",.86), new ve("temperature",-1), new ve("tint",-.92), new ve("brightness",.22), new ve("exposure",.22), new ve("contrast",.1), new ve("levels",new Me(0,239,0,255)), new ve("highlights",-.12), new ve("dehaze",-.12), new ve("toning",new be(new R(255,216,153),void 0,new R(0,52,77),.14)), new ve("curves",new Te([[0, 0, 255, 255], [0, 0, 96, 115, 162, 194, 255, 255], [0, 0, 101, 97, 185, 189, 255, 255], [0, 0, 144, 130, 222, 228, 255, 255]]))],
                    garage: [new ve("tint",.6), new ve("saturation",-.04), new ve("shadows",-1), new ve("grain",.42), new ve("glamour",.3)],
                    strawberry: [new ve("fill",new fe(new R(255,0,0),"soft-light",.5))],
                    clementine: [new ve("fill",new fe(new R(255,158,0),"soft-light",.5))],
                    pear: [new ve("fill",new fe(new R(170,255,0),"soft-light",.5))],
                    apple: [new ve("fill",new fe(new R(0,255,85),"soft-light",.5))],
                    blueberry: [new ve("fill",new fe(new R(0,170,255),"soft-light",.5))],
                    grapes: [new ve("fill",new fe(new R(85,0,255),"soft-light",.5))],
                    dragon: [new ve("fill",new fe(new R(255,0,170),"soft-light",.5))],
                    punch: [new ve("curves",new Te([[0, 0, 80, 64, 173, 193, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255], [0, 0, 255, 255]])), new ve("vibrance",.5)],
                    bright: [new ve("highlights",-.3), new ve("shadows",.5), new ve("levels",new Me(0,215,10,255))],
                    contrast: [new ve("contrast",.2), new ve("highlights",.2), new ve("levels",new Me(20,215,0,255)), new ve("shadows",.4)],
                    vivid: [new ve("vibrance",.4), new ve("shadows",.25)],
                    clairify: [new ve("clarity",.6), new ve("sharpen",.1), new ve("glamour",.2)],
                    poster: [new ve("posterize",.08)],
                    glitch: [new ve("slice",{
                        seed: 86,
                        amount: 4,
                        distance: .12,
                        line: !0
                    }), new ve("bleed",{
                        seed: 58,
                        amplitude: .05,
                        block: 1.2
                    })],
                    mozak: [new ve("mosaic",.5), new ve("fringe",.2)],
                    frank: [new ve("fringe",.4)],
                    pinvet: [new ve("bloom",.33), new ve("invert",1), new ve("pixelate",.7)],
                    blomberg: [new ve("bloom",.33), new ve("invert",1), new ve("tint",1), new ve("temperature",-.8), new ve("saturation",-.5)],
                    lolita: [new ve("fill",new fe(new R(255,153,153),"vivid-light",1))],
                    atonic: [new ve("curves",new Te([[0, 0, 255, 255], [6, 235, 246, 4], [131, 3, 138, 255], [1, 42, 251, 213]]))],
                    "night vision": [new ve("fill",new fe(new R(30,255,0),"multiply",1)), new ve("levels",new Me(0,183,0,255)), new ve("vignette",.85), new ve("grain",.6)],
                    darkstreet: [new ve("temperature",-1), new ve("highlights",.58), new ve("shadows",-1), new ve("levels",new Me(100,249,0,255)), new ve("grain",1), new ve("exposure",-1)],
                    splash: [new ve("desaturate",1)],
                    blur: [new ve("blur",.5)],
                    zoom: [new ve("zoom",{
                        x: .5,
                        y: .5,
                        amount: .2
                    })],
                    spin: [new ve("radial",{
                        amount: .08,
                        x: .5,
                        y: .5,
                        direction: 2,
                        symmetry: !1
                    })],
                    motion: [new ve("motion",{
                        amount: .7,
                        angle: Math.PI / 1.8 * .23
                    })],
                    mozaik: [new ve("mosaic",.5)],
                    pixel: [new ve("pixelate",.7)]
                })
            }
            static named(e) {
                return De.init(),
                this.presets[e]
            }
            static firstInGroup(e) {
                return De.init(),
                De.grouping[e][0]
            }
            static groupLength(e) {
                return De.grouping[e].length
            }
            static groups() {
                De.init();
                const e = [];
                for (const t in De.grouping)
                    e.push(t);
                return e
            }
            static names(e) {
                De.init();
                const t = [];
                for (const a in De.grouping[e])
                    t.push(De.grouping[e][a]);
                return t
            }
        }
        class xe {
            constructor(e) {
                this.drawShader = 0,
                this.sourceTexture = null,
                this.vertexBuffer = null,
                this.debug = !1,
                this.lastInChain = !1,
                this.currentFramebufferIndex = 0,
                this.tempFramebuffers = {},
                this.width = -1,
                this.height = -1,
                this.lastTextureSlot = -1,
                this.handleContextLost = () => {
                    null == this.canvas && (this.canvas = (0,
                    y.Nw)(100, 100)),
                    this.initContext()
                }
                ,
                this.getError = () => {
                    this.debug && this.ctx.getError()
                }
                ,
                this.addShader = (e, t, a=!1) => {
                    if ("fill" == e && 0 == t.amount || "toning" == e && 0 == t.amount || "levels" == e && t.isFlat() || null == t || 0 === t)
                        this.removeShader(e, a);
                    else {
                        for (var n = 0; n < this.chain.length; n++)
                            if (this.chain[n].type === e && this.chain[n].sidekick === a)
                                return void (this.chain[n].value = t);
                        this.chain.push(new Ae(e,t,a))
                    }
                }
                ,
                this.getShaderValue = e => {
                    for (var t = 0; t < this.chain.length; t++)
                        if (this.chain[t].type == e)
                            return this.chain[t].value
                }
                ,
                this.addPreset = (e, t=1) => {
                    const a = De.named(e);
                    a && (1 !== t ? a.forEach((e => {
                        switch (e.name) {
                        case "curves":
                            {
                                const a = e.value
                                  , n = Te.createCurveSet(a);
                                n.percent = t,
                                this.addShader(e.name, n);
                                break
                            }
                        case "levels":
                            {
                                const a = e.value
                                  , n = new Me(Math.round(a.minin * t),Math.round(255 - (255 - a.maxin) * t));
                                this.addShader(e.name, n);
                                break
                            }
                        case "toning":
                            {
                                const a = e.value
                                  , n = new be(a.highlight,a.midtone,a.shadow,a.amount * t);
                                this.addShader(e.name, n);
                                break
                            }
                        case "fill":
                            {
                                const a = e.value
                                  , n = new fe(a.color,a.blend,a.amount * t);
                                this.addShader(e.name, n);
                                break
                            }
                        default:
                            this.addShader(e.name, e.value * t)
                        }
                    }
                    )) : a.forEach((e => this.addShader(e.name, e.value))))
                }
                ,
                this.removeShaderSidekick = () => {
                    let e = new Array;
                    for (var t = 0; t < this.chain.length; t++)
                        this.chain[t].sidekick || e.push(this.chain[t]);
                    this.chain = e
                }
                ,
                this.removeShader = (e, t=!1) => {
                    for (var a = 0; a < this.chain.length; a++)
                        if (this.chain[a].type === e && this.chain[a].sidekick === t)
                            return void this.chain.splice(a, 1)
                }
                ,
                this.runShader = (e, t) => {
                    switch (e) {
                    case "vibrance":
                        return this.vibrance(t);
                    case "brightness":
                        return this.brightness(t);
                    case "temperature":
                        return this.temperature(t);
                    case "balance":
                        return this.balance(t);
                    case "tint":
                        return this.tint(t);
                    case "colorize":
                        return this.colorize(t);
                    case "grain":
                        return this.grain(t);
                    case "noise":
                        return this.noise(t);
                    case "vignette":
                        return this.vignette(t);
                    case "sharpen":
                        return this.sharpen(t);
                    case "blur":
                        return this.blur(t);
                    case "zoom":
                        return this.zoom(t);
                    case "bokeh":
                        return this.bokeh(t);
                    case "gaussian":
                        return this.gaussian(t);
                    case "motion":
                        return this.motion(t);
                    case "radial":
                        return this.radial(t);
                    case "smooth":
                        return this.smooth(t);
                    case "denoise":
                        return this.denoise(t);
                    case "contrast":
                        return this.contrast(t);
                    case "monochrome":
                        return this.monochrome(t);
                    case "desaturate":
                        return this.desaturate();
                    case "invert":
                        return this.invert();
                    case "exposure":
                        return this.exposure(t);
                    case "highlights":
                        return this.highlights(t);
                    case "shadows":
                        return this.shadows(t);
                    case "dehaze":
                        return this.dehaze(t);
                    case "curves":
                        return this.curves(t);
                    case "toning":
                        return this.toning(t);
                    case "lookup":
                        return this.lookup(t);
                    case "fill":
                        return this.fill(t);
                    case "bwpoint":
                        return this.bwpoint(t);
                    case "levels":
                        return this.levels(t);
                    case "multilevels":
                        return this.multilevels(t);
                    case "threshold":
                        return this.threshold(t);
                    case "alphaThreshold":
                        return this.alphaThreshold(t);
                    case "bloom":
                        return this.bloom(t);
                    case "glamour":
                        return this.glamour(t);
                    case "mimichdr":
                        return this.mimicHDR(t);
                    case "posterize":
                        return this.posterize(t);
                    case "fringe":
                        return this.fringe(t);
                    case "pixelate":
                        return this.pixelate(t);
                    case "clarity":
                        return this.clarity(t);
                    case "mosaic":
                        return this.mosaic(t);
                    case "polarcoordinates":
                        return this.polarcoordinates(t);
                    case "kaleidoscope":
                        return this.kaleidoscope(t);
                    case "reflect":
                        return this.reflect(t);
                    case "wave":
                        return this.wave(t);
                    case "fisheye":
                        return this.fisheye(t);
                    case "scanlines":
                        return this.scanlines(t);
                    case "dealiasing":
                        return this.dealiasing();
                    case "alpha-reset":
                        return this.alphaReset();
                    case "alpha-invert":
                        return this.alphaInvert();
                    case "alpha-mask":
                        return this.alphaMask();
                    case "alpha-shift-mask":
                        return this.alphaShiftMask();
                    case "outer-glow":
                        return this.outerGlow(t);
                    case "inner-glow":
                        return this.innerGlow(t);
                    case "sobel":
                        return this.sobel();
                    case "solarize":
                        return this.solarize();
                    case "halftone":
                        return this.halftone(t);
                    case "stroke":
                        return this.stroke(t);
                    case "bevel":
                        return this.bevel(t);
                    case "border":
                        return this.border(t);
                    case "rgb-split":
                        return this.rgbSplit(t);
                    case "slice":
                        return this.slice(t);
                    case "bleed":
                        return this.bleed(t);
                    case "interference":
                        return this.interference(t);
                    case "hue":
                        return this.hue(t);
                    case "hue-red":
                        return this.hue(t, 317, 46);
                    case "hue-yellow":
                        return this.hue(t, 17, 106);
                    case "hue-green":
                        return this.hue(t, 77, 166);
                    case "hue-cyan":
                        return this.hue(t, 137, 226);
                    case "hue-blue":
                        return this.hue(t, 197, 286);
                    case "hue-magenta":
                        return this.hue(t, 257, 346);
                    case "saturation":
                        return this.saturation(t);
                    case "saturation-red":
                        return this.saturation(t, 317, 46);
                    case "saturation-yellow":
                        return this.saturation(t, 17, 106);
                    case "saturation-green":
                        return this.saturation(t, 77, 166);
                    case "saturation-cyan":
                        return this.saturation(t, 137, 226);
                    case "saturation-blue":
                        return this.saturation(t, 197, 286);
                    case "saturation-magenta":
                        return this.saturation(t, 257, 346);
                    case "lightness":
                        return this.lightness(t);
                    case "lightness-red":
                        return this.lightness(t, 317, 46);
                    case "lightness-yellow":
                        return this.lightness(t, 17, 106);
                    case "lightness-green":
                        return this.lightness(t, 77, 166);
                    case "lightness-cyan":
                        return this.lightness(t, 137, 226);
                    case "lightness-blue":
                        return this.lightness(t, 197, 286);
                    case "lightness-magenta":
                        return this.lightness(t, 257, 346);
                    case "melt":
                        return this.melt(t);
                    case "gooey":
                        return this.gooey(t);
                    case "block":
                        return this.block(t);
                    case "curtain":
                        return this.curtain(t);
                    case "blinds":
                        return this.blinds(t);
                    case "wipe":
                        return this.wipe(t);
                    case "slot":
                        return this.slot(t);
                    case "split":
                        return this.split(t);
                    case "circular":
                        return this.circular(t);
                    case "ripple":
                        return this.ripple(t);
                    case "warp":
                        return this.warp(t);
                    case "swipe":
                        return this.swipe(t);
                    case "marquee":
                        return this.marquee(t);
                    default:
                        return console.error("We don't have this type shader, " + e)
                    }
                }
                ,
                this.reset = () => {
                    this.chain = [],
                    this.compiledProgram.forEach((function(e) {
                        e.destroy(this.ctx)
                    }
                    ), this),
                    this.compiledProgram.clear(),
                    this.sourceTexture && (this.activeSourceTexture = void 0,
                    this.sourceTexture.destroy(this.ctx),
                    this.sourceTexture = null);
                    for (let e in this.tempFramebuffers) {
                        this.tempFramebuffers[e].destroy(this.ctx)
                    }
                    this.tempFramebuffers = {}
                }
                ,
                this.apply = (e, t=!1) => {
                    if (0 == this.chain.length)
                        return e;
                    this.resize(e.width, e.height),
                    this.drawShader = 0,
                    this.sourceTexture && this.width == e.width && this.height == e.height || (this.sourceTexture && (this.sourceTexture.destroy(this.ctx),
                    this.sourceTexture = null),
                    this.sourceTexture = new ye("texture"),
                    this.sourceTexture.createTexture(this.ctx, e.width, e.height)),
                    (e !== this.activeSourceTexture || t) && (this.sourceTexture.uploadData(this.ctx, e),
                    this.activeSourceTexture = e);
                    for (var a = 0; a < this.chain.length; a++)
                        this.lastInChain = a == this.chain.length - 1,
                        this.runShader(this.chain[a].type, this.chain[a].value);
                    return this.currentFramebufferIndex = 0,
                    this.canvas
                }
                ,
                this.resize = (e, t) => {
                    if (e != this.width || t != this.height) {
                        if (this.canvas.width = this.width = e,
                        this.canvas.height = this.height = t,
                        !this.vertexBuffer) {
                            var a = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, -1, 1, 0, 1, -1, 1, 0, 1, 1, -1, 1, 0, 1, 1, 1, 1]);
                            this.ctx || this.initContext(),
                            this.vertexBuffer = this.ctx.createBuffer(),
                            this.ctx.bindBuffer(this.ctx.ARRAY_BUFFER, this.vertexBuffer),
                            this.ctx.bufferData(this.ctx.ARRAY_BUFFER, a, this.ctx.STATIC_DRAW)
                        }
                        this.ctx.viewport(0, 0, this.width, this.height);
                        for (let e in this.tempFramebuffers) {
                            this.tempFramebuffers[e].destroy(this.ctx)
                        }
                        this.tempFramebuffers = {}
                    }
                }
                ,
                this.getTempFramebuffer = e => (this.tempFramebuffers[e] = this.tempFramebuffers[e] || this.createFramebufferTexture(this.width, this.height),
                this.tempFramebuffers[e]),
                this.createFramebufferTexture = (e, t) => {
                    let a = this.ctx.createFramebuffer();
                    this.ctx.bindFramebuffer(this.ctx.FRAMEBUFFER, a);
                    let n = this.ctx.createRenderbuffer();
                    this.ctx.bindRenderbuffer(this.ctx.RENDERBUFFER, n),
                    this.ctx.renderbufferStorage(this.ctx.RENDERBUFFER, this.ctx.DEPTH_COMPONENT16, e, t);
                    let i = this.ctx.createTexture();
                    return this.ctx.bindTexture(this.ctx.TEXTURE_2D, i),
                    this.ctx.texImage2D(this.ctx.TEXTURE_2D, 0, this.ctx.RGBA, e, t, 0, this.ctx.RGBA, this.ctx.UNSIGNED_BYTE, null),
                    this.ctx.texParameteri(this.ctx.TEXTURE_2D, this.ctx.TEXTURE_MAG_FILTER, this.ctx.NEAREST),
                    this.ctx.texParameteri(this.ctx.TEXTURE_2D, this.ctx.TEXTURE_MIN_FILTER, this.ctx.NEAREST),
                    this.ctx.texParameteri(this.ctx.TEXTURE_2D, this.ctx.TEXTURE_WRAP_S, this.ctx.CLAMP_TO_EDGE),
                    this.ctx.texParameteri(this.ctx.TEXTURE_2D, this.ctx.TEXTURE_WRAP_T, this.ctx.CLAMP_TO_EDGE),
                    this.ctx.framebufferTexture2D(this.ctx.FRAMEBUFFER, this.ctx.COLOR_ATTACHMENT0, this.ctx.TEXTURE_2D, i, 0),
                    this.ctx.framebufferRenderbuffer(this.ctx.FRAMEBUFFER, this.ctx.DEPTH_ATTACHMENT, this.ctx.RENDERBUFFER, n),
                    this.ctx.bindTexture(this.ctx.TEXTURE_2D, null),
                    this.ctx.bindFramebuffer(this.ctx.FRAMEBUFFER, null),
                    new _e(a,n,i)
                }
                ,
                this.draw = (e, t=!1) => {
                    if ((this.chain.length <= 1 || this.lastInChain) && !t)
                        this.ctx.bindFramebuffer(this.ctx.FRAMEBUFFER, null);
                    else {
                        let e = this.getTempFramebuffer(this.currentFramebufferIndex);
                        this.ctx.bindFramebuffer(this.ctx.FRAMEBUFFER, e.framebuffer)
                    }
                    this.ctx.uniform4f(e.uniform.transform, 1, 1, 0, 0),
                    this.ctx.clear(this.ctx.COLOR_BUFFER_BIT),
                    this.ctx.clearColor(0, 0, 0, 0),
                    this.setTexture(e.texture),
                    this.ctx.drawArrays(this.ctx.TRIANGLES, 0, 6),
                    this.drawShader++,
                    this.currentFramebufferIndex ^= 1,
                    this.getError()
                }
                ,
                this.setTexture = e => {
                    let t = -1;
                    e.forEach((function(e, a) {
                        if (this.ctx.activeTexture(this.ctx.TEXTURE0 + a),
                        0 === a && 0 === this.drawShader)
                            this.ctx.bindTexture(this.ctx.TEXTURE_2D, this.sourceTexture.texture);
                        else if (0 === a) {
                            let e = 1 ^ this.currentFramebufferIndex
                              , t = this.getTempFramebuffer(e);
                            this.ctx.bindTexture(this.ctx.TEXTURE_2D, t.texture)
                        } else
                            this.ctx.bindTexture(this.ctx.TEXTURE_2D, e.texture);
                        t = Math.max(t, a)
                    }
                    ), this);
                    for (let a = t + 1; a <= this.lastTextureSlot; ++a)
                        this.ctx.activeTexture(this.ctx.TEXTURE0 + a),
                        this.ctx.bindTexture(this.ctx.TEXTURE_2D, null);
                    this.lastTextureSlot = t
                }
                ,
                this.cleanUp = () => {
                    this.sourceTexture = null,
                    this.canvas = null,
                    this.ctx = null
                }
                ,
                this.compileShader = (e, t=this.VERTEX_IDENTITY) => {
                    let a = new ge(this.ctx,t,e);
                    var n = Float32Array.BYTES_PER_ELEMENT;
                    return this.ctx.enableVertexAttribArray(a.attribute.apos),
                    this.ctx.vertexAttribPointer(a.attribute.apos, 2, this.ctx.FLOAT, !1, 4 * n, 0 * n),
                    this.ctx.enableVertexAttribArray(a.attribute.auv),
                    this.ctx.vertexAttribPointer(a.attribute.auv, 2, this.ctx.FLOAT, !1, 4 * n, 2 * n),
                    a
                }
                ,
                this.VERTEX_IDENTITY = "\n        precision highp float;\n        attribute vec2 apos;\n        attribute vec2 auv;\n        varying vec2 uv;\n        uniform vec4 transform;\n\n        void main(void) {\n            uv = auv;\n            gl_Position = vec4(apos.x * transform.x + transform.z, apos.y * transform.y + transform.w, 0.0, 1.0);\n        }",
                this.FRAGMENT_IDENTITY = "\n        precision highp float;\n        varying vec2 uv;\n        uniform sampler2D texture;\n\n        void main(void) {\n            gl_FragColor = texture2D(texture, uv);\n        }",
                this.GAUSSKERN_MAX = 15,
                this.cloneChain = () => {
                    var e, t, a;
                    const n = [];
                    for (let i = 0; i < this.chain.length; i++) {
                        const s = this.chain[i];
                        let r;
                        switch (s.type) {
                        case "curves":
                            {
                                const e = s.value
                                  , t = e.rgb.map((e => e.clone()))
                                  , a = e.red.map((e => e.clone()))
                                  , n = e.green.map((e => e.clone()))
                                  , i = e.blue.map((e => e.clone()));
                                r = new ke(e.scale,t,a,n,i);
                                break
                            }
                        case "levels":
                            {
                                const e = s.value;
                                r = new Me(e.minin,e.maxin,e.minout,e.maxout,e.midin,e.mid);
                                break
                            }
                        case "toning":
                            {
                                const n = s.value;
                                r = new be(null === (e = n.highlight) || void 0 === e ? void 0 : e.clone(),null === (t = n.midtone) || void 0 === t ? void 0 : t.clone(),null === (a = n.shadow) || void 0 === a ? void 0 : a.clone(),n.amount);
                                break
                            }
                        case "fill":
                            {
                                const e = s.value;
                                r = new fe(e.color.clone(),e.blend,e.amount);
                                break
                            }
                        default:
                            r = s.value
                        }
                        n.push(new Ae(s.type,r))
                    }
                    return n
                }
                ,
                this.chain = e || [],
                this.compiledProgram = new Map,
                this.canvas = (0,
                y.Nw)(100, 100),
                this.initContext(),
                this.canvas.addEventListener("webglcontextlost", this.handleContextLost, !1)
            }
            initContext() {
                this.ctx = this.canvas.getContext("webgl", {
                    alpha: !0,
                    premultipliedAlpha: !1,
                    depth: !1,
                    stencil: !1,
                    antialias: !1
                }),
                this.ctx || (this.canvas = (0,
                y.Nw)(100, 100),
                this.ctx = this.canvas.getContext("webgl"),
                (0,
                s.A)("weg-gl-pre-error")),
                this.ctx || (console.log("Could not get shaders webgl canvas context!"),
                (0,
                s.A)("weg-gl-error"))
            }
            bevel(e) {
                let t = this.compiledProgram.get("bevel");
                if (!t) {
                    let e = "\n                precision highp float;\n\n                varying vec2 uv;\n                \n                uniform float zeroPoint;\n                uniform vec3 lightNormal;\n                uniform float dz;\n                uniform float size;\n\n                uniform vec4 lowColor;\n                uniform vec4 highColor;\n                \n                uniform sampler2D dist;\n                uniform sampler2D texture;\n                uniform vec2 px;\n\n                vec4 straightBlend(vec4 src, vec4 dst) {\n                    float alpha = src.a + dst.a * (1.0 - src.a);\n\n                    return vec4(\n                        ((src.rgb * src.a) + (dst.rgb * dst.a) * (1.0 - src.a)) / alpha,\n                        alpha\n                    );\n                }\n                \n                void main() {                    \n                    vec2 flipuv = vec2(uv.x, 1.0 - uv.y);\n                                         \n                    /* PER PIXEL OPS */\n                    float tl = clamp(0.0, size, texture2D(dist, flipuv + vec2(-px.x, -px.y)).a);\n                    float tm = clamp(0.0, size, texture2D(dist, flipuv + vec2(    0, -px.y)).a);\n                    float tr = clamp(0.0, size, texture2D(dist, flipuv + vec2( px.x, -px.y)).a);\n                \n                    float ml = clamp(0.0, size, texture2D(dist, flipuv + vec2(-px.x,     0)).a);\n                    float mr = clamp(0.0, size, texture2D(dist, flipuv + vec2( px.x,     0)).a);\n                \n                    float bl = clamp(0.0, size, texture2D(dist, flipuv + vec2(-px.x,  px.y)).a);\n                    float bm = clamp(0.0, size, texture2D(dist, flipuv + vec2(    0,  px.y)).a);\n                    float br = clamp(0.0, size, texture2D(dist, flipuv + vec2( px.x,  px.y)).a);\n                \n                    float dx = (tr + 2.0 * mr + br) - (tl + 2.0 * ml + bl);\n                    float dy = (bl + 2.0 * bm + br) - (tl + 2.0 * tm + tr);\n                \n                    vec3 surfaceNormal = vec3(dx, dy, dz);\n                    float norm = sqrt(dx*dx + dy*dy + dz*dz);\n                \n                    // Calculate incident light amount, range [-1, 0]\n                    float incidentLight = ((dot(surfaceNormal, lightNormal) / norm) - zeroPoint) - (1.0 - zeroPoint);\n                    \n                    vec4 slopes = mix(lowColor, highColor, 1.0 - abs(incidentLight));\n                    \n                    // Texture\n                    vec4 color = texture2D(texture, uv);\n\n                    // Bevel color, only use the the color where we need it\n                    float alpha = smoothstep(1e-5, dz + 8.0, distance(vec3(0.0,0.0,dz), surfaceNormal));\n                    vec4 bevelColor = vec4(slopes.rgb, slopes.a * alpha);\n\n                    gl_FragColor = straightBlend(\n                        bevelColor,\n                        color\n                    );\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("bevel", t)
                }
                this.ctx.useProgram(t.program);
                t.getTextureById("dist").setTexture(e.distanceMap);
                const a = Math.sin(e.lightElevation);
                this.ctx.uniform2f(t.uniform.px, 1 / this.width, 1 / this.height),
                this.ctx.uniform1f(t.uniform.zeroPoint, a),
                this.ctx.uniform3f(t.uniform.lightNormal, Math.cos(e.lightElevation) * -Math.cos(e.lightAngle), Math.cos(e.lightElevation) * -Math.sin(e.lightAngle), a),
                this.ctx.uniform4f(t.uniform.lowColor, e.lowLightColor.r / 255, e.lowLightColor.g / 255, e.lowLightColor.b / 255, e.lowOpacity),
                this.ctx.uniform4f(t.uniform.highColor, e.highLightColor.r / 255, e.highLightColor.g / 255, e.highLightColor.b / 255, e.highOpacity),
                this.ctx.uniform1f(t.uniform.dz, 1 / e.depth),
                this.ctx.uniform1f(t.uniform.size, e.size),
                this.draw(t)
            }
            stroke(e) {
                const t = "stroke" + (e.cutout ? "-cutout" : "");
                let a = this.compiledProgram.get(t);
                if (!a) {
                    let n = `\n                precision highp float;\n\n                #define CUTOUT ${e.cutout ? 1 : 0}\n\n                varying vec2 uv;\n                \n                uniform sampler2D texture;\n                uniform sampler2D distanceMap;\n                            \n                uniform vec4 glowColor;\n                uniform float size;\n\n                vec4 straightBlend(vec4 src, vec4 dst) {\n                    float alpha = src.a + dst.a * (1.0 - src.a);\n\n                    return vec4(\n                        ((src.rgb * src.a) + (dst.rgb * dst.a) * (1.0 - src.a)) / alpha,\n                        alpha\n                    );\n                }\n\n                void main(void) {           \n                    vec2 flipped = vec2(uv.x, 1.0 - uv.y);\n\n                    float distance = texture2D(distanceMap, flipped).a;\n                    float gAlpha = 1.0-smoothstep(size - 3.0, size, distance);\n\n                    vec4 gColor = vec4(\n                        glowColor.rgb, \n                        gAlpha * glowColor.a\n                    );\n\n                    vec4 texColor = texture2D(texture, uv);\n\n                    #if CUTOUT == 1\n                        vec4 tran = vec4(0);\n                        gl_FragColor = mix(gColor, tran, texColor.a);\n                    #else\n                        gl_FragColor = straightBlend(texColor, gColor);                    \n                    #endif\n                }\n            `;
                    a = this.compileShader(n),
                    this.compiledProgram.set(t, a)
                }
                this.ctx.useProgram(a.program),
                this.ctx.uniform4f(a.uniform.glowColor, e.color.r / 255, e.color.g / 255, e.color.b / 255, e.opacity);
                a.getTextureById("distanceMap").setTexture(e.distanceMap),
                this.ctx.uniform1f(a.uniform.size, e.size),
                this.draw(a)
            }
            innerGlow(e) {
                let t = this.compiledProgram.get("innerglow");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                \n                uniform sampler2D texture;\n                uniform sampler2D distanceMap;\n                            \n                uniform vec4 glowColor;\n                uniform float size;\n                uniform float feather;\n\n                void main(void) {           \n                    vec2 flipped = vec2(uv.x, 1.0 - uv.y);\n\n                    float distance = texture2D(distanceMap, flipped).a;\n                    float balance = 1.0-smoothstep(size * (1.0-feather), size, distance);\n\n                    vec4 texColor = texture2D(texture, uv);\n\n                    vec4 gColor = vec4(\n                        glowColor.rgb, \n                        texColor.a\n                    );\n                       \n                    gl_FragColor = mix(texColor, gColor, balance * glowColor.a);\n                }\n            ";
                    t = this.compileShader(e),
                    this.compiledProgram.set("innerglow", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform4f(t.uniform.glowColor, e.color.r / 255, e.color.g / 255, e.color.b / 255, e.opacity);
                t.getTextureById("distanceMap").setTexture(e.distanceMap),
                this.ctx.uniform1f(t.uniform.size, e.size),
                this.ctx.uniform1f(t.uniform.feather, e.feather),
                this.draw(t)
            }
            outerGlow(e) {
                let t = this.compiledProgram.get("outerglow");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                \n                uniform sampler2D texture;\n                uniform sampler2D distanceMap;\n                            \n                uniform vec4 glowColor;\n                uniform float size;\n                uniform float feather;\n\n                vec4 straightBlend(vec4 src, vec4 dst) {\n                    float alpha = src.a + dst.a * (1.0 - src.a);\n\n                    return vec4(\n                        ((src.rgb * src.a) + (dst.rgb * dst.a) * (1.0 - src.a)) / alpha,\n                        alpha\n                    );\n                }\n                \n                void main(void) {           \n                    vec2 flipped = vec2(uv.x, 1.0 - uv.y);\n\n                    float distance = texture2D(distanceMap, flipped).a;\n                    float gAlpha = 1.0-smoothstep(size * (1.0-feather), size, distance);\n\n                    vec4 gColor = vec4(\n                        glowColor.rgb, \n                        gAlpha * glowColor.a\n                    );\n\n                    vec4 texColor = texture2D(texture, uv);\n                    \n                    gl_FragColor = straightBlend(texColor, gColor);                    \n                }\n            ";
                    t = this.compileShader(e),
                    this.compiledProgram.set("outerglow", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform4f(t.uniform.glowColor, e.color.r / 255, e.color.g / 255, e.color.b / 255, e.opacity);
                t.getTextureById("distanceMap").setTexture(e.distanceMap),
                this.ctx.uniform1f(t.uniform.size, e.size),
                this.ctx.uniform1f(t.uniform.feather, e.feather),
                this.draw(t)
            }
            sobel() {
                let e = this.compiledProgram.get("sobel");
                if (!e) {
                    let t = "\n                precision mediump float;\n\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform vec2 px;\n\n                uniform float m[3];\n                #define M_PI 3.1415926535897932384626433832795\n                #define GET_PIXEL(x,y) (texture2D(texture, uv + px*vec2(x,y)))\n\n                void main() {\n\n                    float dx = (length(GET_PIXEL(-1, -1)*m[0] +\n                                GET_PIXEL(-1,  0)*m[1] +\n                                GET_PIXEL(-1, +1)*m[2]) -\n                            length(GET_PIXEL(+1, -1)*m[0] +\n                                GET_PIXEL(+1,  0)*m[1] +\n                                GET_PIXEL(+1, +1)*m[2]));\n\n                    float dy = (length(GET_PIXEL(-1, -1)*m[0] +\n                                GET_PIXEL(0, -1)*m[1] +\n                                GET_PIXEL(+1, -1)*m[2]) -\n                            length(GET_PIXEL(-1, +1)*m[0] +\n                                GET_PIXEL(0, +1)*m[1] +\n                                GET_PIXEL(+1, +1)*m[2]));\n\n                    float theta = (atan(dy, dx) + M_PI) / (2.0*M_PI);\n\n                    gl_FragColor = vec4(length(vec2(dx, dy)), theta, 0.0, 1.0);\n                }";
                    e = this.compileShader(t),
                    this.compiledProgram.set("sobel", e)
                }
                if (this.ctx.useProgram(e.program),
                this.ctx.uniform2f(e.uniform.px, 1 / this.width, 1 / this.height),
                this.ctx.uniform1fv(e.uniform.m, [1, 2, 1]),
                this.draw(e, !0),
                e = this.compiledProgram.get("sobelNMS"),
                !e) {
                    let t = "\n                precision mediump float;\n\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform vec2 px;\n\n                #define M_PI 3.1415926535897932384626433832795\n\n                void main() {\n                    vec4 cc = texture2D(texture, uv);  \n                    float theta = degrees(cc.y*M_PI*2.0); \n                    int ax = 0, ay = 0; \n                    if ((theta >= 337.5) || (theta < 22.5)) { ax = 1; ay = 0; } \n                    else if ((theta >= 22.5) && (theta < 67.5)) { ax = 1; ay = 1; } \n                    else if ((theta >= 67.5) && (theta < 112.5)) { ax = 0; ay = 1; } \n                    else if ((theta >= 112.5) && (theta < 157.5)) { ax =-1; ay = 1; } \n                    else if ((theta >= 157.5) && (theta < 202.5)) { ax =-1; ay = 0; } \n                    else if ((theta >=202.5) && (theta < 247.5)) { ax =-1; ay =-1; } \n                    else if ((theta >=247.5) && (theta < 292.5)) { ax = 0; ay =-1; } \n                    else if ((theta >= 292.5) && (theta < 337.5)) { ax = 1; ay =-1; }\n                \n                    vec4 ca = texture2D(texture, uv + px*vec2(ax, ay));\n                    vec4 cb = texture2D(texture, uv + px*vec2(-ax, -ay));\n                    gl_FragColor = vec4((((cc.x <= ca.x) || (cc.x < cb.x)) ? vec3(0) : vec3(cc.x)), 1.0);\n                }";
                    e = this.compileShader(t),
                    this.compiledProgram.set("sobelNMS", e)
                }
                this.ctx.useProgram(e.program),
                this.ctx.uniform2f(e.uniform.px, 1 / this.width, 1 / this.height),
                this.draw(e)
            }
            vibrance(e) {
                let t = this.compiledProgram.get("vibrance");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n\n                void main() {\n\n                    vec4 col = texture2D(texture, uv.xy);\n                    vec3 color = col.rgb;\n                \n                    float luminance = color.r*0.299 + color.g*0.587 + color.b*0.114;\n                    float mn = min(min(color.r, color.g), color.b);\n                    float mx = max(max(color.r, color.g), color.b);\n                    float sat = (1.0-(mx - mn)) * (1.0-mx) * luminance * 5.0;\n                    vec3 lightness = vec3((mn + mx)/2.0);\n                \n                    // vibrance\n                    color = mix(color, mix(color, lightness, -amount), sat);\n                \n                    // negative vibrance\n                    gl_FragColor = vec4(mix(color, lightness, (1.0-lightness)*(1.0-amount)/2.0*abs(amount)), col.a);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("vibrance", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            brightness(e) {
                let t;
                if (e > 0) {
                    if (t = this.compiledProgram.get("brightness-up"),
                    !t) {
                        let e = "\n                    precision highp float;\n                    varying vec2 uv;\n                    uniform sampler2D texture;\n                    uniform float amount;\n\n                    #define PI 3.1415926535897932384626433832795\n\n                    void main() {\n                        vec4 color = texture2D(texture, uv);\n\n                        color.r = color.r + amount * sin(color.r * PI);\n                        color.g = color.g + amount * sin(color.g * PI);\n                        color.b = color.b + amount * sin(color.b * PI);\n\n                        gl_FragColor = color;\n                    }";
                        t = this.compileShader(e),
                        this.compiledProgram.set("brightness-up", t)
                    }
                } else if (t = this.compiledProgram.get("brightness-down"),
                !t) {
                    let e = "\n                    precision highp float;\n                    varying vec2 uv;\n                    uniform sampler2D texture;\n                    uniform float amount;\n\n                    void main() {\n                        vec4 color = texture2D(texture, uv);\n     \n                        color.r = (1.0 + amount) * color.r;\n                        color.g = (1.0 + amount) * color.g;\n                        color.b = (1.0 + amount) * color.b;\n\n                        gl_FragColor = color;\n                    }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("brightness-down", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e > 0 ? .35 * e : .75 * e),
                this.draw(t)
            }
            bwpoint(e) {
                let t = this.compiledProgram.get("bwpoint");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n\n                uniform float white;\n                uniform float black;\n\n                void main() {\n\n                    float bval = black / 255.0;\n                    float wval = (255.0 / (white - black));\n                \n                    vec3 color = texture2D(texture, uv).rgb;\n                    color = color * wval - (bval *  wval);\n\n                    gl_FragColor = vec4(color, texture2D(texture, uv).a);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("bwpoint", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.black, e.black),
                this.ctx.uniform1f(t.uniform.white, e.white),
                this.draw(t)
            }
            dealiasing() {
                let e = this.compiledProgram.get("dealiasing");
                if (!e) {
                    let t = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n\n                void main() {\n                    vec4 color = texture2D(texture, uv);\n                    color.a = (color.a < 0.25) ? 0.0 : 1.0;\n                    gl_FragColor = color;\n                }";
                    e = this.compileShader(t),
                    this.compiledProgram.set("dealiasing", e)
                }
                this.ctx.useProgram(e.program),
                this.draw(e)
            }
            alphaInvert() {
                let e = this.compiledProgram.get("alpha-invert");
                if (!e) {
                    let t = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n\n                void main() {\n                    vec4 color = texture2D(texture, uv);\n                    color.a = 1.0 - color.a;\n                    gl_FragColor = color;\n                }";
                    e = this.compileShader(t),
                    this.compiledProgram.set("alpha-invert", e)
                }
                this.ctx.useProgram(e.program),
                this.draw(e)
            }
            alphaMask() {
                let e = this.compiledProgram.get("alpha-mask");
                if (!e) {
                    let t = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n\n                void main() {\n                    gl_FragColor = vec4(0,0,0, texture2D(texture, uv).a);\n                }";
                    e = this.compileShader(t),
                    this.compiledProgram.set("alpha-mask", e)
                }
                this.ctx.useProgram(e.program),
                this.draw(e)
            }
            alphaShiftMask() {
                let e = this.compiledProgram.get("alpha-shift-mask");
                if (!e) {
                    let t = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n\n                void main() {\n                    gl_FragColor = vec4(0,0,0, texture2D(texture, uv).r);\n                }";
                    e = this.compileShader(t),
                    this.compiledProgram.set("alpha-shift-mask", e)
                }
                this.ctx.useProgram(e.program),
                this.draw(e)
            }
            alphaReset() {
                let e = this.compiledProgram.get("alpha-reset");
                if (!e) {
                    let t = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n\n                void main() {\n                    vec4 color = texture2D(texture, uv);\n                    gl_FragColor = vec4(color.rgb, 1.0);\n                }";
                    e = this.compileShader(t),
                    this.compiledProgram.set("alpha-reset", e)
                }
                this.ctx.useProgram(e.program),
                this.draw(e)
            }
            border(e) {
                let t = this.compiledProgram.get("border");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n\n                uniform sampler2D texture;\n                uniform float size;\n                uniform vec4 color;\n                uniform vec2 screen;\n                uniform vec2 px;\n\n                void main() {\n                    vec4 pixel = texture2D(texture, uv);\n\n                    if(uv.y <= size*px.y || uv.y >= (screen.y-size)*px.y ||\n                       uv.x <= size*px.x || uv.x >= (screen.x-size)*px.x) {\n                        gl_FragColor = color;\n                    } else {\n                        gl_FragColor = pixel;\n                    }\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("border", t)
                }
                let a = Math.round((this.width + this.height) / 2 * e.size);
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.size, a),
                this.ctx.uniform2f(t.uniform.screen, this.width, this.height),
                this.ctx.uniform2f(t.uniform.px, 1 / this.width, 1 / this.height),
                this.ctx.uniform4f(t.uniform.color, e.color.r / 255, e.color.g / 255, e.color.b / 255, 1),
                this.draw(t)
            }
            balance(e) {
                let t = this.compiledProgram.get("balance");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n\n                uniform float sr;\n                uniform float sg;\n                uniform float sb;\n                uniform float mr;\n                uniform float mg;\n                uniform float mb;\n                uniform float hr;\n                uniform float hg;\n                uniform float hb;\n                uniform float preserve;\n\n                #define PI 3.1415926535897932384626433832795\n\n                float Lum(vec4 c){\n                    return 0.299*c.r + 0.587*c.g + 0.114*c.b;\n                }\n\n                void main() {\n                    vec4 color = texture2D(texture, uv);\n                    \n                    float olum = Lum(color);\n\n                    //highlight\n                    color.r = clamp(color.r + (hr * (exp(color.r) - 1.0)), 0.0, 1.0);\n                    color.g = clamp(color.g + (hg * (exp(color.g) - 1.0)), 0.0, 1.0);\n                    color.b = clamp(color.b + (hb * (exp(color.b) - 1.0)), 0.0, 1.0);\n\n                    //midtone\n                    color.r = clamp(color.r + (mr * 0.25) * sin(color.r * PI), 0.0, 1.0);\n                    color.g = clamp(color.g + (mg * 0.25) * sin(color.g * PI), 0.0, 1.0);\n                    color.b = clamp(color.b + (mb * 0.25) * sin(color.b * PI), 0.0, 1.0);\n\n                    //shadow\n                    color.r = clamp((1.0 - sr * 0.5) * color.r + (1.0 - (1.0 - sr * 0.5)), 0.0, 1.0);\n                    color.g = clamp((1.0 - sg * 0.5) * color.g + (1.0 - (1.0 - sg * 0.5)), 0.0, 1.0);\n                    color.b = clamp((1.0 - sb * 0.5) * color.b + (1.0 - (1.0 - sb * 0.5)), 0.0, 1.0);\n                    \n                    if(preserve == 1.0) {\n                        float nlum = Lum(color);\n                        color.rgb = color.rgb * (olum/nlum);\n                    }\n\n                    gl_FragColor = color;\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("balance", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.sr, e.shadowRed),
                this.ctx.uniform1f(t.uniform.sg, e.shadowGreen),
                this.ctx.uniform1f(t.uniform.sb, e.shadowBlue),
                this.ctx.uniform1f(t.uniform.mr, e.midtoneRed),
                this.ctx.uniform1f(t.uniform.mg, e.midtoneGreen),
                this.ctx.uniform1f(t.uniform.mb, e.midtoneBlue),
                this.ctx.uniform1f(t.uniform.hr, e.highlightRed),
                this.ctx.uniform1f(t.uniform.hg, e.highlightGreen),
                this.ctx.uniform1f(t.uniform.hb, e.highlightBlue),
                this.ctx.uniform1f(t.uniform.preserve, Number(e.preserve)),
                this.draw(t)
            }
            temperature(e) {
                let t = this.compiledProgram.get("temperature");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n\n                void main() {\n                    vec4 color = texture2D(texture, uv);\n                    color.r = clamp(color.r + amount, 0.0, 1.0);\n                    color.b = clamp(color.b - amount, 0.0, 1.0);\n                    gl_FragColor = color;\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("temperature", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e / 6),
                this.draw(t)
            }
            tint(e) {
                let t = this.compiledProgram.get("tint");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n\n                void main() {\n                    vec4 color = texture2D(texture, uv);\n                    color.g = clamp(color.g + amount, 0.0, 1.0);\n                    gl_FragColor = color;\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("tint", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e / 6),
                this.draw(t)
            }
            threshold(e) {
                let t = this.compiledProgram.get("threshold");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n    \n                void main() {\n                    vec4 color = texture2D(texture, uv);\n                    float grayscale = (color.r + color.g + color.b) / 3.0;\n                    float grayValue = step(amount, grayscale);\n                    gl_FragColor = vec4(grayValue, grayValue, grayValue, color.a);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("threshold", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            alphaThreshold(e) {
                let t = this.compiledProgram.get("alphaThreshold");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n\n                void main() {\n                    vec4 color = texture2D(texture, uv);\n                    color.a = step(amount, color.a);\n                    gl_FragColor = vec4(color.r, color.g, color.b, color.a);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("alphaThreshold", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            noise(e) {
                let t = this.compiledProgram.get("noise");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n\n                float random(vec2 p) {\n                    vec2 r = vec2(23.14069263277926,2.665144142690225);\n                    return fract(cos(mod(12345678.,256. * dot(p,r))));\n                }\n\n                void main() {\n                    vec4 color = texture2D(texture, uv);\n                    float noise = (random(uv) -0.5)*amount;\n\n                    gl_FragColor = vec4(color.r+noise, color.g+noise, color.b+noise, color.a);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("noise", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            halftone(e) {
                let t = this.compiledProgram.get("halftone");
                if (!t) {
                    this.ctx.getExtension("OES_standard_derivatives");
                    let e = "\n                #ifdef GL_OES_standard_derivatives\n                #extension GL_OES_standard_derivatives : enable\n                #endif\n\n                precision highp float;                \n\n                uniform sampler2D texture;\n                uniform vec2 size;\n                uniform float frequency;\n  \n                varying vec2 uv; // Texcoords\n\n                float aastep(float threshold, float value) {\n                #ifdef GL_OES_standard_derivatives\n                    float afwidth = 0.7 * length(vec2(dFdx(value), dFdy(value)));\n                #else\n                    float afwidth = frequency * (1.0/size.x);\n                #endif\n                    return smoothstep(threshold-afwidth, threshold+afwidth, value);\n                }\n\n                // Explicit bilinear texture lookup to circumvent bad hardware precision.\n                // The extra arguments specify the dimension of the texture. (GLSL 1.30\n                // introduced textureSize() to get that information from the sampler.)\n                // 'dims' is the width and height of the texture, 'one' is 1.0/dims.\n                // (Precomputing 'one' saves two divisions for each lookup.)\n                vec4 texture2D_bilinear(sampler2D tex, vec2 st, vec2 dims, vec2 one) {\n                    vec2 uv = st * dims;\n                    vec2 uv00 = floor(uv - vec2(0.5)); // Lower left corner of lower left texel\n                    vec2 uvlerp = uv - uv00 - vec2(0.5); // Texel-local lerp blends [0,1]\n                    vec2 st00 = (uv00 + vec2(0.5)) * one;\n                    vec4 texel00 = texture2D(tex, st00);\n                    vec4 texel10 = texture2D(tex, st00 + vec2(one.x, 0.0));\n                    vec4 texel01 = texture2D(tex, st00 + vec2(0.0, one.y));\n                    vec4 texel11 = texture2D(tex, st00 + one);\n                    vec4 texel0 = mix(texel00, texel01, uvlerp.y); \n                    vec4 texel1 = mix(texel10, texel11, uvlerp.y); \n                    return mix(texel0, texel1, uvlerp.x);\n                }\n\n                vec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n                vec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\n                vec3 permute(vec3 x) { return mod289((( x * 34.0) + 1.0) * x); }\n                \n                float snoise(vec2 v) {\n                    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                                        0.024390243902439); // 1.0 / 41.0\n                    // First corner\n                    vec2 i = floor(v + dot(v, C.yy) );\n                    vec2 x0 = v - i + dot(i, C.xx);\n                    // Other corners\n                    vec2 i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n                    vec4 x12 = x0.xyxy + C.xxzz;\n                    x12.xy -= i1;\n                    // Permutations\n                    i = mod289(i); // Avoid truncation effects in permutation\n                    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n                                            + i.x + vec3(0.0, i1.x, 1.0 ));\n                    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n                                            dot(x12.zw,x12.zw)), 0.0);\n                    m = m*m; m = m*m;\n                    // Gradients\n                    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n                    vec3 h = abs(x) - 0.5;\n                    vec3 a0 = x - floor(x + 0.5);\n                    // Normalise gradients implicitly by scaling m\n                    m *= 1.792843 - 0.853735 * ( a0*a0 + h*h );\n                    // Compute final noise value at P\n                    vec3 g;\n                    g.x = a0.x * x0.x + h.x * x0.y;\n                    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n                    return 130.0 * dot(m, g);\n                }\n                \n                void main() {\n                    // Correct UVs for aspect ratio so we get round balls not squished\n                    vec2 auv = uv;\n                    auv.x *= size.x / size.y;\n\n                    vec3 color = texture2D_bilinear(texture, uv, size, 1.0 / size).rgb;\n\n                    float n = 0.1*snoise(auv*200.0); // Fractal noise\n                    n += 0.05*snoise(auv*400.0);\n                    n += 0.025*snoise(auv*800.0);\n\n                    vec3 white = vec3(n*0.2 + 0.97);\n                    vec3 black = vec3(n + 0.1);\n\n                    // Perform a rough RGB-to-CMYK conversion\n                    vec4 cmyk;\n                    cmyk.xyz = 1.0 - color;\n                    cmyk.w = min(cmyk.x, min(cmyk.y, cmyk.z)); // Create K\n                    cmyk.xyz -= cmyk.w; // Subtract K equivalent from CMY\n                \n                    // Distance to nearest point in a grid of\n                    // (frequency x frequency) points over the unit square\n                    vec2 Kst = frequency*mat2(0.707, -0.707, 0.707, 0.707)*auv;\n                    vec2 Kuv = 2.0*fract(Kst)-1.0;\n                    float k = aastep(0.0, sqrt(cmyk.w)-length(Kuv)+n);\n                    vec2 Cst = frequency*mat2(0.966, -0.259, 0.259, 0.966)*auv;\n                    vec2 Cuv = 2.0*fract(Cst)-1.0;\n                    float c = aastep(0.0, sqrt(cmyk.x)-length(Cuv)+n);\n                    vec2 Mst = frequency*mat2(0.966, 0.259, -0.259, 0.966)*auv;\n                    vec2 Muv = 2.0*fract(Mst)-1.0;\n                    float m = aastep(0.0, sqrt(cmyk.y)-length(Muv)+n);\n                    vec2 Yst = frequency*auv; // 0 deg\n                    vec2 Yuv = 2.0*fract(Yst)-1.0;\n                    float y = aastep(0.0, sqrt(cmyk.z)-length(Yuv)+n);\n                \n                    vec3 rgbscreen = 1.0 - 0.9*vec3(c,m,y) + n;\n                    rgbscreen = mix(rgbscreen, black, 0.85*k + 0.3*n);\n                \n                    #ifdef GL_OES_standard_derivatives\n                        float afwidth = 2.0 * frequency * max(length(dFdx(uv)), length(dFdy(uv)));\n                    #else\n                        float afwidth = frequency * (1.0/size.x);\n                    #endif\n                    \n                    float blend = smoothstep(0.7, 1.4, afwidth); \n                    gl_FragColor = vec4(mix(rgbscreen, color, blend), 1.0);\n                }\n            ";
                    t = this.compileShader(e),
                    this.compiledProgram.set("halftone", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform2f(t.uniform.size, this.width, this.height),
                this.ctx.uniform1f(t.uniform.frequency, Math.round(100 * e)),
                this.draw(t)
            }
            vignette(e) {
                let t = this.compiledProgram.get(e < 0 ? "vignette-white" : "vignette-black");
                if (!t) {
                    let a = ["precision highp float;", "varying vec2 uv;", "uniform sampler2D texture;", "uniform float amount;", "uniform float size;", "void main() {", "vec4 color = texture2D(texture, uv);", "float dist = distance(uv, vec2(0.5, 0.5));", "float grd = smoothstep(0.8, size * 0.799, dist * (amount*0.6 + size*2.0));", "color.rgb += vec3(1.0, 1.0, 1.0) * (1.0 - grd);", "gl_FragColor = color;", "}"].join("\n")
                      , n = ["precision highp float;", "varying vec2 uv;", "uniform sampler2D texture;", "uniform float amount;", "uniform float size;", "void main() {", "vec4 color = texture2D(texture, uv);", "float dist = distance(uv, vec2(0.5, 0.5));", "color.rgb *= smoothstep(0.8, size * 0.799, dist * (amount*0.75 + size*2.0));", "gl_FragColor = color;", "}"].join("\n");
                    t = this.compileShader(e < 0 ? a : n),
                    this.compiledProgram.set(e < 0 ? "vignette-white" : "vignette-black", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.size, .25),
                this.ctx.uniform1f(t.uniform.amount, e < 0 ? -1 * e : e),
                this.draw(t)
            }
            grain(e) {
                let t = this.compiledProgram.get("grain");
                if (!t) {
                    let e = ["precision highp float;", "uniform sampler2D texture;", "varying vec2 uv;", "uniform float width;", "uniform float height;", "uniform float grainamount;", "uniform float timer;", "const float permTexUnit = 1.0/256.0;", "const float permTexUnitHalf = 0.5/256.0;", "float grainsize = 1.8;", "float lumamount = 1.0;", "vec4 rnm(in vec2 tc)", "{", "float noise =  sin(dot(tc + vec2(timer,timer),vec2(12.9898,78.233))) * 43758.5453;", "float noiseR =  fract(noise)*2.0-1.0;", "float noiseG =  fract(noise*1.2154)*2.0-1.0; ", "float noiseB =  fract(noise*1.3453)*2.0-1.0;", "float noiseA =  fract(noise*1.3647)*2.0-1.0;", "return vec4(noiseR,noiseG,noiseB,noiseA);", "}", "float fade(in float t) {", "return t*t*t*(t*(t*6.0-15.0)+10.0);", "}", "float pnoise3D(in vec3 p)", "{", "vec3 pi = permTexUnit*floor(p)+permTexUnitHalf;", "vec3 pf = fract(p);", "float perm00 = rnm(pi.xy).a ;", "vec3  grad000 = rnm(vec2(perm00, pi.z)).rgb * 4.0 - 1.0;", "float n000 = dot(grad000, pf);", "vec3  grad001 = rnm(vec2(perm00, pi.z + permTexUnit)).rgb * 4.0 - 1.0;", "float n001 = dot(grad001, pf - vec3(0.0, 0.0, 1.0));", "float perm01 = rnm(pi.xy + vec2(0.0, permTexUnit)).a ;", "vec3  grad010 = rnm(vec2(perm01, pi.z)).rgb * 4.0 - 1.0;", "float n010 = dot(grad010, pf - vec3(0.0, 1.0, 0.0));", "vec3  grad011 = rnm(vec2(perm01, pi.z + permTexUnit)).rgb * 4.0 - 1.0;", "float n011 = dot(grad011, pf - vec3(0.0, 1.0, 1.0));", "float perm10 = rnm(pi.xy + vec2(permTexUnit, 0.0)).a ;", "vec3  grad100 = rnm(vec2(perm10, pi.z)).rgb * 4.0 - 1.0;", "float n100 = dot(grad100, pf - vec3(1.0, 0.0, 0.0));", "vec3  grad101 = rnm(vec2(perm10, pi.z + permTexUnit)).rgb * 4.0 - 1.0;", "float n101 = dot(grad101, pf - vec3(1.0, 0.0, 1.0));", "float perm11 = rnm(pi.xy + vec2(permTexUnit, permTexUnit)).a ;", "vec3  grad110 = rnm(vec2(perm11, pi.z)).rgb * 4.0 - 1.0;", "float n110 = dot(grad110, pf - vec3(1.0, 1.0, 0.0));", "vec3  grad111 = rnm(vec2(perm11, pi.z + permTexUnit)).rgb * 4.0 - 1.0;", "float n111 = dot(grad111, pf - vec3(1.0, 1.0, 1.0));", "vec4 n_x = mix(vec4(n000, n001, n010, n011), vec4(n100, n101, n110, n111), fade(pf.x));", "vec2 n_xy = mix(n_x.xy, n_x.zw, fade(pf.y));", "float n_xyz = mix(n_xy.x, n_xy.y, fade(pf.z));", "return n_xyz;", "}", "vec2 coordRot(in vec2 tc, in float angle)", "{", "float aspect = width/height;", "float rotX = ((tc.x*2.0-1.0)*aspect*cos(angle)) - ((tc.y*2.0-1.0)*sin(angle));", "float rotY = ((tc.y*2.0-1.0)*cos(angle)) + ((tc.x*2.0-1.0)*aspect*sin(angle));", "rotX = ((rotX/aspect)*0.5+0.5);", "rotY = rotY*0.5+0.5;", "return vec2(rotX,rotY);", "}", "void main() ", "{", "vec3 rotOffset = vec3(1.425,3.892,5.835);", "vec2 rotCoordsR = coordRot(uv, timer + rotOffset.x);", "vec3 noise = vec3(pnoise3D(vec3(rotCoordsR*vec2(width/grainsize,height/grainsize),0.0)));", "vec4 tex = texture2D(texture, uv);", "vec3 col = tex.rgb;", "vec3 lumcoeff = vec3(0.299,0.587,0.114);", "float luminance = mix(0.0,dot(col, lumcoeff),lumamount);", "float lum = smoothstep(0.2,0.0,luminance);", "lum += luminance;", "noise = mix(noise,vec3(0.0),pow(lum,4.0));", "col = col+noise*grainamount;", "gl_FragColor =  vec4(col, tex.w);", "}"].join("\n");
                    t = this.compileShader(e),
                    this.compiledProgram.set("grain", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.width, this.width),
                this.ctx.uniform1f(t.uniform.height, this.height),
                this.ctx.uniform1f(t.uniform.grainamount, e / 10),
                this.draw(t)
            }
            sharpen(e) {
                let t = this.compiledProgram.get("sharpen");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform vec2 px;\n                uniform float m[9];\n                uniform float amount;\n\n                void main(void) {\n                    vec4 c11 = texture2D(texture, uv - px); // top left\n                    vec4 c12 = texture2D(texture, vec2(uv.x, uv.y - px.y)); // top center\n                    vec4 c13 = texture2D(texture, vec2(uv.x + px.x, uv.y - px.y)); // top right\n\n                    vec4 c21 = texture2D(texture, vec2(uv.x - px.x, uv.y) ); // mid left\n                    vec4 c22 = texture2D(texture, uv); // mid center\n                    vec4 c23 = texture2D(texture, vec2(uv.x + px.x, uv.y) ); // mid right\n\n                    vec4 c31 = texture2D(texture, vec2(uv.x - px.x, uv.y + px.y) ); // bottom left\n                    vec4 c32 = texture2D(texture, vec2(uv.x, uv.y + px.y) ); // bottom center\n                    vec4 c33 = texture2D(texture, uv + px ); // bottom right\n\n                    vec4 color = \n                        c11 * m[0] + c12 * m[1] + c13 * m[2] +\n                        c21 * m[3] + c22 * m[4] + c23 * m[5] +\n                        c31 * m[6] + c32 * m[7] + c33 * m[8];\n\n                    gl_FragColor = color * amount + (c22 * (1.0 - amount));\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("sharpen", t)
                }
                let a = new Float32Array([-1, -1, -1, -1, 9, -1, -1, -1, -1]);
                this.ctx.useProgram(t.program),
                this.ctx.uniform1fv(t.uniform.m, a),
                this.ctx.uniform2f(t.uniform.px, 1 / this.width, 1 / this.height),
                this.ctx.uniform1f(t.uniform.amount, e / 2),
                this.draw(t)
            }
            blur(e, t=!1) {
                let a = this.compiledProgram.get("blur");
                if (!a) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform vec2 size;\n                float random(vec3 scale, float seed) {\n                    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n                }\n                void main() {\n                    vec4 color = vec4(0.0);\n                    float total = 0.0;\n                    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n                    for (float t = -30.0; t <= 30.0; t++) {\n                        float percent = (t + offset - 0.5) / 30.0;\n                        float weight = 1.0 - abs(percent);\n                        vec4 sample = texture2D(texture, uv + size * percent);\n                        sample.rgb *= sample.a;\n                        color += sample * weight;\n                        total += weight;\n                    }\n                    gl_FragColor = color / total;\n                    gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n                }";
                    a = this.compileShader(e),
                    this.compiledProgram.set("blur", a)
                }
                let n = 40 * e / this.canvas.width
                  , i = 40 * e / this.canvas.height;
                this.ctx.useProgram(a.program),
                this.ctx.uniform2f(a.uniform.size, 0, i),
                this.draw(a, !0),
                this.ctx.uniform2f(a.uniform.size, n, 0),
                this.draw(a, t)
            }
            zoom(e) {
                let t = this.compiledProgram.get("zoom");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n\n                uniform vec2 center;\n                uniform float amount;\n                uniform vec2 px;\n                \n                float random(vec3 scale, float seed) {\n                    /* use the fragment position for a different seed per-pixel */                    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n                }\n                void main() {\n                    vec4 color = vec4(0.0);\n                    float total = 0.0;\n                    vec2 toCenter = (center - uv) * px;\n                    \n                    /* randomize the lookup values to hide the fixed number of samples */\n                    float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n                    \n                    for (float t = 0.0; t <= 40.0; t++) {\n                        float percent = (t + offset) / 40.0;\n                        float weight = 4.0 * (percent - percent * percent);\n                        vec4 sample = texture2D(texture, uv + toCenter * percent * amount / px);\n                        \n                        /* switch to pre-multiplied alpha to correctly blur transparent images */\n                        sample.rgb *= sample.a;\n                        \n                        color += sample * weight;\n                        total += weight;\n                    }\n                    gl_FragColor = color / total;\n                    gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("zoom", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.ctx.uniform2f(t.uniform.center, e.x, e.y),
                this.ctx.uniform2f(t.uniform.px, 1 / this.width, 1 / this.height),
                this.draw(t)
            }
            makeKernel(e) {
                const t = this.GAUSSKERN_MAX + Number(!(1 & this.GAUSSKERN_MAX))
                  , a = Math.sqrt(2 * Math.PI) * e
                  , n = 2 * e * e;
                var i, s, r = ~~(t / 2), o = new Float32Array(t);
                for (s = 0,
                i = -r; s < t; i++,
                s++)
                    o[s] = Math.exp(-i * i / n) / a;
                return o
            }
            scaleKernel(e) {
                const t = e.reduce(( (e, t) => e + t)) || 1;
                return e.map((e => e / t))
            }
            gaussian(e) {
                const t = this.makeKernel(10 * e)
                  , a = t.length + Number(!(1 & t.length));
                let n = this.compiledProgram.get(`guass-${a}`);
                if (!n) {
                    let e = `\n                precision mediump float;\n                #define KERNEL_SIZE ${a}\n                #define KERNEL_HALF KERNEL_SIZE / 2\n                // our texture\n                varying vec2 uv;\n                uniform vec2 px;\n                uniform sampler2D texture;\n                uniform float kernel[KERNEL_SIZE];\n                void main() {\n                    vec4 result = vec4(0.0);\n                    for (int i = 0; i < KERNEL_SIZE; i++) {\n                        result += texture2D(texture, uv + px*vec2(i - KERNEL_HALF))*kernel[i];\n                    }\n                    gl_FragColor = result;\n                }\n            `;
                    n = this.compileShader(e),
                    this.compiledProgram.set(`guass-${a}`, n)
                }
                this.ctx.useProgram(n.program),
                this.ctx.uniform2f(n.uniform.px, 0, 1 / this.height),
                this.ctx.uniform1fv(n.uniform.kernel, this.scaleKernel(t)),
                this.draw(n, !0),
                this.ctx.uniform2f(n.uniform.px, 1 / this.width, 0),
                this.draw(n)
            }
            radial(e) {
                let t = this.compiledProgram.get("radial");
                if (!t) {
                    let e = "\n                precision highp float;\n                const float PI = 3.1415926535897932384626433832795;\n                const float samples = 100.;\n\n                uniform sampler2D texture;\n\n                varying vec2 uv;\n                uniform vec2 center;\n                uniform vec2 resolution;\n\n                uniform float amount;\n                uniform int direction;\n                uniform int symmetry;\n               \n                mat2 rotate2d(float _angle){\n                    return mat2(cos(_angle),-sin(_angle),\n                                sin(_angle),cos(_angle));\n                }\n\n                vec2 rotateUV(vec2 uv, mat2 transform, vec2 centerc) {\n                    uv -= centerc;\n                    uv = transform * uv;\n                    uv += centerc;\n                    return uv;\n                }\n             \n                void main(void) {\n                    float ar = resolution.x / resolution.y;\n                    vec2 uvc = uv;\n                    vec2 centerc = center;\n\n                    if (symmetry == 1)\n                    {\n                        if (resolution.x > resolution.y) {\n                            centerc.y /= ar;\n                            uvc.y /= ar;\n                        }\n                        else {\n                            centerc.x *= ar;\n                            uvc.x *= ar;\n                        }\n                    }\n\n                    vec2 coordcw = uvc;\n                    vec2 coordccw = uvc;\n                    vec4 FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n                    vec2 toCenter = uvc - centerc;\n                    float endsamples = 0.;\n\n                    float a = amount / samples;\n\n                    mat2 matcw = rotate2d(-a * PI / 180.);\n                    mat2 matccw = rotate2d(a * PI / 180.);\n\n                    for (float i = 0.; i < samples; i+=1.) {\n                        if (direction == 1 || direction == 2) {\n                            coordccw = rotateUV(coordccw, matccw, centerc);\n                            FragColor += texture2D(texture, coordccw);\n                            endsamples += 1.;\n                        }\n\n                        if (direction == 0 || direction == 2) {\n                            coordcw = rotateUV(coordcw, matcw, centerc);\n                            FragColor += texture2D(texture, coordcw);\n                            endsamples += 1.;\n                        }\n                    }\n                    FragColor /= endsamples;\n                    gl_FragColor = FragColor;\n                }\n            ";
                    t = this.compileShader(e),
                    this.compiledProgram.set("radial", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, 180 * e.amount),
                this.ctx.uniform2f(t.uniform.center, e.x, e.y),
                this.ctx.uniform1i(t.uniform.direction, e.direction),
                this.ctx.uniform2f(t.uniform.resolution, this.width, this.height),
                this.ctx.uniform1i(t.uniform.symmetry, e.symmetry ? 1 : 0),
                this.draw(t)
            }
            motion(e) {
                let t = this.compiledProgram.get("motion");
                if (!t) {
                    let e = "\n                precision mediump float;\n                uniform float KERNEL_SIZE;\n                varying vec2 uv;\n                uniform vec2 resolution;\n                uniform sampler2D texture;\n                uniform float angle;\n\n                bool outOfRange(vec2 uv) {\n                    return uv.x < 0. || uv. y < 0. || uv.x > 1. || uv.y > 1.;\n                }\n                mat2 rotate2d(float _angle){\n                    return mat2(cos(_angle),-sin(_angle),\n                                sin(_angle),cos(_angle));\n                }\n                void main() {\n                    vec4 result = vec4(0.0);\n                    vec2 resol = vec2 (1./resolution.x, 0.);//1./resolution.y);\n                    resol = rotate2d(angle) * resol;\n                    float divcnt = 1.;\n                    for (float i=1.; i <= 100.; i+=1.) {\n                        vec2 before = uv - resol * i;\n                        if (!outOfRange(before)) {\n                            result += texture2D(texture, before);\n                            divcnt += 1.;\n                        }\n                        vec2 after = uv + resol * i;\n                        if (!outOfRange(after)) {\n                            result += texture2D(texture, after);\n                            divcnt += 1.;\n                        }\n                        if (i >= KERNEL_SIZE) break;\n                    }\n                    result += texture2D(texture, uv);\n                    result /= divcnt;\n                    gl_FragColor = result;\n                }\n            ";
                    t = this.compileShader(e),
                    this.compiledProgram.set("motion", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.KERNEL_SIZE, 100 * e.amount),
                this.ctx.uniform1f(t.uniform.angle, e.angle),
                this.ctx.uniform2f(t.uniform.resolution, this.width, this.height),
                this.draw(t)
            }
            clarity(e) {
                let t = this.compiledProgram.get("clarity");
                if (!t) {
                    const e = "\n                #define GLSLIFY 1\n                precision highp float;\n                varying vec2 uv;\n                \n                uniform sampler2D texture;\n                uniform float amount;\n                uniform vec2 px;\n                           \n                float Lum(vec3 c){\n                    return 0.299*c.r + 0.587*c.g + 0.114*c.b;\n                }\n                float BlendOverlayf(float base, float blend){\n                    return (base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)));\n                }\n                vec3 BlendOverlay(vec3 base, vec3 blend){\n                    return vec3(BlendOverlayf(base.r, blend.r), BlendOverlayf(base.g, blend.g), BlendOverlayf(base.b, blend.b));\n                }\n                float BlendVividLightf(float base, float blend){\n                    float BlendColorBurnf = (((2.0 * blend) == 0.0) ? (2.0 * blend) : max((1.0 - ((1.0 - base) / (2.0 * blend))), 0.0));\n                    float BlendColorDodgef =  (((2.0 * (blend - 0.5)) == 1.0) ? (2.0 * (blend - 0.5)) : min(base / (1.0 - (2.0 * (blend - 0.5))), 1.0));\n                    return ((blend < 0.5) ? BlendColorBurnf : BlendColorDodgef);\n                }\n                vec3 BlendVividLight(vec3 base, vec3 blend){\n                    return vec3(BlendVividLightf(base.r, blend.r), BlendVividLightf(base.g, blend.g), BlendVividLightf(base.b, blend.b));\n                }\n\n                float normpdf(in float x, in float sigma) {\n                    return 0.39894*exp(-0.5*x*x/(sigma*sigma))/sigma;\n                }\n\n                vec3 blurMap() {\n                    //declare stuff\n                    const int mSize = 11;\n                    const int kSize = (mSize-1)/2;\n                    float kernel[mSize];\n                    vec3 final_colour = vec3(0.0);\n                    \n                    //create the 1-D kernel\n                    float sigma = 7.0;\n                    float Z = 0.0;\n                    for (int j = 0; j <= kSize; ++j){\n                        kernel[kSize+j] = kernel[kSize-j] = normpdf(float(j), sigma);\n                    }\n                    \n                    //get the normalization factor (as the gaussian has been clamped)\n                    for (int j = 0; j < mSize; ++j){\n                        Z += kernel[j];\n                    }\n                    \n                    //read out the texels\n                    for (int i=-kSize; i <= kSize; ++i){\n                        for (int j=-kSize; j <= kSize; ++j){\n                            final_colour += kernel[kSize+j] * kernel[kSize+i] * texture2D(texture, (uv.xy + vec2(float(i),float(j))*px)).rgb;\n                        }\n                    }\n                    return vec3(final_colour/(Z*Z));\n                }\n    \n                void main() {\n\n                    vec4 base4 = texture2D(texture, uv.xy);\n                    \n                    vec3 blurMap = blurMap();\n                    vec3 base = base4.rgb;\n                    \n                    float intensity = (amount < 0.0) ? (amount / 2.0) : amount;\n                    float lum = Lum(base);\n                  \n                    vec3 col = vec3(lum);\n                    vec3 mask = vec3(1.0 - pow(lum, 1.8));\n                    // invert blurred texture\n                    vec3 layer = vec3(1.0 - Lum(blurMap));\n                    vec3 detail = clamp(BlendVividLight(col, layer), 0.0, 1.0);\n                    // we get negative detail by inverting the detail layer\n                    vec3 inverse = mix(1.0 - detail, detail, (intensity+1.0)/2.0);\n                  \n                    gl_FragColor = vec4(BlendOverlay(base, mix(vec3(0.5), inverse, mask)), base4.a);       \n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("clarity", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform2f(t.uniform.px, 1 / this.width, 1 / this.height),
                this.ctx.uniform1f(t.uniform.amount, 2 * e),
                this.draw(t)
            }
            smooth(e) {
                let t = this.compiledProgram.get("smooth");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform vec2 px;\n                uniform float m[9];\n                uniform float amount;\n\n                void main(void) {\n                    vec4 c11 = texture2D(texture, uv - px);\n                    vec4 c12 = texture2D(texture, vec2(uv.x, uv.y - px.y));\n                    vec4 c13 = texture2D(texture, vec2(uv.x + px.x, uv.y - px.y));\n\n                    vec4 c21 = texture2D(texture, vec2(uv.x - px.x, uv.y) );\n                    vec4 c22 = texture2D(texture, uv);\n                    vec4 c23 = texture2D(texture, vec2(uv.x + px.x, uv.y) );\n\n                    vec4 c31 = texture2D(texture, vec2(uv.x - px.x, uv.y + px.y) );\n                    vec4 c32 = texture2D(texture, vec2(uv.x, uv.y + px.y) );\n                    vec4 c33 = texture2D(texture, uv + px );\n\n                    vec4 color = \n                        c11 * m[0] + c12 * m[1] + c13 * m[2] +\n                        c21 * m[3] + c22 * m[4] + c23 * m[5] +\n                        c31 * m[6] + c32 * m[7] + c33 * m[8];\n\n                    gl_FragColor = color * amount + (c22 * (1.0 - amount));\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("smooth", t)
                }
                let a = new Float32Array([1 / 16, 2 / 16, 1 / 16, 2 / 16, .25, 2 / 16, 1 / 16, 2 / 16, 1 / 16]);
                this.ctx.useProgram(t.program),
                this.ctx.uniform1fv(t.uniform.m, a),
                this.ctx.uniform2f(t.uniform.px, 1 / this.width, 1 / this.height),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            denoise(e) {
                const t = Math.round(30 * e[0]);
                let a = this.compiledProgram.get("denoise" + t);
                if (!a) {
                    let e = "\n                precision mediump float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                \n                uniform float sigma;\n                uniform float threshold;\n                uniform vec2 resolution;\n\n                #define INV_SQRT_OF_2PI 0.39894228040143267793994605993439  // 1.0/SQRT_OF_2PI\n                #define INV_PI 0.31830988618379067153776752674503\n                #define RADIUS %radius%.0\n              \n                void main(void) {\n\n                       float invSigmaQx2 = .5 / (sigma * sigma);      // 1.0 / (sigma^2 * 2.0)\n                       float invSigmaQx2PI = INV_PI * invSigmaQx2;    // 1.0 / (sqrt(PI) * sigma)\n                       \n                       float invThresholdSqx2 = .5 / (threshold * threshold);     // 1.0 / (sigma^2 * 2.0)\n                       float invThresholdSqrt2PI = INV_SQRT_OF_2PI / threshold;   // 1.0 / (sqrt(2*PI) * sigma)\n                       \n                       vec4 center = texture2D(texture,uv); \n                       \n                       float zBuff = 0.0;\n                       vec4 aBuff = vec4(0.0);\n                       \n                       for(float x=-RADIUS; x <= RADIUS; x++) {\n                           float pt = sqrt(RADIUS*RADIUS-x*x);  // pt = yRadius: have circular trend\n                           for(float y=-RADIUS; y <= RADIUS; y++) {\n   \n                               if(y >= pt || y <= pt) {\n   \n                                   vec2 d = vec2(x,y)/resolution;\n                       \n                                   float blurFactor = exp( -dot(d , d) * invSigmaQx2 ) * invSigmaQx2;\n                                   \n                                   vec4 pxx =  texture2D(texture,uv+d);\n                       \n                                   vec4 dC = pxx-center;\n                                   float deltaFactor = exp( -dot(dC, dC) * invThresholdSqx2) * invThresholdSqrt2PI * blurFactor;\n                                                       \n                                   zBuff += deltaFactor;\n                                   aBuff += deltaFactor*pxx;\n                               }\n                           }\n                       }\n                       gl_FragColor = aBuff/zBuff;\n                } ";
                    a = this.compileShader(e.replace(/%radius%/g, t.toString())),
                    this.compiledProgram.set("denoise" + t, a)
                }
                this.ctx.useProgram(a.program),
                this.ctx.uniform1f(a.uniform.sigma, t / 3),
                this.ctx.uniform1f(a.uniform.threshold, e[1]),
                this.ctx.uniform2f(a.uniform.resolution, this.width, this.height),
                this.draw(a)
            }
            colorMatrix(e) {
                let t = new Float32Array(e);
                t[4] /= 255,
                t[9] /= 255,
                t[14] /= 255,
                t[19] /= 255;
                let a = this.compiledProgram.get("colormatrix");
                if (!a) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float m[20];\n\n                void main(void) {\n                    vec4 c = texture2D(texture, uv);\n                    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];\n                    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];\n                    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];\n                    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];\n                } ";
                    a = this.compileShader(e),
                    this.compiledProgram.set("colormatrix", a)
                }
                this.ctx.useProgram(a.program),
                this.ctx.uniform1fv(a.uniform.m, t),
                this.draw(a)
            }
            colorMatrixRange(e, t, a) {
                let n = new Float32Array(e);
                n[4] /= 255,
                n[9] /= 255,
                n[14] /= 255,
                n[19] /= 255;
                let i = this.compiledProgram.get("colormatrix-range");
                if (!i) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float m[20];\n                uniform float from;\n                uniform float to;\n\n                vec3 rgb2hsv(vec3 c) {\n                    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n                    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n                    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n                \n                    float d = q.x - min(q.w, q.y);\n                    float e = 1.0e-10;\n                    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n                }\n\n                void main(void) {\n                    vec4 c = texture2D(texture, uv);\n                    vec3 hsv = rgb2hsv(c.rgb);\n\n                    gl_FragColor = c;\n\n                    if((hsv.x >= from && hsv.x <= to) || (to < from && (hsv.x >= from || hsv.x <= to))) {\n\n                        float blend = 1.0;\n                        float grad = 29.0/360.0;\n\n                        float distFrom = distance(hsv.x, from);\n                        float distTo = distance(hsv.x, to);\n\n                        if(distFrom <= grad) blend = distFrom / grad;\n                        if(distTo <= grad) blend = distTo / grad;\n\n                        vec4 b = vec4(\n                            m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4],\n                            m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9],\n                            m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14],\n                            m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19]);\n                        \n                        gl_FragColor = mix(c, b, blend);\n                    }\n                } ";
                    i = this.compileShader(e),
                    this.compiledProgram.set("colormatrix-range", i)
                }
                this.ctx.useProgram(i.program),
                this.ctx.uniform1fv(i.uniform.m, n),
                this.ctx.uniform1f(i.uniform.from, t / 360),
                this.ctx.uniform1f(i.uniform.to, a / 360),
                this.draw(i)
            }
            desaturate() {
                this.saturation(-1)
            }
            invert() {
                this.colorMatrix([-1, 0, 0, 1, 0, 0, -1, 0, 1, 0, 0, 0, -1, 1, 0, 0, 0, 0, 1, 0])
            }
            contrast(e) {
                let t = e + 1
                  , a = -128 * (t - 1);
                this.colorMatrix([t, 0, 0, 0, a, 0, t, 0, 0, a, 0, 0, t, 0, a, 0, 0, 0, 1, 0])
            }
            hue(e, t, a) {
                let n = this.compiledProgram.get("hue" + (t ? "-range" : ""));
                if (!n) {
                    let e = "\n            precision highp float;\n            varying vec2 uv;\n            \n            uniform sampler2D texture;\n            uniform float rotation;\n            uniform float from;\n            uniform float to;\n            \n            vec3 rgb2hsv(vec3 c) {\n                vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n                vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n                vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n            \n                float d = q.x - min(q.w, q.y);\n                float e = 1.0e-10;\n                return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n            }\n            vec3 hsv2rgb(vec3 c) {\n                vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n                vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n                return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n            }";
                    e += t ? "\n                void main() {\n                    lowp vec4 base = texture2D(texture, uv.xy);\n                    vec3 hsv = rgb2hsv(base.rgb);\n\n                    gl_FragColor = base;\n\n                    if((hsv.x >= from && hsv.x <= to) || (to < from && (hsv.x >= from || hsv.x <= to))) {\n\n                        float blend = 1.0;\n                        float grad = 29.0/360.0;\n\n                        float distFrom = distance(hsv.x, from);\n                        float distTo = distance(hsv.x, to);\n\n                        if(distFrom <= grad) blend = distFrom / grad;\n                        if(distTo <= grad) blend = distTo / grad;\n                        \n                        hsv.x += rotation * blend;\n                        \n                        gl_FragColor.rgb = hsv2rgb(hsv);\n                    }\n                }" : "\n                void main() {\n                    lowp vec4 base = texture2D(texture, uv.xy);\n                    vec3 hsv = rgb2hsv(base.rgb);\n\n                    hsv.x += rotation;\n\n                    gl_FragColor = vec4(hsv2rgb(hsv), base.a);\n                }",
                    n = this.compileShader(e),
                    this.compiledProgram.set("hue" + (t ? "-range" : ""), n)
                }
                this.ctx.useProgram(n.program),
                this.ctx.uniform1f(n.uniform.rotation, e / 360),
                t && (this.ctx.uniform1f(n.uniform.from, t / 360),
                this.ctx.uniform1f(n.uniform.to, a / 360)),
                this.draw(n)
            }
            saturation(e, t, a) {
                let n = 2 * e / 3 + 1
                  , i = -.5 * (n - 1);
                t ? this.colorMatrixRange([n, i, i, 0, 0, i, n, i, 0, 0, i, i, n, 0, 0, 0, 0, 0, 1, 0], t, a) : this.colorMatrix([n, i, i, 0, 0, i, n, i, 0, 0, i, i, n, 0, 0, 0, 0, 0, 1, 0])
            }
            lightness(e, t, a) {
                e *= 255,
                t ? this.colorMatrixRange([1, 0, 0, 0, e, 0, 1, 0, 0, e, 0, 0, 1, 0, e, 0, 0, 0, 1, 0], t, a) : this.colorMatrix([1, 0, 0, 0, e, 0, 1, 0, 0, e, 0, 0, 1, 0, e, 0, 0, 0, 1, 0])
            }
            colorize(e) {
                this.fill(new fe(R.fromHSB(e, 1, 1),"color",1))
            }
            exposure(e) {
                let t = this.compiledProgram.get("exposure");
                if (!t) {
                    let e = ["#define GLSLIFY 1", "precision highp float;", "varying vec2 uv;", "uniform sampler2D texture;", "uniform float amount;", "const float epsilon = 0.000001;", "const float mx = 1.0 - epsilon;", "const mat3 matRGBtoROMM = mat3(0.5293459296226501, 0.3300727903842926, 0.14058130979537964, 0.09837432950735092, 0.8734610080718994, 0.028164653107523918, 0.01688321679830551, 0.11767247319221497, 0.8654443025588989);", "const mat3 matROMMtoRGB = mat3(2.0340757369995117, -0.727334201335907, -0.3067416846752167, -0.22881317138671875, 1.2317301034927368, -0.0029169507324695587, -0.008569774217903614, -0.1532866358757019, 1.1618564128875732);", "float ramp(in float t){", "t *= 2.0;", "if (t >= 1.0) {", "t -= 1.0;", "t = log(0.5) / log(0.5*(1.0-t) + 0.9332*t);", "}", "return clamp(t, 0.001, 10.0);", "}", "vec3 rgb2hsv(in vec3 c) {", "vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);", "vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));", "vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));", "float d = q.x - min(q.w, q.y);", "float e = 1.0e-10;", "return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);", "}", "vec3 hsv2rgb(in vec3 c) {", "vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);", "vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);", "return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);", "}", "vec3 setHue(in vec3 res, in vec3 base) {", "vec3 hsv = rgb2hsv(base);", "vec3 res_hsv = rgb2hsv(res);", "return hsv2rgb(vec3(hsv.x, res_hsv.y, res_hsv.z));", "}", "void main() {", "lowp vec4 col = texture2D(texture, uv.xy);", "vec3 base = col.rgb * matRGBtoROMM;", "float a = abs(amount) * col.a + epsilon;", "float v = pow(2.0, a*2.0+1.0)-2.0;", "float m = mx - exp(-v);", "vec3 res = (amount > 0.0) ? (1.0 - exp(-v*base)) / m : log(1.0-base*m) / -v;", "res = mix(base, res, min(a*100.0, 1.0));", "res = setHue(res, base);", "res = pow(res, vec3(ramp(1.0 - (0.0 * col.a + 1.0) / 2.0)));", "res = res * matROMMtoRGB;", "gl_FragColor = vec4(res, col.a);", "}"].join("\n");
                    t = this.compileShader(e),
                    this.compiledProgram.set("exposure", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            highlights(e) {
                let t = this.compiledProgram.get("highlights");
                if (!t) {
                    let e = ["#define GLSLIFY 1", "precision highp float;", "varying vec2 uv;", "uniform sampler2D texture;", "uniform float amount;", "const float epsilon = 0.000001;", "const float mx = 1.0 - epsilon;", "const float PI = 3.1415926535897932384626433832795;", "const mat3 matRGBtoROMM = mat3(0.5293459296226501, 0.3300727903842926, 0.14058130979537964, 0.09837432950735092, 0.8734610080718994, 0.028164653107523918, 0.01688321679830551, 0.11767247319221497, 0.8654443025588989);", "const mat3 matROMMtoRGB = mat3(2.0340757369995117, -0.727334201335907, -0.3067416846752167, -0.22881317138671875, 1.2317301034927368, -0.0029169507324695587, -0.008569774217903614, -0.1532866358757019, 1.1618564128875732);", "float luma_romm(in vec3 color){", "return dot(color, vec3(0.242655, 0.755158, 0.002187));", "}", "float luma(in vec3 color){", "return dot(color, vec3(0.298839, 0.586811, 0.11435));", "}", "vec3 rgb2hsv(in vec3 c) {", "vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);", "vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));", "vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));", "float d = q.x - min(q.w, q.y);", "float e = 1.0e-10;", "return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);", "}", "vec3 hsv2rgb(in vec3 c) {", "vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);", "vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);", "return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);", "}", "vec3 setHue(in vec3 res, in vec3 base) {", "vec3 hsv = rgb2hsv(base);", "vec3 res_hsv = rgb2hsv(res);", "return hsv2rgb(vec3(hsv.x, res_hsv.y, res_hsv.z));", "}", "float gaussian(in float x) {", "return 1.0 - exp(-PI*2.0*x*x);", "}", "void main() {", "lowp vec4 col = texture2D(texture, uv.xy);", "lowp vec3 map = col.rgb;", "vec3 base = col.rgb * matRGBtoROMM;", "float base_lum = luma(col.rgb);", "float map_lum = luma_romm(map * matRGBtoROMM);", "float exposure = mix(amount, 0.0, 1.0 - map_lum) * col.a;", "float a = abs(exposure) * col.a + epsilon;", "float v = pow(2.0, a+1.0)-2.0;", "float m = mx - exp(-v);", "vec3 res = (exposure > 0.0) ? (1.0 - exp(-v*base)) / m : log(1.0-base*m) / -v;", "res = mix(base, res, min(a*100.0, 1.0));", "res = setHue(res, base);", "res = res * matROMMtoRGB;", "gl_FragColor = vec4(res, col.a);", "}"].join("\n");
                    t = this.compileShader(e),
                    this.compiledProgram.set("highlights", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            shadows(e) {
                let t = this.compiledProgram.get("shadows");
                if (!t) {
                    let e = ["#define GLSLIFY 1", "precision highp float;", "varying vec2 uv;", "uniform sampler2D texture;", "uniform float amount;", "const float epsilon = 0.000001;", "const float mx = 1.0 - epsilon;", "const float PI = 3.1415926535897932384626433832795;", "const mat3 matRGBtoROMM = mat3(0.5293459296226501, 0.3300727903842926, 0.14058130979537964, 0.09837432950735092, 0.8734610080718994, 0.028164653107523918, 0.01688321679830551, 0.11767247319221497, 0.8654443025588989);", "const mat3 matROMMtoRGB = mat3(2.0340757369995117, -0.727334201335907, -0.3067416846752167, -0.22881317138671875, 1.2317301034927368, -0.0029169507324695587, -0.008569774217903614, -0.1532866358757019, 1.1618564128875732);", "float luma_romm(in vec3 color){", "return dot(color, vec3(0.242655, 0.755158, 0.002187));", "}", "float luma(in vec3 color){", "return dot(color, vec3(0.298839, 0.586811, 0.11435));", "}", "vec3 rgb2hsv(in vec3 c) {", "vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);", "vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));", "vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));", "float d = q.x - min(q.w, q.y);", "float e = 1.0e-10;", "return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);", "}", "vec3 hsv2rgb(in vec3 c) {", "vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);", "vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);", "return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);", "}", "vec3 setHue(in vec3 res, in vec3 base) {", "vec3 hsv = rgb2hsv(base);", "vec3 res_hsv = rgb2hsv(res);", "return hsv2rgb(vec3(hsv.x, res_hsv.y, res_hsv.z));", "}", "float gaussian(in float x) {", "return 1.0 - exp(-PI*2.0*x*x);", "}", "void main() {", "lowp vec4 col = texture2D(texture, uv.xy);", "lowp vec3 map = col.rgb;", "vec3 base = col.rgb * matRGBtoROMM;", "float base_lum = luma(col.rgb);", "float map_lum = luma_romm(map * matRGBtoROMM);", "float exposure = mix(0.0, amount, 1.0 - map_lum) * col.a;", "float a = abs(exposure) * col.a + epsilon;", "float v = pow(2.0, a+1.0)-2.0;", "float m = mx - exp(-v);", "vec3 res = (exposure > 0.0) ? (1.0 - exp(-v*base)) / m : log(1.0-base*m) / -v;", "res = mix(base, res, min(a*100.0, 1.0));", "res = setHue(res, base);", "res = res * matROMMtoRGB;", "gl_FragColor = vec4(res, col.a);", "}"].join("\n");
                    t = this.compileShader(e),
                    this.compiledProgram.set("shadows", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            dehaze(e) {
                let t = this.compiledProgram.get("dehaze");
                if (!t) {
                    let e = "\n\n                #define GLSLIFY 1;\n                precision highp float;\n                varying vec2 uv;\n\n                uniform sampler2D texture;\n                uniform float amount;  // -1.0 ~ 1.0\n\n                uniform vec2 size;\n\n                float hazeMap(vec4 base) {\n                    vec3 color = vec3(1.0, 1.0, 1.0);\n                    vec2 step = vec2(1.0 / size.xy);\n                    const int patchRadius = 1; // the half size for shift in 3 x 3 patch.\n                    for (int i = -patchRadius; i <= patchRadius; ++i) {\n                       for (int j = -patchRadius; j <= patchRadius; ++j) {\n                           vec2 uv = clamp(uv + (vec2(i, j) * step), 0.0, 1.0);\n                           color = min(color, base.rgb);\n                        }\n                    }\n                    return min(color.r, min(color.g, color.b));\n                }\n\n                void main() {\n                    \n                    lowp vec4 base = texture2D(texture, uv.xy);\n                    lowp float haze = hazeMap(base);\n\n                    float transmission = 1.0 - 0.95 * haze;\n                    const float A = 0.95; //0.95 intensity. We can consider to collect 0.1% brightest pixel from the dark channel image.\n                    const float t0 = 0.1; //0.1 in the paper, we can increase it for solving the color bleeding.\n                    float t = mix(1.0, max(t0, transmission), amount);\n                    vec3 J = (base.rgb - A) / t + A;\n                    gl_FragColor = vec4(J, base.a);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("dehaze", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform2f(t.uniform.size, this.width, this.height),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            solarize() {
                this.paletteMap || (this.paletteMap = new ImageData(256,1));
                for (let e = 0; e < 256; ++e) {
                    let t = 255 * (e / 255 > .5 ? 2 * (e / 255 - .5) : 2 * (.5 - e / 255));
                    t = t > 255 ? 255 : t < 0 ? 0 : t,
                    this.paletteMap.data[4 * e] = this.paletteMap.data[4 * e + 1] = this.paletteMap.data[4 * e + 2] = t
                }
                this.mapping(this.paletteMap)
            }
            monochrome(e) {
                let t = this.compiledProgram.get("monochrome");
                if (!t) {
                    let e = "\n            precision highp float;\n            varying vec2 uv;\n            \n            uniform sampler2D texture;\n\n            uniform float r;\n            uniform float g;\n            uniform float b;\n            \n            float luma(vec3 color) {\n                return dot(color, vec3(r, g, b));\n            }\n            void main() {\n                lowp vec4 base = texture2D(texture, uv.xy);\n                float avg = luma(base.rgb);\n\n                gl_FragColor = vec4(avg, avg, avg, base.a);\n            }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("monochrome", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.r, e.r),
                this.ctx.uniform1f(t.uniform.g, e.g),
                this.ctx.uniform1f(t.uniform.b, e.b),
                this.draw(t)
            }
            curves(e) {
                this.paletteMap || (this.paletteMap = new ImageData(256,1)),
                void 0 !== e.preset && (e = Te.createCurveSet(e)),
                ke.fillPaletteMap(e, this.paletteMap),
                this.mapping(this.paletteMap)
            }
            levels(e) {
                this.paletteMap || (this.paletteMap = new ImageData(256,1)),
                Me.fillPaletteMap(e, this.paletteMap),
                this.mapping(this.paletteMap)
            }
            multilevels(e) {
                this.paletteMap || (this.paletteMap = new ImageData(256,1)),
                Me.fillRGBPaletteMap(e[0].isFlat() ? void 0 : e[0], e[1].isFlat() ? void 0 : e[1], e[2].isFlat() ? void 0 : e[2], this.paletteMap),
                this.mapping(this.paletteMap)
            }
            mapping(e) {
                let t = this.compiledProgram.get("mapping");
                if (!t) {
                    let e = "\n                #define GLSLIFY 1\n                precision highp float;\n                varying vec2 uv;\n\n                uniform sampler2D texture;\n                uniform sampler2D paletteMap;\n\n                void main() {\n                    lowp vec4 base = texture2D(texture, uv.xy);\n                    float r = texture2D(paletteMap, vec2(base.r, 0)).r;\n                    float g = texture2D(paletteMap, vec2(base.g, 0)).g;\n                    float b = texture2D(paletteMap, vec2(base.b, 0)).b;\n                    gl_FragColor = vec4(r, g, b, base.a);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("mapping", t)
                }
                this.ctx.useProgram(t.program);
                let a = t.getTextureById("paletteMap");
                a.createTexture(this.ctx, e.width, e.height),
                a.uploadData(this.ctx, e),
                this.draw(t)
            }
            lookup(e) {
                let t = this.compiledProgram.get("lookup");
                if (!t) {
                    let e = "\n            precision highp float;\n            varying vec2 uv;\n\n            uniform sampler2D texture;\n            uniform sampler2D paletteMap;\n            \n            float luma(vec3 color) {\n                return dot(color, vec3(0.299, 0.587, 0.114));\n            }\n\n            void main() {\n                lowp vec4 base = texture2D(texture, uv.xy);\n                float avg = luma(base.rgb);\n                float r = texture2D(paletteMap, vec2(avg, 0)).r;\n                float g = texture2D(paletteMap, vec2(avg, 0)).g;\n                float b = texture2D(paletteMap, vec2(avg, 0)).b;\n                gl_FragColor = vec4(r, g, b, base.a);\n            }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("lookup", t)
                }
                this.ctx.useProgram(t.program);
                let a = t.getTextureById("paletteMap");
                a.createTexture(this.ctx, e.width, e.height),
                a.uploadData(this.ctx, e),
                this.draw(t)
            }
            toning(e) {
                this.paletteMap || (this.paletteMap = new ImageData(256,1)),
                be.fillPaletteMap(e, this.paletteMap);
                let t = this.compiledProgram.get("toning");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n\n                uniform sampler2D texture;\n                uniform sampler2D paletteMap;\n\n                uniform float amount;\n                \n                float luma(vec3 color) {\n                    return dot(color, vec3(0.299, 0.587, 0.114));\n                }\n\n                void main() {\n                    lowp vec4 base = texture2D(texture, uv.xy);\n                    float avg = luma(base.rgb);\n                    float r = texture2D(paletteMap, vec2(avg, 0)).r;\n                    float g = texture2D(paletteMap, vec2(avg, 0)).g;\n                    float b = texture2D(paletteMap, vec2(avg, 0)).b;\n                    gl_FragColor = mix(base, vec4(r, g, b, base.a), amount);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("toning", t)
                }
                this.ctx.useProgram(t.program);
                let a = t.getTextureById("paletteMap");
                a.createTexture(this.ctx, this.paletteMap.width, this.paletteMap.height),
                a.uploadData(this.ctx, this.paletteMap),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.draw(t)
            }
            fill(e) {
                let t = this.compiledProgram.get("fill-" + e.blend);
                if (!t) {
                    let a = "";
                    switch (e.blend) {
                    case "color":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform vec4 color;\n                        \n                        vec3 blendColor(vec3 base, vec3 blend) {\n                            vec3 color = vec3(blend.rgb);\n                            base.r = base.r * 0.30 + base.g * 0.59 + base.b * 0.11;\n                            \n                            vec3 power = (color.r+color.g+color.b) * 0.3333 - color;\n                            base.rgb = pow(base.rrr, 1.0 + power);\n\n                            return base;\n                        }\n                        vec3 blendColor(vec3 base, vec3 blend, float opacity) {\n                            return (blendColor(base, blend) * opacity + base * (1.0 - opacity));\n                        }\n\n                        void main() {\n                            vec4 base = texture2D(texture, uv.xy);\n                            gl_FragColor = vec4(blendColor(base.rgb, color.rgb, amount), base.a);\n                        }";
                        break;
                    case "soft-light":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform vec4 color;\n\n                        float blendSoftLight(float base, float blend) {\n                            return (blend<0.5)?(2.0*base*blend+base*base*(1.0-2.0*blend)):(sqrt(base)*(2.0*blend-1.0)+2.0*base*(1.0-blend));\n                        }\n                        vec3 blendSoftLight(vec3 base, vec3 blend) {\n                            return vec3(blendSoftLight(base.r,blend.r),blendSoftLight(base.g,blend.g),blendSoftLight(base.b,blend.b));\n                        }\n                        vec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\n                            return (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\n                        }\n\n                        void main() {\n                            vec4 base = texture2D(texture, uv.xy);\n                            gl_FragColor = vec4(blendSoftLight(base.rgb, color.rgb, amount), base.a);\n                        }";
                        break;
                    case "hard-light":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform vec4 color;\n\n                        float blendOverlay(float base, float blend) {\n                            return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\n                        }\n                        vec3 blendOverlay(vec3 base, vec3 blend) {\n                            return vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\n                        }\n                        vec3 blendHardLight(vec3 base, vec3 blend) {\n                            return blendOverlay(blend,base);\n                        }\n                        vec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\n                            return (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\n                        }\n\n                        void main() {\n                            vec4 base = texture2D(texture, uv.xy);\n                            gl_FragColor = vec4(blendHardLight(base.rgb, color.rgb, amount), base.a);\n                        }";
                        break;
                    case "vivid-light":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform vec4 color;\n\n                        float blendColorBurn(float base, float blend) {\n                            return (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\n                        }\n                        float blendColorDodge(float base, float blend) {\n                            return (blend==1.0)?blend:min(base/(1.0-blend),1.0);\n                        }\n                        float blendVividLight(float base, float blend) {\n                            return (blend<0.5)?blendColorBurn(base,(2.0*blend)):blendColorDodge(base,(2.0*(blend-0.5)));\n                        }\n                        vec3 blendVividLight(vec3 base, vec3 blend) {\n                            return vec3(blendVividLight(base.r,blend.r),blendVividLight(base.g,blend.g),blendVividLight(base.b,blend.b));\n                        }\n                        vec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\n                            return (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\n                        }\n\n                        void main() {\n                            vec4 base = texture2D(texture, uv.xy);\n                            gl_FragColor = vec4(blendVividLight(base.rgb, color.rgb, amount), base.a);\n                        }";
                        break;
                    case "overlay":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform vec4 color;\n\n                        float blendOverlay(float base, float blend) {\n                            return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\n                        }\n                        vec3 blendOverlay(vec3 base, vec3 blend) {\n                            return vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\n                        }\n                        vec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n                            return (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n                        }\n\n                        void main() {\n                            vec4 base = texture2D(texture, uv.xy);\n                            gl_FragColor = vec4(blendOverlay(base.rgb, color.rgb, amount), base.a);\n                        }";
                        break;
                    case "multiply":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform vec4 color;\n                        \n                        vec3 blendMultiply(vec3 base, vec3 blend) {\n                            return base*blend;\n                        }\n                        vec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n                            return (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n                        }\n\n                        void main() {\n                            vec4 base = texture2D(texture, uv.xy);\n                            gl_FragColor = vec4(blendMultiply(base.rgb, color.rgb, amount), base.a);\n                        }";
                        break;
                    case "color-dodge":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform vec4 color;\n                        \n                        float blendColorDodge(float base, float blend) {\n                            return (blend==1.0)?blend:min(base/(1.0-blend),1.0);\n                        }\n                        vec3 blendColorDodge(vec3 base, vec3 blend) {\n                            return vec3(blendColorDodge(base.r,blend.r),blendColorDodge(base.g,blend.g),blendColorDodge(base.b,blend.b));\n                        }\n                        vec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\n                            return (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n                        }\n\n                        void main() {\n                            vec4 base = texture2D(texture, uv.xy);\n                            gl_FragColor = vec4(blendColorDodge(base.rgb, color.rgb, amount), base.a);\n                        }";
                        break;
                    case "color-burn":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform vec4 color;\n                        \n                        float blendColorBurn(float base, float blend) {\n                            return (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\n                        }\n                        vec3 blendColorBurn(vec3 base, vec3 blend) {\n                            return vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\n                        }\n                        vec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n                            return (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n                        }\n\n                        void main() {\n                            vec4 base = texture2D(texture, uv.xy);\n                            gl_FragColor = vec4(blendColorBurn(base.rgb, color.rgb, amount), base.a);\n                        }";
                        break;
                    case "screen":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform vec4 color;\n                        \n                        float blendScreen(float base, float blend) {\n                            return 1.0-((1.0-base)*(1.0-blend));\n                        }\n                        vec3 blendScreen(vec3 base, vec3 blend) {\n                            return vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));\n                        }\n                        vec3 blendScreen(vec3 base, vec3 blend, float opacity) {\n                            return (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\n                        }\n\n                        void main() {\n                            vec4 base = texture2D(texture, uv.xy);\n                            gl_FragColor = vec4(blendScreen(base.rgb, color.rgb, amount), base.a);\n                        }";
                        break;
                    default:
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform vec4 color;\n                        \n                        void main() {\n                            vec4 base = texture2D(texture, uv.xy);\n                            gl_FragColor = mix(base, color, amount);\n                        }"
                    }
                    t = this.compileShader(a),
                    this.compiledProgram.set("fill-" + e.blend, t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform4f(t.uniform.color, e.color.r / 255, e.color.g / 255, e.color.b / 255, 1),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.draw(t)
            }
            glamour(e) {
                let t = this.compiledProgram.get("glamour");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n                uniform vec2 px;\n\n                float normpdf(in float x, in float sigma) {\n                    return 0.39894*exp(-0.5*x*x/(sigma*sigma))/sigma;\n                }\n\n                vec3 blurMap() {\n                    //declare stuff\n                    const int mSize = 11;\n                    const int kSize = (mSize-1)/2;\n                    float kernel[mSize];\n                    vec3 final_colour = vec3(0.0);\n                    \n                    //create the 1-D kernel\n                    float sigma = 7.0;\n                    float Z = 0.0;\n                    for (int j = 0; j <= kSize; ++j){\n                        kernel[kSize+j] = kernel[kSize-j] = normpdf(float(j), sigma);\n                    }\n                    \n                    //get the normalization factor (as the gaussian has been clamped)\n                    for (int j = 0; j < mSize; ++j){\n                        Z += kernel[j];\n                    }\n                    \n                    //read out the texels\n                    for (int i=-kSize; i <= kSize; ++i){\n                        for (int j=-kSize; j <= kSize; ++j){\n                            final_colour += kernel[kSize+j] * kernel[kSize+i] * texture2D(texture, (uv.xy + vec2(float(i),float(j))*px)).rgb;\n                        }\n                    }\n                    return vec3(final_colour/(Z*Z));\n                }\n\n                float luma(vec3 color) {\n                    return dot(color, vec3(0.299, 0.587, 0.114));\n                }\n\n                void main() {\n                    \n                    vec4 base = texture2D(texture, uv);\n                    vec3 color = blurMap();\n                    \n                    color = vec3(luma(color));\n\n                    color = vec3(\n                        (base.r <= 0.5) ? (2.0 * base.r * color.r) : (1.0 - 2.0 * (1.0 - base.r) * (1.0 - color.r)),\n                        (base.g <= 0.5) ? (2.0 * base.g * color.g) : (1.0 - 2.0 * (1.0 - base.g) * (1.0 - color.g)),\n                        (base.b <= 0.5) ? (2.0 * base.b * color.b) : (1.0 - 2.0 * (1.0 - base.b) * (1.0 - color.b))\n                    );\n                \n                    gl_FragColor = mix(base, vec4(color, base.a), amount);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("glamour", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.ctx.uniform2f(t.uniform.px, 1 / this.width, 1 / this.height),
                this.draw(t)
            }
            kaleidoscope(e) {
                let t = this.compiledProgram.get("kaleidoscope");
                if (!t) {
                    let e = "\n                precision mediump float;\n                varying vec2 uv;\n                #define PI 3.14159265359\n\n                uniform sampler2D texture;\n                uniform vec2 resolution;\n\n                uniform float u_stretch;\n                uniform float u_position;\n                uniform float u_amount;\n\n                int modwhole(float a, float b) {\n                    float m = mod(a, b);\n\n                    return int (m+.5);\n                }\n\n                void main(void) {\n                    int numOfAxis = int(u_amount);\n                    float angleFrac = (2. * PI) / float ( 2 * numOfAxis);\n\n                    vec2 uvc = uv;\n                    uvc -= .5;\n\n                    // Convert to Polar\n                    float phi = abs(atan(uvc.x, uvc.y));\n                    float r = length(uvc);\n\n                    int count = int(phi / angleFrac);\n\n                    phi = mod(phi, angleFrac);\n                    if (modwhole (float(count), 2.) == 1) {\n                        phi = angleFrac - phi;\n                    }\n\n                    // from polar coordiantes\n                    float x = r * cos(phi);\n                    float y = r * sin(phi);\n\n                    float stretch = 1. + (1. - u_stretch);\n                    float position = u_position * PI * .5;\n\n                    uvc = vec2(x, y) * stretch + sin(position);\n\n                    if (uvc.x < 0.) uvc.x += 1.;\n                    if (uvc.x > 1.) uvc.x -= 1.;\n                \n                    if (uvc.y < 0.) uvc.y += 1.;\n                    if (uvc.y > 1.) uvc.y -= 1.;\n\n                    gl_FragColor = texture2D (texture, uvc);\n                }\n            ";
                    t = this.compileShader(e),
                    this.compiledProgram.set("kaleidoscope", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.u_amount, e.amount),
                this.ctx.uniform1f(t.uniform.u_stretch, e.stretch),
                this.ctx.uniform1f(t.uniform.u_position, e.position),
                this.ctx.uniform2f(t.uniform.resolution, this.width, this.height),
                this.draw(t)
            }
            polarcoordinates(e) {
                let t = this.compiledProgram.get("polarcoordinates");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                #define PI 3.14159265359\n                #define PI_2 6.2831\n\n                uniform sampler2D texture;\n                uniform int flip;\n                uniform float overlap;\n                uniform float rotate;\n                uniform vec2 resolution;\n                uniform int symmetry;\n\n                mat2 rotate2d(float _angle){\n                    return mat2(cos(_angle),-sin(_angle),\n                                sin(_angle),cos(_angle));\n                }\n\n                vec2 squareImage(vec2 uv) {\n                    // Aspect Ratio\n                    float ar = resolution.x / resolution.y;\n\n                    // Square the image at the center if rectangular\n                    if (symmetry == 1) {\n                        if (resolution.x > resolution.y) {\n                            float leftEdge = (1.0-1.0/ar) * 0.5;\n                            float rightEdge = 1.0 - leftEdge;\n\n                            if (uv.x < leftEdge) {\n                                uv = vec2(0, uv.y); // Fill in the left edge\n                            } else if (uv.x > rightEdge) {\n                                uv = vec2(1, uv.y); // Fill in the right edge\n                            }\n                            else {\n                                uv.x -= leftEdge; // Square the image on X\n                                uv.x *= ar;\n                            }\n                        } else if (resolution.y > resolution.x) {\n                            float bottomEdge = (1.0-ar) * 0.5;\n                            float topEdge = 1.0 - bottomEdge;\n\n                            if (uv.y < bottomEdge) {\n                                uv = vec2(uv.x, 0); // Fill in the bottom edge\n                            } else if (uv.y > topEdge) {\n                                uv = vec2(uv.x, 1); // Fill in the top edge\n                            }\n                            else {\n                                uv.y -= bottomEdge; // Square the image on Y\n                                uv.y /= ar;\n                            }\n                        }\n                    }\n                    return uv;\n                }\n\n                void main(void) {           \n                    // Square the image\n                    vec2 uvc = squareImage(uv);\n\n                    // Bring uv coordinates to center 0.5\n                    uvc = uvc-0.5;\n\n                    // Rotate uv by angle\n                    uvc = rotate2d( rotate ) * uvc;\n\n                    // Cartesian to polar\n                    float r = length(uvc) * 2.0;\n                    float a = atan(uvc.x, uvc.y);\n\n                    // Move from -PI -> PI to 0 -> 1\n                    vec2 uvp = vec2(a / (PI_2 + overlap) + 0.5, r);\n\n                    // Flip the image by 180 degrees\n                    uvp = flip == 1 ? 1.0 - uvp : uvp;\n\n                    // Compute color\n                    gl_FragColor = texture2D(texture, uvp);\n                }\n            ";
                    t = this.compileShader(e),
                    this.compiledProgram.set("polarcoordinates", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1i(t.uniform.flip, e.flip ? 1 : 0),
                this.ctx.uniform1i(t.uniform.symmetry, e.symmetry ? 1 : 0),
                this.ctx.uniform1f(t.uniform.overlap, e.overlap),
                this.ctx.uniform1f(t.uniform.rotate, e.rotate),
                this.ctx.uniform2f(t.uniform.resolution, this.width, this.height),
                this.draw(t)
            }
            fisheye(e) {
                let t = this.compiledProgram.get("fisheye");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                #define PI 3.14159265359\n\n                uniform sampler2D texture;\n                uniform vec2 center;\n                uniform float amount;\n                uniform float aperture;\n                uniform int edgeFill;\n                uniform vec2 resolution;\n\n                vec2 edgeFillReflect(vec2 uvc) {\n                    if (uvc.x < 0.) uvc.x = -uvc.x;\n                    if (uvc.y < 0.) uvc.y = -uvc.y;\n                    if (uvc.x > 1.) uvc.x = 2. - uvc.x;\n                    if (uvc.y > 1.) uvc.y = 2. - uvc.y;\n\n                    return uvc;\n                }\n\n                vec2 edgeFillRepeat(vec2 uvc) {\n                    if (uvc.x < 0.) uvc.x = 1. + uvc.x;\n                    if (uvc.y < 0.) uvc.y = 1. + uvc.y;\n                    if (uvc.x > 1.) uvc.x = uvc.x - 1.;\n                    if (uvc.y > 1.) uvc.y = uvc.y - 1.;\n\n                    return uvc;\n                }\n\n                int edgeFillNone(vec2 uvc) {\n                    if (uvc.x < 0. || uvc.y < 0. || uvc.x > 1. || uvc.y > 1.) {\n                        return 1;\n                    }\n                    return 0;\n                }\n\n                void main(void) {\n\n                    // Normalized device space i.e. range of [-1, 1]\n                    vec2 ndcPos = uv * 2. - center * 2.;\n\n                    // Aspect ratio of the viewport\n                    float aspect = resolution.x / resolution.y;\n\n                    // Relationship between the radius of the perimeter circle (r or half_dist) and\n                    // the angle (eye_angle): \n                    // Bisect the isosceles triangle\n                    float eye_angle = abs(aperture);\n                    float half_angle = eye_angle / 2.;\n                    float half_dist = tan(half_angle);\n\n                    // With the aspect ratio of the viewport (aspect)\n                    vec2 vp_scale = vec2(aspect, 1.);\n                    vec2 P = ndcPos * vp_scale;\n\n                    // Diameter or the length of the viewport\n                    float vp_dia = length(vp_scale);\n\n                    // Relative distance to the center of the viewport\n                    float rel_dist = length(P) / vp_dia;\n\n                    // Relative position of the point P in relation to the aspect ratio\n                    vec2 rel_P = normalize(P) / normalize(vp_scale);\n\n                    vec2 pos_prj = ndcPos;\n                    if (aperture > 0.) {\n                        // Projection from spherical surface to the place\n                        float beta = rel_dist * half_angle;\n                        pos_prj = rel_P * tan(beta) / half_angle * pow(.9, amount * 5.);\n                    } else if (aperture < 0.) {\n                        // Projection from the plane to the spherical surface\n                        float beta = atan(rel_dist * half_dist);\n                        pos_prj = rel_P * beta / half_angle * pow(.9, amount * 5.);\n                    }\n\n                    vec2 uv_prj = pos_prj * .5 + center;\n\n                    // Return transparent if no edge fill\n                    if (edgeFill == 0) {\n                        if (edgeFillNone(uv_prj) == 1) {\n                            discard;\n                        }\n                    }\n                    if (edgeFill == 1) {\n                        uv_prj = edgeFillReflect(uv_prj);\n                    } \n                    if (edgeFill == 2) {\n                        uv_prj = edgeFillRepeat(uv_prj);\n                    }\n\n                    gl_FragColor = texture2D(texture, uv_prj);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("fisheye", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.ctx.uniform1f(t.uniform.aperture, e.aperture),
                this.ctx.uniform2f(t.uniform.center, e.x, e.y),
                this.ctx.uniform1i(t.uniform.edgeFill, e.edgeFill),
                this.ctx.uniform2f(t.uniform.resolution, this.width, this.height),
                this.draw(t)
            }
            wave(e) {
                let t = this.compiledProgram.get("wave");
                if (!t) {
                    let e = "\n                precision mediump float;\n                uniform int type;\n                uniform float amplitude;\n                uniform float scale;\n                varying vec2 uv;\n                uniform int edgeApprox;\n                // uniform vec2 resolution;\n                uniform sampler2D texture;\n                uniform float rotate;\n                #define PI 3.14159265359\n\n                mat2 rotate2d(float _angle){\n                    return mat2(cos(_angle),-sin(_angle),\n                                sin(_angle),cos(_angle));\n                }\n\n                float cot(float angle) {\n                    return cos(angle) / sin(angle);\n                }\n\n                float sinewave(float rad) {\n                    return amplitude * sin(scale * 2. * PI * rad);\n                }\n\n                float trianglewave(float rad) {\n                    return amplitude * 2. / PI * asin(sin(scale * 2. * PI * rad));\n                }\n\n                float squarewave(float rad) {\n                    return amplitude * sign(sin(scale * 2. * PI * rad));\n                }\n\n                void main() {\n                    vec2 uvc = uv;\n\n                    uvc -= 0.5;\n                    uvc = rotate2d(-rotate) * uvc;\n\n                    if (type == 0) {\n                        // sine wave\n                        uvc.y = sinewave(uvc.x) + uvc.y;\n                    } else if (type == 1) {\n                        // triangular wave\n                        uvc.y = trianglewave(uvc.x) + uvc.y;\n                    } else if (type == 2) {\n                        // square wave\n                        uvc.y = squarewave(uvc.x) + uvc.y;\n                    } else {\n                        // sawtooth wave\n                        // uvc.y = amplitude * 2. / PI * atan(cot(scale * 2. * PI * uvc.x));\n                    }\n                    \n                    uvc = rotate2d(rotate) * uvc;\n                    uvc += 0.5;\n                    \n                    // Clamp\n                    // uvc = clamp(uvc, 0., 1.);\n\n                    if (edgeApprox == 2) {\n                        // Repeat acros the edges with the opposite side color\n                        if (uvc.x < 0.) uvc.x = 1. + uvc.x;\n                        if (uvc.y < 0.) uvc.y = 1. + uvc.y;\n                        if (uvc.x > 1.) uvc.x = uvc.x - 1.;\n                        if (uvc.y > 1.) uvc.y = uvc.y - 1.;\n                    } else if (edgeApprox == 1) {\n                        // Approximate (natural) around the edges with the reflection color\n                        if (uvc.x < 0.) uvc.x = -uvc.x;\n                        if (uvc.y < 0.) uvc.y = -uvc.y;\n                        if (uvc.x > 1.) uvc.x = 2. - uvc.x;\n                        if (uvc.y > 1.) uvc.y = 2. - uvc.y;    \n                    } else {\n                        // Don't approximate, render transparent\n                        if (uvc.x < 0. || uvc.x > 1. || \n                            uvc.y < 0. || uvc.y > 1.) {\n                            gl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n                            return;\n                        }    \n                    }\n\n                    gl_FragColor = texture2D(texture, uvc);\n                    return;\n                }\n            ";
                    t = this.compileShader(e),
                    this.compiledProgram.set("wave", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1i(t.uniform.type, e.type),
                this.ctx.uniform1f(t.uniform.amplitude, e.amplitude),
                this.ctx.uniform1f(t.uniform.scale, e.scale),
                this.ctx.uniform1f(t.uniform.rotate, e.rotate),
                this.ctx.uniform1i(t.uniform.edgeApprox, e.edgeApprox),
                this.draw(t)
            }
            reflect(e) {
                let t = this.compiledProgram.get("reflect");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                #define PI 3.14159265359\n                #define PI_2 6.2831\n\n                uniform sampler2D texture;\n                uniform int type;\n                uniform vec2 resolution;\n                uniform vec2 center;\n                uniform vec2 offset;\n\n                // constant integers for directions\n                const int RIGHT = 1, LEFT = -1, ZERO = 0;\n\n                const float ALMOST_ZERO = 0.00001;\n\n                mat2 rotate2d(float _angle){\n                    return mat2(cos(_angle),-sin(_angle),\n                                sin(_angle),cos(_angle));\n                }\n\n                vec2 squareImage(vec2 uv) {\n                    // return uv;\n\n                    float ar = resolution.x / resolution.y;\n\n                    if (resolution.x > resolution.y) {\n                        uv.y /= ar;\n                    }\n                    else {\n                        uv.x *= ar;\n                    }\n                    return uv;\n                }\n\n                vec2 squareImagereverse(vec2 uv) {\n                    float ar = resolution.x / resolution.y;\n\n                    if (resolution.x > resolution.y) {\n                        uv.y /= ar;\n                        uv.y += (1. - 1./ar) * 0.5;\n                    }\n                    else {\n                        uv.x *= ar;\n                        uv.x += (1. - ar) * 0.5;\n                    }\n                    return uv;\n                }\n\n                int direction(vec2 A, vec2 B, vec2 P) {\n                    // subtracting co-ordinates of point A from\n                    // B and P, to make A as origin\n                    B.x -= A.x;\n                    B.y -= A.y;\n                    P.x -= A.x;\n                    P.y -= A.y;\n                \n                    // Determining cross Product\n                    float cross_product = B.x * P.y - B.y * P.x;\n                \n                    // return RIGHT if cross product is positive\n                    if (cross_product > ALMOST_ZERO)\n                        return LEFT;\n                \n                    // return LEFT if cross product is negative\n                    if (cross_product < -ALMOST_ZERO)\n                        return RIGHT;\n                \n                    // return ZERO if cross product is zero.\n                    return ZERO;\n                }\n                \n                vec2 reflectmagic(vec2 uvc, int reflectfrom, mat2 transf, vec2 A, vec2 B, vec2 center) {\n\n                    vec2 cent = center - 0.5;\n                    uvc -= center;\n\n                    int dircent = direction(A, B, cent);\n                    int diruv = direction(A, B, uvc);\n\n                    uvc = dircent >= ZERO && diruv >= ZERO || dircent == LEFT && diruv == LEFT ? transf * uvc : uvc;\n\n                    uvc += center;\n\n                    uvc -= 0.5;\n\n                    if (reflectfrom == LEFT) {\n                        uvc = dircent >= ZERO ? uvc : transf * uvc;\n                    } else {\n                        uvc = dircent == LEFT ? uvc : transf * uvc;\n                    }\n\n                    uvc += 0.5;\n\n                    return uvc;\n                }\n\n                vec2 reflectx(vec2 uvc, int reflectfrom) {\n                    mat2 transf = mat2(-1., 0., 0., 1.);     \n\n                    vec2 A = vec2 (0., -1.);\n                    vec2 B = vec2 (0., 1.);\n\n                    return reflectmagic(uvc, reflectfrom, transf, A, B, center);\n                }\n\n                vec2 reflecty(vec2 uvc, int reflectfrom) {\n                    mat2 transf = mat2(1., 0., 0., -1.);    \n\n                    vec2 A = vec2 (-1., 0.);\n                    vec2 B = vec2 (1., 0.);\n\n                    return reflectmagic(uvc, reflectfrom, transf, A, B, center);\n                }\n\n                vec2 reflectxequalminusy(vec2 uvc, int reflectfrom) {\n                    mat2 transf = mat2(0., 1., 1., 0.);\n\n                    vec2 A = vec2 (-1., -1.);\n                    vec2 B = vec2 (1., 1.);\n\n                    return reflectmagic(uvc, reflectfrom, transf, A, B, vec2(center.x, 1.-center.x));\n                }\n\n                vec2 reflectxequaly(vec2 uvc, int reflectfrom) {\n                    mat2 transf = mat2(0., -1., -1., 0.);\n\n                    vec2 A = vec2 (-1., 1.);\n                    vec2 B = vec2 (1., -1.);\n\n                    return reflectmagic(uvc, reflectfrom, transf, A, B, vec2(center.x, center.x));\n                }\n\n                vec2 reflect(vec2 uvc) {\n                    //reflect-type-minus-x\n                    if (type == 1) {\n                        uvc = reflectx(uvc, LEFT);\n                    }\n                    //reflect-type-minus-y\n                    else if (type == 2) {\n                        uvc = reflecty(uvc, LEFT);\n                    }\n                    //reflect-type-plus-x\n                    if (type == 3) {\n                        uvc = reflectx(uvc, RIGHT);\n                    }\n                    //reflect-type-plus-y\n                    else if (type == 4) {\n                        uvc = reflecty(uvc, RIGHT);\n                    }\n                    //reflect-type-minus-x-minus-y\n                    else if (type == 5) {\n                        uvc = reflectx(uvc, LEFT);\n                        uvc = reflecty(uvc, LEFT);\n                    }\n                    //reflect-type-minus-x-plus-y\n                    else if (type == 6) {\n                        uvc = reflectx(uvc, LEFT);\n                        uvc = reflecty(uvc, RIGHT);\n                    }\n                    //reflect-type-plus-x-plus-y\n                    else if (type == 7) {\n                        uvc = reflectx(uvc, RIGHT);\n                        uvc = reflecty(uvc, RIGHT);\n                    }\n                    //reflect-type-plus-x-minus-y\n                    else if (type == 8) {\n                        uvc = reflectx(uvc, RIGHT);\n                        uvc = reflecty(uvc, LEFT);\n                    }\n                    //reflect-type-above-x-equalto-y\n                    else if (type == 9) {\n                        uvc = reflectxequalminusy(uvc, LEFT);\n                    }\n                    // reflect-type-below-x-equalto-minus-y\n                    else if (type == 10) {\n                        uvc = reflectxequaly(uvc, RIGHT);\n                    }\n                    // reflect-type-above-x-equalto-minus-y\n                    else if (type == 11) {\n                        uvc = reflectxequaly(uvc, LEFT);\n                    }\n                    // reflect-type-below-x-equalto-y\n                    else if (type == 12) {\n                        uvc = reflectxequalminusy(uvc, RIGHT);\n                    }\n                    return uvc;\n                }\n\n                void main(void) {\n                    vec2 uvc = reflect(uv) - offset;\n                    gl_FragColor = texture2D(texture, uvc);\n                }\n            ";
                    t = this.compileShader(e),
                    this.compiledProgram.set("reflect", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1i(t.uniform.type, e.type),
                this.ctx.uniform2f(t.uniform.center, e.x, e.y),
                this.ctx.uniform2f(t.uniform.offset, e.xo, e.yo),
                this.ctx.uniform2f(t.uniform.resolution, this.width, this.height),
                this.draw(t)
            }
            bloom(e) {
                let t = this.compiledProgram.get("bloom");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n                uniform vec2 px;\n                float thresh = .5;\n                \n                void main() {\n                    vec4 sum = vec4(0);\n                \n                    // mess of for loops due to gpu compiler/hardware limitations\n                    int j=-2;\n                    for( int i=-2; i<=2; i++) sum+=texture2D(texture,uv+vec2(i,j)*px);\n                    j=-1;\n                    for( int i=-2; i<=2; i++) sum+=texture2D(texture,uv+vec2(i,j)*px);\n                    j=0;\n                    for( int i=-2; i<=2; i++) sum+=texture2D(texture,uv+vec2(i,j)*px);\n                    j=1;\n                    for( int i=-2; i<=2; i++) sum+=texture2D(texture,uv+vec2(i,j)*px);\n                    j=2;\n                    for( int i=-2; i<=2; i++) sum+=texture2D(texture,uv+vec2(i,j)*px);\n                    sum/=25.0;\n                \n                    gl_FragColor= texture2D(texture, uv);\n                \n                    // use the blurred colour if it's bright enough\n                    if (length(sum) > thresh) {\n                        gl_FragColor += sum*amount;\n                    }\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("bloom", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.ctx.uniform2f(t.uniform.px, 1 / this.width, 1 / this.height),
                this.draw(t)
            }
            posterize(e) {
                let t = this.compiledProgram.get("posterize");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n\n                float areas = 256.0 / amount;\n                float values = 255.0 / (amount - 1.0);\n                \n                void main() {\n                    vec4 px = texture2D(texture, uv);\n\n                    px.r = floor(values * floor((px.r*255.0) / areas))/255.0;\n                    px.g = floor(values * floor((px.g*255.0) / areas))/255.0;\n                    px.b = floor(values * floor((px.b*255.0) / areas))/255.0;\n\n                    gl_FragColor = px;\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("posterize", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, 100 * e + 1),
                this.draw(t)
            }
            fringe(e) {
                let t = this.compiledProgram.get("fringe");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform vec2 amount;\n\n                void main() {\n                    vec2 dir = uv - vec2( .5 );\n                    float d = .7 * length( dir );\n                    normalize( dir );\n                    vec2 value = d * dir * amount;\n                \n                    vec4 c1 = texture2D( texture, uv - value);\n                    vec4 c2 = texture2D( texture, uv );\n                    vec4 c3 = texture2D( texture, uv + value);\n                    \n                    gl_FragColor = vec4( c1.r, c2.g, c3.b, c1.a + c2.a + c3.b);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("fringe", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform2f(t.uniform.amount, e, e),
                this.draw(t)
            }
            rgbSplit(e) {
                let t = 0
                  , a = 0
                  , n = 0;
                const i = e.distance;
                switch (e.type) {
                case "red-blue":
                    t = i,
                    n = -i;
                    break;
                case "green-red":
                    t = -i,
                    a = i;
                    break;
                case "blue-green":
                    a = -i,
                    n = i;
                    break;
                case "red":
                    t = i;
                    break;
                case "green":
                    a = i;
                    break;
                case "blue":
                    n = i
                }
                let s = this.compiledProgram.get("rgb-split");
                if (!s) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n\n                uniform vec2 r;\n                uniform vec2 g;\n                uniform vec2 b;\n\n                void main() {\n                \n                    vec4 px = texture2D(texture, uv);\n\n                    vec4 c1 = texture2D( texture, uv - r);\n                    vec4 c2 = texture2D( texture, uv - g);\n                    vec4 c3 = texture2D( texture, uv - b);\n                    \n                    gl_FragColor = mix(px, vec4( c1.r, c2.g, c3.b, (c1.a + c2.a + c3.a)/3.0), amount);\n                }";
                    s = this.compileShader(e),
                    this.compiledProgram.set("rgb-split", s)
                }
                this.ctx.useProgram(s.program),
                this.ctx.uniform1f(s.uniform.amount, e.amount);
                var r = e.direction * Math.PI / 180
                  , o = Math.cos(r)
                  , l = Math.sin(r);
                this.ctx.uniform2f(s.uniform.r, o * t, l * t),
                this.ctx.uniform2f(s.uniform.g, o * a, l * a),
                this.ctx.uniform2f(s.uniform.b, o * n, l * n),
                this.draw(s)
            }
            interference(e) {
                let t = this.compiledProgram.get("interference");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float seed;\n                uniform float amount;\n                uniform int direction;\n\n                float rand(vec2 co){\n                    return fract(sin(dot(co.xy, vec2(12.9898,78.233)*3.141)) * 43758.5453);\n                }\n\n                void main() {\n\n                    float rand1 = rand(vec2(seed,seed));\n                    float rand2 = rand(vec2(seed,rand1));\n                \n                    float rand1xy = rand(vec2(rand1*uv.x,rand2*uv.y));\n                    float rand2xy = rand(vec2(rand1*uv.y,rand2*uv.x));\n                  \n                    float rand1x = rand(vec2(rand1*uv.x,rand2));\n                    float rand2x = rand(vec2(rand1x,rand1x));     \n\n                    float rand1y = rand(vec2(rand1*uv.y,rand2));\n                    float rand2y = rand(vec2(rand1y,rand1y));                       \n                    \n                    if(direction == 0) {\n                        if(rand2y/100.0 > rand1y) {\n                            if(rand2xy < 0.3) gl_FragColor = vec4(rand1xy, rand1xy, rand1xy, 0.0);\n                            else gl_FragColor = texture2D(texture, uv);\n                        }\n                        else {\n                            gl_FragColor = texture2D(texture, vec2(uv.x + rand1y * amount, uv.y));\n                        }\n                    } else {\n                        if(rand2x/100.0 > rand1x) {\n                            if(rand2xy < 0.3) gl_FragColor = vec4(rand1xy, rand1xy, rand1xy, 0.0);\n                            else gl_FragColor = texture2D(texture, uv);\n                        }\n                        else {\n                            gl_FragColor = texture2D(texture, vec2(uv.x, uv.y + rand1x * amount));\n                        }\n                    }\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("interference", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.seed, e.seed),
                this.ctx.uniform1f(t.uniform.amount, e.amount / 15),
                this.ctx.uniform1i(t.uniform.direction, e.direction ? 1 : 0),
                this.draw(t)
            }
            bleed(e) {
                let t = this.compiledProgram.get("bleed");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float seed;\n                uniform float block;\n                uniform float amplitude;\n              \n                float rand(vec2 n) { \n                    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n                }\n                float randomRange (in vec2 sd, in float min, in float max) {\n                    return min + rand(sd) * (max - min);\n                }\n                float insideRange(float v, float bottom, float top) {\n                   return step(bottom, v) - step(top, v);\n                }\n\n                float noise(vec2 uv, float blockiness){   \n                    vec2 lv = fract(uv);\n                    vec2 id = floor(uv);\n                    \n                    float n1 = rand(id);\n                    float n2 = rand(id+vec2(1,0));\n                    float n3 = rand(id+vec2(0,1));\n                    float n4 = rand(id+vec2(1,1));\n                    \n                    vec2 u = smoothstep(0.0, 1.0 + blockiness, lv);\n\n                    return mix(mix(n1, n2, u.x), mix(n3, n4, u.x), u.y);\n                }\n\n                float fbm(vec2 uv, int count, float blockiness, float complexity) {\n                    float val = 0.0;\n                    float amp = 0.5;\n                    \n                    for (int i = 0; i < 1000; i++) {\n                        if(i == count) break;\n                        \n                        val += amp * noise(uv, blockiness);\n                        amp *= 0.5;\n                        uv *= complexity;    \n                    }  \n                    return val;\n                }\n\n                const float shift = 2.0; //2\n\n                void main()\n                {\n                    vec4 px = texture2D(texture, uv);\n\n                    for (float i = 0.0; i < 20.0; i += 1.0) {\n\n                        float sliceY = rand(vec2(seed, 2035.0 + float(i)));\n                        float sliceX = rand(vec2(seed, 3234.0 + float(i)));\n\n                        float sliceH = rand(vec2(seed, 2035.0 - float(i))) * 0.1;\n                        float sliceW = rand(vec2(seed, 3234.0 + float(i))) * 1.5;\n\n                        if(insideRange(uv.y, sliceY, fract(sliceY+sliceH)) == 1.0 && insideRange(uv.x, sliceX, fract(sliceX+sliceW)) == 1.0){\n                           \n                            vec2 id = floor(uv * 5.0);\n        \n                            // Generate shift amplitude\n                            float shift = amplitude * fbm(uv, int(id * 6.), shift, block);\n                            //float shift = randomRange(vec2(seed, 5234.0 + float(i)), -amplitude, amplitude);\n        \n                            float r = texture2D(texture, vec2(uv.x + shift, uv.y)).r * (1. - shift) ;\n                            float g = texture2D(texture, vec2(uv.x - shift, uv.y)).g * (1. - shift) + rand(id) * shift;\n                            float b = texture2D(texture, vec2(uv.x - shift, uv.y)).b * (1. - shift);\n        \n                            px = mix(vec4(r, g, b, px.a), px, 0.5);\n                        }\n                        gl_FragColor = px;\n                    }\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("bleed", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.seed, e.seed),
                this.ctx.uniform1f(t.uniform.amplitude, e.amplitude),
                this.ctx.uniform1f(t.uniform.block, e.block),
                this.draw(t)
            }
            slice(e) {
                let t = this.compiledProgram.get("slice");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float seed;\n                uniform float amount;\n                uniform float distance;\n                uniform int line;\n\n                //2D (returns 0 - 1)\n                float random2d(vec2 n) { \n                    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n                }\n                float randomRange (in vec2 sd, in float min, in float max) {\n                    return min + random2d(sd) * (max - min);\n                }\n                \n                // return 1 if v inside 1d range\n                float insideRange(float v, float bottom, float top) {\n                   return step(bottom, v) - step(top, v);\n                }\n                  \n                void main() {\n                  \n                    vec4 px = texture2D(texture, uv);\n\n                    for (float i = 0.0; i < 100.0; i += 1.0) {\n\n                        if(i == amount) break;\n\n                        float sliceY = random2d(vec2(seed, 2035.0 + float(i)));\n                        float sliceX = random2d(vec2(seed, 5234.0 + float(i)));\n\n                        float sliceH = random2d(vec2(seed, 2035.0 - float(i))) * 0.1;\n                        float sliceW = random2d(vec2(seed, 5234.0 + float(i))) * 1.5;\n\n                        float hOffset = randomRange(vec2(seed, 2035.0 + float(i)), -distance*.5, distance*.5);\n                        float wOffset = randomRange(vec2(seed, 5234.0 + float(i)), -distance, distance);\n\n                        vec2 uvOff = uv;\n                        uvOff.x += wOffset;\n                        uvOff.y += hOffset;\n\n                        if(insideRange(uv.y, sliceY, fract(sliceY+sliceH)) == 1.0 && (line == 1 || insideRange(uv.x, sliceX, fract(sliceX+sliceW)) == 1.0)){\n                            px = texture2D(texture, uvOff);\n                        }\n                    }\n                    gl_FragColor = px;\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("slice", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.seed, e.seed),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.ctx.uniform1f(t.uniform.distance, e.distance / 3),
                this.ctx.uniform1i(t.uniform.line, e.line ? 1 : 0),
                this.draw(t)
            }
            mimicHDR(e) {
                let t = this.compiledProgram.get("mimicHDR");
                if (!t) {
                    const e = "\n                precision highp float;\n\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform sampler2D blurMap;\n\n                uniform float amount;\n                uniform float contra;\n                \n                float blendSoftLight(float base, float blend) {\n                    return (blend<0.5)?(2.0*base*blend+base*base*(1.0-2.0*blend)):(sqrt(base)*(2.0*blend-1.0)+2.0*base*(1.0-blend));\n                }\n                vec4 blendSoftLight(vec4 base, vec4 blend) {\n                    return vec4(blendSoftLight(base.r,blend.r),blendSoftLight(base.g,blend.g),blendSoftLight(base.b,blend.b), base.a);\n                }\n\n                float blendOverlay(float base, float blend) {\n                    return base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\n                }\n                vec4 blendOverlay(vec4 base, vec4 blend) {\n                    return vec4(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b), base.a);\n                }\n               \n                void main() {\n                    vec4 px = texture2D(texture, uv);\n                    vec4 blur = texture2D(blurMap, uv);\n\n                    vec4 blend = blendOverlay(px, blur);\n                    blend = mix(blend, blendSoftLight(px, blend), contra);\n\n                    gl_FragColor = mix(px, blend, amount);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("mimicHDR", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.ctx.uniform1f(t.uniform.contra, e.contra);
                let a = t.getTextureById("blurMap");
                a.createTexture(this.ctx, e.blurMap.width, e.blurMap.height),
                a.uploadData(this.ctx, e.blurMap),
                this.draw(t)
            }
            pixelate(e) {
                let t = this.compiledProgram.get("pixelate");
                if (!t) {
                    const e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform vec2 resolution;\n                uniform sampler2D texture;\n                uniform float amount;\n\n                void main() {\n                    float d = 1.0 / amount;\n                    float ar = resolution.x / resolution.y;\n                    float u = floor( uv.x / d ) * d + d*0.5;\n                    d = ar / amount;\n                    float v = floor( uv.y / d ) * d + d*0.5;\n                    gl_FragColor = texture2D(texture, vec2( u, v ) );\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("pixelate", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, 4 * (100 - 100 * e)),
                this.ctx.uniform2f(t.uniform.resolution, this.width, this.height),
                this.draw(t)
            }
            scanlines(e) {
                let t = this.compiledProgram.get("scanlines");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n                uniform float size;\n\n                uniform int colorize;\n                uniform int direction;\n\n                void main() {\n                    \n                    vec2 sl;\n                    vec4 scanlines;\n                    vec4 color = texture2D(texture, uv);\n\n                    if(direction == 0) {\n                        sl = vec2(sin(uv.y * size), cos(uv.y * size)) * amount;\n                    }\n                    else {\n                        sl = vec2(sin(uv.x * size), cos(uv.x * size)) * amount;\n                    }\n\n                    if(colorize == 1) {\n                        scanlines = vec4(sl.x, sl.y, sl.x, 1.0);\n                    } \n                    else {\n                        scanlines = vec4(sl.x, sl.x, sl.x, 1.0);\n                    }\n\n                    gl_FragColor = vec4(color.r + scanlines.r, color.g + scanlines.g, color.b + scanlines.b, color.a);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("scanlines", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.size, e.direction ? Math.round(this.height / e.size) : Math.round(this.width / e.size)),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.ctx.uniform1i(t.uniform.colorize, e.colorize ? 1 : 0),
                this.ctx.uniform1i(t.uniform.direction, e.direction ? 1 : 0),
                this.draw(t)
            }
            mosaic(e) {
                let t = this.compiledProgram.get("mosaic");
                if (!t) {
                    const e = "\n                precision highp float;\n                varying vec2 uv;\n                \n                uniform sampler2D texture;\n                uniform vec2 num;\n                \n                void main()\n                {\n                    vec2 uv = uv;\n                    vec2 uv2 = floor(uv*num)/num;\n                    uv -= uv2;\n                    uv *= num;\n                    gl_FragColor = texture2D(texture, \n                                    uv2 + vec2(step(1.0-uv.y,uv.x)/(2.0*num.x),\n                                    step(uv.x,uv.y)/(2.0*num.y)));\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("mosaic", t)
                }
                let a = Math.round(100 * (1 - e))
                  , n = Math.round(this.height / this.width * a);
                this.ctx.useProgram(t.program),
                this.ctx.uniform2f(t.uniform.num, a, n),
                this.draw(t)
            }
            bokeh(e) {
                let t = this.compiledProgram.get("bokeh-" + e.type);
                if (!t) {
                    let a = "";
                    switch (e.type) {
                    case "circle":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform float size;\n                        uniform vec2 px;\n                        \n                        #define PI 3.1415926538\n                        #define KNL 100.0\n\n                        void main() {\n\n                            float spread = floor(size*30.0 + 0.5) + 1.0;\n                            float myx = spread*2.0;\n\n                            vec3 mcol = vec3(0.0);\n                            vec3 avg  = vec3(0.0);                          \n                            float rc = 0.0;\n\n                            for(float x = 0.0; x < KNL; x += 1.0)\n                            {\n                                if(x == myx) break;\n        \n                                for(float y = 0.0; y < KNL; y += 1.0)\n                                {\n                                    if(y == myx) break;\n        \n                                    float l = length(vec2(x-spread,y-spread));\n                                    if(l <= spread)\n                                    {\n                                        vec3 col = texture2D(texture, uv + px * vec2(x-spread,y-spread) * 2.0).rgb;\n                                        mcol = max(mcol, col);\n                                        avg += col;\n                                        rc += 1.0;\n                                    }\n                                }\n                            }\n                            gl_FragColor = vec4(mix(avg / rc, mcol, amount), 1.0);\n                        }";
                        break;
                    case "square":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform float size;\n                        uniform vec2 px;\n\n                        #define KNL 100.0\n\n                        void main() {\n\n                            float spread = floor(size*30.0 + 0.5) + 1.0;\n                            float myx = spread*2.0;\n\n                            vec3 mcol = vec3(0.0);\n                            vec3 avg = vec3(0.0);\n        \n                            for(float x = 0.0; x < KNL; x += 1.0)\n                            {\n                                if(x == myx) break;\n        \n                                for(float y = 0.0; y < KNL; y += 1.0)\n                                {\n                                    if(y == myx) break;\n        \n                                    vec3 col = texture2D(texture, uv + px * vec2(x-spread,y-spread) * 2.0).rgb;\n                                    mcol = max(mcol, col);\n                                    avg += col;\n                                }\n                            }\n                            gl_FragColor = vec4(mix(avg / (myx * myx), mcol, amount), 1.0);\n                        }";
                        break;
                    case "hexagon":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform float size;\n                        uniform vec2 px;\n                        \n                        #define PI 3.1415926538\n                        #define PI2 6.283185308\n                        #define KNL 100.0\n\n                        void main() {\n\n                            float spread = floor(size*30.0 + 0.5) + 1.0;\n                            float myx = spread*2.0;\n\n                            vec3 mcol = vec3(0.0);\n                            vec3 avg  = vec3(0.0);\n                            float rc = 0.0;\n        \n                            for(float x = 0.0; x < KNL; x += 1.0)\n                            {\n                                if(x == myx) break;\n        \n                                for(float y = 0.0; y < KNL; y += 1.0)\n                                {\n                                    if(y == myx) break;\n        \n                                    vec2 pt = vec2(x-spread, y-spread);\n        \n                                    float an = 0.33 + atan(pt.x, pt.y); //0.33 Angle\n                                    float ngon = cos(an - (PI2 * floor((PI + 6.0 * an) / PI2)) / 6.0) / cos(PI / 6.0); //6 corners\n                                    float ngonSdf = ngon * length(pt) - spread;\n                            \n                                    if(ngonSdf <= 0.0) {\n                                        vec3 col = texture2D(texture, uv + px * vec2(x-spread, y-spread) * 2.0).rgb;\n                                        mcol = max(mcol, col);\n                                        avg += col;\n                                        rc += 1.0;\n                                    }\n                                }\n                            }\n                            gl_FragColor = vec4(mix(avg / rc, mcol, amount), 1.0);\n                        }";
                        break;
                    case "cross":
                        a = "\n                        precision highp float;\n                        varying vec2 uv;\n                        uniform sampler2D texture;\n                        uniform float amount;\n                        uniform float size;\n                        uniform vec2 px;\n                        \n                        #define KNL 100.0\n\n                        void main() {\n\n                            float spread = floor(size*30.0 + 0.5) + 1.0;\n        \n                            vec3 mcol = vec3(0.0);\n                            vec3 avg  = vec3(0.0);\n                            float rc = 0.0;\n        \n                            float myx = spread*2.0;\n                            float low = spread*.7;\n                            float high = spread*1.3;\n        \n                            for(float x = 0.0; x < KNL; x += 1.0)\n                            {\n                                if(x == myx) break;\n        \n                                for(float y = 0.0; y < KNL; y += 1.0)\n                                {\n                                    if(y == myx) break;\n        \n                                    if((y > low && y < high) || (x > low && x < high))\n                                    {\n                                        vec3 col = texture2D(texture, uv + px * vec2(x-spread,y-spread) * 2.0).rgb;\n                                        mcol = max(mcol, col);\n                                        avg += col;\n                                        rc += 1.0;\n                                    }\n                                }\n                            }\n                            gl_FragColor = vec4(mix(avg / rc, mcol, amount), 1.0);\n                        }"
                    }
                    t = this.compileShader(a),
                    this.compiledProgram.set("bokeh-" + e.type, t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.size, e.size),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.ctx.uniform2f(t.uniform.px, 1 / this.width, 1 / this.height),
                this.draw(t)
            }
            art(e) {
                let t = this.compiledProgram.get("art");
                if (!t) {
                    let e = ["precision highp float;", "uniform sampler2D texture;", "varying vec2 uv;", "void main() {", "vec4 color, tmp, add;", "vec2 uv = uv + vec2( sin( uv.y * 100.0 ), sin( uv.x * 100.0 )) * 0.0005;", "color = texture2D( texture, uv );", "add = tmp = texture2D( texture, uv + vec2( 0.0015, 0.0015 ));", "if( tmp.r < color.r ) color = tmp;", "add += tmp = texture2D( texture, uv + vec2( -0.0015, 0.0015 ));", "if( tmp.r < color.r ) color = tmp;", "add += tmp = texture2D( texture, uv + vec2( -0.0015, -0.0015 ));", "if( tmp.r < color.r ) color = tmp;", "add += tmp = texture2D( texture, uv + vec2( 0.0015, -0.0015 ));", "if( tmp.r < color.r ) color = tmp;", "add += tmp = texture2D( texture, uv + vec2( 0.002, 0.0 ));", "if( tmp.r < color.r ) color = tmp;", "add += tmp = texture2D( texture, uv + vec2( -0.002, 0.0 ));", "if( tmp.r < color.r ) color = tmp;", "add += tmp = texture2D( texture, uv + vec2( 0, 0.002 ));", "if( tmp.r < color.r ) color = tmp;", "add += tmp = texture2D( texture, uv + vec2( 0, -0.002 ));", "if( tmp.r < color.r ) color = tmp;", "uv = (uv - vec2(0.5)) * vec2(0.7);", "gl_FragColor = vec4(mix(color.rgb * color.rgb * vec3(1.8), color.ggg * color.ggg - vec3(0.4), vec3(dot(uv, uv))), 1.0);", "}"].join("\n");
                    t = this.compileShader(e),
                    this.compiledProgram.set("art", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.screenWidth, this.canvas.width),
                this.ctx.uniform1f(t.uniform.screenHeight, this.canvas.height),
                this.ctx.uniform1f(t.uniform.sampleDistance, e),
                this.ctx.uniform1f(t.uniform.waveFactor, .01),
                this.draw(t)
            }
            melt(e) {
                let t = this.compiledProgram.get("melt");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n                uniform vec2 center;\n              \n                float rand(vec2 co){\n                    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n                }\n                vec3 mod289(vec3 x) {\n                    return x - floor(x * (1.0 / 289.0)) * 289.0;\n                }\n                  \n                vec2 mod289(vec2 x) {\n                    return x - floor(x * (1.0 / 289.0)) * 289.0;\n                }\n                  \n                vec3 permute(vec3 x) {\n                    return mod289(((x*34.0)+1.0)*x);\n                }\n                  \n                float snoise(vec2 v) {\n\n                    const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                                       -0.577350269189626,  // -1.0 + 2.0 * C.x\n                                        0.024390243902439); // 1.0 / 41.0\n                  // First corner\n                    vec2 i  = floor(v + dot(v, C.yy) );\n                    vec2 x0 = v -   i + dot(i, C.xx);\n                  \n                  // Other corners\n                    vec2 i1;\n                    i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n                    vec4 x12 = x0.xyxy + C.xxzz;\n                    x12.xy -= i1;\n                  \n                  // Permutations\n                    i = mod289(i); // Avoid truncation effects in permutation\n                    vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n                          + i.x + vec3(0.0, i1.x, 1.0 ));\n                  \n                    vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n                    m = m*m ;\n                    m = m*m ;\n                                   \n                    vec3 x = 2.0 * fract(p * C.www) - 1.0;\n                    vec3 h = abs(x) - 0.5;\n                    vec3 ox = floor(x + 0.5);\n                    vec3 a0 = x - ox;\n                  \n                    m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n                  \n                  // Compute final noise value at P\n                    vec3 g;\n                    g.x  = a0.x  * x0.x  + h.x  * x0.y;\n                    g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n                    return 130.0 * dot(m, g);\n                }\n\n                void main() {\n                    vec4 px = texture2D(texture, uv);\n                    \n                    float opacity = 0.0;\n\n                    if(amount == 0.0 || amount == 1.0) {\n                        opacity = amount;\n                    } \n                    else {\n                        if(center.x == 0.5) {\n                            float dist = distance(center, uv)- amount*exp(snoise(vec2(uv.x, 0.0)));\n                            float r = amount - rand(vec2(uv.x, 0.1));\n                            opacity = dist <= r ? 1.0 : (amount*amount*amount);\n                        }\n                        else {\n                            float dist = distance(center, uv)- amount*exp(snoise(vec2(0.0, uv.y)));\n                            float r = amount - rand(vec2(0.1, uv.y));\n                            opacity = dist <= r ? 1.0 : (amount*amount*amount);\n                        }   \n                    }\n                    gl_FragColor = vec4(px.rgb, px.a * (1.0 - opacity));\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("melt", t)
                }
                this.ctx.useProgram(t.program);
                let a = new A.A(.5,.5);
                switch (e.direction) {
                case "down":
                    a.y = 0;
                    break;
                case "right":
                    a.x = 1;
                    break;
                case "left":
                    a.x = 0;
                    break;
                case "up":
                    a.y = 1
                }
                this.ctx.uniform2f(t.uniform.center, a.x, a.y),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.draw(t)
            }
            gooey(e) {
                let t = this.compiledProgram.get("gooey");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n              \n                // http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/\n                float random(vec2 co) {\n\n                    highp float a = 12.9898; //seed;\n                    highp float b = 78.233;\n                    highp float c = 43758.5453;\n                    highp float dt= dot(co.xy ,vec2(a,b));\n                    highp float sn= mod(dt,3.14);\n                    return fract(sin(sn) * c);\n                }\n\n                // 2D Noise based on Morgan McGuire @morgan3d\n                // https://www.shadertoy.com/view/4dS3Wd\n                float noise (in vec2 st) {\n\n                    vec2 i = floor(st);\n                    vec2 f = fract(st);\n\n                    // Four corners in 2D of a tile\n                    float a = random(i);\n                    float b = random(i + vec2(1.0, 0.0));\n                    float c = random(i + vec2(0.0, 1.0));\n                    float d = random(i + vec2(1.0, 1.0));\n\n                    // Cubic Hermine Curve.  Same as SmoothStep()\n                    vec2 u = f*f*(3.0-2.0*f);\n\n                    // Mix 4 coorners porcentages\n                    return mix(a, b, u.x) +\n                            (c - a)* u.y * (1.0 - u.x) +\n                            (d - b) * u.x * u.y;\n                }\n\n                void main() {\n\n                    vec4 col = texture2D(texture, uv);\n                    float n = noise(uv * 10.0); //scale\n                    \n                    float p = mix(-0.01, 1.0 + 0.01, amount);\n                    float lower = p - 0.01;\n                    float higher = p + 0.01;\n                    \n                    float opacity = smoothstep(lower, higher, n);\n                    \n                    gl_FragColor = vec4(col.rgb, col.a * opacity);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("gooey", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            block(e) {
                let t = this.compiledProgram.get("block");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n              \n                float rand (vec2 co) {\n                    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453);\n                }\n\n                void main() {\n                    vec4 col = texture2D(texture, uv);\n                    \n                    float r = rand(floor(vec2(10.0) * uv)); //size\n                    float opacity = smoothstep(0.0, -0.5, r - (amount * (1.0 + 0.5)));\n                   \n                    gl_FragColor = vec4(col.rgb, col.a * (1.0 - opacity));\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("block", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            curtain(e) {
                let t = this.compiledProgram.get("curtain-" + e.direction);
                if (!t) {
                    let a = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n              \n                void main() {\n                    vec2 p = uv;\n                    vec4 col = vec4(0);\n                ";
                    "horizontal" === e.direction ? a += "                    \n                        if(2.0 * abs(p.x-0.5) - amount > 0.0) {\n                            p = p + (p.x > 0.5 ? -1.0 : 1.0) * vec2(0.5*amount, 0.0);\n                            col = texture2D(texture, p);\n                        }\n                    " : a += "\n                        if(2.0 * abs(p.y-0.5) - amount > 0.0) {\n                            p = p + (p.y > 0.5 ? -1.0 : 1.0) * vec2(0.0, 0.5*amount);\n                            col = texture2D(texture, p);\n                        }\n                    ",
                    a += "\n                    gl_FragColor = col;\n                }",
                    t = this.compileShader(a),
                    this.compiledProgram.set("curtain-" + e.direction, t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.draw(t)
            }
            blinds(e) {
                let t = this.compiledProgram.get("blinds-" + e.direction);
                if (!t) {
                    let a = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n              \n                void main() {\n                    vec4 col = texture2D(texture, uv);\n                ";
                    switch (e.direction) {
                    case "up":
                        a += "float opacity = step(smoothstep(-0.5, 0.0, (1.0 - uv.y) - amount * (1.0 + 0.5)), fract(12.0 * uv.y));";
                        break;
                    case "right":
                        a += "float opacity = step(smoothstep(-0.5, 0.0, (1.0 - uv.x) - amount * (1.0 + 0.5)), fract(12.0 * uv.x));";
                        break;
                    case "left":
                        a += "float opacity = step(smoothstep(-0.5, 0.0, uv.x - amount * (1.0 + 0.5)), fract(12.0 * uv.x));";
                        break;
                    case "down":
                        a += "float opacity = step(smoothstep(-0.5, 0.0, uv.y - amount * (1.0 + 0.5)), fract(12.0 * uv.y));"
                    }
                    a += "\n                    gl_FragColor = vec4(col.rgb, col.a * (1.0 - opacity));\n                }",
                    t = this.compileShader(a),
                    this.compiledProgram.set("blinds-" + e.direction, t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.draw(t)
            }
            wipe(e) {
                let t = this.compiledProgram.get("wipe-" + e.direction);
                if (!t) {
                    let a = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n              \n                void main() {\n                    vec4 col = texture2D(texture, uv);\n                ";
                    switch (e.direction) {
                    case "down":
                        a += "float opacity = 1.0 - step(uv.y, amount);";
                        break;
                    case "right":
                        a += "float opacity = step(uv.x, 1.0 - amount);";
                        break;
                    case "left":
                        a += "float opacity = 1.0 - step(uv.x, amount);";
                        break;
                    case "up":
                        a += "float opacity = step(uv.y, 1.0 - amount);"
                    }
                    a += "\n                    gl_FragColor = vec4(col.rgb, col.a * opacity);\n                }",
                    t = this.compileShader(a),
                    this.compiledProgram.set("wipe-" + e.direction, t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.draw(t)
            }
            swipe(e) {
                let t = this.compiledProgram.get("swipe-" + e.direction);
                if (!t) {
                    let a = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n                uniform vec4 color; \n              \n                void main() {\n\n                ";
                    switch (e.direction) {
                    case "down":
                        a += "\n                        if(amount > 0.5) gl_FragColor = vec4(color.rgb, 1.0 - step(1.0 + uv.y, amount*2.0));\n                        else gl_FragColor = step(uv.y, amount*2.0) == 1.0 ? color : texture2D(texture, uv);\n                    }";
                        break;
                    case "right":
                        a += "\n                        if(amount > 0.5) gl_FragColor = vec4(color.rgb, 1.0 - step(2.0 - uv.x, amount*2.0));\n                        else gl_FragColor = step(1.0 - uv.x, amount*2.0) == 1.0 ? color : texture2D(texture, uv);\n                    }";
                        break;
                    case "left":
                        a += "\n                        if(amount > 0.5) gl_FragColor = vec4(color.rgb, 1.0 - step(1.0 + uv.x, amount*2.0));\n                        else gl_FragColor = step(uv.x, amount*2.0) == 1.0 ? color : texture2D(texture, uv);\n                    }";
                        break;
                    case "up":
                        a += "\n                        if(amount > 0.5) gl_FragColor = vec4(color.rgb, 1.0 - step(2.0 - uv.y, amount*2.0));\n                        else gl_FragColor = step(1.0 - uv.y, amount*2.0) == 1.0 ? color : texture2D(texture, uv);\n                    }"
                    }
                    t = this.compileShader(a),
                    this.compiledProgram.set("swipe-" + e.direction, t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.ctx.uniform4f(t.uniform.color, e.color.r / 255, e.color.g / 255, e.color.b / 255, 1),
                this.draw(t)
            }
            slot(e) {
                let t = this.compiledProgram.get("slot");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n                uniform vec2 dir;\n\n                void main() {\n                   \n                    vec2 p = uv + amount * sign(dir);\n                    vec2 f = fract(p);\n                    float opacity = step(0.0, p.y) * step(p.y, 1.0) * step(0.0, p.x) * step(p.x, 1.0);\n                   \n                    vec4 col = texture2D(texture, p);\n                    gl_FragColor = vec4(col.rgb, col.a * opacity);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("slot", t)
                }
                let a = new A.A(0,0);
                switch (e.direction) {
                case "down":
                    a.y = -1;
                    break;
                case "right":
                    a.x = 1;
                    break;
                case "left":
                    a.x = -1;
                    break;
                case "up":
                    a.y = 1
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform2f(t.uniform.dir, a.x, a.y),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.draw(t)
            }
            marquee(e) {
                let t = this.compiledProgram.get("marquee");
                if (!t) {
                    let a = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n                uniform vec2 dir;\n\n                void main() {\n                   \n                    vec2 p = uv + amount * sign(dir);\n                ";
                    switch (e.direction) {
                    case "up":
                        a += "if(p.y < 0.0) p.y += 1.0;";
                        break;
                    case "down":
                        a += "if(p.y > 1.0) p.y -= 1.0;";
                        break;
                    case "right":
                        a += "if(p.x < 0.0) p.x += 1.0;";
                        break;
                    case "left":
                        a += "if(p.x > 1.0) p.x -= 1.0;"
                    }
                    a += "\n         \n                    gl_FragColor = texture2D(texture, p);\n                }",
                    t = this.compileShader(a),
                    this.compiledProgram.set("marquee", t)
                }
                let a = new A.A(0,0);
                switch (e.direction) {
                case "up":
                    a.y += -1;
                    break;
                case "down":
                    a.y += 1;
                    break;
                case "right":
                    a.x += -1;
                    break;
                case "left":
                    a.x += 1
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform2f(t.uniform.dir, a.x, a.y),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.draw(t)
            }
            split(e) {
                let t = this.compiledProgram.get("split-" + e.direction);
                if (!t) {
                    let a = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n                uniform float sections;\n\n                void main() {\n                    vec2 p = uv;\n                ";
                    "horizontal" === e.direction ? a += "float num = floor(uv.y*sections);\n                    float odd = num - (2.0 * floor(num/2.0));\n                    p.x = uv.x + amount*sign(odd-0.5);\n             \n                    float opacity = (p.x * (1.0-step(odd,0.5)*2.0) - sign(odd) > 0.0) ? 0.0 : 1.0;\n                    " : a += "float num = floor(uv.x*sections);\n                    float odd = num - (2.0 * floor(num/2.0));\n                    p.y = uv.y + amount*sign(odd-0.5);\n             \n                    float opacity = (p.y * (1.0-step(odd,0.5)*2.0) - sign(odd) > 0.0) ? 0.0 : 1.0;\n                    ",
                    a += "vec4 col = texture2D(texture, p);\n                    gl_FragColor = vec4(col.rgb, col.a * opacity);\n                }",
                    t = this.compileShader(a),
                    this.compiledProgram.set("split-" + e.direction, t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.sections, e.sections),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.draw(t)
            }
            circular(e) {
                let t = this.compiledProgram.get("circular");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n\n                const float PI = 3.141592653589;\n\n                void main() {\n                    vec4 col = texture2D(texture, uv);\n\n                    vec2 p = uv*2.-1.;\n                    float opacity = smoothstep(0.0, 0.5, atan(p.y,p.x) - (amount-.5) * PI * 2.5);\n                   \n                    gl_FragColor = vec4(col.rgb, col.a * opacity);\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("circular", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            ripple(e) {
                let t = this.compiledProgram.get("ripple");
                if (!t) {
                    let e = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n\n                void main() {\n                    \n                    vec2 dir = uv - vec2(.5);\n                    float dist = length(dir);\n                    vec2 offset = dir * (sin(amount * dist * 100.0 - amount * 40.0) + 0.5) / 30.0; //100 amp 40 speed\n\n                    float opacity = smoothstep(0.2, 1.0, amount);\n\n                    vec4 px = texture2D(texture, uv + offset);                   \n                    gl_FragColor = vec4(px.rgb, px.a * (1.0 - opacity));\n                }";
                    t = this.compileShader(e),
                    this.compiledProgram.set("ripple", t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e),
                this.draw(t)
            }
            warp(e) {
                let t = this.compiledProgram.get("warp-" + e.direction);
                if (!t) {
                    let a = "\n                precision highp float;\n                varying vec2 uv;\n                uniform sampler2D texture;\n                uniform float amount;\n\n                void main() {\n            ";
                    switch (e.direction) {
                    case "up":
                        a += "float x = smoothstep(0.0, 1.0, (amount*2.0 + uv.y-1.0)); vec4 col = texture2D(texture, (uv-0.5)*(1.0-x)+0.5);";
                        break;
                    case "right":
                        a += "float x = smoothstep(0.0, 1.0, (amount*2.0 + uv.x-1.0)); vec4 col = texture2D(texture, (uv-0.5)*(1.0-x)+0.5);";
                        break;
                    case "left":
                        a += "float x = smoothstep(0.0, 1.0, ((1.0-amount)*2.0 + uv.x-1.0)); vec4 col = texture2D(texture, (uv-0.5)*(x)+0.5);";
                        break;
                    case "down":
                        a += "float x = smoothstep(0.0, 1.0, ((1.0-amount)*2.0 + uv.y-1.0)); vec4 col = texture2D(texture, (uv-0.5)*(x)+0.5);"
                    }
                    a += "\n                gl_FragColor = vec4(col.rgb, col.a * (1.0 - amount));\n            }",
                    t = this.compileShader(a),
                    this.compiledProgram.set("warp-" + e.direction, t)
                }
                this.ctx.useProgram(t.program),
                this.ctx.uniform1f(t.uniform.amount, e.amount),
                this.draw(t)
            }
        }
        class Ae {
            constructor(e, t, a=!1) {
                this.type = e,
                this.value = t,
                this.sidekick = a
            }
        }
        function Le(e, a=!1) {
            return new Promise(( (n, i) => {
                (0,
                t.Ay)("browse") && (0,
                t.Ay)("browse").remove();
                let s = document.createElement("input");
                s.id = "browse",
                s.type = "file",
                s.multiple = e,
                s.className = "offscreen",
                a && (s.accept = "image/*",
                s.capture = "camera"),
                s.addEventListener("change", ( () => {
                    s.files.length > 0 ? n(s.files) : n(void 0),
                    document.body.removeChild(s)
                }
                ), !1),
                document.body.appendChild(s),
                s.click()
            }
            ))
        }
        async function Se(e) {
            return "string" == typeof e ? e : await y.PG(e, {
                type: "image/jpeg"
            })
        }
        var Ne = c(3514);
        class Pe {
            constructor(e) {
                switch (this.type = e,
                this.type) {
                case Pe.EASE_LINEAR:
                    this.calculate = Pe.linear;
                    break;
                case Pe.EASE_TWENTY_LADDER:
                    this.calculate = Pe.ladderTwenty;
                    break;
                case Pe.EASE_TEN_LADDER:
                    this.calculate = Pe.ladderTen;
                    break;
                case Pe.EASE_FIVE_LADDER:
                    this.calculate = Pe.ladderFive;
                    break;
                case Pe.EASE_THREE_LADDER:
                    this.calculate = Pe.ladderThree;
                    break;
                case Pe.EASE_IN_SINE:
                    this.calculate = Pe.inSine;
                    break;
                case Pe.EASE_OUT_SINE:
                    this.calculate = Pe.outSine;
                    break;
                case Pe.EASE_IN_OUT_SINE:
                    this.calculate = Pe.inOutSine;
                    break;
                case Pe.EASE_IN_CUBIC:
                    this.calculate = Pe.inCubic;
                    break;
                case Pe.EASE_OUT_CUBIC:
                    this.calculate = Pe.outCubic;
                    break;
                case Pe.EASE_IN_OUT_CUBIC:
                    this.calculate = Pe.inOutCubic;
                    break;
                case Pe.EASE_IN_QUINT:
                    this.calculate = Pe.inQuint;
                    break;
                case Pe.EASE_OUT_QUINT:
                    this.calculate = Pe.outQuint;
                    break;
                case Pe.EASE_IN_OUT_QUINT:
                    this.calculate = Pe.inOutQuint;
                    break;
                case Pe.EASE_IN_CIRC:
                    this.calculate = Pe.inCirc;
                    break;
                case Pe.EASE_OUT_CIRC:
                    this.calculate = Pe.outCirc;
                    break;
                case Pe.EASE_IN_OUT_CIRC:
                    this.calculate = Pe.inOutCirc;
                    break;
                case Pe.EASE_IN_QUAD:
                    this.calculate = Pe.inQuad;
                    break;
                case Pe.EASE_OUT_QUAD:
                    this.calculate = Pe.outQuad;
                    break;
                case Pe.EASE_IN_OUT_QUAD:
                    this.calculate = Pe.inOutQuad;
                    break;
                case Pe.EASE_IN_QUART:
                    this.calculate = Pe.inQuart;
                    break;
                case Pe.EASE_OUT_QUART:
                    this.calculate = Pe.outQuart;
                    break;
                case Pe.EASE_IN_OUT_QUART:
                    this.calculate = Pe.inOutQuart;
                    break;
                case Pe.EASE_IN_EXPO:
                    this.calculate = Pe.inExpo;
                    break;
                case Pe.EASE_OUT_EXPO:
                    this.calculate = Pe.outExpo;
                    break;
                case Pe.EASE_IN_OUT_EXPO:
                    this.calculate = Pe.inOutExpo;
                    break;
                case Pe.EASE_IN_BACK:
                    this.calculate = Pe.inBack;
                    break;
                case Pe.EASE_OUT_BACK:
                    this.calculate = Pe.outBack;
                    break;
                case Pe.EASE_IN_OUT_BACK:
                    this.calculate = Pe.inOutBack;
                    break;
                case Pe.EASE_IN_BOUNCE:
                    this.calculate = Pe.inBounce;
                    break;
                case Pe.EASE_OUT_BOUNCE:
                    this.calculate = Pe.outBounce;
                    break;
                case Pe.EASE_IN_OUT_BOUNCE:
                    this.calculate = Pe.inOutBounce;
                    break;
                case Pe.EASE_IN_ELASTIC:
                    this.calculate = Pe.inElastic;
                    break;
                case Pe.EASE_OUT_ELASTIC:
                    this.calculate = Pe.outElastic;
                    break;
                case Pe.EASE_IN_OUT_ELASTIC:
                    this.calculate = Pe.inOutElastic
                }
            }
            static inOutQuint(e) {
                return e < .5 ? 16 * e * e * e * e * e : 1 - Math.pow(-2 * e + 2, 5) / 2
            }
            static outCirc(e) {
                return Math.sqrt(1 - Math.pow(e - 1, 2))
            }
            static inOutCirc(e) {
                return e < .5 ? (1 - Math.sqrt(1 - Math.pow(2 * e, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * e + 2, 2)) + 1) / 2
            }
        }
        Pe.EASE_LINEAR = "linear",
        Pe.EASE_TWENTY_LADDER = "twenty-ladder",
        Pe.EASE_TEN_LADDER = "ten-ladder",
        Pe.EASE_FIVE_LADDER = "five-ladder",
        Pe.EASE_THREE_LADDER = "three-ladder",
        Pe.EASE_IN_SINE = "in-sine",
        Pe.EASE_OUT_SINE = "out-sine",
        Pe.EASE_IN_OUT_SINE = "in-out-sine",
        Pe.EASE_IN_CUBIC = "in-cubic",
        Pe.EASE_OUT_CUBIC = "out-cubic",
        Pe.EASE_IN_OUT_CUBIC = "in-out-cubic",
        Pe.EASE_IN_QUINT = "in-quint",
        Pe.EASE_OUT_QUINT = "out-quint",
        Pe.EASE_IN_OUT_QUINT = "in-out-quint",
        Pe.EASE_IN_CIRC = "in-circ",
        Pe.EASE_OUT_CIRC = "out-circ",
        Pe.EASE_IN_OUT_CIRC = "in-out-circ",
        Pe.EASE_IN_QUAD = "in-quad",
        Pe.EASE_OUT_QUAD = "out-quad",
        Pe.EASE_IN_OUT_QUAD = "in-out-quad",
        Pe.EASE_IN_QUART = "in-quart",
        Pe.EASE_OUT_QUART = "out-quart",
        Pe.EASE_IN_OUT_QUART = "in-out-quart",
        Pe.EASE_IN_EXPO = "in-expo",
        Pe.EASE_OUT_EXPO = "out-expo",
        Pe.EASE_IN_OUT_EXPO = "in-out-expo",
        Pe.EASE_IN_BACK = "in-back",
        Pe.EASE_OUT_BACK = "out-back",
        Pe.EASE_IN_OUT_BACK = "in-out-back",
        Pe.EASE_IN_BOUNCE = "in-bounce",
        Pe.EASE_OUT_BOUNCE = "out-bounce",
        Pe.EASE_IN_OUT_BOUNCE = "in-out-bounce",
        Pe.EASE_IN_ELASTIC = "in-elastic",
        Pe.EASE_OUT_ELASTIC = "out-elastic",
        Pe.EASE_IN_OUT_ELASTIC = "in-out-elastic",
        Pe.linear = e => e,
        Pe.ladderTwenty = e => Pe.ladder(e, 20),
        Pe.ladderTen = e => Pe.ladder(e, 10),
        Pe.ladderFive = e => Pe.ladder(e, 5),
        Pe.ladderThree = e => Pe.ladder(e, 3),
        Pe.ladder = (e, t) => Math.ceil(e * t) * (1 / t),
        Pe.inSine = e => 1 - Math.cos(e * Math.PI / 2),
        Pe.outSine = e => Math.sin(e * Math.PI / 2),
        Pe.inOutSine = e => -(Math.cos(Math.PI * e) - 1) / 2,
        Pe.inCubic = e => e * e * e,
        Pe.outCubic = e => 1 - Math.pow(1 - e, 3),
        Pe.inOutCubic = e => e < .5 ? 4 * e * e * e : 1 - Math.pow(-2 * e + 2, 3) / 2,
        Pe.inQuint = e => e * e * e * e * e,
        Pe.outQuint = e => 1 - Math.pow(1 - e, 5),
        Pe.inCirc = e => 1 - Math.sqrt(1 - Math.pow(e, 2)),
        Pe.inQuad = e => e * e,
        Pe.outQuad = e => 1 - (1 - e) * (1 - e),
        Pe.inOutQuad = e => e < .5 ? 2 * e * e : 1 - Math.pow(-2 * e + 2, 2) / 2,
        Pe.inQuart = e => e * e * e * e,
        Pe.outQuart = e => 1 - Math.pow(1 - e, 4),
        Pe.inOutQuart = e => e < .5 ? 8 * e * e * e * e : 1 - Math.pow(-2 * e + 2, 4) / 2,
        Pe.inExpo = e => 0 === e ? 0 : Math.pow(2, 10 * e - 10),
        Pe.outExpo = e => 1 === e ? 1 : 1 - Math.pow(2, -10 * e),
        Pe.inOutExpo = e => 0 === e ? 0 : 1 === e ? 1 : e < .5 ? Math.pow(2, 20 * e - 10) / 2 : (2 - Math.pow(2, -20 * e + 10)) / 2,
        Pe.inBack = e => {
            const t = 1.70158;
            return 2.70158 * e * e * e - t * e * e
        }
        ,
        Pe.outBack = e => {
            const t = 1.70158;
            return 1 + 2.70158 * Math.pow(e - 1, 3) + t * Math.pow(e - 1, 2)
        }
        ,
        Pe.inOutBack = e => {
            const t = 2.5949095;
            return e < .5 ? Math.pow(2 * e, 2) * (7.189819 * e - t) / 2 : (Math.pow(2 * e - 2, 2) * ((t + 1) * (2 * e - 2) + t) + 2) / 2
        }
        ,
        Pe.inBounce = e => 1 - Pe.outBounce(1 - e),
        Pe.outBounce = e => {
            const t = 7.5625
              , a = 2.75;
            return e < 1 / a ? t * e * e : e < 2 / a ? t * (e -= 1.5 / a) * e + .75 : e < 2.5 / a ? t * (e -= 2.25 / a) * e + .9375 : t * (e -= 2.625 / a) * e + .984375
        }
        ,
        Pe.inOutBounce = e => e < .5 ? (1 - Pe.outBounce(1 - 2 * e)) / 2 : (1 + Pe.outBounce(2 * e - 1)) / 2,
        Pe.inElastic = e => {
            const t = 2 * Math.PI / 3;
            return 0 === e ? 0 : 1 === e ? 1 : -Math.pow(2, 10 * e - 10) * Math.sin((10 * e - 10.75) * t)
        }
        ,
        Pe.outElastic = e => {
            const t = 2 * Math.PI / 3;
            return 0 === e ? 0 : 1 === e ? 1 : Math.pow(2, -10 * e) * Math.sin((10 * e - .75) * t) + 1
        }
        ,
        Pe.inOutElastic = e => {
            const t = 2 * Math.PI / 4.5;
            return 0 === e ? 0 : 1 === e ? 1 : e < .5 ? -Math.pow(2, 20 * e - 10) * Math.sin((20 * e - 11.125) * t) / 2 : Math.pow(2, -20 * e + 10) * Math.sin((20 * e - 11.125) * t) / 2 + 1
        }
        ;
        const Ye = Pe;
        class Ee {
            constructor(e, t, a=0) {
                this.shouldRun = e => {
                    const t = e < this.idelay
                      , a = e > this.idelay + this.iduration;
                    return a && !this.end ? (this.end = !0,
                    !0) : !t && !a
                }
                ,
                this.getDuration = () => this.idelay + this.iduration,
                this.fill = e => {
                    this.initial = void 0 === this.motion.value.set ? e : this.motion.value.set;
                    const t = void 0 === this.motion.value.from ? this.initial : this.motion.value.from
                      , a = void 0 === this.motion.value.to ? this.initial : this.motion.value.to;
                    return 2 === this.motion.direction || 4 === this.motion.direction ? a - (a - t) : t + (a - t)
                }
                ,
                this.begin = e => {
                    this.end = !1,
                    this.playing = !0,
                    this.initial = void 0 === this.motion.value.set ? e : this.motion.value.set,
                    this.ibefore = void 0 === this.motion.value.from ? this.initial : this.motion.value.from,
                    this.iafter = void 0 === this.motion.value.to ? this.initial : this.motion.value.to
                }
                ,
                this.step = e => {
                    if (0 === e || e - this.idelay < 1 || 0 === this.ipass || 0 === this.motion.iterations)
                        return this.ibefore;
                    let t = Math.ceil((e - this.idelay) / this.ipass)
                      , a = (e - this.idelay) % this.ipass
                      , n = 0 === a ? 1 : a / this.ipass;
                    (this.end || t > this.motion.iterations) && (t = this.motion.iterations,
                    n = 1);
                    const i = (this.iafter - this.ibefore) * this.ease.calculate(n);
                    return this.flip(t) ? this.iafter - i : this.ibefore + i
                }
                ,
                this.flip = e => 2 === this.motion.direction || 3 === this.motion.direction && e % 2 == 0 || 4 === this.motion.direction && e % 2 == 1,
                this.motion = e,
                this.ease = new Ye(e.easing),
                this.idelay = Math.round(this.motion.delay * t + a),
                this.iduration = Math.round(this.motion.duration * t),
                this.ipass = 0 === this.iduration || 0 === this.motion.iterations ? 0 : this.iduration / this.motion.iterations
            }
        }
        class Ce {
            constructor(e, t) {
                this.scantime = 0,
                this.scantype = "none",
                this.getDuration = () => {
                    let e = 0;
                    return this.transitions.forEach((t => {
                        e = Math.max(e, t.getDuration())
                    }
                    )),
                    e
                }
                ,
                this.prepare = e => {
                    for (const t of this.transitions)
                        t.motion.fill && (t.begin(this.getProperty(t.motion.method, e)),
                        this.setProperty(t.motion.method, t.motion.manner, e, t.step(0)))
                }
                ,
                this.step = (e, t) => {
                    for (const a of this.transitions)
                        a.shouldRun(e) && (a.playing || a.begin(this.getProperty(a.motion.method, t)),
                        this.setProperty(a.motion.method, a.motion.manner, t, a.step(e)))
                }
                ,
                this.setProperty = (e, t, a, n) => {
                    switch (e) {
                    case "opacity":
                        this.layer.transform.opacity = n;
                        break;
                    case "rotate":
                        this.layer.transform.rotation = 360 * n,
                        this.layer.transform.rAnchor = this.anchorToPoint(t);
                        break;
                    case "scale":
                        this.layer.transform.scale.x = n,
                        this.layer.transform.scale.y = n,
                        this.layer.transform.sAnchor = this.anchorToPoint(t);
                        break;
                    case "scale-width":
                        this.layer.transform.scale.x = n,
                        this.layer.transform.sAnchor = this.anchorToPoint(t);
                        break;
                    case "scale-height":
                        this.layer.transform.scale.y = n,
                        this.layer.transform.sAnchor = this.anchorToPoint(t);
                        break;
                    case "self-x":
                        this.layer.transform.offset.x = n * this.layer.getRect().width;
                        break;
                    case "self-y":
                        this.layer.transform.offset.y = n * this.layer.getRect().height;
                        break;
                    case "offset-x":
                        this.layer.transform.offset.x = n * a.width;
                        break;
                    case "offset-y":
                        this.layer.transform.offset.y = n * a.height;
                        break;
                    case "viewport-x":
                        this.layer.transform.offset.x = n * a.width - this.layer.getRect().center().x;
                        break;
                    case "viewport-y":
                        this.layer.transform.offset.y = n * a.height - this.layer.getRect().center().y;
                        break;
                    case "viewport-box-x":
                        const i = this.transformedRectWidth();
                        this.layer.transform.offset.x = this.layer.getRect().center().x - (.5 * i + n * (a.width - i));
                        break;
                    case "viewport-box-y":
                        const s = this.transformedRectHeight();
                        this.layer.transform.offset.y = this.layer.getRect().center().y - (.5 * s + n * (a.height - s));
                        break;
                    default:
                        this.setShader(e, n, t)
                    }
                }
                ,
                this.transformedRectWidth = () => this.layer.getRect().width * this.layer.transform.scale.x,
                this.transformedRectHeight = () => this.layer.getRect().height * this.layer.transform.scale.y,
                this.anchorToPoint = e => {
                    switch (e) {
                    case "topleft":
                        return new A.A(0,0);
                    case "top":
                        return new A.A(.5,0);
                    case "topright":
                        return new A.A(1,0);
                    case "left":
                        return new A.A(0,.5);
                    case "center":
                        return new A.A(.5,.5);
                    case "right":
                        return new A.A(1,.5);
                    case "bottomleft":
                        return new A.A(0,1);
                    case "bottom":
                        return new A.A(.5,1);
                    case "bottomright":
                        return new A.A(1,1)
                    }
                    return new A.A(.5,.5)
                }
                ,
                this.setShader = (e, t, a) => {
                    switch (this.shaders || (this.shaders = new xe),
                    e) {
                    case "wipe":
                        this.shaders.addShader("wipe", {
                            direction: a,
                            amount: t
                        });
                        break;
                    case "swipe":
                        this.shaders.addShader("swipe", {
                            direction: a,
                            amount: t,
                            color: this.getLayerAccent()
                        });
                        break;
                    case "slot":
                        this.shaders.addShader("slot", {
                            direction: a,
                            amount: t
                        });
                        break;
                    case "blinds":
                        this.shaders.addShader("blinds", {
                            direction: a,
                            amount: t
                        });
                        break;
                    case "melt":
                        this.shaders.addShader("melt", {
                            direction: a,
                            amount: t
                        });
                        break;
                    case "warp":
                        this.shaders.addShader("warp", {
                            direction: a,
                            amount: t
                        });
                        break;
                    case "curtain":
                        this.shaders.addShader("curtain", {
                            direction: a,
                            amount: t
                        });
                        break;
                    case "split":
                        this.shaders.addShader("split", {
                            direction: a,
                            sections: 2,
                            amount: t
                        });
                        break;
                    case "line":
                        this.shaders.addShader("split", {
                            direction: a,
                            sections: 8,
                            amount: t
                        });
                        break;
                    case "marquee":
                        this.shaders.addShader("marquee", {
                            direction: a,
                            amount: t
                        });
                        break;
                    default:
                        this.shaders.addShader(e, t)
                    }
                    this.layer.transient = this.shaders.apply(this.layer.baked ? this.layer.baked : this.layer.canvas)
                }
                ,
                this.getLayerAccent = () => this.layer instanceof ue && "color" === this.layer.fill.getType() ? this.layer.fill.value : new R(255,255,255),
                this.getProperty = (e, t) => {
                    switch (e) {
                    case "opacity":
                        return this.layer.transform.opacity;
                    case "rotate":
                        return this.layer.transform.rotation / 360;
                    case "scale":
                    case "scale-width":
                        return this.layer.transform.scale.x;
                    case "scale-height":
                        return this.layer.transform.scale.y;
                    case "self-x":
                        return this.layer.transform.offset.x / this.layer.getRect().width;
                    case "self-y":
                        return this.layer.transform.offset.y / this.layer.getRect().height;
                    case "offset-x":
                        return this.layer.transform.offset.x / t.width;
                    case "offset-y":
                        return this.layer.transform.offset.y / t.height;
                    case "viewport-x":
                        return (this.layer.getRect().center().x + this.layer.transform.offset.x) / t.width;
                    case "viewport-y":
                        return (this.layer.getRect().center().y + this.layer.transform.offset.y) / t.height;
                    case "viewport-box-x":
                        return (this.layer.getRect().center().x + this.layer.transform.offset.x) / (t.width - this.transformedRectWidth());
                    case "viewport-box-y":
                        return (this.layer.getRect().center().y + this.layer.transform.offset.y) / (t.height - this.transformedRectHeight())
                    }
                    return 0
                }
                ,
                this.finish = () => {
                    this.layer.transient = void 0,
                    this.layer.transform = void 0
                }
                ,
                this.layer = e,
                this.transitions = t,
                this.layer.transform = {
                    sAnchor: new A.A(.5,.5),
                    rAnchor: new A.A(.5,.5),
                    scale: new A.A(1,1),
                    offset: new A.A(0,0),
                    rotation: 0,
                    opacity: 1
                }
            }
        }
        Ce.bakeAnimators = e => {
            const t = new Array;
            for (const a of e.layers)
                if (a.rect)
                    if (!a.animation && e.animation) {
                        const n = Ce.createPageTransitions(a, e, e.animation);
                        n.length > 0 && t.push(new Ce(a,n))
                    } else if (a.animation && !a.animation.block) {
                        const e = Ce.createLayerTransitions(a.animation);
                        t.push(new Ce(a,e))
                    }
            return t
        }
        ,
        Ce.createPageTransitions = (e, t, a) => {
            const n = t.layerNr(e.id)
              , i = t.layers.length
              , s = new W.A(t.width,t.height)
              , r = Ce.filterMotions(a.enter, e, n, i, s)
              , o = Ce.filterMotions(a.scene, e, n, i, s)
              , l = Ce.filterMotions(a.exit, e, n, i, s);
            if (!r && !o && !l && 0 === r.length && 0 === o.length && 0 === l.length)
                return;
            const d = 0 === n && e.settings.locked ? 0 : le.getOffset(e, t, a.stagger)
              , c = a.enter ? a.enter.duration + a.enter.delay : 0
              , m = a.scene ? a.scene.duration + a.scene.delay : 0
              , u = new Array;
            if (r)
                for (const h of r)
                    u.push(new Ee(h,a.enter.speed,a.enter.delay + d));
            if (o)
                for (const h of o)
                    u.push(new Ee(h,a.scene.speed,a.scene.delay + d + c));
            if (l)
                for (const h of l)
                    u.push(new Ee(h,a.exit.speed,a.enter.delay + d + c + m));
            return u
        }
        ,
        Ce.createLayerTransitions = (e, t=!1) => {
            const a = !!e.enter
              , n = !!e.scene
              , i = new Array;
            let s = a ? e.enter.duration : 0
              , r = n ? e.scene.duration : 0;
            if (!t && a && (s += e.enter.delay),
            (t && a && n || !t && n) && (r += e.scene.delay),
            e.enter) {
                const a = t ? 0 : e.enter.delay;
                for (const t of e.enter.motions)
                    i.push(new Ee(t,e.enter.speed,a))
            }
            if (e.scene) {
                const n = t && !a ? 0 : e.scene.delay;
                for (const t of e.scene.motions)
                    i.push(new Ee(t,e.scene.speed,n + s));
                if (e.scene.repeat > 0) {
                    let t = ce.getMotionsDuration(e.scene.motions, e.scene.speed)
                      , a = t + e.scene.gap;
                    for (let r = 0; r < e.scene.repeat; r++) {
                        for (const t of e.scene.motions)
                            i.push(new Ee(t,e.scene.speed,a + n + s));
                        a += t + e.scene.gap
                    }
                }
            }
            if (e.exit) {
                const o = !t || a || n ? e.exit.delay : 0;
                for (const t of e.exit.motions)
                    i.push(new Ee(t,e.exit.speed,o + s + r))
            }
            return i
        }
        ,
        Ce.createSegmentTransitions = e => {
            const t = new Array;
            if (e)
                for (const a of e.motions)
                    t.push(new Ee(a,e.speed));
            return t
        }
        ,
        Ce.filterMotions = (e, t, a, n, i) => {
            if (!e || !e.motions || 0 === e.motions.length)
                return;
            let s;
            for (const r of e.motions)
                if (Ce.filterMotion(t, a, n, i, r)) {
                    s = r.filter;
                    break
                }
            return e.motions.filter((e => e.filter === s))
        }
        ,
        Ce.filterMotion = (e, t, a, n, i) => {
            if ("background" === i.filter)
                return 0 === t && e.settings.locked;
            if (0 === t && e.settings.locked)
                return !1;
            if ("foreground" === i.filter)
                return t === a - 1;
            if ("all" === i.filter || i.filter === e.type)
                return !0;
            if ("large" === i.filter)
                return e.getRect().width > .75 * n.width || e.getRect().height > .75 * n.height;
            if ("medium" === i.filter)
                return e.getRect().width > .25 * n.width && e.getRect().width < .75 * n.width && e.getRect().height > .25 * n.height && e.getRect().height < .75 * n.height;
            if ("small" === i.filter)
                return e.getRect().width < .25 * n.width || e.getRect().height < .25 * n.height;
            switch (i.filter) {
            case "odd":
                return t % 2 == 1;
            case "even":
                return t % 2 == 0;
            case "1-three":
                return t % 3 == 0;
            case "2-three":
                return t % 3 == 1;
            case "3-three":
                return t % 3 == 2;
            case "1-four":
                return t % 4 == 0;
            case "2-four":
                return t % 4 == 1;
            case "3-four":
                return t % 4 == 2;
            case "4-four":
                return t % 4 == 3
            }
        }
        ;
        class Re extends z {
            constructor(e=y.Os(), t, a, n, i, s="", r=Re.SCALE_METHOD_NONE) {
                super(z.TYPE_ELEMENT),
                this.id = e,
                this.rotateAndFit = (e, t) => {
                    this.settings.locked && this.variant === Re.VARIANT_OVERLAY ? (this.rotate(e),
                    this.calculate(new A.A(0,0), new A.A(t.width,t.height), 0)) : this.rect.rotation += e ? -90 : 90
                }
                ,
                this.calculate = (e, t, a) => {
                    this.rect.x = Math.round(e.x),
                    this.rect.y = Math.round(e.y),
                    this.rect.width = Math.round(t.x - e.x),
                    this.rect.width < 10 && (this.rect.width = 10),
                    0 !== a ? this.rect.height = Math.round(this.rect.width / a) : (this.rect.height = Math.round(t.y - e.y),
                    this.rect.height < 10 && (this.rect.height = 10))
                }
                ,
                this.rasterize = () => {
                    const e = new me(y.Os(),this.settings.name,y.oM(this.canvas),this.rect.clone(),this.settings.locked);
                    return e.settings = Object.assign({}, this.settings),
                    e.applyTransform(),
                    e
                }
                ,
                this.clone = (e=!1) => {
                    let t = new Re(e ? this.id : y.Os(),this.settings.name,y.oM(this.canvas),this.url,this.variant,this.settings.blendmode,this.scalemethod);
                    return t.settings = Object.assign({}, this.settings),
                    t.rect = this.rect.clone(),
                    t.animation = ce.clone(this.animation),
                    e && (t.id = this.id,
                    t.settings.name = this.settings.name),
                    t
                }
                ,
                this.url = n,
                this.canvas = a,
                this.variant = i,
                this.scalemethod = r,
                this.settings.name = t,
                this.settings.blendmode = s,
                this.rect = new D.A(0,0,a.width,a.height)
            }
        }
        Re.VARIANT_OVERLAY = "overlay",
        Re.VARIANT_STICKER = "sticker",
        Re.SCALE_METHOD_STRETCH = "stretch",
        Re.SCALE_METHOD_FILL = "fill",
        Re.SCALE_METHOD_NONE = "none";
        function Ie() {
            return void 0 !== window.showSaveFilePicker
        }
        async function Oe(e, t, a, n="image/png") {
            try {
                return await window.showSaveFilePicker({
                    suggestedName: e + "." + t,
                    types: [{
                        description: a,
                        accept: {
                            [n]: ["." + t]
                        }
                    }]
                })
            } catch (i) {
                if ("AbortError" === i.name)
                    return !1;
                throw i
            }
        }
        async function He(e, t) {
            try {
                const a = await e.createWritable();
                await a.write(t),
                await a.close()
            } catch (a) {
                return console.log(a),
                !1
            }
            return !0
        }
        function Fe(e, a, n) {
            let i = (0,
            t.T)("a", {
                id: "download-link"
            });
            window.document.body.append(i),
            i.download = a + "." + n,
            i.href = URL.createObjectURL(e),
            void 0 === i.download ? window.location = i.href : i.click(),
            i.remove()
        }
        async function je(e, t, a) {
            const n = await c.e(885).then(c.bind(c, 64772))
              , i = await n.PDFDocument.create()
              , s = i.addPage([e, t])
              , r = await i.embedJpg(await a.arrayBuffer());
            return s.drawImage(r, {
                x: 0,
                y: 0,
                width: e,
                height: t
            }),
            new Blob([await i.save()])
        }
        const qe = async (t, a, n, i, s, r="normal") => {
            if ("normal" !== r) {
                const e = new File([s],t + "." + a,{
                    type: i
                });
                return void (await Ue(e, r))
            }
            let o;
            if (!(e.Ay.useLegacySave || !Ie()) && (o = await Oe(t, a, n, i),
            !1 === o))
                return !1;
            if (!1 !== o)
                if (o) {
                    await He(o, new File([s],t + "." + a)) || Fe(new File([s],t + "." + a), t, a),
                    document.dispatchEvent(new CustomEvent("notification",{
                        detail: (0,
                        d.A)("fileSaved")
                    }))
                } else
                    Fe(new File([s],t + "." + a), t, a)
        }
          , Ue = async (a, n, i="client") => {
            const s = e.Ay.follow;
            if (n instanceof MessagePort)
                n.postMessage(a);
            else if (n instanceof URL && s) {
                const e = (0,
                t.T)("form");
                e.method = "post",
                e.action = n.toString(),
                e.enctype = "multipart/form-data",
                document.body.append(e),
                e.addEventListener("formdata", (e => {
                    Array.isArray(a) ? a.forEach(( (t, a) => {
                        e.formData.append(`file[${a}]`, t)
                    }
                    )) : e.formData.append("file", a)
                }
                )),
                e.submit()
            } else if (n instanceof URL && !s) {
                const e = new FormData;
                Array.isArray(a) ? a.forEach(( (t, a) => {
                    e.append(`file[${a}]`, t)
                }
                )) : e.append("file", a);
                try {
                    const t = await fetch(n, {
                        method: "post",
                        body: e
                    });
                    if (t.status >= 200 && t.status < 300)
                        throw new Error("non 2xx status");
                    let a = `<p>The image was saved to ${i}</p> <div class="buttons center"><a class="button positive xlarge" href=" ${(await t.json()).savedUrl} ">View</a></div>`;
                    return console.log("Save completed", a),
                    a
                } catch (Y) {
                    return console.log(`Error Failed to save to ${i}, please try again.`),
                    `Error Failed to save to ${i}, please try again.`
                }
            }
        }
        ;
        class We {
            constructor() {
                if (this.working = !1,
                this.SERVER_URL = "https://pixlr.com/api/assets/collections/",
                this.fetchTemplates = async (e=1) => {
                    if (1 == e || "none" !== this.oneholder.style.display) {
                        1 === e && (this.oneholder.style.display = "none",
                        this.twoholder.style.display = "none",
                        this.oneholder.innerHTML = ""),
                        (0,
                        t.Ay)("element-loading").style.display = "block";
                        try {
                            const t = await fetch(this.SERVER_URL + "?platform=web&category=face&page=" + e)
                              , a = await t.json();
                            if (!a.status)
                                throw new Error("server_error");
                            let n = a.data;
                            this.result = {
                                name: "draft",
                                total: n.total,
                                page: n.page,
                                pages: n.pages
                            },
                            this.renderTemplates(n.collections)
                        } catch (a) {
                            (0,
                            t.Ay)("element-loading").style.display = "none",
                            console.log(a)
                        }
                    }
                }
                ,
                this.renderTemplates = e => {
                    this.back(),
                    (0,
                    t.Ay)("element-loading").style.display = "none",
                    e.forEach((e => {
                        let a = (0,
                        t.T)("span", {
                            className: "element-title"
                        }, e.name.replace(/_/g, " "))
                          , n = (0,
                        t.T)("div", {
                            className: "element-group"
                        }, a);
                        n.onclick = () => this.renderCollection(e.id);
                        for (let i = 0; i < e.assets.length && i < 3; i++)
                            n.append((0,
                            t.T)("div", {
                                className: "element"
                            }, (0,
                            t.T)("img", {
                                src: e.assets[i].thumbnailMedium,
                                crossOrigin: "Anonymous"
                            })));
                        this.oneholder.append(n)
                    }
                    )),
                    this.observed = void 0,
                    this.result && this.result.page !== this.result.pages && (this.observed = () => this.fetchTemplates(this.result.page + 1))
                }
                ,
                this.renderCollection = async e => {
                    this.scrollTop = document.documentElement.scrollTop,
                    this.oneholder.style.display = "none",
                    this.twoholder.style.display = "flex",
                    this.twoholder.innerHTML = "",
                    (0,
                    t.Ay)("element-back").style.display = "inline-flex",
                    (0,
                    t.Ay)("element-bottom-back").style.display = "flex";
                    const a = await fetch(this.SERVER_URL + e + "/?platform=web&limit=500");
                    let n = (await a.json()).data;
                    (0,
                    s.A)("collection", n.name),
                    n.assets.forEach((e => {
                        let a = (0,
                        t.T)("div", {
                            className: "element-box"
                        }, (0,
                        t.T)("img", {
                            id: e.id,
                            src: e.thumbnailMedium,
                            crossOrigin: "Anonymous"
                        }));
                        a.addEventListener("click", (t => {
                            this.loadTemplate(e)
                        }
                        ), !1),
                        this.twoholder.appendChild(a)
                    }
                    )),
                    document.documentElement.scrollTo(0, (0,
                    t.Ay)("face-swap-templates").offsetTop)
                }
                ,
                this.loadTemplate = async e => {
                    let a = (0,
                    t.Ay)("face-swap-target-preview");
                    a.innerHTML = "";
                    let n = y.k8((0,
                    t.Ay)(e.id), 1e3);
                    const i = D.A.fillFit(n.width, n.height, 250, 250);
                    let s = y.tm(n, i.width, i.height);
                    a.appendChild(s),
                    a.scrollIntoView({
                        behavior: "smooth",
                        block: "end",
                        inline: "nearest"
                    }),
                    this.over = (0,
                    t.T)("div", {
                        className: "thumbnail-over"
                    }, (0,
                    t.T)("progress", {
                        id: "element-progress",
                        value: 0,
                        max: 100
                    })),
                    a.append(this.over),
                    s.onmousedown = e => {
                        e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation(),
                        a.innerHTML = "",
                        this.canceled = !0
                    }
                    ,
                    this.canceled = !1,
                    this.loading = !0;
                    const r = (0,
                    t.Ay)("element-progress");
                    r.value = 0;
                    const o = await (0,
                    S.yP)(e.preview, (e => {
                        this.canceled || (-1 == e ? r.removeAttribute("value") : r.value = e)
                    }
                    ));
                    if (this.canceled)
                        return;
                    const l = await (0,
                    S.Ep)(o);
                    this.canceled || (this.target = y.k8(l, 4168),
                    this.loading = !1,
                    this.over.remove(),
                    this.updatePreview())
                }
                ,
                this.back = e => {
                    this.oneholder.style.display = "flex",
                    this.twoholder.style.display = "none",
                    (0,
                    t.Ay)("element-back").style.display = "none",
                    (0,
                    t.Ay)("element-bottom-back").style.display = "none",
                    e && (document.documentElement.scrollTop = this.scrollTop)
                }
                ,
                this.cancelLoading = e => {
                    e.preventDefault(),
                    e.stopPropagation(),
                    this.canceled = !0,
                    this.over.remove()
                }
                ,
                this.showCreditPop = () => {
                    new o.A("credits")
                }
                ,
                this.renderCreditAmount = () => {
                    i.N ? (0,
                    t.Ay)("face-swap-credit-count").innerHTML = i.N.credits.toString() : ((0,
                    t.Ay)("face-swap-execute").classList.remove("disabled"),
                    (0,
                    t.Ay)("face-swap-execute").innerText = (0,
                    d.A)("faceSwapRun"),
                    (0,
                    t.Ay)("face-swap-credit-count").style.display = "none")
                }
                ,
                this.sourceClick = () => {
                    this.uploadPhoto("source")
                }
                ,
                this.targetClick = () => {
                    this.uploadPhoto("target")
                }
                ,
                this.switchSource = () => {
                    [this.source,this.target] = [this.target, this.source],
                    this.updatePreview()
                }
                ,
                this.uploadPhoto = async e => {
                    (0,
                    s.A)("open-browse"),
                    await Le(!1).then((async t => {
                        var a;
                        if (0 === t.length)
                            return;
                        (0,
                        s.A)("open-file", null !== (a = t[0].type) && void 0 !== a ? a : "");
                        let n = await (0,
                        S.Ep)(t[0]);
                        if (n) {
                            let t = y.k8(n, 2160);
                            "source" === e ? this.source = t : this.target = t
                        }
                        this.updatePreview()
                    }
                    ))
                }
                ,
                this.updatePreview = () => {
                    let e = (0,
                    t.Ay)("face-swap-source-preview");
                    if (e.innerHTML = "",
                    this.source) {
                        const t = D.A.fillFit(this.source.width, this.source.height, 250, 250);
                        let a = y.tm(this.source, t.width, t.height);
                        e.appendChild(a),
                        a.onmousedown = e => {
                            e.preventDefault(),
                            e.stopPropagation(),
                            e.stopImmediatePropagation(),
                            this.source = void 0,
                            this.updatePreview()
                        }
                    }
                    let a = (0,
                    t.Ay)("face-swap-target-preview");
                    if (a.innerHTML = "",
                    this.target) {
                        const e = D.A.fillFit(this.target.width, this.target.height, 250, 250);
                        let t = y.tm(this.target, e.width, e.height);
                        a.appendChild(t),
                        t.onmousedown = e => {
                            e.preventDefault(),
                            e.stopPropagation(),
                            e.stopImmediatePropagation(),
                            this.target = void 0,
                            this.updatePreview()
                        }
                    }
                    (0,
                    t.Ay)("face-swap-execute").classList.toggle("disabled", !(this.target && this.source))
                }
                ,
                this.execute = async () => {
                    if (i.N)
                        if (i.N.credits) {
                            if (!this.working) {
                                (0,
                                s.A)("face-swap"),
                                this.working = !0,
                                (0,
                                t.Ay)("face-swap-execute").classList.add("working");
                                try {
                                    const a = await async function(e, t) {
                                        const [a,n] = await Promise.all([Se(e), Se(t)])
                                          , i = new FormData;
                                        i.set("source", a),
                                        i.set("target", n);
                                        const s = await fetch("/api/ai/faceswap/", {
                                            method: "post",
                                            body: i
                                        })
                                          , r = await s.json();
                                        if (!0 !== r.status)
                                            throw new Error(r.message);
                                        return await (0,
                                        S.kw)(`data:image/jpeg;base64,${r.data}`)
                                    }(this.source, this.target);
                                    let n = y.k8(a, 4196);
                                    (0,
                                    t.Ay)("face-swap-result").style.display = "flex";
                                    let i = (0,
                                    t.T)("div", {
                                        className: "result-holder"
                                    }, n);
                                    (0,
                                    t.Ay)("face-swap-result").prepend(i),
                                    i.scrollIntoView({
                                        behavior: "smooth",
                                        block: "end",
                                        inline: "nearest"
                                    }),
                                    n.onclick = async () => {
                                        let t, a = "face-swap", i = "png";
                                        if (!(e.Ay.useLegacySave || !Ie()) && (t = await Oe(a, i, i.toUpperCase() + " image", "image/" + i.replace("jpg", "jpeg")),
                                        !1 === t))
                                            return !1;
                                        const r = await y.PG(n, {
                                            type: "image/" + i.replace("jpg", "jpeg"),
                                            quality: 1
                                        })
                                          , o = new File([r],a + "." + i,{
                                            type: "image/" + i.replace("jpg", "jpeg")
                                        });
                                        t ? (await He(t, o),
                                        document.dispatchEvent(new CustomEvent("notification",{
                                            detail: (0,
                                            d.A)("faceSwapSaved")
                                        }))) : Fe(o, a, i),
                                        (0,
                                        s.A)("save-file", "png")
                                    }
                                    ,
                                    document.dispatchEvent(new CustomEvent("notification",{
                                        detail: (0,
                                        d.A)("faceSwapDone")
                                    })),
                                    (0,
                                    E.W2)().then(( () => {
                                        this.renderCreditAmount()
                                    }
                                    ))
                                } catch (a) {
                                    console.error(a),
                                    document.dispatchEvent(new CustomEvent("notification",{
                                        detail: (0,
                                        d.A)("genericError")
                                    }))
                                } finally {
                                    this.working = !1,
                                    (0,
                                    t.Ay)("face-swap-execute").classList.remove("working")
                                }
                            }
                        } else
                            i.N.subscription ? new o.A("credits") : new Ne.A("face-swap","credit");
                    else
                        new r.A
                }
                ,
                e.Ay.product = "swapper",
                new x,
                this.oneholder = (0,
                t.Ay)("one-element-list"),
                this.twoholder = (0,
                t.Ay)("two-element-list"),
                (0,
                t.Ay)("face-swap-switch").addEventListener("click", this.switchSource, !1),
                (0,
                t.Ay)("face-swap-execute").addEventListener("click", this.execute, !1),
                (0,
                t.Ay)("face-swap-credit-count").addEventListener("click", this.showCreditPop, !1),
                (0,
                t.Ay)("face-swap-open-source").addEventListener("click", this.sourceClick, !1),
                (0,
                t.Ay)("face-swap-open-target").addEventListener("click", this.targetClick, !1),
                (0,
                t.Ay)("element-back").addEventListener("click", this.back, !1),
                (0,
                t.Ay)("element-bottom-back").addEventListener("click", this.back, !1),
                e.Ay.file) {
                    new P({
                        title: e.Ay.name || e.Ay.file.substring(e.Ay.file.lastIndexOf("/") + 1)
                    }).load("/proxy/?url=" + encodeURIComponent(e.Ay.file)).then((async e => {
                        const t = await (0,
                        S.Ep)(e);
                        this.target = y.k8(t, 4096),
                        this.updatePreview()
                    }
                    ))
                }
                this.renderCreditAmount(),
                this.fetchTemplates()
            }
        }
        const Be = {
            step: [.01],
            range: [0, 1],
            stops: [0, 1],
            compact: !1,
            force: !1,
            defaultValue: 0,
            labelFormat: e => String(e),
            labelParse: e => parseInt(e, 10)
        };
        class ze {
            constructor(e, a={}) {
                if (this.findElements = () => {
                    this.outlet = this.container.querySelector("input"),
                    this.slider = this.container.querySelector(".slider"),
                    this.diff = this.container.querySelector(".slider .diff"),
                    this.label = this.container.querySelector(".info label"),
                    this.hold = this.container.querySelector(".slider-holder"),
                    this.bound = this.container.querySelector(".slider-holder .bound"),
                    this.knob = this.container.querySelector(".slider-holder .bound .knob")
                }
                ,
                this.buildElements = () => {
                    this.container.classList.add("range-box"),
                    this.label = document.createElement("label"),
                    this.label.innerText = (this.options.label || this.name) + " ",
                    this.outlet = document.createElement("input"),
                    this.outlet.type = "text",
                    this.outlet.autocomplete = "off",
                    this.outlet.value = this.options.labelFormat(this.options.defaultValue);
                    const e = document.createElement("div");
                    e.className = "info",
                    e.appendChild(this.label),
                    e.appendChild(this.outlet),
                    this.knob = document.createElement("div"),
                    this.knob.innerHTML = "<div></div>",
                    this.knob.className = "knob",
                    this.bound = (0,
                    t.T)("div", {
                        className: "bound"
                    }, this.knob),
                    this.diff = (0,
                    t.T)("div", {
                        className: "diff"
                    }),
                    this.slider = (0,
                    t.T)("div", {
                        className: "slider"
                    }, this.diff),
                    this.hold = (0,
                    t.T)("div", {
                        className: "slider-holder"
                    }, this.slider, this.bound),
                    this.container.appendChild(e),
                    this.container.appendChild(this.hold)
                }
                ,
                this.labelOver = () => {
                    this.value !== this.options.defaultValue && (this.label.innerText = (0,
                    d.A)("reset") + " ")
                }
                ,
                this.labelOut = () => {
                    this.label.innerText = (this.options.label || this.name) + " "
                }
                ,
                this.labelClick = () => {
                    if (this.value === this.options.defaultValue)
                        return;
                    const e = this.value;
                    this.options.onStart && this.options.onStart(this.value, this.name),
                    this.reset(),
                    this.options.onChange && this.options.onChange(this.value, this.name),
                    this.options.onEnd && this.options.onEnd(this.value, e, this.name)
                }
                ,
                this.sliderMouseDown = e => {
                    e.preventDefault(),
                    e.stopPropagation(),
                    this.knobDown(e),
                    this.move(e.clientX)
                }
                ,
                this.knobDown = e => {
                    document.addEventListener("mousemove", this.knobMouseMove, !1),
                    document.addEventListener("touchmove", this.knobTouchMove, {
                        passive: !1
                    }),
                    document.addEventListener("mouseup", this.knobUp, !0),
                    document.addEventListener("touchend", this.knobUp, {
                        passive: !1
                    }),
                    this.knob.classList.add("grabbed"),
                    e.preventDefault(),
                    e.stopPropagation(),
                    this.downValue = this.value,
                    this.options.onStart && setTimeout(( () => this.options.onStart(this.downValue, this.name)), 0)
                }
                ,
                this.move = e => {
                    const t = this.bound.getBoundingClientRect();
                    if (e <= t.left)
                        return void this.setAmount(0);
                    if (e >= t.right)
                        return void this.setAmount(1);
                    const a = (e - t.left) / t.width;
                    this.setAmount(a)
                }
                ,
                this.knobMouseMove = e => {
                    e.preventDefault(),
                    e.stopPropagation(),
                    this.move(e.clientX)
                }
                ,
                this.knobTouchMove = e => {
                    e.preventDefault(),
                    e.stopPropagation(),
                    this.move(e.touches[0].clientX)
                }
                ,
                this.knobUp = () => {
                    if (document.removeEventListener("mousemove", this.knobMouseMove, !1),
                    document.removeEventListener("touchmove", this.knobTouchMove),
                    document.removeEventListener("mouseup", this.knobUp, !0),
                    document.removeEventListener("touchend", this.knobUp),
                    this.knob.classList.remove("grabbed"),
                    this.options.onEnd && (this.options.force || this.downValue !== this.value)) {
                        const e = this.downValue;
                        this.downValue = this.value,
                        setTimeout(( () => this.options.onEnd(this.value, e, this.name)), 0)
                    }
                }
                ,
                this.outletKeyUp = e => {
                    const t = this.options.labelParse(this.outlet.value);
                    if (isNaN(t))
                        return;
                    const a = this.options.range[0]
                      , n = this.options.range[this.options.range.length - 1]
                      , i = Math.max(Math.min(t, n), a);
                    this.value = i,
                    this.hold.classList.toggle("changed", this.isChanged()),
                    this.diff.style.backgroundImage = this.generateDiff(this.options.defaultValue, this.value);
                    const s = this.calculateAmount(this.value);
                    this.setKnob(100 * s),
                    this.options.onChange && void 0 !== e && setTimeout(( () => this.options.onChange(this.value, this.name)), 0)
                }
                ,
                this.outletFocus = e => {
                    if (this.options.onStart && (this.downValue = this.value,
                    this.options.onStart(this.value, this.name)),
                    this.options.compact) {
                        this.hold.style.display = "flex";
                        const e = y.oR(this.container);
                        this.hold.style.left = e.x + this.container.offsetWidth - this.hold.offsetWidth + 10 + "px",
                        this.hold.style.top = e.y + 34 + "px"
                    }
                }
                ,
                this.outletBlur = e => {
                    this.options.compact && (this.hold.style.display = "none");
                    const t = this.options.labelParse(this.outlet.value);
                    isNaN(t) || (this.outlet.value = this.options.labelFormat(this.value),
                    this.options.onEnd && (this.options.force || this.downValue !== this.value) && void 0 !== e && this.options.onEnd(this.value, this.downValue, this.name))
                }
                ,
                this.calculateAmount = e => {
                    for (let t = 1; t < this.options.range.length; t++) {
                        const a = this.options.range[t - 1]
                          , n = this.options.range[t];
                        if (e >= a && e <= n) {
                            const i = this.options.stops[t - 1];
                            return i + (e - a) / (n - a) * (this.options.stops[t] - i)
                        }
                    }
                    if (e == this.options.defaultValue)
                        throw new Error("Cant recurse on default value with calculateAmount, this is a bug");
                    return this.calculateAmount(this.options.defaultValue)
                }
                ,
                this.setKnob = e => {
                    const t = 100 * this.calculateAmount(this.options.defaultValue)
                      , a = this.generateDiff(t, e);
                    requestAnimationFrame(( () => {
                        this.knob.style.marginLeft = `${e}%`,
                        this.diff.style.backgroundImage = a
                    }
                    ))
                }
                ,
                this.roundToStep = (e, t, a, n) => {
                    const i = e % t;
                    return 0 === i || e === a || e === n ? e : e - i
                }
                ,
                this.generateDiff = (e, t) => {
                    if (e === t)
                        return "none";
                    const a = "var(--accent-color)";
                    this.knob.clientWidth;
                    return t > e ? `linear-gradient(to right, transparent 0%, transparent ${e}%, ${a} ${e}%, ${a} calc(${t}%), transparent calc(${t}%), transparent 100%)` : `linear-gradient(to right, transparent 0%, transparent calc(${t}% ), ${a} calc(${t}%), ${a} ${e}%, transparent ${e}%, transparent 100%)`
                }
                ,
                this.setAmount = (e, t=!1) => {
                    const [a,n] = this.bucket(e)
                      , i = this.options.range[a]
                      , s = this.options.range[a + 1]
                      , r = this.options.step[a];
                    this.setKnob(100 * e),
                    this.value = this.roundToStep(n * (s - i) + i, r, i, s),
                    this.hold.classList.toggle("changed", this.value !== this.options.defaultValue),
                    this.outlet.value = this.options.labelFormat(this.value),
                    this.options.onChange && !t && setTimeout(( () => this.options.onChange(this.value, this.name)), 0)
                }
                ,
                this.bucket = e => {
                    for (let t = 1; t < this.options.stops.length; t++) {
                        const a = this.options.stops[t - 1]
                          , n = this.options.stops[t];
                        if (e >= a && e <= n)
                            return [t - 1, (e - a) / (n - a)]
                    }
                    throw new Error(`Could not assign ${e} to a bucket, this is a bug`)
                }
                ,
                this.setValue = (e, t=!1) => {
                    const a = this.value;
                    void 0 === e && (e = this.options.defaultValue);
                    const n = this.options.range[0]
                      , i = this.options.range[this.options.range.length - 1];
                    this.value = Math.max(Math.min(e, i), n),
                    this.hold.classList.toggle("changed", this.isChanged()),
                    this.outlet.value = this.options.labelFormat(this.value);
                    const s = this.calculateAmount(this.value);
                    this.setKnob(100 * s),
                    (this.options.onChange || this.options.onEnd) && t && setTimeout(( () => {
                        this.options.onChange && this.options.onChange(this.value, this.name),
                        this.options.onEnd && this.options.onEnd(this.value, a, this.name)
                    }
                    ), 0)
                }
                ,
                this.isChanged = () => this.value !== this.options.defaultValue,
                this.getValue = () => {
                    var e;
                    return null !== (e = this.value) && void 0 !== e ? e : 0
                }
                ,
                this.reset = () => {
                    this.value = this.options.defaultValue,
                    this.setKnob(100 * this.calculateAmount(this.value)),
                    this.hold.classList.remove("changed"),
                    this.outlet.value = this.options.labelFormat(this.value),
                    this.label.innerText = (this.options.label || this.name) + " "
                }
                ,
                this.cleanUp = () => {
                    document.removeEventListener("mousemove", this.knobMouseMove, !1),
                    document.removeEventListener("touchmove", this.knobTouchMove),
                    document.removeEventListener("mouseup", this.knobUp, !0),
                    document.removeEventListener("touchend", this.knobUp),
                    this.knob.removeEventListener("mousedown", this.knobDown, !1),
                    this.knob.removeEventListener("touchstart", this.knobDown),
                    this.hold.removeEventListener("mousedown", this.sliderMouseDown, !1),
                    this.outlet.removeEventListener("focus", this.outletFocus, !1),
                    this.outlet.removeEventListener("keyup", this.outletKeyUp, !1),
                    this.outlet.removeEventListener("blur", this.outletBlur, !1),
                    this.options.compact || (this.label.removeEventListener("mouseover", this.labelOver, !1),
                    this.label.removeEventListener("mouseleave", this.labelOut, !1),
                    this.label.removeEventListener("click", this.labelClick, !1))
                }
                ,
                this.hide = () => {
                    this.container.style.display = "none"
                }
                ,
                this.show = () => {
                    this.container.style.display = "block"
                }
                ,
                this.disable = () => {
                    this.container.classList.add("disabled")
                }
                ,
                this.enable = () => {
                    this.container.classList.remove("disabled")
                }
                ,
                this.name = e,
                this.container = (0,
                t.Ay)(e),
                this.options = Object.assign(Object.assign({}, Be), a),
                this.value = this.options.defaultValue,
                Array.isArray(this.options.step) || (this.options = Object.assign(Object.assign({}, this.options), {
                    step: [this.options.step]
                })),
                this.options.stops.length < 2)
                    throw new Error("Slider need to have atleast two stops, default is [0,1]");
                if (this.options.range.length != this.options.stops.length)
                    throw new Error("Slider range option and slide stops option, needs to be the same length");
                if (this.options.step.length != this.options.stops.length - 1)
                    throw new Error("Step array must be the same length as the number of ranges (slider options range - 1)");
                this.options.compact && this.container.classList.add("compact");
                !!this.container.querySelector(".slider") ? this.findElements() : this.buildElements(),
                this.knob.addEventListener("mousedown", this.knobDown, !1),
                this.knob.addEventListener("touchstart", this.knobDown, {
                    passive: !1
                }),
                this.hold.addEventListener("mousedown", this.sliderMouseDown, !1),
                this.outlet.addEventListener("focus", this.outletFocus, !1),
                this.outlet.addEventListener("keyup", this.outletKeyUp, !1),
                this.outlet.addEventListener("blur", this.outletBlur, !1),
                this.options.compact || (this.label.addEventListener("mouseover", this.labelOver, !1),
                this.label.addEventListener("mouseleave", this.labelOut, !1),
                this.label.addEventListener("click", this.labelClick, !1)),
                this.outlet.value !== this.options.labelFormat(this.options.defaultValue) ? (this.outletKeyUp(void 0),
                this.outletBlur(void 0)) : this.reset()
            }
        }
        class $e {
            constructor(e, a="right") {
                let n;
                this.position = (e=this.flow) => {
                    let t = this.parent.getBoundingClientRect();
                    if ("up" === e || document.body.clientWidth < 650)
                        this.drop.style.left = y.qE(t.right - this.drop.offsetWidth + 15, 5, document.body.clientWidth - this.drop.offsetWidth) + "px",
                        this.drop.style.top = t.top - this.drop.offsetHeight + "px",
                        this.drop.classList.add("up");
                    else {
                        switch (e) {
                        case "right":
                            this.drop.style.left = t.right - 5 + "px",
                            this.drop.style.top = t.top - 24 + "px";
                            break;
                        case "left":
                            this.drop.style.left = t.left - this.drop.offsetWidth + this.parent.offsetWidth / 2 + 38 + "px",
                            this.drop.style.top = t.top - this.drop.offsetHeight + "px";
                            break;
                        case "down":
                            this.drop.style.left = t.left + this.parent.offsetWidth / 2 - 36 + "px",
                            this.drop.style.top = t.bottom + 5 + "px"
                        }
                        this.drop.classList.add(e)
                    }
                }
                ,
                this.setContent = (...e) => {
                    e[0]instanceof HTMLElement ? this.content.append(...e) : this.content.innerHTML += e[0],
                    this.position()
                }
                ,
                this.keyDown = e => {
                    "Enter" !== e.key && "Escape" !== e.key || this.cleanUp()
                }
                ,
                this.superClean = () => {
                    var e;
                    document.removeEventListener("keydown", this.keyDown, !1),
                    this.drop.remove(),
                    this.drop = null,
                    null === (e = this.modal) || void 0 === e || e.remove(),
                    this.modal = null
                }
                ,
                this.cleanUp = () => {
                    this.superClean()
                }
                ,
                this.flow = a,
                this.parent = e,
                this.mid = y.r0(),
                this.content = (0,
                t.T)("div", {
                    className: "content"
                }),
                this.drop = (0,
                t.T)("div", {
                    className: "drop"
                }, this.content),
                this.modal = (0,
                t.T)("div", {
                    id: "modal-" + this.mid,
                    className: "modal"
                }, this.drop),
                this.modal.addEventListener("mousedown", (e => {
                    n = e.target
                }
                )),
                this.modal.addEventListener("mouseup", (e => {
                    e.target === n && e.target === this.modal && this.cleanUp()
                }
                )),
                document.body.appendChild(this.modal),
                document.addEventListener("keydown", this.keyDown, !1),
                this.position(a)
            }
        }
        class Ge {
            constructor(a, n, i, s=!1, r=!0, o=!1, l) {
                var d, c;
                if (this.activeColorPick = async e => {
                    if ((0,
                    t.Ay)("modal-color-select"))
                        return;
                    this.colorPreview = (0,
                    t.T)("div", {
                        className: "color-selector-preview",
                        style: "display:none;"
                    });
                    const a = (0,
                    t.T)("div", {
                        id: "modal-color-select",
                        style: "cursor:crosshair;",
                        className: "modal"
                    }, this.colorPreview);
                    a.addEventListener("click", this.removeColorPicker, !0),
                    a.addEventListener("mousemove", this.pickerPreviewColor, !0),
                    document.body.appendChild(a);
                    const n = document.getElementsByClassName("canvas");
                    for (var i = 0; i < n.length; i++)
                        if (await (0,
                        t.J9)(n[i])) {
                            this.stageCRect = n[i].getBoundingClientRect(),
                            this.stageCanvas = y.oM(n[i]);
                            break
                        }
                    if (!this.stageCanvas) {
                        let e = document.getElementsByClassName("canvas")[0];
                        this.stageCRect = e.getBoundingClientRect(),
                        this.stageCanvas = y.oM(e)
                    }
                    this.stageCanvasCTX = this.stageCanvas.getContext("2d")
                }
                ,
                this.pickerPreviewColor = t => {
                    if (!this.stageCanvas)
                        return;
                    let a = new A.A(t.clientX,t.clientY);
                    this.colorPreview.style.top = a.y - 60 + "px",
                    this.colorPreview.style.left = a.x + 10 + "px",
                    this.colorPreview.style.display = "block";
                    const n = e.Ay.isHDPI ? 2 : 1;
                    if (a.x = (a.x - this.stageCRect.left) * n,
                    a.y = (a.y - this.stageCRect.top) * n,
                    a.x < 0 || a.y < 0 || a.x > this.stageCRect.width * n || a.y > this.stageCRect.height * n)
                        return void (this.colorPreview.style.display = "none");
                    let i = this.stageCanvasCTX.getImageData(a.x, a.y, 1, 1).data;
                    this.colorPreview.style.backgroundColor = new R(i[0],i[1],i[2]).toHEX()
                }
                ,
                this.removeColorPicker = a => {
                    (0,
                    t.Ay)("modal-color-select").remove(),
                    this.colorPreview = null;
                    let n = new A.A(a.clientX,a.clientY);
                    const i = e.Ay.isHDPI ? 2 : 1;
                    if (n.x = (n.x - this.stageCRect.left) * i,
                    n.y = (n.y - this.stageCRect.top) * i,
                    n.x < 0 || n.y < 0 || n.x > this.stageCRect.width * i || n.y > this.stageCRect.height * i)
                        return;
                    let s = this.stageCanvasCTX.getImageData(n.x, n.y, 1, 1).data
                      , r = new R(s[0],s[1],s[2]);
                    this.setHex(r.toHEX(), !0),
                    this.updateColor(!0)
                }
                ,
                this.satMouseDown = e => {
                    e.stopPropagation(),
                    document.addEventListener("mousemove", this.satMouseMove, !0),
                    document.addEventListener("mouseup", this.satMouseUp, !0);
                    var t = this.satSlide.getBoundingClientRect()
                      , a = e.pageX - t.left
                      , n = e.pageY - t.top;
                    this.selectSat(a, n)
                }
                ,
                this.satMouseMove = e => {
                    e.stopPropagation();
                    var t = this.satSlide.getBoundingClientRect()
                      , a = e.pageX - t.left
                      , n = e.pageY - t.top;
                    this.selectSat(a, n)
                }
                ,
                this.satMouseUp = e => {
                    e.stopPropagation(),
                    document.removeEventListener("mousemove", this.satMouseMove, !0),
                    document.removeEventListener("mouseup", this.satMouseUp, !0)
                }
                ,
                this.satTouchStart = e => {
                    e.stopPropagation(),
                    document.addEventListener("touchmove", this.satTouchMove, {
                        passive: !1
                    }),
                    document.addEventListener("touchend", this.satTouchEnd, {
                        passive: !1
                    });
                    var t = this.satSlide.getBoundingClientRect()
                      , a = e.targetTouches[0].pageX - t.left
                      , n = e.targetTouches[0].pageY - t.top;
                    this.selectSat(a, n)
                }
                ,
                this.satTouchMove = e => {
                    e.stopPropagation();
                    var t = this.satSlide.getBoundingClientRect()
                      , a = e.targetTouches[0].pageX - t.left
                      , n = e.targetTouches[0].pageY - t.top;
                    this.selectSat(a, n)
                }
                ,
                this.satTouchEnd = e => {
                    e.stopPropagation(),
                    document.removeEventListener("touchmove", this.satTouchMove),
                    document.removeEventListener("touchend", this.satTouchEnd)
                }
                ,
                this.selectSat = (e, t) => {
                    e = y.qE(e, 0, this.width),
                    t = y.qE(t, 0, this.height),
                    this.hsb.s = e / this.width,
                    this.hsb.b = 1 - t / this.height,
                    this.setSat(),
                    this.updateColor()
                }
                ,
                this.setSat = () => {
                    this.satKnob.style.left = this.hsb.s * this.width - 9 + "px",
                    this.satKnob.style.top = (1 - this.hsb.b) * this.height - 9 + "px"
                }
                ,
                this.hueMouseDown = e => {
                    e.stopPropagation(),
                    document.addEventListener("mousemove", this.hueMouseMove, !0),
                    document.addEventListener("mouseup", this.hueMouseUp, !0);
                    var t = this.hueSlide.getBoundingClientRect()
                      , a = e.pageX - t.left;
                    this.selectHue(a)
                }
                ,
                this.hueMouseMove = e => {
                    e.stopPropagation();
                    var t = this.hueSlide.getBoundingClientRect()
                      , a = e.pageX - t.left;
                    this.selectHue(a)
                }
                ,
                this.hueMouseUp = e => {
                    e.stopPropagation(),
                    document.removeEventListener("mousemove", this.hueMouseMove, !0),
                    document.removeEventListener("mouseup", this.hueMouseUp, !0)
                }
                ,
                this.hueTouchStart = e => {
                    e.stopPropagation(),
                    this.hueSlide.addEventListener("touchmove", this.hueTouchMove, {
                        passive: !1
                    }),
                    document.addEventListener("touchend", this.hueTouchEnd, {
                        passive: !1
                    });
                    var t = e.target.getBoundingClientRect()
                      , a = e.targetTouches[0].pageX - t.left;
                    this.selectHue(a)
                }
                ,
                this.hueTouchMove = e => {
                    e.stopPropagation();
                    var t = e.target.getBoundingClientRect()
                      , a = e.targetTouches[0].pageX - t.left;
                    this.selectHue(a)
                }
                ,
                this.hueTouchEnd = e => {
                    e.stopPropagation(),
                    this.hueSlide.removeEventListener("touchmove", this.hueTouchMove),
                    document.removeEventListener("touchend", this.hueTouchEnd)
                }
                ,
                this.selectHue = e => {
                    e = y.qE(e, 0, this.width),
                    this.hsb.h = Math.round(e / this.width * 360),
                    this.setHue(),
                    this.updateColor()
                }
                ,
                this.setHue = () => {
                    this.hueKnob.style.left = this.hsb.h / 360 * this.width - 2 + "px";
                    let e = this.satSlide.getContext("2d");
                    e.fillStyle = R.fromHSB(this.hsb.h, 1, 1).toHEX(),
                    e.fillRect(0, 0, this.satSlide.width, this.satSlide.height);
                    var t = e.createLinearGradient(0, 0, this.satSlide.width, 0);
                    t.addColorStop(0, "rgba(255,255,255,1)"),
                    t.addColorStop(1, "rgba(255,255,255,0)"),
                    e.fillStyle = t,
                    e.fillRect(0, 0, this.satSlide.width, this.satSlide.height);
                    var a = e.createLinearGradient(0, 0, 0, this.satSlide.height);
                    a.addColorStop(0, "rgba(0,0,0,0)"),
                    a.addColorStop(1, "rgba(0,0,0,1)"),
                    e.fillStyle = a,
                    e.fillRect(0, 0, this.satSlide.width, this.satSlide.height)
                }
                ,
                this.selectPod = e => {
                    var t;
                    let a = e.currentTarget;
                    if (a.classList.contains("selected") && !this.extended)
                        "block" == this.selector.style.display ? this.selector.style.display = "none" : (this.selector.style.display = "block",
                        this.setHex(a.getAttribute("data")));
                    else {
                        if (null === (t = this.selected) || void 0 === t || t.classList.remove("selected"),
                        this.selected = a,
                        this.selected.classList.add("selected"),
                        this.selector.style.display = "block",
                        "empty" === a.getAttribute("data"))
                            return this.color = void 0,
                            void (this.callback && this.callback(void 0));
                        this.setHex(a.getAttribute("data"), !0)
                    }
                }
                ,
                this.updateColor = (e=!0, t=!0) => {
                    clearTimeout(this.setTimer),
                    this.color = R.fromHSB(this.hsb.h, this.hsb.s, this.hsb.b);
                    const a = this.color.toHEX();
                    this.hexInput.value = a,
                    t && this.selected && (this.selected.classList.contains("empty") && (this.selected.classList.remove("selected"),
                    this.selected = this.selected.nextElementSibling,
                    this.selected.classList.add("selected")),
                    this.selected.setAttribute("data", a),
                    this.selected.style.backgroundColor = a),
                    this.setTimer = setTimeout(( () => {
                        this.callback && e && this.callback(this.color)
                    }
                    ), 50)
                }
                ,
                this.hexInputInput = e => {
                    /^#[0-9A-F]{6}$/i.test(this.hexInput.value) && this.setHex(this.hexInput.value, !1)
                }
                ,
                this.hexInputBlur = e => {
                    /^#[0-9A-F]{6}$/i.test(this.hexInput.value) ? this.setHex(this.hexInput.value, !0) : this.hexInput.value = this.getHex()
                }
                ,
                this.setColor = (e, t=!1) => {
                    this.hsb = e.toHSB(),
                    this.setHue(),
                    this.setSat(),
                    this.updateColor(t, !0)
                }
                ,
                this.setHex = (e, t=!1) => this.setColor(R.fromHEX(e), t),
                this.getHex = () => this.color.toHEX(),
                this.getColor = () => this.color,
                this.color = n,
                this.holder = a,
                this.callback = i,
                this.height = 120,
                this.extended = o,
                this.holder.innerHTML = "",
                this.width = l || this.holder.getBoundingClientRect().width,
                this.selector = (0,
                t.T)("div", {
                    className: "color-selector"
                }),
                o) {
                    if (this.presets = (0,
                    t.T)("div", {
                        className: "color-selector-presets"
                    }),
                    s) {
                        let e = (0,
                        t.T)("div", {
                            className: "color-pod square empty"
                        });
                        e.addEventListener("click", this.selectPod, !1),
                        e.setAttribute("data", "empty"),
                        this.color || (e.classList.add("selected"),
                        this.selected = e),
                        this.presets.appendChild(e)
                    }
                    let a = [...e.Ay.oldColor.slice(), "#ffffff", "#888888", "#000000"];
                    for (let e = 0; e < a.length; ++e) {
                        let n = (0,
                        t.T)("div", {
                            className: "color-pod square"
                        });
                        n.addEventListener("click", this.selectPod, !1),
                        n.style.backgroundColor = a[e],
                        n.setAttribute("data", a[e]),
                        this.presets.appendChild(n),
                        0 !== e || o || (this.selected = n,
                        n.classList.add("selected"))
                    }
                    this.presets.classList.add("top-10"),
                    this.holder.append(this.selector, (0,
                    t.T)("div", {
                        className: "splitter top-10"
                    }), this.presets)
                } else
                    this.holder.append(this.selector);
                let m = (0,
                t.T)("div", {
                    className: "color-selector-sat",
                    style: "width:" + this.width + "px; height:" + this.height + "px;"
                });
                this.selector.appendChild(m),
                this.satSlide = y.VI(this.width, this.height),
                this.satSlide.addEventListener("mousedown", this.satMouseDown, !1),
                this.satSlide.addEventListener("touchstart", this.satTouchStart, {
                    passive: !1
                }),
                this.satSlide.classList.add("color-selector-sat-slide"),
                m.appendChild(this.satSlide),
                this.satKnob = document.createElement("div"),
                this.satKnob.classList.add("color-selector-sat-knob", "ic"),
                m.appendChild(this.satKnob);
                let u = document.createElement("div");
                u.classList.add("color-selector-hue"),
                u.style.width = this.width + "px",
                this.selector.appendChild(u),
                this.hueSlide = document.createElement("div"),
                this.hueSlide.style.width = this.width + "px",
                this.hueSlide.addEventListener("mousedown", this.hueMouseDown, !1),
                this.hueSlide.addEventListener("touchstart", this.hueTouchStart, {
                    passive: !1
                }),
                this.hueSlide.classList.add("color-selector-hue-slide"),
                u.appendChild(this.hueSlide),
                this.hueKnob = document.createElement("div"),
                this.hueKnob.classList.add("color-selector-hue-knob", "ic"),
                u.appendChild(this.hueKnob);
                let h = (0,
                t.T)("div", {
                    className: "color-selector-bar"
                });
                if (!o) {
                    if (s) {
                        let e = (0,
                        t.T)("div", {
                            className: "color-pod empty"
                        });
                        e.addEventListener("click", this.selectPod, !1),
                        e.setAttribute("data", "empty"),
                        this.color || (this.selected = e),
                        h.appendChild(e)
                    }
                    let e = (0,
                    t.T)("div", {
                        className: "color-pod"
                    });
                    e.addEventListener("click", this.selectPod, !1),
                    h.appendChild(e),
                    s && !this.color || (this.selected = e)
                }
                if (this.hexInput = (0,
                t.T)("input", {
                    type: "text",
                    spellcheck: !1,
                    maxLength: 7,
                    style: "width:90px;text-transform:uppercase;"
                }),
                this.hexInput.addEventListener("input", this.hexInputInput, !1),
                this.hexInput.addEventListener("blur", this.hexInputBlur, !1),
                h.appendChild(this.hexInput),
                r) {
                    let e = (0,
                    t.T)("div", {
                        className: "icon-button",
                        style: "margin-left:auto;"
                    }, (0,
                    t.T)("img", {
                        src: "/img/tool/picker.svg",
                        className: "ic"
                    }));
                    e.addEventListener("click", this.activeColorPick, !1),
                    h.appendChild(e)
                }
                this.selector.appendChild(h),
                this.hsb = R.fromHEX(null !== (c = null === (d = this.color) || void 0 === d ? void 0 : d.toHEX()) && void 0 !== c ? c : "#ffffff").toHSB(),
                this.setHue(),
                this.setSat(),
                this.updateColor(!1, !!this.color),
                this.color = n
            }
        }
        class Ve extends $e {
            constructor(e, t, a, n, i=!1, s=!0, r="right") {
                super(e),
                this.cleanUp = () => {
                    this.callback && this.callback(this.selector.color),
                    this.superClean()
                }
                ,
                this.color = t,
                this.preview = n,
                this.callback = a,
                this.selector = new Ge(this.content,this.color,this.preview,i,s,!0),
                this.position(r)
            }
        }
        class Ke extends D.A {
            constructor(e, t, a, n, i, s, r, o, l, d, c, m, u) {
                super(e, t, a, n),
                this.x = e,
                this.y = t,
                this.width = a,
                this.height = n,
                this.type = i,
                this.loose = s,
                this.rotation = r,
                this.clip = o,
                this.sx = l,
                this.sy = d,
                this.sw = c,
                this.sh = m,
                this.ss = u
            }
        }
        class Je {
            constructor(e, t, a, n, i) {
                this.id = e,
                this.name = t,
                this.original = a,
                this.preview = n,
                this.thumb = i,
                this.offset = new A.A
            }
        }
        class Xe {
            constructor() {
                this.space = 10,
                this.border = 10,
                this.curve = 10,
                this.aspect = "1:1",
                this.color = new R,
                this.corner = "square",
                this.images = new Array,
                this.fetchGrids = async () => {
                    const e = await fetch("/grid/index.json");
                    this.grids = await e.json()
                }
                ,
                this.wheely = e => {
                    e.preventDefault(),
                    (0,
                    t.Ay)("photo-grid-output-list").scrollLeft -= e.deltaY
                }
                ,
                this.showColorDrop = () => {
                    new Ve((0,
                    t.Ay)("photo-grid-color"),this.color,(e => {
                        (0,
                        t.Ay)("photo-grid-color-value").style.backgroundColor = e.toHEX(),
                        this.color = e,
                        this.render()
                    }
                    ),void 0,!1,!1,"down")
                }
                ,
                this.showAspectDrop = () => {
                    new $e((0,
                    t.Ay)("photo-grid-aspect"),"down").setContent('<ul class="option-list" id="photo-grid-aspect-selector">\n            <li id="aspect-1:1" data="1:1"><div class="aspect"><div class="aspect-square"></div></div><div class="name">Square (1:1)</div></li>\n            <li id="aspect-3:4" data="3:4"><div class="aspect"><div class="aspect-portrait"></div></div><div class="name">Portrait (3:4)</div></li>\n            <li id="aspect-4:3" data="4:3"><div class="aspect"><div class="aspect-post"></div></div><div class="name">Post (4:3)</div></li>\n            <li id="aspect-9:16" data="9:16"><div class="aspect"><div class="aspect-tall"></div></div><div class="name">Story (9:16)</div></li>\n            <li id="aspect-16:9" data="16:9"><div class="aspect"><div class="aspect-wide"></div></div><div class="name">Wide (16:9)</div></li>\n        </ul>');
                    let e = (0,
                    t.Ay)("photo-grid-aspect-selector").getElementsByTagName("li");
                    for (let a = 0; a < e.length; a++)
                        e[a].addEventListener("click", (e => {
                            (0,
                            t.Ay)("aspect-" + this.aspect).classList.remove("selected"),
                            this.aspect = e.currentTarget.getAttribute("data"),
                            (0,
                            t.Ay)("aspect-" + this.aspect).classList.add("selected"),
                            (0,
                            t.Ay)("photo-grid-aspect-value").innerText = this.aspect,
                            this.render()
                        }
                        ), !1);
                    (0,
                    t.Ay)("aspect-" + this.aspect).classList.add("selected")
                }
                ,
                this.showSpaceDrop = () => {
                    const e = new $e((0,
                    t.Ay)("photo-grid-space"),"down");
                    e.setContent('<ul class="option-list" id="photo-grid-space-selector">\n            <li id="space-0" data="0"><div class="space none"><div></div></div><div class="name">None (0)</div></li>\n            <li id="space-10" data="10"><div class="space small"><div></div></div><div class="name">Small (10)</div></li>\n            <li id="space-20" data="20"><div class="space medium"><div></div></div><div class="name">Medium (20)</div></li>\n            <li id="space-40" data="40"><div class="space large"><div></div></div><div class="name">Large (40)</div></li>\n        </ul>'),
                    e.drop.append((0,
                    t.T)("div", {
                        className: "bottom"
                    }, (0,
                    t.T)("div", {
                        id: "space-slider",
                        style: "padding-bottom:10px"
                    }), (0,
                    t.T)("div", {
                        id: "border-slider",
                        style: "padding-top:0"
                    })));
                    const a = new ze("space-slider",{
                        label: (0,
                        d.A)("photoCollageBetween"),
                        range: [0, 100],
                        defaultValue: this.space,
                        step: 1,
                        onEnd: e => {
                            (0,
                            t.Ay)("space-" + this.boundSpace(this.space)).classList.remove("selected"),
                            this.space = e,
                            (0,
                            t.Ay)("space-" + this.boundSpace(this.space)).classList.add("selected"),
                            (0,
                            t.Ay)("photo-grid-space-value").innerText = this.space.toString(),
                            this.render()
                        }
                    })
                      , n = new ze("border-slider",{
                        label: (0,
                        d.A)("photoCollageBorder"),
                        range: [0, 100],
                        defaultValue: this.border,
                        step: 1,
                        onEnd: e => {
                            this.border = e,
                            this.render()
                        }
                    });
                    let i = (0,
                    t.Ay)("photo-grid-space-selector").getElementsByTagName("li");
                    for (let s = 0; s < i.length; s++)
                        i[s].addEventListener("click", (e => {
                            (0,
                            t.Ay)("space-" + this.boundSpace(this.space)).classList.remove("selected"),
                            this.space = this.border = Number(e.currentTarget.getAttribute("data")),
                            (0,
                            t.Ay)("space-" + this.space).classList.add("selected"),
                            (0,
                            t.Ay)("photo-grid-space-value").innerText = this.space.toString(),
                            a.setValue(this.space),
                            n.setValue(this.border),
                            this.render()
                        }
                        ), !1);
                    (0,
                    t.Ay)("space-" + this.boundSpace(this.space)).classList.add("selected")
                }
                ,
                this.boundSpace = e => [0, 10, 20, 40].reduce(( (t, a) => Math.abs(a - e) < Math.abs(t - e) ? a : t)),
                this.showCornerDrop = () => {
                    const e = new $e((0,
                    t.Ay)("photo-grid-corner"),"down");
                    e.setContent('<ul class="option-list" id="photo-grid-corner-selector">\n            <li id="corner-square" data="square"><div class="corner"><img src="/img/icon/shape-rectangle.svg" class="ic"></div><div class="name">Square</div></li>\n            <li id="corner-round" data="round"><div class="corner"><img src="/img/icon/shape-ellipse.svg" class="ic"></div><div class="name">Round</div></li>\n            <li id="corner-cut" data="cut"><div class="corner"><img src="/img/icon/shape-triangle.svg" class="ic"></div><div class="name">Cut</div></li>\n        </ul>'),
                    e.drop.append((0,
                    t.T)("div", {
                        className: "bottom"
                    }, (0,
                    t.T)("div", {
                        id: "corner-slider",
                        style: "display:" + ("square" === this.corner ? "none" : "block")
                    }))),
                    new ze("corner-slider",{
                        label: (0,
                        d.A)("amount"),
                        range: [0, 100],
                        defaultValue: this.curve,
                        step: 1,
                        onEnd: e => {
                            this.curve = e,
                            this.render()
                        }
                    });
                    let a = (0,
                    t.Ay)("photo-grid-corner-selector").getElementsByTagName("li");
                    for (let n = 0; n < a.length; n++)
                        a[n].addEventListener("click", (e => {
                            (0,
                            t.Ay)("corner-" + this.corner).classList.remove("selected"),
                            this.corner = e.currentTarget.getAttribute("data"),
                            (0,
                            t.Ay)("corner-" + this.corner).classList.add("selected");
                            let a = "";
                            switch ((0,
                            t.Ay)("photo-grid-corner-value").innerHTML = "",
                            this.corner) {
                            case "square":
                                a = "/img/icon/shape-rectangle.svg";
                                break;
                            case "round":
                                a = "/img/icon/shape-ellipse.svg";
                                break;
                            case "cut":
                                a = "/img/icon/shape-triangle.svg"
                            }
                            (0,
                            t.Ay)("photo-grid-corner-value").append((0,
                            t.T)("img", {
                                src: a,
                                className: "ic"
                            })),
                            (0,
                            t.Ay)("corner-slider").style.display = "square" === this.corner ? "none" : "block",
                            this.render()
                        }
                        ), !1);
                    (0,
                    t.Ay)("corner-" + this.corner).classList.add("selected")
                }
                ,
                this.addPhoto = async () => {
                    (0,
                    s.A)("open-browse"),
                    await Le(!0).then((async e => {
                        0 !== e.length && await this.photoAppend(e)
                    }
                    ))
                }
                ,
                this.photoAppend = async e => {
                    var a;
                    for (let n = 0; n < e.length; n++) {
                        (0,
                        s.A)("open-file", null !== (a = e[n].type) && void 0 !== a ? a : "");
                        const i = y.Os()
                          , r = e[n].name;
                        let o = await (0,
                        S.Ep)(e[n]);
                        if (o) {
                            (0,
                            t.Ay)("photo-grid-list").append((0,
                            t.T)("div", {
                                id: i,
                                className: "thumbnail flow-down",
                                onclick: () => this.photoRemove(i)
                            }));
                            let e = y.k8(o, 2160);
                            const a = D.A.fillFit(o.width, o.height, 280, 280);
                            let n = y.tm(e, a.width, a.height)
                              , s = y.oM(n);
                            this.images.push(new Je(i,r,e,s,n)),
                            (0,
                            t.Ay)(i).classList.remove("queue"),
                            (0,
                            t.Ay)(i).append(n)
                        }
                    }
                    this.filter()
                }
                ,
                this.photoRemove = e => {
                    var a;
                    const n = this.images.findIndex((t => t.id === e));
                    -1 !== n && this.images.splice(n, 1),
                    null === (a = (0,
                    t.Ay)(e)) || void 0 === a || a.remove(),
                    this.filter()
                }
                ,
                this.filter = () => {
                    this.grids && this.images && (this.list = this.grids.filter((e => e.cells.length === this.images.length)),
                    this.grid = void 0),
                    this.setButtons(),
                    this.render()
                }
                ,
                this.render = () => {
                    if (!this.list)
                        return;
                    (0,
                    t.Ay)("photo-grid-output-list").scrollTo(0, 0),
                    (0,
                    t.Ay)("photo-grid-output-list").innerHTML = "",
                    (0,
                    t.Ay)("photo-grid-output-preview").innerHTML = "";
                    let e = 0;
                    for (let a of this.list) {
                        const [n] = this.renderCanvasGrid(a, 360);
                        n.onclick = () => {
                            this.grid = a,
                            this.setPreview(a)
                        }
                        ,
                        0 != e++ || this.grid || (this.grid = a),
                        (0,
                        t.Ay)("photo-grid-output-list").append(n)
                    }
                    this.setPreview(this.grid)
                }
                ,
                this.setButtons = () => {
                    (0,
                    t.Ay)("photo-grid-save").classList.toggle("disabled", 0 === this.images.length),
                    (0,
                    t.Ay)("photo-grid-clear").classList.toggle("disabled", 0 === this.images.length)
                }
                ,
                this.renderCanvasGrid = (e, t, a) => {
                    if (!a) {
                        let e = t
                          , n = t;
                        switch (this.aspect) {
                        case "3:4":
                            n = Math.round(t / 3 * 4);
                            break;
                        case "9:16":
                            n = Math.round(t / 9 * 16);
                            break;
                        case "4:3":
                            e = Math.round(t / 3 * 4);
                            break;
                        case "16:9":
                            e = Math.round(t / 9 * 16)
                        }
                        a = y.VI(e, n)
                    }
                    const n = a.width < a.height ? a.width / 1080 : a.height / 1080
                      , i = Math.round(this.space * n)
                      , s = Math.round(this.border * n);
                    let r = this.calculate(e, a.width, a.height, i, s);
                    const o = a.getContext("2d");
                    o.imageSmoothingEnabled = !0,
                    o.imageSmoothingQuality = "high",
                    o.fillStyle = this.color.toHEX(),
                    o.fillRect(0, 0, a.width, a.height);
                    for (let l = 0; l < r.length; l++) {
                        o.save();
                        let e = r[l];
                        if (e.loose && i && ("round" === this.corner ? (pe.roundRect(o, e.x - i, e.y - i, e.width + 2 * i, e.height + 2 * i, Math.round(this.curve * n * 2)),
                        o.fill()) : "cut" === this.corner ? (pe.cutRect(o, e.x - i, e.y - i, e.width + 2 * i, e.height + 2 * i, Math.round(this.curve * n * 2)),
                        o.fill()) : o.fillRect(e.x - i, e.y - i, e.width + 2 * i, e.height + 2 * i)),
                        "round" === this.corner ? (pe.roundRect(o, e.x, e.y, e.width, e.height, Math.round(this.curve * n * 2)),
                        o.clip()) : "cut" === this.corner && (pe.cutRect(o, e.x, e.y, e.width, e.height, Math.round(this.curve * n * 2)),
                        o.clip()),
                        e.clip) {
                            o.beginPath(),
                            o.moveTo(e.clip[0].x, e.clip[0].y);
                            for (let t = 1; t < e.clip.length; ++t)
                                o.lineTo(e.clip[t].x, e.clip[t].y);
                            o.lineTo(e.clip[0].x, e.clip[0].y),
                            o.closePath(),
                            o.clip()
                        }
                        o.drawImage(this.images[l].original, e.sx, e.sy, e.sw, e.sh, e.x, e.y, e.width, e.height),
                        o.restore()
                    }
                    return [a, r]
                }
                ,
                this.calculate = (e, t, a, n, i) => {
                    var s, r, o;
                    let l = new Array
                      , d = (t - n * (e.grid - 1) - 2 * i) / e.grid
                      , c = (a - n * (e.grid - 1) - 2 * i) / e.grid;
                    for (let m = 0; m < e.cells.length; ++m) {
                        let t, a = new D.A(Math.floor(i + e.cells[m].x * (d + n)),Math.floor(i + e.cells[m].y * (c + n)),Math.round(e.cells[m].w * (d + n) - n),Math.round(e.cells[m].h * (c + n) - n));
                        if (void 0 !== e.cells[m].clip) {
                            t = new Array;
                            for (let a = 0; a < e.cells[m].clip.length; ++a) {
                                let s = Math.round(i + e.cells[m].clip[a].x * (d + n))
                                  , r = Math.round(i + e.cells[m].clip[a].y * (c + n));
                                e.cells[m].clip[a].x == e.cells[m].x + e.cells[m].w && (s -= n),
                                e.cells[m].clip[a].y == e.cells[m].y + e.cells[m].h && (r -= n),
                                e.cells[m].clip[a].v && (s += e.cells[m].clip[a].v * n),
                                e.cells[m].clip[a].z && (r += e.cells[m].clip[a].z * n),
                                t.push(new A.A(Math.round(s),Math.round(r)))
                            }
                        }
                        const u = y.yu(a.width, a.height, this.images[m].original.width, this.images[m].original.height, !1)
                          , h = Math.round(a.width * u)
                          , p = Math.round(a.height * u);
                        let g = .5 * (this.images[m].original.width - h) + this.images[m].offset.x
                          , f = .5 * (this.images[m].original.height - p) + this.images[m].offset.y
                          , _ = this.images[m].original.height - p
                          , b = this.images[m].original.width - h;
                        g = y.qE(g, 0, b),
                        f = y.qE(f, 0, _),
                        l.push(new Ke(a.x,a.y,a.width,a.height,null !== (s = e.cells[m].type) && void 0 !== s ? s : "rect",null !== (r = e.cells[m].loose) && void 0 !== r && r,null !== (o = e.cells[m].rotation) && void 0 !== o ? o : 0,t,g,f,h,p,u))
                    }
                    return l
                }
                ,
                this.setPreview = e => {
                    (0,
                    t.Ay)("photo-grid-output-preview").innerHTML = "",
                    e && (this.pointers || (this.pointers = new Array),
                    [this.preview,this.grects] = this.renderCanvasGrid(e, 1080),
                    this.preview.addEventListener("pointerdown", this.pointerDown, !1),
                    (0,
                    t.Ay)("photo-grid-output-preview").append(this.preview))
                }
                ,
                this.pointerDown = e => {
                    if (e.stopPropagation(),
                    e.button > 0)
                        return e.preventDefault(),
                        !1;
                    if (this.addPointer(e),
                    this.preview.addEventListener("pointermove", this.pointerMove, !1),
                    this.preview.addEventListener("pointerup", this.pointerUp, !1),
                    1 === this.pointers.length) {
                        this.downIndex = -1;
                        let t = this.preview.width / this.preview.offsetWidth
                          , a = new A.A(e.offsetX * t,e.offsetY * t);
                        for (let e = this.grects.length - 1; e >= 0; e--)
                            if (this.grects[e].isInside(a)) {
                                this.downIndex = e;
                                break
                            }
                        if (-1 === this.downIndex)
                            return;
                        this.downPoint = new A.A(e.clientX,e.clientY),
                        this.downOffset = this.images[this.downIndex].offset.clone()
                    }
                }
                ,
                this.pointerMove = e => {
                    if (e.stopPropagation(),
                    this.pointers.length < 2 && -1 !== this.downIndex) {
                        let t = this.preview.width / this.preview.offsetWidth
                          , a = new A.A(e.offsetX * t,e.offsetY * t);
                        this.overIndex = -1;
                        for (let e = this.grects.length - 1; e >= 0; e--)
                            if (this.grects[e].isInside(a)) {
                                this.overIndex = e;
                                break
                            }
                        if (-1 !== this.overIndex && this.overIndex !== this.downIndex && (this.ghost || (this.ghost = this.images[this.downIndex].preview,
                        this.ghost.classList.add("grid-ghost"),
                        document.body.append(this.ghost))),
                        !this.ghost || -1 !== this.overIndex && this.overIndex !== this.downIndex || (this.ghost.classList.remove("grid-ghost"),
                        this.ghost.remove(),
                        this.ghost = void 0),
                        this.ghost) {
                            let t = y.oR(this.preview);
                            this.ghost.style.left = t.x + e.offsetX + "px",
                            this.ghost.style.top = t.y + e.offsetY + "px"
                        }
                        let n = this.downOffset.x - ~~((e.clientX - this.downPoint.x) * this.grects[this.downIndex].ss * t)
                          , i = this.downOffset.y - ~~((e.clientY - this.downPoint.y) * this.grects[this.downIndex].ss * t)
                          , s = .5 * (this.images[this.downIndex].original.height - this.grects[this.downIndex].sh)
                          , r = .5 * (this.images[this.downIndex].original.width - this.grects[this.downIndex].sw);
                        this.images[this.downIndex].offset.x = y.qE(n, -r, r),
                        this.images[this.downIndex].offset.y = y.qE(i, -s, s),
                        requestAnimationFrame(( () => this.renderCanvasGrid(this.grid, 0, this.preview)))
                    }
                }
                ,
                this.pointerUp = e => {
                    e.stopPropagation(),
                    this.ghost && (this.ghost.classList.add("fade-out-fast"),
                    setTimeout(( () => {
                        this.ghost.classList.remove("grid-ghost", "fade-out-fast"),
                        this.ghost.remove(),
                        this.ghost = void 0
                    }
                    ), 300),
                    this.images[this.downIndex].offset = this.downOffset,
                    [this.images[this.downIndex],this.images[this.overIndex]] = [this.images[this.overIndex], this.images[this.downIndex]],
                    requestAnimationFrame(( () => this.renderCanvasGrid(this.grid, 0, this.preview)))),
                    this.preview.removeEventListener("pointermove", this.pointerMove, !1),
                    this.preview.removeEventListener("pointerup", this.pointerUp, !1),
                    this.removePointer(e)
                }
                ,
                this.addPointer = e => {
                    this.pointers.push(e.pointerId),
                    this.preview.setPointerCapture(e.pointerId)
                }
                ,
                this.removePointer = e => {
                    for (let t = 0; t < this.pointers.length; t++)
                        if (this.pointers[t] === e.pointerId) {
                            this.pointers.splice(t, 1);
                            break
                        }
                    this.preview.releasePointerCapture(e.pointerId)
                }
                ,
                this.clear = () => {
                    this.grid = void 0,
                    this.images = new Array,
                    (0,
                    t.Ay)("photo-grid-list").innerHTML = "",
                    this.filter()
                }
                ,
                this.save = async () => {
                    if (!(null === i.N || void 0 === i.N ? void 0 : i.N.subscription) && (0,
                    e.P2)())
                        return void new Ne.A("photo-collage","save");
                    const [t] = this.renderCanvasGrid(this.grid, 1080);
                    let a = "photo-collage.png"
                      , n = await y.PG(t, {
                        type: "image/png",
                        quality: 1
                    });
                    Fe(new File([n],a,{
                        type: "image/png"
                    }), a, "png"),
                    document.dispatchEvent(new CustomEvent("notification",{
                        detail: (0,
                        d.A)("fileSaved")
                    })),
                    (0,
                    e.pp)(),
                    (0,
                    s.A)("photo-collage", "save"),
                    (0,
                    s.A)("save-file", "png")
                }
                ,
                e.Ay.product = "collage",
                (0,
                t.Ay)("photo-grid-add").addEventListener("click", this.addPhoto, !0),
                (0,
                t.Ay)("photo-grid-save").addEventListener("click", this.save, !0),
                (0,
                t.Ay)("photo-grid-clear").addEventListener("click", this.clear, !0),
                (0,
                t.Ay)("photo-grid-color").addEventListener("click", this.showColorDrop, !0),
                (0,
                t.Ay)("photo-grid-aspect").addEventListener("click", this.showAspectDrop, !0),
                (0,
                t.Ay)("photo-grid-space").addEventListener("click", this.showSpaceDrop, !0),
                (0,
                t.Ay)("photo-grid-corner").addEventListener("click", this.showCornerDrop, !0),
                (0,
                t.Ay)("photo-grid-color-value").style.backgroundColor = this.color.toHEX(),
                (0,
                t.Ay)("photo-grid-aspect-value").innerText = this.aspect,
                (0,
                t.Ay)("photo-grid-space-value").innerText = this.space.toString(),
                (0,
                t.Ay)("photo-grid-corner-value").innerHTML = "",
                (0,
                t.Ay)("photo-grid-corner-value").append((0,
                t.T)("img", {
                    src: "/img/icon/shape-rectangle.svg",
                    className: "ic"
                })),
                (0,
                t.Ay)("photo-grid-output-list").addEventListener("wheel", this.wheely, !0),
                this.fetchGrids()
            }
        }
        class Qe {
            constructor(e, t) {
                this.clear = () => {
                    this.grid.innerHTML = ""
                }
                ,
                this.grid = e,
                this.grid.classList.add("mansorary"),
                t && this.grid.classList.add(t),
                this.gridItems = [].slice.call(this.grid.children),
                window.onload = () => this.resizeAllGridItems(),
                window.addEventListener("resize", ( () => this.resizeAllGridItems()))
            }
            addChild(e) {
                this.grid.appendChild(e),
                this.gridItems = [].slice.call(this.grid.children)
            }
            resizeAllGridItems() {
                this.grid.style.alignItems = "start",
                this.gridItems.forEach((e => this.resizeGridItem(e))),
                this.grid.style.alignItems = "stretch"
            }
            resizeGridItem(e) {
                let t = parseInt(window.getComputedStyle(this.grid).getPropertyValue("gap"))
                  , a = Math.ceil((e.clientHeight + t) / (1 + t));
                e.style.gridRowEnd = "span " + a
            }
            getContent() {
                return this.grid
            }
        }
        class Ze {
            constructor(e, a, n) {
                this.gen = e,
                this.item = a,
                this.selectedId = n,
                this.parent = () => {
                    this.gen.showGeneration(this.item.parentId)
                }
                ,
                this.remix = () => {
                    let e = {
                        personal: this.item.personal,
                        prompt: this.item.prompt,
                        negative: this.item.negative,
                        style: this.item.style,
                        width: this.item.width,
                        height: this.item.height
                    };
                    this.gen.setRemixPrompt(this.item.id, this.selected, (0,
                    t.Ay)("pop-main-image"), e),
                    this.gen.closeGeneration()
                }
                ,
                this.prompt = () => {
                    let e = {
                        personal: this.item.personal,
                        prompt: this.item.prompt,
                        negative: this.item.negative,
                        style: this.item.style,
                        width: this.item.width,
                        height: this.item.height
                    };
                    this.gen.setPrompt(e),
                    this.gen.closeGeneration()
                }
                ,
                this.setMainImage = (e, a) => {
                    (0,
                    t.Ay)(this.selected).classList.remove("selected"),
                    (0,
                    t.Ay)(e).classList.add("selected"),
                    this.selected = e;
                    const n = (0,
                    t.Ay)("pop-main");
                    n.classList.add("working", "large");
                    const i = (0,
                    t.Ay)("pop-main-image");
                    i.src = a;
                    (0,
                    t.Ay)("pop-main-image-ambient").src = a,
                    i.complete ? n.classList.remove("working", "large") : i.onload = () => {
                        n.classList.remove("working", "large"),
                        i.onload = void 0
                    }
                    ,
                    this.updatePrimaryIcon()
                }
                ,
                this.edit = async e => {
                    (0,
                    s.A)("generator", "edit");
                    const t = this.item.images.find((e => e.id === this.selected));
                    location.href = "/express/?file=" + encodeURIComponent(t.preview)
                }
                ,
                this.faceSwap = async e => {
                    (0,
                    s.A)("generator", "face-swap");
                    const t = this.item.images.find((e => e.id === this.selected));
                    location.href = "/face-swap/?file=" + encodeURIComponent(t.preview)
                }
                ,
                this.download = () => {
                    (0,
                    s.A)("generator", "download");
                    const e = this.item.images.find((e => e.id === this.selected));
                    var t = document.createElement("a");
                    t.download = "pixlr-image-generator-" + e.id + ".png",
                    t.href = e.preview,
                    document.body.appendChild(t),
                    t.click(),
                    document.body.removeChild(t)
                }
                ,
                this.delete = () => {
                    this.gen.deleteGeneration(this.item.id)
                }
                ,
                this.personal = async () => {
                    if ((null === i.N || void 0 === i.N ? void 0 : i.N.id) === this.item.userId) {
                        if ("premium" !== (null === i.N || void 0 === i.N ? void 0 : i.N.subscriptionAccess))
                            return (0,
                            s.A)("generator", "premium_block"),
                            new Ne.A("generator","premium");
                        (0,
                        s.A)("generator", "personal"),
                        await this.gen.personalGeneration(this.item)
                    }
                }
                ,
                this.report = async e => {
                    if (!i.N)
                        return void new r.A;
                    const a = e.target
                      , n = new $e(a,"down")
                      , s = async e => {
                        const t = await fetch("/api/image-generator/report", {
                            headers: {
                                "Content-Type": "application/json"
                            },
                            method: "post",
                            body: JSON.stringify({
                                id: this.item.id,
                                reason: e
                            })
                        })
                          , a = await t.json();
                        !0 !== a.status && (document.dispatchEvent(new CustomEvent("notification",{
                            detail: "Could not report"
                        })),
                        console.error("report failed with", a.message))
                    }
                      , o = ["reportNudity", "reportViolence", "reportSelfHarm", "reportHateSpeech", "reportDepictsChild", "reportOther"].map((e => (0,
                    t.T)("li", {
                        onclick: () => {
                            n.cleanUp(),
                            a.classList.add("disabled"),
                            document.dispatchEvent(new CustomEvent("notification",{
                                detail: (0,
                                d.A)("reportThankyou")
                            })),
                            s(e)
                        }
                        ,
                        className: "button small outline",
                        style: "width: 100%; margin-top: 5px"
                    }, (0,
                    d.A)(e))));
                    n.setContent((0,
                    t.T)("div", {
                        style: "padding: 10px"
                    }, (0,
                    t.T)("label", (0,
                    d.A)("reportReason")), (0,
                    t.T)("ul", {
                        style: "margin-top: 10px"
                    }, ...o)))
                }
                ,
                this.like = async () => {
                    (0,
                    t.Ay)("pop-like").classList.toggle("run", !this.item.liked),
                    (0,
                    t.Ay)("pop-like-img").src = this.item.liked ? "/img/icon/heart-outline.svg" : "/img/icon/heart-filled.svg",
                    this.gen.likeGeneration(this.item)
                }
                ,
                this.primary = async () => {
                    if (this.item.primary === this.selected)
                        return;
                    const e = await fetch("/api/image-generation/set-primary", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            id: this.item.id,
                            primary: this.selected
                        })
                    })
                      , t = await e.json();
                    if (!0 !== t.status)
                        return document.dispatchEvent(new CustomEvent("notification",{
                            detail: "Could not set cover"
                        })),
                        void console.error(t.message);
                    this.item.primary = this.selected,
                    this.updatePrimaryIcon()
                }
                ,
                this.updatePrimaryIcon = () => {
                    (0,
                    t.Ay)("pop-primary") && ((0,
                    t.Ay)("pop-primary").setAttribute("tooltip", this.item.primary === this.selected ? (0,
                    d.A)("imageGeneratorIsPrimary") : (0,
                    d.A)("imageGeneratorMakePrimary")),
                    (0,
                    t.Ay)("pop-primary-img").src = this.item.primary === this.selected ? "/img/icon/star-filled.svg" : "/img/icon/star-outline.svg")
                }
                ,
                this.keyDown = e => {
                    (0,
                    t.Ay)("fullscreen") || "Escape" !== e.key && "Esc" !== e.key || this.close()
                }
                ,
                this.close = () => {
                    this.gen.closeGeneration()
                }
                ,
                this.cleanUp = () => {
                    document.removeEventListener("keydown", this.keyDown, !1),
                    this.dialog.remove(),
                    this.dialog = null,
                    this.modal.remove(),
                    this.modal = null
                }
                ,
                document.addEventListener("keydown", this.keyDown, !1),
                this.modal = (0,
                t.T)("div", {
                    id: "modal-gen-pop",
                    className: "modal dim"
                }),
                document.body.appendChild(this.modal),
                this.dialog = (0,
                t.T)("div", {
                    id: "gen-pop"
                }),
                this.modal.appendChild(this.dialog),
                this.dialog.append((0,
                t.T)("div", {
                    id: "gen-pop-close",
                    onclick: () => this.close()
                }, (0,
                t.T)("img", {
                    src: "/img/icon/close.svg",
                    className: "close ic"
                })), (0,
                t.T)("div", {
                    id: "pop-left"
                }, (0,
                t.T)("div", {
                    id: "pop-main"
                }), (0,
                t.T)("div", {
                    id: "pop-leftover"
                })), (0,
                t.T)("div", {
                    id: "pop-right"
                }));
                const o = null != n ? n : a.primary
                  , l = a.images.find((e => e.id === o));
                this.selected = l.id,
                (0,
                t.Ay)("pop-main").append((0,
                t.T)("img", {
                    id: "pop-main-image",
                    src: l.preview,
                    crossOrigin: "anonymous"
                }), (0,
                t.T)("img", {
                    id: "pop-main-image-ambient",
                    src: l.preview,
                    className: "ambient",
                    crossOrigin: "anonymous"
                }));
                for (let i of a.images)
                    (0,
                    t.Ay)("pop-leftover").append((0,
                    t.T)("img", {
                        src: i.small,
                        id: i.id,
                        className: i.id === l.id ? "selected" : "",
                        onpointerdown: () => this.setMainImage(i.id, i.preview)
                    }));
                let c = (0,
                t.T)("div", {
                    id: "pop-icons",
                    className: "buttons"
                });
                i.N && this.item.userId === i.N.id && c.append((0,
                t.T)("div", {
                    id: "pop-primary",
                    className: "icon-button",
                    tooltip: (0,
                    d.A)("imageGeneratorIsPrimary"),
                    flow: "down",
                    onclick: this.primary
                }, (0,
                t.T)("img", {
                    id: "pop-primary-img",
                    src: "/img/icon/star-filled.svg",
                    className: "ic",
                    width: 20,
                    height: 20
                }))),
                a.liked ? c.append((0,
                t.T)("div", {
                    id: "pop-like",
                    className: "icon-button like",
                    onpointerdown: this.like
                }, (0,
                t.T)("img", {
                    id: "pop-like-img",
                    src: "/img/icon/heart-filled.svg",
                    className: "ic",
                    width: 20,
                    height: 20
                }))) : c.append((0,
                t.T)("div", {
                    id: "pop-like",
                    className: "icon-button like",
                    onpointerdown: this.like
                }, (0,
                t.T)("img", {
                    id: "pop-like-img",
                    src: "/img/icon/heart-outline.svg",
                    className: "ic",
                    width: 20,
                    height: 20
                }))),
                c.append((0,
                t.T)("div", {
                    className: "icon-button",
                    tooltip: "Download",
                    flow: "down",
                    onpointerdown: this.download
                }, (0,
                t.T)("img", {
                    src: "/img/icon/download.svg",
                    className: "ic",
                    width: 18,
                    height: 18,
                    style: "width:18px;height:18px"
                }))),
                i.N && this.item.userId === i.N.id && "premium" == i.N.subscriptionAccess && c.append((0,
                t.T)("div", {
                    className: "icon-button",
                    tooltip: "Delete",
                    flow: "down",
                    onpointerdown: this.delete
                }, (0,
                t.T)("img", {
                    src: "/img/icon/delete.svg",
                    className: "ic",
                    width: 18,
                    height: 18,
                    style: "width:16px;height:16px"
                }))),
                a.personal ? c.append((0,
                t.T)("div", {
                    id: "pop-personal",
                    className: "icon-button",
                    tooltip: (0,
                    d.A)("imageGeneratorPrivate"),
                    flow: "down",
                    onclick: this.personal
                }, (0,
                t.T)("img", {
                    id: "pop-personal-img",
                    src: "/img/icon/locked.svg",
                    className: "ic",
                    width: 20,
                    height: 20
                }))) : c.append((0,
                t.T)("div", {
                    id: "pop-personal",
                    className: "icon-button",
                    tooltip: (0,
                    d.A)("imageGeneratorPublic"),
                    flow: "down",
                    onclick: this.personal
                }, (0,
                t.T)("img", {
                    id: "pop-personal-img",
                    src: "/img/icon/public.svg",
                    width: 20,
                    className: "ic",
                    height: 20
                }))),
                c.append((0,
                t.T)("div", {
                    className: "icon-button",
                    tooltip: "Report Image",
                    flow: "down",
                    onclick: this.report
                }, (0,
                t.T)("img", {
                    src: "/img/icon/report.svg",
                    className: "ic",
                    width: 20,
                    height: 20
                })));
                let m = (0,
                t.Ay)("pop-right");
                m.append(c, (0,
                t.T)("h2", {
                    style: "margin-top:50px;"
                }, (0,
                d.A)("imageGeneratorPrompt")), (0,
                t.T)("p", {
                    style: "font-size: 14px;"
                }, a.prompt)),
                a.negative && m.append((0,
                t.T)("h3", {
                    className: "top-20"
                }, (0,
                d.A)("imageGeneratorNegativePrompt")), (0,
                t.T)("p", {
                    style: "font-size: 14px;"
                }, a.negative));
                let u = (0,
                t.T)("div", {
                    className: "tag-list top-50"
                });
                u.append((0,
                t.T)("span", {}, y.XP(new Date(a.createdAt)))),
                u.append((0,
                t.T)("span", {}, "Size: " + this.item.width + " x " + this.item.height + " px")),
                u.append((0,
                t.T)("span", {}, "Ratio: " + this.getRatio(this.item.width, this.item.height))),
                this.item.style && u.append((0,
                t.T)("span", {}, this.item.style.replace("-", " "))),
                this.item.likes > 1 && u.append((0,
                t.T)("span", {}, this.item.likes + " " + (0,
                d.A)("like"))),
                m.append(u, (0,
                t.T)("div", {
                    className: "buttons",
                    style: "padding:20px 0;justify-content:flex-start;flex-wrap:wrap;"
                }, (0,
                t.T)("div", {
                    id: "pop-remix",
                    className: "button outline",
                    onclick: this.remix
                }, (0,
                t.T)("img", {
                    src: "/img/icon/remix.svg",
                    className: "ic",
                    width: 18,
                    height: 18
                }), (0,
                d.A)("imageGeneratorRemix")), (0,
                t.T)("div", {
                    id: "pop-prompt",
                    className: "button outline",
                    onclick: this.prompt
                }, (0,
                t.T)("img", {
                    src: "/img/icon/prompt.svg",
                    className: "ic",
                    width: 18,
                    height: 18
                }), (0,
                d.A)("imageGeneratorUsePrompt")), (0,
                t.T)("div", {
                    id: "pop-edit",
                    className: "button outline",
                    onclick: this.edit
                }, (0,
                t.T)("img", {
                    src: "/img/tool/fill.svg",
                    className: "ic",
                    width: 18,
                    height: 18
                }), (0,
                d.A)("imageGeneratorEdit")), (0,
                t.T)("div", {
                    id: "pop-face-swap",
                    className: "button outline",
                    onclick: this.faceSwap
                }, (0,
                t.T)("img", {
                    src: "/img/tool/face-swap.svg",
                    className: "ic",
                    width: 18,
                    height: 18
                }), (0,
                d.A)("imageGeneratorFaceSwap")))),
                a.parentId && m.append((0,
                t.T)("div", {
                    id: "pop-parent",
                    onclick: this.parent
                }, (0,
                t.T)("img", {
                    src: a.parent.small
                }), (0,
                t.T)("span", {}, a.influence + "% " + (0,
                d.A)("imageGeneratorInfluence"))))
            }
            getRatio(e, t) {
                let a = (e, t) => t <= 0 ? e : a(t, e % t)
                  , n = a(e, t);
                return e / n + ":" + t / n
            }
        }
        class et {
            constructor() {
                var a;
                this.exp = [{
                    prompt: "photo of a rhino dressed suit and tie sitting at a table in a bar with a bar stools, award winning photography, Elke vogelsang",
                    negative: "cartoon, illustration, animation. face. male, female"
                }, {
                    prompt: "a giant monster hybrid of dragon and spider, in dark dense foggy forest",
                    negative: "cartoon"
                }, {
                    prompt: "a little boy with ginger hair wearing denim overalls chasing bubbles. clean pastel painting, beautiful detailed face, lots of bubbles, photorealistic",
                    negative: ""
                }, {
                    prompt: "beautiful woman wearing fantastic hand-dyed cotton clothes, embellished beaded feather decorative fringe knots, colorful pigtail , subtropical flowers and plants, symmetrical face, intricate, elegant, highly detailed, 8k, digital painting,trending on pinterest, harper’s bazaar, concept, art, sharp focus, illustration, Tom Bagshaw, Lawrence Alma-Tadema, Alphonse Mucha",
                    negative: ""
                }, {
                    prompt: "a woman with black armored uniform, futuristic, giant robot, inspired by Krenz Cushart, neoism, kawacy, wlop, gits anime",
                    negative: "disfigured, ugly, deformed"
                }, {
                    prompt: "b&w photography, model shot, man in subway station, beautiful detailed eyes, professional award winning portrait photography, Zeiss 150mm f/2.8, highly detailed glossy eyes, high detailed skin, skin pores",
                    negative: ""
                }, {
                    prompt: "a painting of a fish on a black background, a digital painting, by Jason Benjamin, shutterstock, colorful vector illustration, mixed media style illustration, epic full color illustration, mascot illustration",
                    negative: ""
                }, {
                    prompt: "a woman in a pink dress walking down a street, cyberpunk art, inspired by Victor Mosquera, conceptual art, style of raymond swanland, yume nikki, restrained, robot girl, ghost in the shell",
                    negative: ""
                }, {
                    prompt: "a man in a space suit playing a guitar, inspired by Cyril Rolando, shutterstock, highly detailed illustration, full color illustration, very detailed illustration, dan mumford and alex grey style",
                    negative: ""
                }, {
                    prompt: "a realistic happy dog ​​playing in the grass",
                    negative: ""
                }, {
                    prompt: "Powerful liquid explosion, Green grapes, Green background, Commercial photography, A bright environment, Studio lighting, OC rendering, Solid color isolated platform, Professional photography, Color classification, Super detail",
                    negative: ""
                }, {
                    prompt: "Astronaut on Mars During sunset",
                    negative: ""
                }, {
                    prompt: "photo of a small cozy modern house in red woods on a mountain, solar panels, garage, driveway, great view, sunshine",
                    negative: ""
                }, {
                    prompt: "a house is reflected in the water of a lake, canon 5d mark iii photo, wlop : :, summer camp, wide shot of a cabin interior, by Henrik Weber, lush landscaping, canon 5d 50 mm lens, baris yesilbas, dramatic photograph, peacefull",
                    negative: ""
                }, {
                    prompt: "steampunk makeup, in the style of vray tracing, colorful impasto, uhd image, indonesian art, fine feather details with bright red and yellow and green and pink and orange colours, intricate patterns and details, dark cyan and amber makeup. Rich colourful plumes. Victorian style.",
                    negative: ""
                }, {
                    prompt: "Model in layered street style, standing against a vibrant graffiti wall, Vivid colors, Mirrorless, 28mm lens, f/2.5 aperture, ISO 400, natural dayligh",
                    negative: ""
                }, {
                    prompt: "fuji film candid portrait of the pope wearing sunglasses rocking out on the streets of miami at night, 80s album cover, vaporwave, synthwave, retrowave, cinematic, intense, highly detailed, dark ambient, beautiful, dramatic lighting, hyperrealistic",
                    negative: ""
                }, {
                    prompt: "an epic chibi comic book style portrait painting of a teddy bear ninja, character design by mark ryden and pixar and hayao miyazaki, unreal 5, daz, hyperrealistic, octane render, cosplay, rpg portrait, dynamic lighting, intricate detail, harvest fall vibrancy, cinematic",
                    negative: ""
                }, {
                    prompt: "a smiling beautiful sorceress with long dark hair and closed eyes wearing a dark top surrounded by glowing fire sparks at night, symmetrical body, symmetrical face, symmetrical eyes, magical light fog, deep focus+closeup, hyper-realistic, volumetric lighting, dramatic lighting, beautiful composition, intricate details, instagram, trending, photograph, film grain and noise, 8K, cinematic, post-production",
                    negative: ""
                }, {
                    prompt: "Beautiful city after rain, water over the roads, street lights fading away, street view, highly realistic and aesthetic view, beautiful landscape, wallpaper, high definition image, high quality",
                    negative: ""
                }, {
                    prompt: "ports car at highway",
                    negative: ""
                }, {
                    prompt: "Surrealist painting of a floating island with giant clock gears, populated with mythical creatures.",
                    negative: ""
                }, {
                    prompt: "Pop Art painting of a modern smartphone with classic art pieces appearing on the screen",
                    negative: ""
                }, {
                    prompt: "Baroque-style battle scene with futuristic robots and a golden palace in the background",
                    negative: ""
                }, {
                    prompt: "Black and white street photography of a rainy night in New York, reflections on wet pavement",
                    negative: ""
                }, {
                    prompt: "High-fashion photography in an abandoned industrial warehouse, with dramatic lighting and edgy outfits",
                    negative: ""
                }, {
                    prompt: "Macro photography of dewdrops on a spiderweb, with morning sunlight creating rainbows",
                    negative: ""
                }, {
                    prompt: "Aerial photography of a winding river through autumn forests, with vibrant red and orange foliage",
                    negative: ""
                }, {
                    prompt: "Urban portrait of a skateboarder in mid-jump, graffiti walls background, high shutter speed",
                    negative: ""
                }, {
                    prompt: "Underwater photography of a coral reef, with diverse marine life and a scuba diver for scale",
                    negative: ""
                }, {
                    prompt: "Vintage-style travel photography of a train station in Europe, with passengers and old luggage",
                    negative: ""
                }, {
                    prompt: "Digital painting of an astronaut floating in space, with a reflection of Earth in the helmet visor",
                    negative: ""
                }, {
                    prompt: "Concept art for a post-apocalyptic world with ruins, overgrown vegetation, and a lone survivor",
                    negative: ""
                }, {
                    prompt: "Sci-fi digital painting of an alien landscape with otherworldly plants, strange creatures, and distant planets",
                    negative: ""
                }, {
                    prompt: "Steampunk digital art of an inventor’s workshop, with intricate machines, gears, and steam engines",
                    negative: ""
                }, {
                    prompt: "A cute dog with a bowtie",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "A random person with a head that is made of flowers, photo by James C. Leyendecker, Afrofuturism, studio portrait, dynamic pose, national geographic photo, retrofuturism, biomorphic",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "robotic t-rex dinosaur, wearing robotic armor, (glowing eyes with smoke),((masterpiece)), (sci-fi background), night",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "photo of a man in the desert the style of realistic hyper-detailed portraits, transparent sunglasses, detailed facial features, dry, heat exhaustion cityscape, metallic ethereal Ian, eye-catching detail, blink-and-you-miss-it-detail ",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "A huge mothership hovering over the Sahara Desert, scale, cinematic still, dynamic composition",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "alien, glowing eyes, crystal body",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "Cute rabbit wearing a jacket, eating a carrot, 3D Style, rendering",
                    negative: "blurry, blur, text, watermark, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "retro style, 90s photo of a captivating girl having lunch in a restaurant, a bustling metropolis, neon barrettes, enigmatic setting, retro",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "isometric view, isometric style, outdoors, sky, night, moon, neon, building, star (sky), night sky, scenery, city, sign, wide shot, crescent moon, neon lights",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "beautiful silhouette shot of a ballerina dancer",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "long exposure photography, cars, traffic, night",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "girl girl, small holographic bubbles detailed, surreal dramatic lighting shadow (lofi, analog-style), kodak film by Brandon Woelfel, Alyssa Monks",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "beautiful landscape, snow, mountains, glaciers, vivid colors",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "(dark magic), (grim), the Baphomet Unicorn, (intricate details), (hyperdetailed), 8k hdr, high detailed, lot of details, high quality, soft cinematic light, dramatic atmosphere, atmospheric perspective, standing on a nest of bones and skulls, look of disapproval, flesh hanging off its beak, pissed off look",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "sea monsters, scary, raining, storm, night, glowing eyes",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "a glowing jellyfish underwater, breathtaking",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "fashion photoshoot of a blonde man wearing sunglasses, a colorful costume, highly stylistic",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }, {
                    prompt: "an Astronaut in space playing an electric guitar, stylistic, cinematic, earth visible in the background",
                    negative: "blurry, blur, text, watermark, render, 3D, CGI, monochrome, B&W, cartoon, painting, smooth, plastic, blurry, low-resolution, deep-fried, oversaturated"
                }],
                this.activatePrompt = () => {
                    (0,
                    t.Ay)("generator-main-modal") && ((0,
                    t.Ay)("generator-main-modal").remove(),
                    (0,
                    t.Ay)("generator-main").classList.remove("minimized"),
                    this.resizeTextInput((0,
                    t.Ay)("generator-positive")),
                    this.resizeTextInput((0,
                    t.Ay)("generator-negative")),
                    i.N || ((0,
                    t.Ay)("generator-generate").innerText = (0,
                    d.A)("common-signUpLogIn")),
                    (0,
                    t.Ay)("generator-positive").focus(),
                    this.renderCreditAmount())
                }
                ,
                this.toggleNegative = () => {
                    (0,
                    t.Ay)("prompt-negative").style.display = (0,
                    t.Ay)("negative-prompt-toggle").checked ? "block" : "none",
                    this.resizeTextInput((0,
                    t.Ay)("generator-negative")),
                    (0,
                    t.Ay)("generator-negative").focus()
                }
                ,
                this.selectedAspect = "square",
                this.selectAspect = e => {
                    (0,
                    t.Ay)("aspect-" + this.selectedAspect).classList.remove("selected"),
                    (0,
                    t.Ay)("aspect-type").classList.remove("aspect-" + this.selectedAspect),
                    this.selectedAspect = e.currentTarget.getAttribute("data"),
                    (0,
                    t.Ay)("aspect-" + this.selectedAspect).classList.add("selected"),
                    (0,
                    t.Ay)("aspect-type").classList.add("aspect-" + this.selectedAspect),
                    (0,
                    t.Ay)("aspect-type-label").innerText = this.selectedAspect + " aspect"
                }
                ,
                this.selectedStyle = "none",
                this.selectStyle = e => {
                    var a;
                    null === (a = (0,
                    t.Ay)("style-" + this.selectedStyle)) || void 0 === a || a.classList.remove("selected"),
                    this.selectedStyle = e.currentTarget.getAttribute("data"),
                    (0,
                    t.Ay)("style-" + this.selectedStyle).classList.add("selected"),
                    "none" === this.selectedStyle ? ((0,
                    t.Ay)("style-type-img").hidden = !0,
                    (0,
                    t.Ay)("style-type-img").removeAttribute("src"),
                    (0,
                    t.Ay)("style-type-label").innerText = "No Style") : ((0,
                    t.Ay)("style-type-img").hidden = !1,
                    (0,
                    t.Ay)("style-type-img").src = "/img/preset/" + this.selectedStyle + ".webp",
                    (0,
                    t.Ay)("style-type-label").innerText = this.selectedStyle.replace(/-/g, " "))
                }
                ,
                this.selectedColor = "none",
                this.selectColor = e => {
                    var a;
                    null === (a = (0,
                    t.Ay)("color-" + this.selectedColor)) || void 0 === a || a.classList.remove("selected"),
                    this.selectedColor = e.currentTarget.getAttribute("data"),
                    (0,
                    t.Ay)("color-" + this.selectedColor).classList.add("selected"),
                    "none" === this.selectedColor ? ((0,
                    t.Ay)("color-type-img").hidden = !0,
                    (0,
                    t.Ay)("color-type-img").removeAttribute("src"),
                    (0,
                    t.Ay)("color-type-label").innerText = "No Color") : ((0,
                    t.Ay)("color-type-img").hidden = !1,
                    (0,
                    t.Ay)("color-type-img").src = "/img/preset/" + this.selectedColor + ".webp",
                    (0,
                    t.Ay)("color-type-label").innerText = this.selectedColor.replace(/-/g, " "))
                }
                ,
                this.selectedLighting = "none",
                this.selectLighting = e => {
                    var a;
                    null === (a = (0,
                    t.Ay)("lighting-" + this.selectedLighting)) || void 0 === a || a.classList.remove("selected"),
                    this.selectedLighting = e.currentTarget.getAttribute("data"),
                    (0,
                    t.Ay)("lighting-" + this.selectedLighting).classList.add("selected"),
                    "none" === this.selectedLighting ? ((0,
                    t.Ay)("lighting-type-img").hidden = !0,
                    (0,
                    t.Ay)("lighting-type-img").removeAttribute("src"),
                    (0,
                    t.Ay)("lighting-type-label").innerText = "No Lighting") : ((0,
                    t.Ay)("lighting-type-img").hidden = !1,
                    (0,
                    t.Ay)("lighting-type-img").src = "/img/preset/" + this.selectedLighting + ".webp",
                    (0,
                    t.Ay)("lighting-type-label").innerText = this.selectedLighting.replace(/-/g, " "))
                }
                ,
                this.selectedComposition = "none",
                this.selectComposition = e => {
                    var a;
                    null === (a = (0,
                    t.Ay)("composition-" + this.selectedComposition)) || void 0 === a || a.classList.remove("selected"),
                    this.selectedComposition = e.currentTarget.getAttribute("data"),
                    (0,
                    t.Ay)("composition-" + this.selectedComposition).classList.add("selected"),
                    "none" === this.selectedComposition ? ((0,
                    t.Ay)("composition-type-img").hidden = !0,
                    (0,
                    t.Ay)("composition-type-img").removeAttribute("src"),
                    (0,
                    t.Ay)("composition-type-label").innerText = "No Composition") : ((0,
                    t.Ay)("composition-type-img").hidden = !1,
                    (0,
                    t.Ay)("composition-type-img").src = "/img/preset/" + this.selectedComposition + ".webp",
                    (0,
                    t.Ay)("composition-type-label").innerText = this.selectedComposition.replace(/-/g, " "))
                }
                ,
                this.random = () => {
                    const e = (0,
                    t.Ay)("generator-positive")
                      , a = (0,
                    t.Ay)("generator-negative")
                      , n = y.BB(this.exp);
                    e.value = n.prompt,
                    a.value = n.negative,
                    this.resizeTextInput((0,
                    t.Ay)("generator-positive")),
                    this.resizeTextInput((0,
                    t.Ay)("generator-negative")),
                    (0,
                    t.Ay)("negative-prompt-toggle").checked = !!a.value,
                    (0,
                    t.Ay)("prompt-negative").style.display = a.value ? "block" : "none"
                }
                ,
                this.clear = () => {
                    (0,
                    t.Ay)("generator-positive").value = "",
                    (0,
                    t.Ay)("generator-negative").value = "",
                    (0,
                    t.Ay)("generator-prompt-image").innerHTML = "",
                    this.parentOriginal = void 0,
                    (0,
                    t.Ay)("style-" + this.selectedStyle).classList.remove("selected"),
                    (0,
                    t.Ay)("style-none").classList.add("selected"),
                    this.selectedStyle = "none",
                    (0,
                    t.Ay)("style-type-img").hidden = !0,
                    (0,
                    t.Ay)("style-type-img").removeAttribute("src"),
                    (0,
                    t.Ay)("style-type-label").innerText = "No Style",
                    (0,
                    t.Ay)("color-" + this.selectedColor).classList.remove("selected"),
                    (0,
                    t.Ay)("color-none").classList.add("selected"),
                    this.selectedColor = "none",
                    (0,
                    t.Ay)("color-type-img").hidden = !0,
                    (0,
                    t.Ay)("color-type-img").removeAttribute("src"),
                    (0,
                    t.Ay)("color-type-label").innerText = "No Color",
                    (0,
                    t.Ay)("lighting-" + this.selectedLighting).classList.remove("selected"),
                    (0,
                    t.Ay)("lighting-none").classList.add("selected"),
                    this.selectedLighting = "none",
                    (0,
                    t.Ay)("lighting-type-img").hidden = !0,
                    (0,
                    t.Ay)("lighting-type-img").removeAttribute("src"),
                    (0,
                    t.Ay)("lighting-type-label").innerText = "No Lighting",
                    (0,
                    t.Ay)("composition-" + this.selectedComposition).classList.remove("selected"),
                    (0,
                    t.Ay)("composition-none").classList.add("selected"),
                    this.selectedComposition = "none",
                    (0,
                    t.Ay)("composition-type-img").hidden = !0,
                    (0,
                    t.Ay)("composition-type-img").removeAttribute("src"),
                    (0,
                    t.Ay)("composition-type-label").innerText = "No Composition",
                    this.resizeTextInput((0,
                    t.Ay)("generator-positive")),
                    this.resizeTextInput((0,
                    t.Ay)("generator-negative"))
                }
                ,
                this.resizeTextInput = e => {
                    window.setTimeout(( () => {
                        let t = e.cloneNode();
                        t.style.visibility = "false",
                        e.parentNode.insertBefore(t, e),
                        t.style.height = "auto",
                        t.value = e.value,
                        e.style.height = t.scrollTop + t.scrollHeight + 2 + "px",
                        e.parentNode.removeChild(t)
                    }
                    ), 0)
                }
                ,
                this.addPromptImage = async () => {
                    (0,
                    s.A)("open-browse"),
                    await Le(!0).then((async e => {
                        if (0 === e.length)
                            return;
                        let t = await (0,
                        S.Ep)(e[0])
                          , a = y.k8(t, 1024);
                        a = y.H5(a, a.width, a.height, !0),
                        this.setPromptImage(a)
                    }
                    ))
                }
                ,
                this.parentInfluence = 50,
                this.setPromptImage = (e, a, n) => {
                    (0,
                    t.Ay)("generator-prompt-image").innerHTML = "",
                    this.parentOriginal = e;
                    const i = D.A.bestFit(e.width, e.height, 400, 400);
                    let s = y.H5(this.parentOriginal, i.width, i.height, !0);
                    s.id = "prompt-image",
                    a && s.setAttribute("parentid", a),
                    n && s.setAttribute("parentImageId", n),
                    (0,
                    t.Ay)("generator-prompt-image").append((0,
                    t.T)("div", {
                        id: "prompt-image-holder",
                        className: "flow-down",
                        onclick: () => {
                            this.parentOriginal = void 0,
                            (0,
                            t.Ay)("generator-prompt-image").innerHTML = ""
                        }
                    }, s));
                    (0,
                    t.Ay)("generator-prompt-image").append((0,
                    t.T)("div", {
                        id: "influence-setting",
                        className: "quick-setting flow-down top-10",
                        onclick: () => {
                            const e = new $e((0,
                            t.Ay)("influence-setting"),"down");
                            e.content.append((0,
                            t.T)("div", {
                                id: "influence-slider",
                                style: "padding-bottom:10px"
                            }));
                            new ze("influence-slider",{
                                label: (0,
                                d.A)("generatorInfluence"),
                                range: [0, 100],
                                defaultValue: this.parentInfluence,
                                step: 1,
                                onChange: e => {
                                    this.parentInfluence = e,
                                    (0,
                                    t.Ay)("influence-setting-value").innerText = e.toString() + "%"
                                }
                            });
                            e.position()
                        }
                    }, (0,
                    t.T)("div", {
                        id: "influence-setting-value",
                        className: "icon"
                    }, this.parentInfluence + "%"), (0,
                    t.T)("span", {}, (0,
                    d.A)("imageGeneratorInfluence"))))
                }
                ,
                this.setRemixPrompt = (e, t, a, n) => {
                    this.setPrompt(n),
                    this.setPromptImage(a, e, t)
                }
                ,
                this.setPrompt = e => {
                    var a;
                    (0,
                    t.Ay)("generator-wrap").scrollTop > 300 && (0,
                    t.Ay)("generator-wrap").scrollTo(0, 0),
                    this.activatePrompt(),
                    this.clear(),
                    (0,
                    t.Ay)("generator-positive").value = e.prompt ? e.prompt : "",
                    (0,
                    t.Ay)("generator-negative").value = e.negative ? e.negative : "",
                    e.style && (null === (a = (0,
                    t.Ay)("style-" + this.selectedStyle)) || void 0 === a || a.classList.remove("selected"),
                    this.selectedStyle = e.style,
                    (0,
                    t.Ay)("style-" + this.selectedStyle).classList.add("selected"),
                    (0,
                    t.Ay)("style-type-img").hidden = !1,
                    (0,
                    t.Ay)("style-type-img").src = "/img/preset/" + this.selectedStyle + ".webp",
                    (0,
                    t.Ay)("style-type-label").innerText = this.selectedStyle.replace(/-/g, " "));
                    let n = e.width === e.height ? "square" : e.width > e.height ? "wide" : "tall";
                    (0,
                    t.Ay)("aspect-" + this.selectedAspect).classList.remove("selected"),
                    (0,
                    t.Ay)("aspect-type").classList.remove("aspect-" + this.selectedAspect),
                    this.selectedAspect = n,
                    (0,
                    t.Ay)("aspect-" + this.selectedAspect).classList.add("selected"),
                    (0,
                    t.Ay)("aspect-type").classList.add("aspect-" + this.selectedAspect),
                    (0,
                    t.Ay)("aspect-type-label").innerText = this.selectedAspect + " aspect",
                    this.resizeTextInput((0,
                    t.Ay)("generator-positive")),
                    this.resizeTextInput((0,
                    t.Ay)("generator-negative"))
                }
                ,
                this.generate = async () => {
                    if (!i.N)
                        return void new r.A;
                    if (!i.N.credits || i.N.credits < 3)
                        return void (i.N.subscription ? new o.A("credits") : new Ne.A("generator","credit"));
                    const e = (0,
                    t.Ay)("generator-generate")
                      , a = (0,
                    t.Ay)("generator-result");
                    if (e.classList.contains("working"))
                        return;
                    (0,
                    s.A)("generator", "generate");
                    let n = {
                        amount: 4,
                        width: 1024,
                        height: 1024
                    };
                    if (n.prompt = (0,
                    t.Ay)("generator-positive").value,
                    n.prompt.length < 4)
                        return;
                    e.classList.add("working"),
                    n.negative = (0,
                    t.Ay)("negative-prompt-toggle").checked ? (0,
                    t.Ay)("generator-negative").value : void 0,
                    n.style = "none" !== this.selectedStyle ? this.selectedStyle : void 0,
                    n.influence = (0,
                    t.Ay)("prompt-image") ? this.parentInfluence : void 0,
                    n.parentId = (0,
                    t.Ay)("prompt-image") && (0,
                    t.Ay)("prompt-image").hasAttribute("parentid") ? (0,
                    t.Ay)("prompt-image").getAttribute("parentid") : void 0,
                    n.parentImageId = (0,
                    t.Ay)("prompt-image") && (0,
                    t.Ay)("prompt-image").hasAttribute("parentimageid") ? (0,
                    t.Ay)("prompt-image").getAttribute("parentimageid") : void 0,
                    n.image = (0,
                    t.Ay)("prompt-image") ? await y.PG(this.parentOriginal, {
                        type: "image/jpeg",
                        quality: .8
                    }) : void 0,
                    n.personal = (0,
                    t.Ay)("private-prompt-toggle").checked,
                    "tall" === this.selectedAspect && (n.width = 768,
                    n.height = 1344),
                    "wide" === this.selectedAspect && (n.width = 1344,
                    n.height = 768),
                    "none" !== this.selectedColor && (n.prompt += " (" + this.selectedColor.replace(/-/g, " ") + ")"),
                    "none" !== this.selectedLighting && (n.prompt += " (" + this.selectedLighting.replace(/-/g, " ") + ")"),
                    "none" !== this.selectedComposition && (n.prompt += " (" + this.selectedComposition.replace(/-/g, " ") + ")");
                    let l = (0,
                    t.T)("span", {});
                    l.innerHTML = "<b>" + (n.image && n.parentId ? "Remix:" : "Generate:") + "</b> " + n.prompt + (n.negative ? " <b> Remove:</b> " + n.negative : "");
                    const c = new Array;
                    let m = (0,
                    t.T)("div", {
                        className: "pane-preview-holder"
                    });
                    for (let i = 0; i < n.amount; i++) {
                        let e = (0,
                        t.T)("div", {
                            style: "aspect-ratio: " + n.width + "/" + n.height + " auto;",
                            className: "pane-preview is-loading"
                        });
                        m.append(e),
                        c.push(e)
                    }
                    let u = (0,
                    t.T)("div", {
                        className: "pane"
                    }, (0,
                    t.T)("div", {
                        className: "pane-message"
                    }, (0,
                    t.T)("img", {
                        src: "/img/icon/ai-small.svg",
                        className: "ic"
                    }), l), m);
                    a.prepend(u);
                    try {
                        const e = n.image ? await async function(e) {
                            const t = new FormData;
                            t.set("amount", e.amount.toString()),
                            t.set("width", e.width.toString()),
                            t.set("height", e.height.toString()),
                            t.set("personal", e.personal.toString()),
                            t.append("prompt", e.prompt),
                            t.set("image", e.image),
                            e.style && t.append("style", e.style),
                            e.negative && t.append("negative", e.negative),
                            e.parentId && t.append("parentId", e.parentId),
                            e.influence && t.append("influence", e.influence.toString()),
                            e.parentImageId && t.append("parentImageId", e.parentImageId);
                            const a = fetch("/api/ai/remix/", {
                                method: "post",
                                body: t
                            });
                            return await (await a).json()
                        }(n) : await async function(e) {
                            const t = fetch("/api/ai/generate", {
                                method: "post",
                                body: JSON.stringify(Object.assign({
                                    format: "image/webp"
                                }, e)),
                                headers: {
                                    "Content-Type": "application/json"
                                }
                            });
                            return await (await t).json()
                        }(n);
                        if (!1 === e.status) {
                            u.remove();
                            let e = (0,
                            t.T)("div", {
                                className: "pane"
                            }, (0,
                            t.T)("div", {
                                className: "pane-message"
                            }, (0,
                            t.T)("img", {
                                src: "/img/icon/error_alert.png"
                            }), (0,
                            t.T)("span", {}, (0,
                            d.A)("oopsGeneratorErrorPrompt")), (0,
                            t.T)("img", {
                                className: "close",
                                src: "/img/icon/close.svg",
                                onclick: () => e.remove()
                            })));
                            return void a.prepend(e)
                        }
                        this.generatedItem = e.data;
                        for (let a = 0; a < n.amount; a++) {
                            let i = c[a];
                            i.classList.remove("is-loading"),
                            i.append((0,
                            t.T)("img", {
                                src: e.data.images[a].image,
                                className: "result",
                                oncontextmenu: () => !1
                            })),
                            this.addOverlay(i, e.data.id, e.data.images[a], n),
                            this.updatePrimaryIcon(e.data.images[a].id)
                        }
                        (0,
                        E.W2)().then(( () => {
                            this.renderCreditAmount()
                        }
                        ))
                    } finally {
                        e.classList.remove("working")
                    }
                }
                ,
                this.addOverlay = (e, a, n, i) => {
                    const r = async (e, t) => {
                        if (this.generatedItem.primary === t.id)
                            return;
                        const a = await fetch("/api/image-generation/set-primary", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({
                                id: e,
                                primary: t.id
                            })
                        })
                          , n = await a.json();
                        if (!0 !== n.status)
                            return document.dispatchEvent(new CustomEvent("notification",{
                                detail: "Could not set cover"
                            })),
                            void console.error(n.message);
                        const i = this.generatedItem.primary;
                        this.generatedItem.primary = t.id,
                        "generated" === this.currentFeed && this.updateItemCoverInGenerated(e, t.image),
                        this.updatePrimaryIcon(t.id, i)
                    }
                      , o = async (e, t, a, n) => {
                        (0,
                        s.A)("generator", "remix");
                        const i = await y.$e(a, !0);
                        this.setRemixPrompt(e, t, i, n)
                    }
                      , l = (0,
                    t.T)("div", {
                        className: "overlay"
                    }, (0,
                    t.T)("div", {
                        className: "buttons"
                    }, (0,
                    t.T)("div", {
                        id: `generated-primary-${n.id}`,
                        className: "icon-button",
                        tooltip: (0,
                        d.A)("imageGeneratorIsPrimary"),
                        flow: "up",
                        onclick: e => {
                            e.stopImmediatePropagation(),
                            r(a, n)
                        }
                    }, (0,
                    t.T)("img", {
                        id: `generated-primary-img-${n.id}`,
                        src: "/img/icon/star-filled.svg",
                        width: 20,
                        height: 20
                    })), (0,
                    t.T)("div", {
                        className: "icon-button",
                        tooltip: "Edit Image",
                        flow: "up",
                        onclick: e => {
                            e.stopImmediatePropagation(),
                            (async (e, t) => {
                                (0,
                                s.A)("generator", "edit");
                                const a = await (0,
                                E.a0)(e);
                                if (a.status) {
                                    const e = a.data.images.find((e => e.id === t));
                                    location.href = "/express/?file=" + encodeURIComponent(e.preview)
                                }
                            }
                            )(a, n.id)
                        }
                    }, (0,
                    t.T)("img", {
                        src: "/img/tool/fill.svg",
                        width: 20,
                        height: 20
                    })), (0,
                    t.T)("div", {
                        className: "icon-button",
                        tooltip: "Remix",
                        flow: "up",
                        onclick: e => {
                            e.stopImmediatePropagation(),
                            o(a, n.id, n.image, i)
                        }
                    }, (0,
                    t.T)("img", {
                        src: "/img/icon/remix.svg",
                        width: 20,
                        height: 20
                    })), (0,
                    t.T)("div", {
                        className: "icon-button",
                        tooltip: "Download",
                        flow: "up",
                        onclick: e => {
                            e.stopImmediatePropagation(),
                            ( (e, t) => {
                                (0,
                                s.A)("generator", "download");
                                var a = document.createElement("a");
                                a.download = "pixlr-image-generator-" + e + ".png",
                                a.href = t,
                                document.body.appendChild(a),
                                a.click(),
                                document.body.removeChild(a)
                            }
                            )(n.id, n.image)
                        }
                    }, (0,
                    t.T)("img", {
                        src: "/img/icon/download.svg",
                        width: 20,
                        height: 20,
                        style: "width:20px;height:20px"
                    }))));
                    e.addEventListener("click", ( () => this.showGeneration(a, n.id))),
                    e.append(l)
                }
                ,
                this.updatePrimaryIcon = (e, a) => {
                    (0,
                    t.Ay)(`generated-primary-${e}`) && ((0,
                    t.Ay)(`generated-primary-${e}`).setAttribute("tooltip", this.generatedItem.primary === e ? (0,
                    d.A)("imageGeneratorIsPrimary") : (0,
                    d.A)("imageGeneratorMakePrimary")),
                    (0,
                    t.Ay)(`generated-primary-img-${e}`).src = this.generatedItem.primary === e ? "/img/icon/star-filled.svg" : "/img/icon/star-outline.svg"),
                    a && a !== e && (0,
                    t.Ay)(`generated-primary-${a}`) && ((0,
                    t.Ay)(`generated-primary-${a}`).setAttribute("tooltip", (0,
                    d.A)("imageGeneratorMakePrimary")),
                    (0,
                    t.Ay)(`generated-primary-img-${a}`).src = "/img/icon/star-outline.svg")
                }
                ,
                this.updateItemCoverInGenerated = (e, a) => {
                    (0,
                    t.Ay)(`cover-img-${e}`) && ((0,
                    t.Ay)(`cover-img-${e}`).src = a)
                }
                ,
                this.renderCreditAmount = () => {
                    i.N ? (0,
                    t.Ay)("generator-credit-count").innerHTML = i.N.credits + " " + (0,
                    d.A)("remaining") : (0,
                    t.Ay)("generator-credit-count").style.display = "none"
                }
                ,
                this.loadingFeed = !1,
                this.populateFeed = async e => {
                    this.loadingFeed = !0,
                    this.currentFeed !== e ? (this.currentFeed = e,
                    this.currentPage = 1,
                    this.mansory.clear()) : this.currentPage++;
                    const a = await fetch(`/api/image-generator/feeds/${e}/${this.currentPage}/`)
                      , n = await a.json();
                    if (!0 !== n.status)
                        return void console.error("fetching feed failed", n.message);
                    let s = n.data.docs;
                    for (let r of s) {
                        const e = r.images.find((e => e.id === r.primary));
                        let a = (0,
                        t.T)("img", {
                            id: `cover-img-${r.id}`,
                            src: e.medium,
                            onclick: () => this.showGeneration(r.id),
                            alt: r.prompt
                        })
                          , n = (0,
                        t.T)("div", {
                            className: "generator-feed-item ",
                            id: r.id
                        }, (0,
                        t.T)("div", {
                            id: "edit-" + r.id,
                            className: "icon-button edit",
                            onclick: () => this.editGeneration(r)
                        }, (0,
                        t.T)("img", {
                            src: "/img/tool/fill.svg",
                            alt: "Edit"
                        })), (0,
                        t.T)("div", {
                            id: "download-" + r.id,
                            className: "icon-button download",
                            onclick: () => this.downloadGeneration(r)
                        }, (0,
                        t.T)("img", {
                            src: "/img/icon/download.svg",
                            alt: "Download"
                        })), (0,
                        t.T)("div", {
                            id: "like-" + r.id,
                            className: "icon-button like",
                            onclick: () => this.likeGeneration(r)
                        }, (0,
                        t.T)("img", {
                            id: "like-img-" + r.id,
                            src: r.liked ? "/img/icon/heart-filled.svg" : "/img/icon/heart-outline.svg",
                            alt: "Like"
                        })), i.N && r.userId === i.N.id && "premium" == i.N.subscriptionAccess ? (0,
                        t.T)("div", {
                            id: "delete-" + r.id,
                            className: "icon-button delete",
                            onclick: () => this.deleteGeneration(r.id)
                        }, (0,
                        t.T)("img", {
                            src: "/img/designer/trash.svg",
                            alt: "Delete"
                        })) : "", a);
                        this.mansory.addChild(n),
                        a.complete ? this.mansory.resizeGridItem(n) : a.onload = () => {
                            this.mansory.resizeGridItem(n)
                        }
                    }
                    this.loadingFeed = !1
                }
                ,
                this.populateFeedWithMore = e => {
                    e[0].intersectionRatio <= 0 || this.loadingFeed || this.populateFeed(this.currentFeed)
                }
                ,
                this.editGeneration = async e => {
                    (0,
                    s.A)("generator", "edit");
                    const t = e.images.find((t => t.id === e.primary));
                    location.href = "/express/?file=" + encodeURIComponent(t.preview)
                }
                ,
                this.downloadGeneration = async e => {
                    (0,
                    s.A)("generator", "download");
                    const t = e.images.find((t => t.id === e.primary));
                    var a = document.createElement("a");
                    a.download = "pixlr-image-generator-" + t.id + ".png",
                    a.href = t.preview,
                    document.body.appendChild(a),
                    a.click(),
                    document.body.removeChild(a)
                }
                ,
                this.likeGeneration = e => {
                    if (!i.N)
                        return void new r.A;
                    const a = e.liked ? "unlike" : "like";
                    e.liked = !e.liked,
                    (0,
                    t.Ay)("like-" + e.id).classList.toggle("run", e.liked),
                    (0,
                    t.Ay)("like-img-" + e.id).src = e.liked ? "/img/icon/heart-filled.svg" : "/img/icon/heart-outline.svg",
                    (0,
                    s.A)("generator", a),
                    fetch(`/api/image-generator/${a}`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            id: e.id
                        })
                    })
                }
                ,
                this.deleteGeneration = async e => {
                    const a = new u.A;
                    a.setContent(`\n            <div>\n                <h3 class="heavy">${(0,
                    d.A)("removeGeneration")}</h3>\n\n                <p>${(0,
                    d.A)("sureToRemoveOwnGeneration")}</p>\n\n                <div class="button-wrapper">\n                    <button id="cancel-delete-generation" class="button w-wrapped white text-black">${(0,
                    d.A)("cancel")}</button>\n                    <button id="delete-generation" class="button w-wrapped red">${(0,
                    d.A)("remove")}</button>\n                </div>\n            </div>\n        `),
                    a.content.classList.add("popup-content"),
                    a.content.style.minHeight = "unset",
                    a.dialog.id = "remove-card-payment",
                    a.dialog.style.maxWidth = "fit-content",
                    (0,
                    t.Ay)("cancel-delete-generation").addEventListener("click", ( () => a.cleanUp())),
                    (0,
                    t.Ay)("delete-generation").addEventListener("click", (async () => {
                        const t = await fetch(`/api/image-generator/${e}`, {
                            method: "DELETE",
                            headers: {
                                "Content-Type": "application/json"
                            }
                        })
                          , n = await t.json();
                        a.dialog.style.width = "620px",
                        a.content.innerHTML = "",
                        a.setContent(`\n                <div class="w-100" style="text-align: center; align-items: center">\n                    ${n.status ? `\n                        <img src="/images/icon/green-tick.png" class="checkmark" alt="green tick icon" style="width: 50px; height: 50px">\n                        <h2 class="heavy top-20">${(0,
                        d.A)("generationRemovedSuccessfully")}</h2>\n                    ` : `\n                        <img src="/images/icon/red-cross.png" class="checkmark" alt="fail" style="width: 50px; height: 50px">\n                        <h2 class="heavy top-20">${(0,
                        d.A)("generationRemovedFailed")}</h2>   \n                    `} \n                </div>\n            `),
                        setTimeout(( () => {
                            a.cleanUp(),
                            window.location.replace("/image-generator/?tab=generated")
                        }
                        ), 2e3)
                    }
                    ))
                }
                ,
                this.personalGeneration = async e => {
                    e.personal = !e.personal;
                    const a = await fetch(`/api/image-generator/${e.id}/personal`, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            personal: e.personal
                        })
                    })
                      , n = await a.json();
                    if (!0 !== n.status)
                        return console.error("Update personal failed", n.message),
                        void document.dispatchEvent(new CustomEvent("notification",{
                            detail: "Could not update personal"
                        }));
                    (0,
                    t.Ay)("pop-personal").setAttribute("tooltip", e.personal ? (0,
                    d.A)("imageGeneratorPrivate") : (0,
                    d.A)("imageGeneratorPublic")),
                    (0,
                    t.Ay)("pop-personal-img").src = e.personal ? "/img/icon/locked.svg" : "/img/icon/public.svg"
                }
                ,
                this.checkUrlForDirectLink = () => {
                    var e = location.href.split("/")
                      , t = e.pop() || e.pop();
                    "image-generator" !== t && 24 === t.length && (this.direct = t,
                    this.showGeneration(t))
                }
                ,
                this.showGeneration = async (e, t) => {
                    if (this.loading)
                        return;
                    (0,
                    s.A)("generator", "pop"),
                    this.loading = !0;
                    const a = await (0,
                    E.a0)(e);
                    if (a.status) {
                        this.genpop && (this.genpop.cleanUp(),
                        this.genpop = void 0);
                        const i = a.data;
                        this.genpop = new Ze(this,i,t);
                        var n = location.href.split("/");
                        (n.pop() || n.pop()) !== e && (document.title = "Image generator: " + i.prompt,
                        window.history.pushState(e, "", "/image-generator/" + e + "/"),
                        document.querySelector('meta[name="description"]').setAttribute("content", "Image generator: " + i.prompt))
                    }
                    this.loading = !1
                }
                ,
                this.closeGeneration = () => {
                    this.genpop && (this.genpop.cleanUp(),
                    this.genpop = void 0),
                    document.title = "Image generator",
                    window.history.replaceState("", "", "/image-generator/")
                }
                ,
                this.generationPopState = () => {
                    this.genpop && (this.genpop.cleanUp(),
                    this.genpop = void 0,
                    document.title = "Image generator"),
                    this.checkUrlForDirectLink()
                }
                ,
                e.Ay.product = "generator",
                new x,
                document.documentElement.classList.add(e.Ay.workspace, e.Ay.accent),
                this.checkUrlForDirectLink();
                const n = (0,
                t.Ay)("generator-positive")
                  , l = (0,
                t.Ay)("generator-negative");
                (0,
                t.Ay)("generator-clear").onclick = () => this.clear(),
                (0,
                t.Ay)("generator-random").onclick = () => this.random(),
                (0,
                t.Ay)("generator-generate").onclick = () => this.generate(),
                (0,
                t.Ay)("generator-credit-count").onclick = () => {
                    new o.A("credits")
                }
                ,
                (0,
                t.Ay)("generator-add-image").onclick = () => this.addPromptImage(),
                "premium" !== (null === i.N || void 0 === i.N ? void 0 : i.N.subscriptionAccess) && (0,
                t.Ay)("private-prompt-toggle").addEventListener("click", (e => {
                    e.preventDefault(),
                    (0,
                    s.A)("generator", "premium-block"),
                    new Ne.A("generator","premium")
                }
                )),
                n.onkeydown = e => {
                    this.resizeTextInput((0,
                    t.Ay)("generator-positive")),
                    "Enter" !== e.key || (0,
                    t.Ay)("generator-generate").classList.contains("disabled") || (e.preventDefault(),
                    this.generate())
                }
                ,
                l.onkeydown = e => {
                    this.resizeTextInput((0,
                    t.Ay)("generator-negative")),
                    "Enter" !== e.key || (0,
                    t.Ay)("generator-generate").classList.contains("disabled") || (e.preventDefault(),
                    this.generate())
                }
                ;
                let c = (0,
                t.Ay)("generator-aspect-selector").getElementsByTagName("li");
                for (var m = 0; m < c.length; m++)
                    c[m].addEventListener("pointerdown", this.selectAspect, !1);
                let h = (0,
                t.Ay)("generator-style-selector").getElementsByTagName("li");
                for (m = 0; m < h.length; m++)
                    h[m].addEventListener("pointerdown", this.selectStyle, !1);
                let p = (0,
                t.Ay)("generator-color-selector").getElementsByTagName("li");
                for (m = 0; m < p.length; m++)
                    p[m].addEventListener("pointerdown", this.selectColor, !1);
                let g = (0,
                t.Ay)("generator-lighting-selector").getElementsByTagName("li");
                for (m = 0; m < g.length; m++)
                    g[m].addEventListener("pointerdown", this.selectLighting, !1);
                let f = (0,
                t.Ay)("generator-composition-selector").getElementsByTagName("li");
                for (m = 0; m < f.length; m++)
                    f[m].addEventListener("pointerdown", this.selectComposition, !1);
                (0,
                t.Ay)("negative-prompt-toggle").addEventListener("change", this.toggleNegative, !1),
                (0,
                t.Ay)("generator-main-modal").addEventListener("click", this.activatePrompt, !1),
                this.mansory = new Qe((0,
                t.Ay)("generator-feed-mansory"),"medium");
                let _ = (0,
                t.Ay)("generator-feed-type").getElementsByTagName("li");
                for (m = 0; m < _.length; m++)
                    _[m].addEventListener("click", (e => {
                        var a, n;
                        let i = e.currentTarget.getAttribute("data");
                        this.currentFeed !== i && (null === (a = (0,
                        t.Ay)("generator-feed-" + this.currentFeed)) || void 0 === a || a.classList.remove("selected"),
                        null === (n = (0,
                        t.Ay)("generator-feed-" + i)) || void 0 === n || n.classList.add("selected"),
                        this.populateFeed(i))
                    }
                    ), !1);
                i.N && (this.observer = new IntersectionObserver(this.populateFeedWithMore),
                this.observer.observe((0,
                t.Ay)("can-you-see-me")),
                this.populateFeed("education" !== i.N.type ? "popular" : "generated")),
                null === (a = (0,
                t.Ay)("generator-feed-login-button")) || void 0 === a || a.addEventListener("click", ( () => new r.A)),
                window.addEventListener("popstate", (e => {
                    this.generationPopState()
                }
                ));
                const b = new URLSearchParams(window.location.search).get("tab");
                b && ((0,
                t.Ay)("generator-feed-" + b).click(),
                window.history.replaceState({}, "", "/image-generator"))
            }
        }
        var tt;
        !function(e) {
            e.JPG = "jpg",
            e.PNG = "png",
            e.PDF = "pdf",
            e.WEBP = "webp"
        }(tt || (tt = {}));
        const at = ["png", "jpg", "jpeg", "webp"]
          , nt = (tt.JPG,
        20971520);
        async function it(e, a, n) {
            switch (e.name.split(".").slice(-1)[0]) {
            case "svg":
                {
                    const t = await (0,
                    S.Ep)(e);
                    let a = t.width
                      , n = t.height;
                    if (a < 512 || n < 512) {
                        const e = D.A.fillFit(t.width, t.height, 512, 512);
                        a = e.width,
                        n = e.height
                    }
                    const i = y.VI(a, n);
                    return i.getContext("2d").drawImage(t, 0, 0, a, n),
                    i
                }
            case "jpg":
            case "jpeg":
            case "png":
            case "gif":
            case "webp":
                return await y.lz(e);
            case "json":
                if ("animation" === a)
                    return await async function(e, a) {
                        const n = URL.createObjectURL(e);
                        try {
                            const e = (await c.e(2335).then(c.t.bind(c, 49891, 23))).default
                              , i = (0,
                            t.T)("div", {
                                style: {
                                    display: "none",
                                    position: "abolute",
                                    top: "-5000px",
                                    left: "-5000px",
                                    zIndex: "500"
                                }
                            });
                            document.body.append(i);
                            const s = e.loadAnimation({
                                container: i,
                                autoplay: !1,
                                renderer: "svg",
                                path: n
                            });
                            await new Promise(( (e, t) => {
                                s.addEventListener("DOMLoaded", ( () => {
                                    s.goToAndStop(s.totalFrames * a, !0),
                                    e()
                                }
                                ))
                            }
                            ));
                            const r = i.querySelector("svg")
                              , o = new Blob([r.outerHTML],{
                                type: "image/svg+xml;charset=utf-8"
                            })
                              , l = await y.lz(o);
                            return i.remove(),
                            l
                        } finally {
                            URL.revokeObjectURL(n)
                        }
                    }(e, n);
                if ("color" === a)
                    return await async function(e) {
                        const t = y.VI(180, 180)
                          , a = t.getContext("2d")
                          , n = await e.text()
                          , i = JSON.parse(n)
                          , s = Math.sqrt(i.colors.length)
                          , r = Math.floor(s)
                          , o = Math.ceil(s)
                          , l = t.width / r
                          , d = t.height / o;
                        e: for (let c = 0; c < o; c++) {
                            let e = c * r;
                            for (let t = 0; t < r; t++) {
                                let n = e + t;
                                if (!i.colors[n])
                                    break e;
                                a.fillStyle = i.colors[n],
                                a.fillRect(l * t, d * c, l, d)
                            }
                        }
                        return t
                    }(e);
                break;
            case "mp4":
                return await async function(e, a) {
                    const n = URL.createObjectURL(e);
                    try {
                        const e = (0,
                        t.T)("video", {
                            autoplay: !1,
                            style: {
                                position: "abolute",
                                top: "-5000px",
                                left: "-5000px",
                                display: "none"
                            }
                        });
                        document.body.append(e),
                        e.src = n,
                        await new Promise(( (t, n) => {
                            e.addEventListener("seeked", ( () => {
                                t()
                            }
                            )),
                            e.addEventListener("canplay", ( () => {
                                const t = Math.floor(e.duration * a);
                                e.currentTime = t
                            }
                            ))
                        }
                        ));
                        const i = y.VI(e.videoWidth, e.videoHeight)
                          , s = i.getContext("2d");
                        return null == s || s.drawImage(e, 0, 0),
                        e.src = "",
                        e.remove(),
                        i
                    } finally {
                        URL.revokeObjectURL(n)
                    }
                }(e, n);
            case "ttf":
            case "otf":
                return await async function(e) {
                    var t;
                    let a = null === (t = e.name.split(".")[0]) || void 0 === t ? void 0 : t.toLowerCase().substring(0, 50).replace(" ", "-");
                    a = (null == a ? void 0 : a.charAt(0).toUpperCase()) + (null == a ? void 0 : a.slice(1));
                    const n = new FontFace(a,await (0,
                    S.CB)(e));
                    let i = await n.load();
                    document.fonts.add(i);
                    const s = new ae(a,56);
                    s.height > 72 && s.setSize(Math.floor(72 / s.height * 56));
                    const r = y.VI(400, 80)
                      , o = r.getContext("2d");
                    return o.font = s.getCssFont(),
                    o.imageSmoothingEnabled = !0,
                    o.imageSmoothingQuality = "high",
                    o.fillStyle = "#fff",
                    o.textBaseline = "top",
                    o.fillText(a, 0, Math.round((80 - s.height) / 2) - s.ascent),
                    r
                }(e)
            }
            return null
        }
        const st = (e, a) => {
            const n = (0,
            t.Ay)(e).querySelector(".file-converter-progress-bar")
              , i = (0,
            t.Ay)(e).querySelector(".file-converter-progress-bar-value");
            n && i && (n.style.width = `${a}%`,
            i.innerText = 100 === a ? (0,
            d.A)("finished") : `${a}%`)
        }
          , rt = e => {
            const t = document.querySelector("#file-converter-convert-all");
            t.classList.toggle("disabled", e),
            t.disabled = e
        }
          , ot = () => Math.round(15 * Math.random())
          , lt = e => y.lz(e)
          , dt = {
            [tt.JPG]: async e => (0,
            y.PG)(await lt(e), {
                type: "image/jpeg"
            }),
            [tt.PNG]: async e => (0,
            y.PG)(await lt(e), {
                type: "image/png"
            }),
            [tt.WEBP]: async e => (0,
            y.PG)(await lt(e), {
                type: "image/webp"
            }),
            [tt.PDF]: async e => {
                const t = await lt(e)
                  , a = await (0,
                y.PG)(t, {
                    type: "image/jpeg"
                });
                return je(t.width, t.height, a)
            }
        };
        class ct {
            constructor(e={}) {
                this.uploadedFiles = new Map,
                this.convertedFiles = new Map,
                this.handleDrop = e => {
                    if (e.preventDefault(),
                    this.handleDragEnd(e),
                    e.dataTransfer.items) {
                        const t = Array.from(e.dataTransfer.items).reduce(( (e, t) => "file" === t.kind ? [...e, t.getAsFile()] : e), []);
                        this.uploadFiles(t)
                    } else
                        this.uploadFiles(e.dataTransfer.files)
                }
                ,
                this.handleDragOver = e => {
                    e.preventDefault(),
                    (0,
                    t.Ay)("file-converter-drag-and-drop").classList.add("highlighted")
                }
                ,
                this.handleDragEnd = e => {
                    e.preventDefault(),
                    (0,
                    t.Ay)("file-converter-drag-and-drop").classList.remove("highlighted")
                }
                ,
                this.handleFormatAllChange = e => {
                    const a = e.target.value;
                    var n, i;
                    this.uploadedFiles.forEach((e => this.onFormatChange(e.id, a))),
                    n = this.uploadedFiles,
                    i = a,
                    n.forEach((e => {
                        const a = (0,
                        t.Ay)(`${e.id}-convert-to`);
                        a && (a.value = i)
                    }
                    )),
                    rt(!1),
                    document.querySelectorAll('button[name="convert"]').forEach((e => {
                        e.classList.toggle("disabled", !1),
                        e.disabled = !1
                    }
                    ))
                }
                ,
                this.onFormatChange = (e, t) => {
                    this.uploadedFiles.get(e).convertTo = t
                }
                ,
                this.onRemove = e => {
                    this.uploadedFiles.delete(e),
                    this.convertedFiles.delete(e),
                    this.rerender(),
                    this.uploadedFiles.size <= 1 && (rt(!0),
                    (0,
                    t.Ay)(`${e}-convert-to`) && ((0,
                    t.Ay)(`${e}-convert-to`).value = ""))
                }
                ,
                this.onConvert = async e => {
                    const a = this.uploadedFiles.get(e);
                    let n;
                    if (a)
                        try {
                            const i = dt[null == a ? void 0 : a.convertTo];
                            if (!i)
                                return;
                            (e => {
                                const a = (0,
                                t.Ay)(e);
                                a.querySelector(`[id='${e}-progress-bar-wrapper']`).classList.remove("hidden"),
                                a.querySelector(`[id='${e}-convert-button']`).classList.add("hidden"),
                                a.querySelector(`[id='${e}-save-button']`).classList.add("hidden"),
                                a.querySelector(`[id='${e}-remove-button']`).classList.add("hidden"),
                                a.querySelector(".file-convert").classList.remove("justify-ended-mobile")
                            }
                            )(e);
                            const s = (0,
                            y.Dk)(a.name) + "." + a.convertTo;
                            a.progress = ot(),
                            st(e, a.progress),
                            n = setInterval(( () => {
                                const t = a.progress + ot();
                                t > 98 ? clearInterval(n) : (a.progress = t,
                                st(e, t))
                            }
                            ), 300);
                            const r = await i(a);
                            a.progress = 75,
                            st(e, a.progress);
                            const o = new File([r],s);
                            this.convertedFiles.set(e, o),
                            a.progress = 100,
                            clearInterval(n),
                            st(e, a.progress),
                            ( (e, a, n) => {
                                const i = (0,
                                t.Ay)(e)
                                  , s = y.NL(a);
                                i && (s === tt.PDF && (i.querySelector(".file-converter-item-preview").innerHTML = '\n      <img src="/images/fileconverter/pdf-file.png" alt="PDF file image"/>\n    '),
                                i.querySelector(".file-converter-item-filename").innerHTML = a,
                                i.querySelector(".file-converter-item-filesize").innerHTML = y.Ov(n),
                                i.querySelector(`[id='${e}-convert-to']`).classList.add("hidden"),
                                i.querySelector(`[id='${e}-convert-to-label']`).classList.add("hidden"),
                                i.querySelector(`[id='${e}-save-button']`).classList.remove("hidden"),
                                i.querySelector(`[id='${e}-remove-button']`).classList.remove("hidden"),
                                i.querySelector(".file-convert").classList.add("justify-ended-mobile"))
                            }
                            )(e, s, o.size),
                            this.rerender()
                        } catch (i) {
                            console.error("Error while converting file", i),
                            console.error(i),
                            clearInterval(n),
                            this.displayError((0,
                            d.A)("errorWhileConverting", a.name))
                        }
                }
                ,
                this.onSaveFile = async e => {
                    const t = this.uploadedFiles.get(e)
                      , a = this.convertedFiles.get(e);
                    if (!t || !a)
                        return;
                    const n = (0,
                    y.Dk)(t.name)
                      , i = t.convertTo
                      , {mimeType: s, fileDesc: r} = (0,
                    y.$f)(i);
                    await qe(n, i, r, s, a)
                }
                ,
                this.handleConvertAll = () => {
                    this.uploadedFiles.size && ((0,
                    t.Ay)("convert-all-select-type").classList.add("hidden"),
                    this.uploadedFiles.forEach(( (e, t) => {
                        this.convertedFiles.get(t) || this.onConvert(t)
                    }
                    )),
                    (0,
                    t.Ay)("file-converter-remove-all").classList.remove("hidden"))
                }
                ,
                this.handleRemoveAll = () => {
                    this.uploadedFiles.clear(),
                    this.convertedFiles.clear(),
                    this.rerender(),
                    (0,
                    t.Ay)("file-converter-items").innerHTML = ""
                }
                ,
                this.handleSaveAll = async () => {
                    if (!this.convertedFiles.size)
                        return;
                    const {ZipWriter: e} = await Promise.all([c.e(6825), c.e(9262)]).then(c.bind(c, 82355))
                      , t = new e;
                    await Promise.all([...this.convertedFiles].map((async ([e,a]) => {
                        const n = this.uploadedFiles.get(e);
                        if (!n)
                            return;
                        const i = (0,
                        y.Dk)(n.name);
                        t.writeFile(i + "." + n.convertTo, new Uint8Array(await a.arrayBuffer()), !1)
                    }
                    )));
                    const a = t.finish()
                      , n = new File([new Blob([a.buffer])],"batch.zip",{
                        type: "application/zip"
                    })
                      , {fileDesc: i, mimeType: s} = (0,
                    y.$f)("zip");
                    await qe("convertedFiles", "zip", i, s, n)
                }
                ,
                this.uploadFiles = async e => {
                    var a;
                    let n = !1;
                    for (const t of Array.from(e)) {
                        if (t.size > nt) {
                            this.displayError((0,
                            d.A)("maxFileSize", (0,
                            y.Ov)(nt)));
                            continue
                        }
                        if (this.uploadedFiles.size >= 20) {
                            this.displayError((0,
                            d.A)("maxFiles", 20)),
                            this.rerenderUploadBox();
                            break
                        }
                        const e = (0,
                        y.NL)(t.name);
                        at.includes(e) ? await (0,
                        y.dM)(t) ? (t.id = (0,
                        y.Os)(),
                        t.progress = 0,
                        t.convertTo = null === (a = this.preset) || void 0 === a ? void 0 : a.to,
                        this.uploadedFiles.set(t.id, t),
                        this.rerender(),
                        this.renderNewFileItem(t)) : this.displayError((0,
                        d.A)("fileConverterDimensionError")) : n = !0
                    }
                    n && this.displayError((0,
                    d.A)("formatsSupported", at.join(", "))),
                    (0,
                    t.Ay)("convert-all-select-type").classList.remove("hidden")
                }
                ,
                this.handleUploadClick = () => {
                    (0,
                    s.A)("open-browse"),
                    Le(!0).then(this.uploadFiles)
                }
                ,
                this.rerenderSaveAllButton = () => {
                    const e = this.uploadedFiles.size > 1 && this.uploadedFiles.size === this.convertedFiles.size;
                    (0,
                    t.Ay)("file-converter-save-all").classList.toggle("hidden", !e)
                }
                ,
                this.rerenderConvertAllButton = () => {
                    const e = this.uploadedFiles.size > 1 && this.uploadedFiles.size !== this.convertedFiles.size;
                    (0,
                    t.Ay)("file-converter-convert-all").classList.toggle("hidden", !e)
                }
                ,
                this.rerenderItemContainer = () => {
                    (0,
                    t.Ay)("file-converter-items-container").classList.toggle("hidden", this.uploadedFiles.size <= 1)
                }
                ,
                this.rerenderFileUploadBox = () => {
                    (e => {
                        const a = (0,
                        t.Ay)("file-converter-drag-and-drop")
                          , n = (0,
                        t.Ay)("file-converter-items-container")
                          , i = a.querySelector('button[name="upload-files"]');
                        a && n && i && (e ? (a.classList.remove("small"),
                        i.classList.remove("white"),
                        i.innerHTML = `\n      <img src="/images/fileconverter/upload-icon.svg" alt="Upload button icon">\n      ${(0,
                        d.A)("uploadFile")}\n    `) : (a.classList.add("small"),
                        i.classList.add("negative"),
                        i.innerHTML = `\n      <img src="/images/fileconverter/plus.svg" alt="Plus button icon">\n      ${(0,
                        d.A)("addFiles")}\n    `))
                    }
                    )(!this.uploadedFiles.size)
                }
                ,
                this.rerenderUploadBox = () => {
                    const e = this.uploadedFiles.size >= 20;
                    (0,
                    t.Ay)("file-converter-drag-and-drop").classList.toggle("disabled", e)
                }
                ,
                this.renderNewFileItem = async e => {
                    (0,
                    t.Ay)("file-converter-items").appendChild(await (async (e, a, n, i, s) => {
                        const r = t => {
                            const n = t.target.querySelector('button[name="convert"]');
                            n && (n.classList.remove("disabled"),
                            n.disabled = !1),
                            a(e.id, t.target.value)
                        }
                          , o = () => {
                            f(),
                            n(e.id)
                        }
                          , l = () => {
                            i(e.id)
                        }
                          , c = () => {
                            s(e.id)
                        }
                          , m = (0,
                        t.T)("div", {
                            className: "file-converter-item",
                            id: e.id
                        })
                          , u = (0,
                        t.T)("div", {
                            className: "file-info"
                        }, (0,
                        t.T)("div", {
                            className: "file-converter-item-preview"
                        }, await it(e, "", .2)), (0,
                        t.T)("div", {
                            className: "file-converter-item-filename",
                            title: e.name
                        }, e.name), (0,
                        t.T)("div", {
                            className: "file-converter-item-filesize non-tablet text-uppercase"
                        }, y.Ov(e.size)))
                          , h = (0,
                        t.Ay)("convert-all-select-type") ? (0,
                        t.Ay)("convert-all-select-type").value : "";
                        h && a(e.id, h);
                        const p = (0,
                        t.T)("div", {
                            className: "file-convert"
                        }, (0,
                        t.T)("div", {
                            className: "file-converter-progress-bar-wrapper hidden",
                            id: `${e.id}-progress-bar-wrapper`
                        }, (0,
                        t.T)("div", {
                            className: "file-converter-progress-bar-container"
                        }, (0,
                        t.T)("div", {
                            className: "file-converter-progress-bar"
                        })), (0,
                        t.T)("div", {
                            className: "file-converter-progress-bar-value bold"
                        }, "0%")), (0,
                        t.T)("label", {
                            style: "text-wrap:nowrap; color:#A3A3A3;",
                            id: `${e.id}-convert-to-label`
                        }, (0,
                        d.A)("convertTo")), (0,
                        t.T)("select", {
                            id: `${e.id}-convert-to`,
                            name: "convert-all-select",
                            className: "file-type-select",
                            onchange: r
                        }, (0,
                        t.T)("option", {
                            value: "",
                            disabled: !0,
                            selected: "" == h,
                            hidden: !0
                        }, (0,
                        d.A)("selectFileFormat")), (0,
                        t.T)("option", {
                            value: tt.JPG,
                            selected: h == tt.JPG
                        }, "JPG"), (0,
                        t.T)("option", {
                            value: tt.PNG,
                            selected: h == tt.PNG
                        }, "PNG"), (0,
                        t.T)("option", {
                            value: tt.WEBP,
                            selected: h == tt.WEBP
                        }, "WEBP"), (0,
                        t.T)("option", {
                            value: tt.PDF,
                            selected: h == tt.PDF
                        }, "PDF")), (0,
                        t.T)("div", {
                            id: `${e.id}-convert-button`,
                            className: "button rounded file-converter-button",
                            onclick: l,
                            style: "padding: 11px 40px 11px 40px; border: 1px solid #434549; height: 40px;"
                        }, (0,
                        d.A)("convert")), (0,
                        t.T)("div", {
                            id: `${e.id}-save-button`,
                            className: "button rounded file-converter-button hidden",
                            style: "padding: 11px 40px 11px 40px; border: 1px solid #434549; height: 40px;",
                            onclick: c
                        }, (0,
                        d.A)("download")))
                          , g = (0,
                        t.T)("div", {
                            id: `${e.id}-remove-button`,
                            style: "cursor: pointer",
                            className: "file-converter-item-remove",
                            onclick: o
                        }, (0,
                        t.T)("img", {
                            src: "/images/fileconverter/trash-icon.svg",
                            alt: "Trash icon"
                        }));
                        m.appendChild(u),
                        m.appendChild(p),
                        m.appendChild(g);
                        const f = () => {
                            var t, a, n;
                            null === (t = m.querySelector("select")) || void 0 === t || t.removeEventListener("change", r),
                            m.querySelector(`[id='${e.id}-progress-bar-wrapper']`).classList.remove("hidden"),
                            null === (a = m.querySelector(`[id='${e.id}-convert-button']`)) || void 0 === a || a.removeEventListener("click", l),
                            null === (n = m.querySelector(`[id='${e.id}-save-button']`)) || void 0 === n || n.removeEventListener("click", c),
                            m.querySelector(`[id='${e.id}-remove-button']`).removeEventListener("click", o),
                            m.remove()
                        }
                        ;
                        return m
                    }
                    )(e, this.onFormatChange, this.onRemove, this.onConvert, this.onSaveFile))
                }
                ,
                this.rerender = () => {
                    this.rerenderUploadBox(),
                    this.rerenderSaveAllButton(),
                    this.rerenderConvertAllButton(),
                    this.rerenderItemContainer(),
                    this.rerenderFileUploadBox()
                }
                ,
                (null == e ? void 0 : e.preset) && (this.preset = e.preset);
                const a = (0,
                t.Ay)("file-converter-drag-and-drop");
                (0,
                t.Ay)("file-converter-upload-files").addEventListener("click", this.handleUploadClick),
                a.addEventListener("drop", this.handleDrop),
                a.addEventListener("dragover", this.handleDragOver),
                a.addEventListener("dragleave", this.handleDragEnd),
                a.addEventListener("dragend", this.handleDragEnd);
                const n = (0,
                t.Ay)("bulk-actions")
                  , i = (0,
                t.T)("button", {
                    className: "button bg-cerulean-blue",
                    disabled: !0,
                    id: "file-converter-convert-all",
                    style: "height: auto;padding: 8px 40px 8px 40px;",
                    onclick: this.handleConvertAll
                }, (0,
                d.A)("convertAll"))
                  , r = (0,
                t.T)("button", {
                    className: "button bg-cerulean-blue",
                    id: "file-converter-save-all",
                    style: "height: auto;padding: 8px 40px 8px 40px;",
                    onclick: this.handleSaveAll
                }, (0,
                d.A)("downloadAll"))
                  , o = (0,
                t.T)("button", {
                    className: "button",
                    id: "file-converter-remove-all",
                    style: "height: auto;background: #292C31;border: 1px solid #494743;padding: 8px 40px 8px 40px;",
                    onclick: this.handleRemoveAll
                }, (0,
                d.A)("removeAll"))
                  , l = (0,
                t.T)("select", {
                    id: "convert-all-select-type",
                    name: "convert-all-select",
                    className: "file-type-select",
                    onchange: this.handleFormatAllChange
                }, (0,
                t.T)("option", {
                    value: "",
                    disabled: !0,
                    selected: !0
                }, (0,
                d.A)("selectFileFormat")), (0,
                t.T)("option", {
                    value: tt.JPG
                }, "JPG"), (0,
                t.T)("option", {
                    value: tt.PNG
                }, "PNG"), (0,
                t.T)("option", {
                    value: tt.WEBP
                }, "WEBP"), (0,
                t.T)("option", {
                    value: tt.PDF
                }, "PDF"));
                this.preset && (l.value = this.preset.to);
                const m = (0,
                t.T)("div", {
                    className: "file-converter-action-buttons flex"
                }, l, i, r, o);
                n.prepend(l, m)
            }
            displayError(e) {
                alert(e)
            }
        }
        var mt = c(73939);
        class ut extends u.A {
            constructor(a) {
                var n, i;
                if (super(),
                this.selectedIndex = 0,
                this.dialog.classList.add("news-dialog"),
                a.length > 1) {
                    const e = e => e.length > 50 ? e.slice(0, 50) + "…" : e
                      , i = a.map(( (n, i) => (0,
                    t.T)("a", {
                        id: `news-menu-item-${i}`,
                        className: i === this.selectedIndex ? "item selected" : "item",
                        href: "javascript:;",
                        onclick: () => {
                            var e;
                            (0,
                            t.Ay)(`news-menu-item-${this.selectedIndex}`).classList.remove("selected"),
                            (0,
                            t.Ay)(`news-menu-item-${i}`).classList.add("selected"),
                            (0,
                            t.Ay)("news-current").replaceWith(ht(a[i])),
                            this.selectedIndex = i,
                            null === (e = (0,
                            t.Ay)("new-checkout-cta")) || void 0 === e || e.addEventListener("click", ( () => {
                                new Ne.A("news","premium"),
                                this.cleanUp()
                            }
                            )),
                            (0,
                            s.A)("news-select")
                        }
                    }, (0,
                    t.T)("div", e(n.title)))));
                    this.setContent((0,
                    t.T)("div", {
                        className: "news-split"
                    }, (0,
                    t.T)("div", {
                        className: "news-menu"
                    }, (0,
                    t.T)("div", {
                        className: "headline"
                    }, (0,
                    d.A)("whatsNew")), (0,
                    t.T)("div", {}, ...i)), (0,
                    t.T)("div", {
                        className: "news-body"
                    }, ht(a[this.selectedIndex])))),
                    null === (n = (0,
                    t.Ay)("new-checkout-cta")) || void 0 === n || n.addEventListener("click", ( () => {
                        new Ne.A("news","premium"),
                        this.cleanUp()
                    }
                    ))
                } else
                    this.dialog.classList.add("single-news"),
                    this.setContent(ht(a[0])),
                    null === (i = (0,
                    t.Ay)("new-checkout-cta")) || void 0 === i || i.addEventListener("click", ( () => {
                        new Ne.A("news","premium"),
                        this.cleanUp()
                    }
                    ));
                (0,
                e.ZC)("lastNewsCheck", (new Date).toISOString())
            }
        }
        function ht(e, a) {
            const n = new Date(e.publishDate);
            let r;
            if (e.video) {
                const n = () => {
                    const a = Math.max(360, i.getBoundingClientRect().height)
                      , n = `https://www.youtube.com/embed/${e.video}?autoplay=1&modestbranding=1`;
                    r.style.height = a + "px",
                    i.style.filter = "blur(6px)",
                    (0,
                    s.A)("news-play"),
                    r.append((0,
                    t.T)("div", {
                        className: "player-container"
                    }, (0,
                    t.T)("iframe", {
                        width: "640",
                        height: "360",
                        src: n,
                        className: "player",
                        allow: "autoplay"
                    })))
                }
                ;
                let i = (0,
                t.T)("img", {
                    className: "news-cover",
                    src: e.cover,
                    onload: a
                })
                  , o = (0,
                t.T)("div", {
                    className: "play-button",
                    onclick: n
                }, (0,
                t.T)("img", {
                    src: "/img/icon/play-circle.svg"
                }));
                r = (0,
                t.T)("div", {
                    className: "cover-stack"
                }, i, o)
            } else
                r = (0,
                t.T)("img", {
                    className: "news-cover",
                    src: e.cover,
                    onload: a
                });
            return (0,
            t.T)("div", {
                id: "news-current"
            }, r, (0,
            t.T)("div", {
                className: "news-content"
            }, (0,
            t.T)("div", {
                className: "news-title"
            }, (0,
            t.T)("div", {
                className: "news-date"
            }, (0,
            t.T)("span", `${n.toLocaleDateString()}`)), (0,
            t.T)("span", {
                className: "news-headline"
            }, e.title)), (0,
            t.T)("div", {
                className: "news-text"
            }, e.text), e.checkoutCta && "free" === (null === i.N || void 0 === i.N ? void 0 : i.N.subscriptionAccess) ? (0,
            t.T)("a", {
                className: "button med",
                style: "margin-left:auto;",
                id: "new-checkout-cta",
                dataset: e.ctaDataset || {}
            }, i.N ? "GET A SUBSCRIPTION" : "SIGN UP NOW!") : e.urlWeb ? (0,
            t.T)("a", {
                className: "button med",
                style: "margin-left:auto;",
                href: e.urlWeb,
                target: "_blank",
                onmousedown: () => {
                    (0,
                    s.A)("news-url-web")
                }
            }, e.cta) : ""))
        }
        class pt extends L {
            constructor() {
                super((0,
                d.A)("titlePreferences"), !1),
                this.getLanguage = () => {
                    const e = location.pathname.split("/");
                    return e[1] && 2 === e[1].length ? e[1] : "us"
                }
                ,
                this.setLanguage = e => {
                    const t = location.pathname.split("/");
                    t[1] && 2 === t[1].length ? t[1] = e : t.splice(1, 0, e),
                    location.href = t.join("/")
                }
                ,
                this.dialog.style.maxWidth = "440px",
                this.setContent(`\n\n                <label class="split" for="settings-language">${(0,
                d.A)("language")}\n                <div class="select top-0" style="width:auto">\n                    <select id="settings-language">\n                        <option value="us">English</option>\n                        <option value="id">Bahasa Indonesia</option>\n                        <option value="ml">Bahasa Melayu</option>\n                        <option value="cz">Čeština</option>\n                        <option value="dk">Dansk</option>\n                        <option value="de">Deutsch</option>\n                        <option value="es">Español</option>\n                        <option value="ph">Filipino</option>\n                        <option value="fr">Français</option>\n                        <option value="hr">Hrvatski</option>\n                        <option value="it">Italiano</option>\n                        <option value="nl">Nederlands</option>\n                        <option value="no">Norsk</option>\n                        <option value="pl">Polski</option>\n                        <option value="pt">Português</option>\n                        <option value="br">Português (Brasileiro)</option>\n                        <option value="ro">Romanian</option>\n                        <option value="rs">Србија</option>\n                        <option value="ru">Русский</option>\n                        <option value="fi">Suomi</option>\n                        <option value="se">Svenska</option>\n                        <option value="tr">Türkçe</option>\n                        <option value="vn">Tiếng Việt</option>\n                        <option value="th">ไทย</option>\n                        <option value="gr">Ελληνικά</option>\n                        <option value="kr">한국어</option>\n                        <option value="jp">日本語</option>\n                        <option value="cn">中文</option>\n                        <option value="tw">繁體中文</option>\n                    </select> \n                </div>\n            </label>\n\n            <div class="splitter small top-10"></div>\n\n            <label class=" top-10">${(0,
                d.A)("viewOBarAccent")}</label>\n            <div id="preference-accent" class="top-4 color-pod-list" style="gap:3px;">\n                <div class="color-pod small" data="ash" style="background-color:#383E42"></div>\n                <div class="color-pod small" data="brown" style="background-color:#715649"></div>\n                <div class="color-pod small" data="coral" style="background-color:#F3764C"></div>\n                <div class="color-pod small" data="pink" style="background-color:#F17686"></div>\n                <div class="color-pod small" data="rose" style="background-color:#FE5151"></div>\n                <div class="color-pod small" data="red" style="background-color:#BA2B46"></div>\n                <div class="color-pod small" data="plum" style="background-color:#5A354F"></div>\n                <div class="color-pod small" data="maroon" style="background-color:#A82068"></div>\n                <div class="color-pod small" data="purple" style="background-color:#7D4199"></div>\n                <div class="color-pod small" data="lavender" style="background-color:#6D5DD2"></div>\n                <div class="color-pod small" data="denim" style="background-color:#496171"></div>\n                <div class="color-pod small" data="blue" style="background-color:#0099CC"></div>\n                <div class="color-pod small" data="teal" style="background-color:#00A5A5"></div>\n                <div class="color-pod small" data="green" style="background-color:#48B07B"></div>\n                <div class="color-pod small" data="lime" style="background-color:#95C20F"></div>\n                <div class="color-pod small" data="mustard" style="background-color:#F5BB00"></div>\n            </div>\n\n            <label class="top-16">${(0,
                d.A)("viewOBarWorkspace")}</label>\n            <div id="preference-workspace" class="color-selector-presets extended top-4" style="width:200px">\n                <div data="dark" class="color-pod square" style="background-color: #232529"></div>\n                <div data="iron" class="color-pod square" style="background-color: #606060"></div>\n                <div data="steel" class="color-pod square" style="background-color: #999999"></div>\n                <div data="light" class="color-pod square" style="background-color: #cccccc"></div>\n            </div>\n\n            <a id="preference-theme-reset" class="link top-20" style="display:inline-block;">${(0,
                d.A)("reset")}</a>\n\n        `);
                let a = e.Ay.accent
                  , n = (0,
                t.Ay)("preference-accent").getElementsByTagName("div");
                for (var i = 0; i < n.length; i += 1)
                    n[i].addEventListener("click", (t => {
                        document.documentElement.classList.remove(a),
                        a = t.currentTarget.getAttribute("data"),
                        document.documentElement.classList.add(a),
                        document.dispatchEvent(new CustomEvent("layerlist-update")),
                        (0,
                        e.ZC)("accent", a)
                    }
                    ));
                let s = e.Ay.workspace
                  , r = (0,
                t.Ay)("preference-workspace").getElementsByTagName("div");
                for (i = 0; i < r.length; i += 1)
                    r[i].addEventListener("click", (t => {
                        document.documentElement.classList.remove(s),
                        s = t.currentTarget.getAttribute("data"),
                        document.documentElement.classList.add(s),
                        (0,
                        e.ZC)("workspace", s)
                    }
                    ));
                (0,
                t.Ay)("preference-theme-reset").addEventListener("click", ( () => {
                    (0,
                    e.ZC)("workspace", "default"),
                    (0,
                    e.ZC)("accent", "default"),
                    document.documentElement.className = ""
                }
                ));
                const o = (0,
                t.Ay)("settings-language");
                o.value = this.getLanguage(),
                o.onchange = () => this.setLanguage(o.value),
                (0,
                t.Ay)("dialog-apply" + this.mid).style.display = "none",
                (0,
                t.Ay)("dialog-cancel" + this.mid).innerText = (0,
                d.A)("close")
            }
        }
        class yt {
            constructor() {
                var a, n, i, o, l, d, c, m, u, h, p;
                this.toogleHeadMenu = e => {
                    const a = e.target;
                    (0,
                    t.Ay)("head-menu-drop").contains(a) || ((0,
                    t.Ay)("head-menu-drop").classList.contains("onclick") ? (0,
                    t.Ay)("head-menu-drop").classList.remove("onclick") : (0,
                    t.Ay)("head-menu-drop").classList.add("onclick"))
                }
                ,
                this.hideHeadMenu = e => {
                    const a = e.target;
                    (0,
                    t.Ay)("head-menu").contains(a) && !(0,
                    t.Ay)("head-menu-close").contains(a) || (0,
                    t.Ay)("head-menu-drop").classList.remove("onclick")
                }
                ,
                this.pollNews = async () => {
                    const a = new Date(e.Ay.lastNewsCheck);
                    this.news = await fetch(`https://pixlr.com/api/news/poll/?target=web&from=${a.toISOString()}&limit=5`).then((e => e.json()));
                    const n = await this.news;
                    !1 !== n.status ? (n.data.unread > 0 && !n.data.pop && (0,
                    t.Ay)("head-news").append((0,
                    t.T)("span", {
                        id: "noti-red-dot"
                    })),
                    "web" !== e.Ay.product && !e.Ay.api && n.data.pop && new ut(n.data.news.docs)) : console.error(n.message)
                }
                ,
                this.newsClick = async () => {
                    var e;
                    (0,
                    s.A)("news-click");
                    const a = await this.news;
                    !1 !== a.status && a.data.news.docs.length ? (null === (e = (0,
                    t.Ay)("noti-red-dot")) || void 0 === e || e.remove(),
                    new ut(a.data.news.docs)) : document.dispatchEvent(new CustomEvent("notification",{
                        detail: "No news :/"
                    }))
                }
                ,
                document.documentElement.classList.add(e.Ay.workspace, e.Ay.accent),
                null === (a = (0,
                t.Ay)("head-login")) || void 0 === a || a.addEventListener("click", ( () => new r.A)),
                null === (n = (0,
                t.Ay)("plug-login")) || void 0 === n || n.addEventListener("click", ( () => new r.A)),
                null === (i = (0,
                t.Ay)("head-menu")) || void 0 === i || i.addEventListener("click", this.toogleHeadMenu),
                null === (o = (0,
                t.Ay)("head-menu-close")) || void 0 === o || o.addEventListener("click", this.hideHeadMenu),
                null === (l = (0,
                t.Ay)("head-menu-login")) || void 0 === l || l.addEventListener("click", ( () => new r.A)),
                null === (d = (0,
                t.Ay)("head-news")) || void 0 === d || d.addEventListener("click", this.newsClick, !0),
                null === (c = (0,
                t.Ay)("head-menu-news")) || void 0 === c || c.addEventListener("click", this.newsClick, !0),
                null === (m = (0,
                t.Ay)("head-settings")) || void 0 === m || m.addEventListener("click", ( () => new pt)),
                null === (u = (0,
                t.Ay)("head-menu-settings")) || void 0 === u || u.addEventListener("click", ( () => new pt)),
                null === (h = (0,
                t.Ay)("head-premium")) || void 0 === h || h.addEventListener("click", ( () => new Ne.A("splash","premium"))),
                null === (p = (0,
                t.Ay)("plug-premium")) || void 0 === p || p.addEventListener("click", ( () => new Ne.A("plug","premium"))),
                this.pollNews()
            }
        }
        (async () => {
            var e, a, n;
            new yt;
            const s = new URLSearchParams(window.location.search);
            if ((0,
            t.Ay)("flash-toast") && (0,
            t.y8)("success", (0,
            t.Ay)("flash-toast").dataset.message),
            "" !== s.get("promo") && "GR" === s.get("src")) {
                const e = new Date;
                (0,
                t.TV)("promo-code", s.get("promo"), {
                    expires: new Date(e.setDate(e.getDate() + 1))
                }),
                new Ne.A("web","premium")
            }
            s.get("entry") && s.get("callback_url") && new r.A({
                callback: s.get("callback_url"),
                email: null !== (e = s.get("email")) && void 0 !== e ? e : ""
            });
            const l = s.get("utm_source")
              , d = s.get("utm_medium")
              , c = s.get("utm_campaign");
            if (l && (localStorage.setItem("utm_source", l),
            gtag("set", "campaign_source", l)),
            d && (localStorage.setItem("utm_medium", d),
            gtag("set", "campaign_medium", d)),
            c && (localStorage.setItem("utm_campaign", c),
            gtag("set", "campaign_name", c)),
            (0,
            t.Ay)("head-login")) {
                s.get("ckt") && new r.A({
                    callback: encodeURIComponent(window.location.href)
                });
                [...document.getElementsByClassName("show-auth")].forEach((e => {
                    e.addEventListener("click", (async function(t) {
                        var a;
                        t.preventDefault();
                        const n = encodeURIComponent(null !== (a = e.href) && void 0 !== a ? a : window.location.href);
                        new r.A({
                            callback: n
                        })
                    }
                    ))
                }
                ))
            } else if (s.get("ckt") && i.N) {
                if (i.N.subscription)
                    return window.location.replace("/myaccount/?tab=subscription");
                const e = null !== (a = s.get("ckt-plan")) && void 0 !== a ? a : "premium-yearly";
                new o.A("subscription",{
                    plan: e,
                    platform: "web",
                    code: null !== (n = s.get("ckt-promo")) && void 0 !== n ? n : ""
                })
            }
        }
        )();
        class gt {
            constructor() {
                var e;
                null === (e = (0,
                t.Ay)("start-free-trial")) || void 0 === e || e.addEventListener("click", ( () => {
                    new o.A("subscription",{
                        platform: "web",
                        plan: "premium-monthly"
                    })
                }
                )),
                window.addEventListener("DOMContentLoaded", ( () => {
                    var e;
                    null === (e = (0,
                    t.Ay)("testimonials-reels")) || void 0 === e || e.scrollBy(300, 0)
                }
                ))
            }
        }
        const ft = () => {
            var e, a;
            null === (e = (0,
            t.Ay)("start-free-trial")) || void 0 === e || e.addEventListener("click", ( () => {
                new o.A("subscription",{
                    platform: "web",
                    plan: "premium-monthly"
                })
            }
            )),
            null === (a = (0,
            t.Ay)("team-monthly")) || void 0 === a || a.addEventListener("click", ( () => {
                new o.A("subscription",{
                    platform: "web",
                    plan: "team-monthly"
                })
            }
            ))
        }
    }
    )(),
    web = m
}
)();